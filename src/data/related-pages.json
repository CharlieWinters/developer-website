{
  "/explore-docs/newrelic-cli": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.41209942,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> One <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> One <em>CLI</em> reference",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> One app",
        "body": "<em>New</em> <em>Relic</em> One <em>CLI</em> reference To build a <em>New</em> <em>Relic</em> One app, you must install the <em>New</em> <em>Relic</em> One <em>CLI</em>. The <em>CLI</em> helps you build, publish, and manage your <em>New</em> <em>Relic</em> app. We provide a variety of tools for building <em>New</em> <em>Relic</em> One apps, including the <em>New</em> <em>Relic</em> One <em>CLI</em> (command line interface). This page"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "Products Pricing Solutions Help Center About Search icon Search the blog Monitor New Relic from your phone or tablet Learn more or download using the links below. New Relic app for iOS or Android    New Relic Insights app for iOS or Android    Log In Sign Up Search icon Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore Open Source Projects Training Get Help Community Forum Global Technical Support Expert Services About Our CustomersOver 15,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our BlogThe latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look Automate Your New Relic Tasks With the New Relic CLI From IBM By Adilson Somensari • Nov. 16th, 2018 • Software Engineering automation, IBM Cloud, New Relic Alerts, New Relic Synthetics, open source Tweet Share Share Editor’s note: The New Relic CLI tool was developed by IBM. It is open sourced under the Apache License 2.0. Helping our customers go faster with confidence is a key tenet of the New Relic ethos. We provide visibility into vital data, statistics, and key performance indicators (KPIs) to help teams increase their deployment speed and cadence. But modern software teams also see automation and continuous integration and continuous delivery (CI/CD) processes as must-haves to support their Agile practices and DevOps teams. Teams want to apply the same automation concepts and tools to operate New Relic as they do other parts of their pipeline. However, writing all the standard boilerplate code to work with New Relic’s REST API (read configuration files, connect to endpoints, send payloads, receive responses, and parse them) can be a toilsome burden and a needless distraction. Fortunately, the IBM Cloud Monitoring team, a New Relic partner, noticed that multiple internal teams were spending too much time managing boilerplate code to automate their New Relic workflows, so they created a solution to solve that problem—a New Relic CLI (command line interface) tool. Manage New Relic tasks and resources from the CLI New Relic CLI, open sourced and available on GitHub from IBM, is a command line tool you can use to manage New Relic resources, such as New Relic Synthetics monitors, New Relic Alerts policies and conditions, and user accounts. You can also use the CLI to backup your New Relic configuration data and restore it as needed. Currently, you can use the New Relic CLI to manage these resources: New Relic resource Management action New Relic Synthetics Create, edit, and delete Synthetics monitors Back up and restore Synthetics monitors New Relic Alerts Create, edit, and delete alert conditions Create, edit, and delete alert policies Create, edit, and delete notification channels Back up and restore alert policies and conditions New Relic Insights dashboards Get dashboards Back up and restore dashboards Users List users Example use case 1: Create a Synthetics monitor This example shows you how to use the New Relic CLI to create a Synthetics monitor: Set the New Relic admin API key (NEW_RELIC_APIKEY) for your environment. This will vary depending on your operating system, but in Linux, you’d use the export command:Export NEW_RELIC_APIKEY=xxxx-xxxxxxx-xxxxx-xxxxxx Tip: Refer to the New Relic docs for instructions on locating your admin API key. Create a basic definition of the monitor in JSON format (for example test.json). { \"name\": \"Test monitorURI\", \"type\": \"SIMPLE\" \"frequency\": 5, \"uri\": \"monitorURI\", \"locations\": [ \"AWS_AP_SOUTH_1\", \"AWS_EU_WEST_3\", \"AWS_US_WEST_1\" ], \"status\": \"ENABLED\", \"slaThreshold\": 3, \"options\": { } Tip: See the documentation for a full list of public minion locations. Run a text substitution to replace the monitorURI with the actual URL you want to test, and generate a new file (in this example, result.json). .awk '{gsub(/monitorURI/,\"<URL TO BE TESTED>\")}1' test.json > result.json To create the new monitor, run ./nr-cli create monitor -f result.json. From this point, you can start working with the new monitor as needed. Example use case 2: Daily backup of a Synthetics monitor You can also use the NewRelic CLI to create daily backups of your Synthetics monitors. Using a simple shell script and a cron job, you can quickly set up a process to back up all your monitors in a safe repository. These four steps describe how to use the New Relic CLI to set up a daily backup job that will back up all monitors into a separate folder every day: Download the shell scripts file for backup monitors (backup_monitors.sh) from the New Relic CLI repo. Add a proper path to the script, and set it as an executable: $ chmod a+x backup_monitors.sh. Create a new cron job in your OS to schedule the shell script you just created. Use crontab -e to add new schedule job. 0 0 */1 * * <YOUR NEW_RELIC_APIKEY=\"xxx-xxxx-xxx>\" /<your_path>/backup-monitors.sh NOTE: Replace xxx-xxxx-xxx with your own NewRelic admin API key. (Optional) If you don’t want to set the NR API key in your cron job’s configuration, you can set the key inbackup_monitors.sh. Comment out the Export NEW_RELIC_APIKEY=\"xxx-xxxx-xxx\" entry, replace the value with your API key. The cron job should now run and back up on your monitors based on the schedule you created. A great addition for your New Relic toolbox The New Relic CLI also lets you easily save New Relic settings to source-control tools like Github or BitBucket; and share central configuration and settings across multiple teams and projects. For example, if your target machine can’t connect to New Relic directly, you can configure the CLI tool to use a proxy. You can also configure retries to cope with timeouts. The CLI also includes return codes, which can be very useful for CI/CD automation. For more details on developing for the New Relic CLI, see the repo on Github. automation, IBM Cloud, New Relic Alerts, New Relic Synthetics, open source Adilson Somensari is a senior solutions architect on the New Relic Expert Services team. An experienced APM professional, with multiple certifications in the APM industry, he has a passion for helping customers succeed with modern monitoring architectures. Adilson started his career as a Java developer, delivering distributed applications to a diverse set of industries (Auto, Banking, Telecom, Transportation) in multiple countries (United States, Canada, Portugal, Brazil), and pivoted to APM after learning that there is more to life than reading logs and stack traces. View posts by Adilson Somensari. The views expressed on this blog are those of the author and do not necessarily reflect the views of New Relic. Any solutions offered by the author are environment-specific and not part of the commercial solutions or support offered by New Relic. Please join us exclusively at the Explorer’s Hub (discuss.newrelic.com) for questions and support related to this blog post. This blog may contain links to content on third-party sites. By providing such links, New Relic does not adopt, guarantee, approve or endorse the information, views or products available on such sites. Interested in writing for New Relic Blog? Send us a pitch! Related Posts FutureStack18: A Look Inside the New Relic Developer Program By Mark Weitzel • Sep. 11th, 2018 • New Relic News and Products FutureStack, New Relic developer program 10 Essential European Events for Software Developers By B.J. Hinshaw • Aug. 15th, 2017 • Technology Industry developers, Europe, events, hackathon, software development, Velocity Conference 10 Habits of Highly Successful Software Developers By Kevin Casey • Apr. 5th, 2017 • Culture careers, coding tips, developers, jobs, programming, software development Company Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal Connect Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "blog",
      "info": "",
      "sections": [
        "Automate Your New Relic Tasks With the New Relic CLI From IBM",
        "Manage New Relic tasks and resources from the CLI",
        "Example use case 1: Create a Synthetics monitor",
        "Example use case 2: Daily backup of a Synthetics monitor",
        "A great addition for your New Relic toolbox",
        "Related Posts",
        "FutureStack18: A Look Inside the New Relic Developer Program",
        "10 Essential European Events for Software Developers",
        "10 Habits of Highly Successful Software Developers",
        "Company",
        "Connect",
        "international"
      ],
      "title": "Automate New Relic Tasks With the New Relic CLI From IBM",
      "popularity": 1,
      "external_id": "340a65fe9063ecf6c9b38dde1ff0603fded3c0f1",
      "image": "https://newrelic-wpengine.netdna-ssl.com/wp-content/uploads/mdw-headshot-small.jpg",
      "url": "https://blog.newrelic.com/engineering/new-relic-cli-ibm/",
      "published_at": "2020-08-10T18:04:49Z",
      "updated_at": "2020-07-30T08:22:04Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.3968317,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Automate <em>New</em> <em>Relic</em> Tasks With the <em>New</em> <em>Relic</em> <em>CLI</em> From IBM",
        "sections": "Automate Your <em>New</em> <em>Relic</em> Tasks With the <em>New</em> <em>Relic</em> <em>CLI</em> From IBM",
        "body": " 8 times in a row, <em>New</em> <em>Relic</em> named a Gartner APM Magic Quadrant leader. Take a closer look Automate Your <em>New</em> <em>Relic</em> Tasks With the <em>New</em> <em>Relic</em> <em>CLI</em> From IBM By Adilson Somensari • Nov. 16th, 2018 • Software Engineering automation, IBM Cloud, <em>New</em> <em>Relic</em> Alerts, <em>New</em> <em>Relic</em> Synthetics, open source Tweet Share"
      },
      "id": "5bf0c4fae621f464613832ad"
    },
    {
      "body": "New Relic One CLI common commands Here is a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from New Relic databases using a NRQL (New Relic query language) query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "title": "New Relic One CLI common commands",
      "popularity": 1,
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.3112933,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> One <em>CLI</em> common commands",
        "sections": "<em>New</em> <em>Relic</em> One <em>CLI</em> common commands",
        "info": "An overview of common commands you can use with the <em>New</em> <em>Relic</em> One <em>CLI</em>.",
        "body": "<em>New</em> <em>Relic</em> One <em>CLI</em> common commands Here is a list of common commands to get you started with the <em>New</em> <em>Relic</em> One <em>CLI</em>. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic CLI - 0.12.0 Build on New Relic Developer Toolkit developertoolkit ctrombley July 25, 2020, 12:49am #1 New Relic CLI 0.12.0 has been released, with support for posting JUnit test results to NRDB. v0.12.0 - 2020-07-24 Features reporting: add junit reporting Docker images docker pull newrelic/cli:v0.12.0 docker pull newrelic/cli:v0.12 docker pull newrelic/cli:latest Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "New Relic CLI - 0.12.0",
        "v0.12.0 - 2020-07-24",
        "Features",
        "Docker images"
      ],
      "title": "New Relic CLI - 0.12.0 - Developer Toolkit - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "517e91b673bc13d1c05c230f47bc66f397b7e1b5",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/new-relic-cli-0-12-0/109550",
      "published_at": "2020-08-11T21:42:26Z",
      "updated_at": "2020-07-26T15:15:40Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.30600315,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> - 0.12.0 - Developer Toolkit - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> - 0.12.0",
        "body": " from the world of <em>New</em> <em>Relic</em> and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us <em>New</em> <em>Relic</em> <em>CLI</em> - 0.12.0 Build on <em>New</em> <em>Relic</em> Developer Toolkit developertoolkit ctrombley July 25, 2020, 12:49am #1 <em>New</em> <em>Relic</em> <em>CLI</em>"
      },
      "id": "5f1d9e1c196a67677eb6aea8"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic CLI - 0.11.0 Build on New Relic Developer Toolkit developertoolkit ctrombley July 25, 2020, 12:48am #1 New Relic CLI 0.11.0 has been released, with support for Infinite Tracing and posting custom events to NRDB. v0.11.0 - 2020-07-24 Features release edge command add a command for posting custom events Docker images docker pull newrelic/cli:v0.11.0 docker pull newrelic/cli:v0.11 docker pull newrelic/cli:latest Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "New Relic CLI - 0.11.0",
        "v0.11.0 - 2020-07-24",
        "Features",
        "Docker images"
      ],
      "title": "New Relic CLI - 0.11.0 - Developer Toolkit - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "6cda5cdb6a4af01c9514e6b143baeefb93739c4f",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/new-relic-cli-0-11-0/109549",
      "published_at": "2020-08-11T21:42:26Z",
      "updated_at": "2020-07-26T15:14:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.30600002,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> - 0.11.0 - Developer Toolkit - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> - 0.11.0",
        "body": " from the world of <em>New</em> <em>Relic</em> and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us <em>New</em> <em>Relic</em> <em>CLI</em> - 0.11.0 Build on <em>New</em> <em>Relic</em> Developer Toolkit developertoolkit ctrombley July 25, 2020, 12:48am #1 <em>New</em> <em>Relic</em> <em>CLI</em>"
      },
      "id": "5f1d9de528ccbc6aa66cd3e1"
    }
  ],
  "/collect-data/query-data-nrql": [
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Unable to query prod data with NRQL queries Support: Telemetry Data Platform (TDP) Dashboards insights api SNeti February 25, 2020, 10:20am #1 Hi we are unable to query prod data using nrql. X-Query-Key is generated as per the process: insights.newrelic.com > Manage data > API keys. detailed error: {u’error’: u’Invalid query key.’} abloomer January 18, 2020, 5:02pm #2 Hello @SNeti, have you followed the steps outlined here: https://docs.newrelic.com/docs/insights/insights-api/get-data/query-insights-event-data-api#register I would double check the key you are using is a query API key. If you are still having issues, could you please provide us with an example of how you are calling the Insights query API? SNeti February 20, 2020, 1:45pm #3 @abloomer Yes we are still having issue , we have followed the process as provided in the document , do you want me to send the query key , please provide your email id so that i can send it RyanVeitch February 20, 2020, 2:09pm #4 @SNeti - You can send Anthony (or anyone in the community) a direct message by clicking on their name, a pop up modal will show a Message button: image.png1782×460 56.7 KB SNeti February 20, 2020, 3:44pm #5 @abloomer {‘X-Query-Key’: u’redacted by admin’, ‘Content-Type’: ‘application/json’} RyanVeitch February 24, 2020, 10:16am #6 Hey @SNeti - I tried out that query key with a simple: SELECT count(*) FROM Transaction This is working fine for me. Could you retry & confirm the full API call you are making in a DM to me (including the query key) Here’s mine: curl -H \"Accept: application/json\" -H \"X-Query-Key: your_query_key\" \"https://insights-api.newrelic.com/v1/accounts/2249219/query?nrql=SELECT%20count(*)%20FROM%20Transaction\" SNeti February 24, 2020, 11:05am #7 @RyanVeitch In the development machine from my local i am able to query but from the deployed PCF environment(s) i am getting invalid query key error. https://insights-api.newrelic.com/v1/accounts/2249219/query?nrql=SELECT%20count(*)%20FROM%20%20SystemSample%20WHERE%20apmApplicationIds%20%3D’|536575367|’ The above works(query prod data) from my local but doesn’t work in any of the deployed environments philweber February 24, 2020, 11:09am #8 Hi, @SNeti: I don’t think Infrastructure supports PCF. PCF abstracts the underlying host, so the Infrastructure agent cannot access it. SNeti February 24, 2020, 11:21am #9 @philweber what should be solution for this to access from deployed PCF environments philweber February 24, 2020, 11:22am #10 I don’t think there is a solution. I don’t think Infrastructure is supported on PCF. 1 Like SNeti February 24, 2020, 11:23am #11 @philweber ok thank you 1 Like RyanVeitch February 27, 2020, 9:37am #12 Do let us know if there is anything else we can help with SNeti March 9, 2020, 8:07am #13 @RyanVeitch What could be the reason for below error requests.exceptions.ProxyError: HTTPSConnectionPool(host=‘insights-api.newrelic.com’, port=443): Max retries exceeded with url: /v1/accounts/1367065/query?nrql=SELECT%20count(*)%20FROM%20%20Transaction%20%20WHERE%20%20%20appId%3D536575367 (Caused by ProxyError(‘Cannot connect to proxy.’, OSError(‘Tunnel connection failed: 502 Parent proxy unreacheable’))) RyanVeitch March 9, 2020, 1:01pm #14 @SNeti - I haven’t seen this error before - so I’m not 100% sure on the cause. But in reading the error message it sounds like there is something going wrong in your proxy connections. Can you take a look into the network you are connecting through to make sure it can get a clear path to insights-api.newrelic.com ? Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Unable to query prod data with NRQL queries"
      ],
      "title": "Unable to query prod data with NRQL queries - Dashboards - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "e051ecd38197af61b4603d36037c5ef991a26d03",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/unable-to-query-prod-data-with-nrql-queries/92126",
      "published_at": "2020-08-11T19:48:19Z",
      "updated_at": "2020-07-30T06:07:16Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.27842808,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Unable to <em>query</em> prod <em>data</em> <em>with</em> <em>NRQL</em> <em>queries</em> - Dashboards - New Relic Explorers Hub",
        "sections": "Unable to <em>query</em> prod <em>data</em> <em>with</em> <em>NRQL</em> <em>queries</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Unable to <em>query</em> prod <em>data</em> with <em>NRQL</em> queries Support: Telemetry <em>Data</em> Platform (TDP) Dashboards insights api SNeti February 25, 2020"
      },
      "id": "5e246b7c28ccbc2549c6a154"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How to pull JVM, MSSQL, Solar other data by NRQL query Build on New Relic Data Queries perra March 1, 2019, 3:36pm #1 Hi All, I am looking for help here I’m trying to automate a report with the help of new relic and I am looking for the below-mentioned values image.png755×394 32.2 KB as a static number just like below Please help me with the above highlighted JVM, MSSQL, Solr, Web external. values with an NRQL Query. Your help highly appreciated. Much Thanks! NaderM March 1, 2019, 10:13pm #2 @perra I am not sure about a way that you can automate this and that might be a cool feature request to file. (I will let other community members weigh in on this and if there is no feature like this, we will create a poll for this feature.) While this is not a direct workaround, I would highly recommend you using the metric explorer in Insights. You can create a lot of dashboards using the same metrics that create these charts and have static number be shown as a dashboard. Check out the public document below for more details: https://docs.newrelic.com/docs/insights/use-insights-ui/explore-data/metric-explorer-search-chart-metrics-sent-new-relic-agents You can then download the output of these charts as a .csv file or monitor them as a part of a bigger dashboard. I hope this helps. 1 Like perra March 4, 2019, 11:30pm #3 Hi @NaderM I tried the same metrics dashboard but that is not helping my requirement. Let me rephrase my previous request – For example i have 4 applications to monitor them every time (24/7) and need to send reports if necessary to the business heads and higher authorities. Below Steps i follow every time while sending the report or validating the apps I will open the rpm and on the top left drop down i will select the App After the selection, the data will be displayed like below By looking at the dashboards i will fill up my report data manually by looking at the values like i will select only JVM and deselect the Mssql, solar, webexternal, response time and it will be displayed like below What i am looking now Instead of opening rpm and checking the values by selecting and deselecting - I am looking for the same value to be numbered in a static value with the help of NRQL query. If i have a query i can direct run it, in the insights query section and pull the average number like below. If i get the number like above for JVM, MSSQL, SOLR, WEB External. This would be a great help for me to send the report in a single click. Because i will add this query to a dashboard and trigger the value from that dashboard when ever i need the values. Else i would have manually scroll through the graph and see the static number all by my self and have to add it in the report. Please come up with a solution/ idea for my requirement. This is so important and it will reduce maximum time for a individual. Looking forward for a positive solution at the earliest. Thank you Pavan. philweber March 5, 2019, 5:19am #4 Hi, @perra: NRQL can only query event data. The data you wish to summarize is metric data, so you will not be able to use NRQL to query it. You may, however, use the REST API to summarize metric data. The following request retrieves the average response time of an application’s web transactions for the past 30 minutes (the data which corresponds to the Java portion of APM’s web transaction response time chart): curl -X GET 'https://api.newrelic.com/v2/applications/{your-application-i}/metrics/data.json' \\ -H 'X-Api-Key: {your-api-key}' -i \\ -G -d 'names[]=WebTransactionTotalTime&amp;values[]=average_response_time&amp;summarize=true&amp;raw=false'` Response: HTTP/1.1 200 OK cache-control: max-age=0, private, must-revalidate content-type: application/json etag: \"76e0d47458c9a9fa4a270598c02651e6\" { \"metric_data\": { \"from\": \"2019-03-05T04:38:46+00:00\", \"to\": \"2019-03-05T05:08:46+00:00\", \"metrics_not_found\": [], \"metrics_found\": [ \"WebTransactionTotalTime\" ], \"metrics\": [ { \"name\": \"WebTransactionTotalTime\", \"timeslices\": [ { \"from\": \"2019-03-05T04:35:00+00:00\", \"to\": \"2019-03-05T05:05:00+00:00\", \"values\": { \"average_response_time\": 86.3 } } ] } ] } } You may use the Metric Explorer to identify the metric names which correspond to the other portions of the web transaction response time chart you wish to summarize. 2 Likes hross closed July 15, 2020, 9:02pm #5 Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "How to pull JVM, MSSQL, Solar other data by NRQL query"
      ],
      "title": "How to pull JVM, MSSQL, Solar other data by NRQL query - Data Queries - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "8e46e7a2f76fca3b93db6944a33eb9158648c78b",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/c/1/c1f38914bd214053d9f80fc48af41d228f3084e1_2_690x360.png",
      "url": "https://discuss.newrelic.com/t/how-to-pull-jvm-mssql-solar-other-data-by-nrql-query/69244",
      "published_at": "2020-08-11T12:46:40Z",
      "updated_at": "2020-07-30T23:36:00Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.21351488,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How to pull JVM, MSSQL, Solar other <em>data</em> by <em>NRQL</em> <em>query</em> - <em>Data</em> <em>Queries</em> - New Relic Explorers Hub",
        "sections": "How to pull JVM, MSSQL, Solar other <em>data</em> by <em>NRQL</em> <em>query</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How to pull JVM, MSSQL, Solar other <em>data</em> by <em>NRQL</em> <em>query</em> Build on New Relic <em>Data</em> Queries perra March 1, 2019, 3:36pm #1 Hi All, I am"
      },
      "id": "5c7b1e1d0cc37f10d89573d3"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Error Rate NRQL Query Build on New Relic Data Queries nrql insights abhishek.singh6 July 21, 2020, 4:03pm #1 What is the nrql query for getting error rate of the application? I tried few like SELECT percentage(count(*), WHERE error IS true) AS 'Error rate' FROM Transaction WHERE appName LIKE 'appName%' SINCE 1 month ago but i am not getting the equal value as showing on APM overview page. philweber July 21, 2020, 4:19pm #2 Hi, @abhishek.singh6: Can you post a link to the application whose Overview page does not agree with that query? Only New Relic personnel will be able to access the link. Thank you! 1 Like Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Error Rate NRQL Query"
      ],
      "title": "Error Rate NRQL Query - Data Queries - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "2be30011bb9af6f12062f265708132cd891a1958",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/error-rate-nrql-query/109128",
      "published_at": "2020-08-11T12:02:03Z",
      "updated_at": "2020-07-31T14:52:34Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.20932148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Error Rate <em>NRQL</em> <em>Query</em> - <em>Data</em> <em>Queries</em> - New Relic Explorers Hub",
        "sections": "Error Rate <em>NRQL</em> <em>Query</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Error Rate <em>NRQL</em> <em>Query</em> Build on New Relic <em>Data</em> Queries <em>nrql</em> insights abhishek.singh6 July 21, 2020, 4:03pm #1 What is the <em>nrql</em> <em>query</em>"
      },
      "id": "5f17ae4be7b9d2b4b0e5084c"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Using POST for a NRQL query Build on New Relic Data Queries nrql httperrors Brian_Telus November 15, 2018, 4:33pm #1 I was building a really big query. I got 414 http error. Is it possible to do a SELECT via curl -H \"Accept: application/json\" -H \"X-Query-Key: YOUR_KEY_HERE\" \"https://insights-api.newrelic.com/v1/accounts/648105/query?nrql=SELECT%20average%28duration%29%20FROM%20PageView\" to send the nrql as POST instead of GET? stefan_garnham June 10, 2016, 8:59am #2 Hi @Brian_Telus: POST is used to update data, GET to retrieve data when used via REST calls. A 414 error specifies that the request is too long but your request looks fine and I have just run a longer query, more attributes, which has executed with no errors. Brian_Telus June 10, 2016, 1:40pm #3 @stefan_garnham, Oh believe me the request I am making is super big. Thats why I want to use a POST stefan_garnham June 13, 2016, 7:51am #4 If the query you are making is very long, or the data set that you are requesting is very big, then you may be hitting some limits within the API. Have you looked into the documentation to see if you are hitting any defined limits? Otherwise, I suggest raising a support ticket. Brian_Telus June 15, 2016, 12:35pm #5 @stefan_garnham The query is really long because I’m trying to query page URLs that are a pattern; so I have to build long queries rather than a regular expression so you can imagine how big that could get I am hitting 414 limits; my queries are over 8,500 characters long (encoded) stefan_garnham June 15, 2016, 2:31pm #6 Could you not perform multiple queries, one for each pattern, and merge the results? alexis June 15, 2016, 5:06pm #7 Could you maybe give us an example of a couple of patterns? There is an ability to use LIKE in NRQL, but without an example I’m unsure if that would meet your needs. Brian_Telus June 17, 2016, 5:40pm #8 @alexis Hey sorry I’ve already moved onto another approach. But basically I was trying to mimic regular expression it looked kinda like WHERE (pageUrl LIKE '%://domain.com/%' OR pageUrl LIKE '%://www.domain.com/%') AND (pageURL LIKE '%/en/desired_uri/%/other_uri/%' OR pageURL LIKE '%/fr/desired_uri/%/other_uri/%') And so on and so on for other languages & regions 1 Like 6/17/2016 Post of the Week! Insights, Synthetics, Linux and Feature Requests! alexis June 17, 2016, 5:32pm #9 Hey @Brian_Telus - if you’re happy with your new approach, then no worries. I’m thinking maybe there are some ways to get this to work in Insights, perhaps using a series of queries that vary pageUrl or browserTransactionName, but it may be a bit complex. Let us know if you want to explore further or not. Brian_Telus June 17, 2016, 5:57pm #10 @alexis I think I just want to add to the feature request to be able to query by regular expression or to allow queries to be sent via POST. I have a good idea how to get around this issue but I think others would appreciate this sort of feature. jkaron May 3, 2017, 11:49pm #11 Hi all, I wanted to chime in and let you know that we do now support passing longer NRQL to queries via POST. The trick is to use the application/x-www-form-urlencoded content type and pass your url-escaped query as the value of the nrql param. For example. using curl… curl -X POST -H “Accept: application/json” -H “X-Query-Key: YOU_QUERY_API_KEY” -d “nrql=SELECT+count%28*%29+FROM+Transaction” “https://insights-api.newrelic.com/v1/accounts/YOUR_ACCOUNT_ID/query” Hope that helps future visitors. 2 Likes alex.rojo July 9, 2018, 5:02pm #12 Hi, i’ve just tried to use the POST example you provided and I get this error message: {“error”:“NRQL Syntax Error: Error at line 1 position 7, unexpected ‘+’”} 1 Like john.way September 20, 2018, 6:21pm #13 @alex.rojo It looks like Jonathan’s code sample is incorrect. I got the following to work (basically do NOT url encode): curl -X POST -H “Accept: application/json” -H “X-Query-Key: YOU_QUERY_API_KEY” -d “nrql=SELECT count (*) FROM Transaction” “https://insights-api.newrelic.com/v1/accounts/YOUR_ACCOUNT_ID/query” 6MM September 20, 2018, 9:38pm #14 For what it’s worth the API key page in the account will format the CURL command for you using string nrql. hross closed July 15, 2020, 9:20pm #15 Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Using POST for a NRQL query"
      ],
      "title": "Using POST for a NRQL query - Data Queries - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "9754847a270b0b3f58dd247e7c656a810e5104fa",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/using-post-for-a-nrql-query/38168",
      "published_at": "2020-08-11T05:40:02Z",
      "updated_at": "2020-07-30T15:13:13Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.19566345,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Using POST for a <em>NRQL</em> <em>query</em> - <em>Data</em> <em>Queries</em> - New Relic Explorers Hub",
        "sections": "Using POST for a <em>NRQL</em> <em>query</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Using POST for a <em>NRQL</em> <em>query</em> Build on New Relic <em>Data</em> Queries <em>nrql</em> httperrors Brian_Telus November 15, 2018, 4:33pm #1 I was building"
      },
      "id": "57a14af4e621f406dc5a74ad"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us NRQL query | Alerts Build on New Relic Data Queries nrql welcome nrqlalerts kubernetes Madhu_Sharma1 July 23, 2020, 8:19am #1 Hello, How can i get CPU utalization % using K8NodeSample? Could you kindly correct my query below… FROM K8sNodeSample SELECT latest(cpuUsedCores) - (How to get total core)/100 WHERE clusterName=‘mycluster’ FACET nodeName Or if there is any other query that i can use to sent up hight CPU utilization alert for pods? Thankyou! RyanVeitch July 23, 2020, 2:09pm #2 Hey @Madhu_Sharma1 Does the coreCount attribute work for you? then for percentage used you can try: SELECT ((latest(numeric(cpuUsedCores)) / latest(numeric(coreCount))) * 100) AS 'CPU Used %%' FROM K8sNodeSample WHERE cpuUsedCores is NOT NULL AND coreCount IS NOT NULL SINCE 3 HOURS AGO TIMESERIES AUTO Here’s what that looks like on some demo data over 3hrs: image.png2812×1004 195 KB 1 Like Madhu_Sharma1 July 23, 2020, 1:56pm #3 @RyanVeitch You rock!! Thankyou 1 Like RyanVeitch July 23, 2020, 2:08pm #4 No worries! Glad to help Madhu_Sharma1 July 23, 2020, 3:44pm #5 @RyanVeitch If you could also help me verify two other queries that would be great…How do i get memory used % and Disk used % of nodes in cluster: i dont see any parameter for total memory bytes here https://docs.newrelic.com/docs/integrations/kubernetes-integration/understand-use-data/understand-use-data#node-data SELECT (latest(numeric(memoryUsedBytes)) / latest(What will go here) AS ‘Memory Used %%’ FROM K8sNodeSample WHERE clusterName=‘MyclusterName’ FACET nodeName TIMESERIES Also below is the one that i am using for Disk used % . Please correct if the query looks wrong: SELECT (latest(numeric(fsAvailableBytes)) / latest(numeric(fsCapacityBytes)) *100) AS ‘Disk/storage Used %%’ FROM K8sNodeSample WHERE clusterName=‘MyClusterName’ FACET nodeName TIMESERIES Thankyou! RyanVeitch July 24, 2020, 1:18pm #6 Hey @Madhu_Sharma1 I don’t see a attribute that maps to total memory bytes either, but, I think this is workable: SELECT (latest(memoryUsedBytes) / latest(memoryAvailableBytes + memoryUsedBytes)) * 100 AS 'Memory Used %%' FROM K8sNodeSample WHERE clusterName = 'MyClusterName' FACET nodeName TIMESERIES Here we are adding the memoryAvailableBytes to the memoryUsedBytes to synthetically create our own memoryTotalBytes. 1 Like RyanVeitch July 24, 2020, 1:18pm #7 Also - your disk used query looks fine to me 1 Like Madhu_Sharma1 July 24, 2020, 2:44pm #8 @RyanVeitch if i compare Node resource utilization graph from cluster explorer and the graph that i get from above 3 queries that we discussed ( CPU,DIsk and Memory) i get different results. For instance, cluster explorer says node1 disk usage is 20% but my NRQL query shows 80% RyanVeitch July 24, 2020, 2:44pm #9 So these queries are looking at the latest reported value. It’s possible the chart you are looking at is average. You can change that in your queries from latest() to average() to see if that helps bring these into alignment. Madhu_Sharma1 July 24, 2020, 4:12pm #10 @RyanVeitch i think i got the answer for Disk. My query is just looking into sda1 drive. How can i monitor other drives that i have? also, CPU graph looks fine too… but i still don’t know why Disk graph is mismatched. Here is my alert policy link https://alerts.newrelic.com/accounts/1737703/policies/957407 and cluster explorer https://one.newrelic.com/launcher/k8s-cluster-explorer-nerdlet.cluster-explorer-launcher?pane=eyJuZXJkbGV0SWQiOiJrOHMtY2x1c3Rlci1leHBsb3Jlci1uZXJkbGV0Lms4cy1jbHVzdGVyLWV4cGxvcmVyIiwiZW50aXR5SWQiOiJNVGN6Tnpjd00zeEpUa1pTUVh4T1FYd3pOak0wTVRnMk9UUTJNamMyTnpFek9EYzUifQ==&platform[timeRange][duration]=1800000 Alos what is the difference between storage graph and disk used % Screen Shot 2020-07-24 at 11.57.59 AM.png730×1108 42.4 KB Sorry for too many questions… Madhu_Sharma1 July 27, 2020, 2:31pm #11 @RyanVeitch Should i open a new ticket if this is closed? RyanVeitch July 27, 2020, 2:47pm #12 Hi @Madhu_Sharma1 - no here is ok! Sorry, I didn’t see your reply earlier… Can you clarify the exact disk charts you are hoping to see matched to the query we built? As for the difference between Storage Used % and Disk Usage, below are the queries showing each of these: Storage Usage % SELECT average(diskUsedPercent) as 'Storage used %' FROM StorageSample WHERE `entityGuid` = 'anEntityGuid' TIMESERIES auto Disk Usage SELECT latest(diskUsedPercent) as 'Used %' FROM StorageSample FACET device WHERE entityId = 'anEntityId' LIMIT 4 So the differences primarily are that they are looking at different aggregations. Disk Usage is looking at the latest report, and Storage Usage is looking at an average over the timeframe selected. Both of these are looking at the Infrastructure agents default StorageSample event type, not a K8s specific event type, which may also show up some differences between these charts and those in your queries which are looking at the K8sNodeSample event type. Madhu_Sharma1 July 27, 2020, 4:22pm #13 @RyanVeitch its okey thanks for your response. so, for my node a see memory utilization in cluster explorer 21% and for the same node using out query i see 44% . why there is difference? Screen Shot 2020-07-27 at 12.21.35 PM.jpg1514×1146 208 KB RyanVeitch July 28, 2020, 8:40am #14 Hi @Madhu_Sharma1 The queries here are different, so the results set are expected to be different too. The Memory Usage you see in your K8s Cluster Explorer is using the query: SELECT average(memoryUsedBytes/memoryTotalBytes*100) AS 'Memory used %' FROM SystemSample WHERE `entityGuid` = 'myEntityGuid' TIMESERIES auto The query you are running for alerts is looking at latest memory data from the K8s event type, rather than the query above looking at averages of the SystemSample event type, not a K8s specific event. You can absolutely use this query for alerts if your goal is to match the Memory Usage chart in the cluster explorer: SELECT average(memoryUsedBytes/memoryTotalBytes*100) AS 'Memory used %' FROM SystemSample WHERE `entityGuid` = 'myEntityGuid' TIMESERIES auto Madhu_Sharma1 July 29, 2020, 3:30pm #15 @RyanVeitch But we don’t get SystemSample in kubernetes integration. RyanVeitch July 30, 2020, 6:47am #16 No - that’s an infrastructure metric. This is what the Cluster Explorer is using to chart these metrics though. Do you have the Infra agent installed? If not, you may be able to get close with the k8s Events, but not exactly match the charts that are built on Infrastructure agent data. Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "NRQL query | Alerts"
      ],
      "title": "NRQL query | Alerts - Data Queries - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "6523b9a735a2b2c2a63e9d64abea88d355c275ed",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/8/3/838b103298375edaa23114713c7db5b0abe0b552_2_660x500.jpeg",
      "url": "https://discuss.newrelic.com/t/nrql-query-alerts/109324",
      "published_at": "2020-08-11T17:19:15Z",
      "updated_at": "2020-07-30T18:43:30Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.17157394,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NRQL</em> <em>query</em> | Alerts - <em>Data</em> <em>Queries</em> - New Relic Explorers Hub",
        "sections": "<em>NRQL</em> <em>query</em> | Alerts",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us <em>NRQL</em> <em>query</em> | Alerts Build on New Relic <em>Data</em> Queries <em>nrql</em> welcome nrqlalerts kubernetes Madhu_Sharma1 July 23, 2020, 8:19am #1 Hello"
      },
      "id": "5f19b46c196a67ce85b6ae82"
    }
  ],
  "/build-apps/add-query-mutate-data-nerdstorage": [
    {
      "body": "Build apps You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps 15 min Create a \"Hello, World!\" application Build a \"Hello, World!\" app and publish it to New Relic One 20 min Set up your development environment Prepare to build apps and contribute to this site 20 min Publish and deploy apps Start sharing the New Relic apps you build 45 min Add, query, and mutate data using NerdStorage NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. 20 minutes Add the NerdGraphQuery component to an application The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application 20 min Add a time picker to your app Add a time picker to a sample application 30 min Add a table to your app Add a table to your New Relic One app 30 min Create a custom map view Build an app to show page view data on a map",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Create a \"Hello, World!\" application",
        "Set up your development environment",
        "Publish and deploy apps",
        "Add, query, and mutate data using NerdStorage",
        "Add the NerdGraphQuery component to an application",
        "Add a time picker to your app",
        "Add a table to your app",
        "Create a custom map view"
      ],
      "title": "Build apps",
      "popularity": 1,
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "published_at": "2020-08-13T01:45:07Z",
      "updated_at": "2020-08-12T01:57:08Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.9979694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Add</em>, <em>query</em>, <em>and</em> <em>mutate</em> <em>data</em> <em>using</em> <em>NerdStorage</em>",
        "body": " min Set up your development environment Prepare to build apps and contribute to this site 20 min Publish and deploy apps Start sharing the New Relic apps you build 45 min <em>Add</em>, <em>query</em>, and <em>mutate</em> <em>data</em> <em>using</em> <em>NerdStorage</em> <em>NerdStorage</em> is a document database accessible within New Relic One. It allows you"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How To: Use NerdStorage Build on New Relic Nerdpacks nerdpack nerdstorage jsius July 21, 2020, 10:04pm #1 How to use NerdStorage Difficulty Level: Intermediate Products: N/A Getting Started In this how-to example, you will add NerdStorage to a New Relic One application teaching you how to store and configure data within your applications. To get started, we will clone the example applications from our how-to GitHub repo. Next, we will use the NR1 CLI to update the application UUID and run our application locally. In the terminal, let’s change into the /nr1-howto/use-nerdstorage directory. cd /nr1-howto/use-nerdstorage Now, we want to update the UUID and serve our application. nr1 nerdpack:uuid -gf nr1 nerdpack:serve Once our app is successfully served, in your terminal, you’ll be provided with a URL to access New Relic One and see your running application. New Relic link: https://one.newrelic.com/?nerdpacks=local Now on the New Relic homepage, you should have a new launcher to the how-to example. launcher.png3156×1074 519 KB After launching the ‘Use NerdStorage’ application, you will see the running New Relic app that should look similar to the image below: nerdstorage-app.png3154×750 94.6 KB What is NerdStorage? NerdStorage is a document database that is accessible within the New Relic One interface. Allowing for use and retrieval of data the next time we enter this Nerdlet Using NerdStorage, you will be able to create documents of up to 64kb of data, different collections of documents, and store your data on an Entity, Account, or User level. To find out more about NerdStorage, please read the docs on the New Relic developer website. Add data to NerdStorage Now that you have a better understanding of what is NerdStorage, you will be adding it to the example application currently running on your local machine. Go to the New Relic One homepage and click the launcher for How To Use NerdStorage. You will find an application that looks similar to below: no-nerdstorage.png3296×1650 262 KB Type something to add to NerdStorage and click the check button. Nothing happens… but why? In the app, we want to display data saved to NerdStorage and allow the user to quickly update and delete that data. Currently, the red error message shows, there is no data stored. To add data into this application, we will store data to the user level, using the UserStorageMutation component in the NR1 library. Open the application’s ‘./nerdlets/use-nerdstorage-nerdlet/index.js’ file in the text editor of your choice and find the code for the TextField and Button used to enter data. The Button onClick prop makes a call to a helper method called _addToNerdStorage This helper method needs to be updated to add the UserStorageMutation. The UserStorage NerdStorage components require a collection and documentId to be provided. If you look at the constructor in the application’s index.js file, you can see the variables being provided to the components. Your constructor should be similar to below: constructor(props) { super(props) this.collectionId = 'mycollection'; this.documentId = 'learning-nerdstorage'; this.state = { isOpen: true, storage: [], text: '', }; this._addToNerdStorage = this._addToNerdStorage.bind(this); this._removeFromNerdStorage = this._removeFromNerdStorage.bind(this); this._deleteDocument = this._deleteDocument.bind(this); } Replace the current _addToNerdStorage method with the code below: Import the UserStorageMutation by adding it to your import statement at the top of the index.js file. import {UserStorageMutation } from 'nr1'; then update the helper with the code below: _addToNerdStorage(){ const { text, storage } = this.state; storage.push(text); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { this.setState({text: ''}); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Now, enter text into the TextField and click the check button. From the code added into the UserStorageMutation the text inserted into the TextField will be stored into the application state and then saved to NerdStorage. After NerdStroage is updated, a Toast notification displays, and you can see your data displayed in a table similar to below. data-added.png3272×1248 219 KB Query data from NerdStorage After the last section, the application can now store data to NerdStorage, but if you were to exit the application, back to the New Relic One homepage and re-enter, you’d see that the red warning message is back. The application isn’t reading the data from NerdStorage and loads with an empty state. The UserStorageQuery component will be used to query data from NerdStorage and render the table when after the app mounts. Import the UserStorageQuery by adding it to the import statement. import {UserStorageMutation, UserStorageQuery } from 'nr1'; Add the following componentDidMount method to your application. componentDidMount(){ UserStorageQuery.query({ collection: this.collectionId, documentId: this.documentId, }) .then(({ data }) => { if(data !== null) { this.setState({storage: data.storage}); } }) .catch(err => console.log(err)); } Insert a few more entries into NerdStorage using the TextField, exit the application, and re-enter by clicking it’s launcher on the homepage. Your application will load, showing the data queried from NerdStorage. Your app should look similar to below: data-query.png3296×1638 288 KB Mutate data in NerdStorage Each NerdStorage entry displayed in the table has a trashcan button that can be used to update a specific entry. The trash Button is making a call to the _removeFromNerdStorage helper method. Update the code in the _removeFromNerdStorage to match the code below: _removeFromNerdStorage(index, data){ const { storage } = this.state; storage.pop(data); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Now, if you click one of the buttons, that item will be removed, and NerdStorage will be updated to reflect that change. Delete collection from NerdStorage Once the _removeFromNerdStorage method is added, a user can go through their list of entries and delete unwanted data. But, in large collections of data, this would be a viable option. In the next steps, we’ll add another button to the application that will allow the deletion of the entire NerdStorage document at one time. Add a new GridItem to the application just before the closing Grid tag. In the new GridItem, the following code will be added to display a new button. <Button onClick={() => this._deleteDocument()} type={Button.TYPE.DESTRUCTIVE} sizeType={Button.SIZE_TYPE.SMALL} iconType={Button.ICON_TYPE.INTERFACE__OPERATIONS__TRASH} > Delete Document </Button> The delete document button is making a call to the _deleteDocument helper method. Update the helper method with the code below. _deleteDocument(){ this.setState({storage: []}); UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, }); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.CRITICAL }); } Your application should look similar to below: with-delete.png3292×1582 260 KB If you click the delete document button, your entire list will be permanently deleted from NerdStorage, and your application will return back to the empty message. This deletion is triggered by using the UserStorageMutation component, passing it an action type of UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, and the collection and document id. How to use NerdStorage recap Wrapping up this how-to example, you’ve successfully implemented NerdStorage into a New Relic One application. By using the UserStorageQuery and UserStorageMutation components, the application stores and mutates data connect to your user. For more information on the various NerdStorage components, please visit the New Relic developer website’s API documentation. To continue your learning, take a look at our self-paced workshop on Github. 4 Likes Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "How To: Use NerdStorage",
        "How to use NerdStorage",
        "Getting Started",
        "What is NerdStorage?",
        "Add data to NerdStorage",
        "Query data from NerdStorage",
        "Mutate data in NerdStorage",
        "Delete collection from NerdStorage",
        "How to use NerdStorage recap"
      ],
      "title": "How To: Use NerdStorage - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "3280570cdb2757ee13dfa211590ebce93bda47f2",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/3/b/3bf77cde5a92f01ae4f8dd5b00d1e054f40c638e_2_690x345.png",
      "url": "https://discuss.newrelic.com/t/how-to-use-nerdstorage/99918",
      "published_at": "2020-08-11T19:04:04Z",
      "updated_at": "2020-08-06T10:13:01Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.012734173,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How To: <em>Use</em> <em>NerdStorage</em> - <em>Nerdpacks</em> - New Relic Explorers Hub",
        "sections": "<em>Mutate</em> <em>data</em> in <em>NerdStorage</em>",
        "body": " for <em>use</em> and retrieval of <em>data</em> the next time we enter this Nerdlet <em>Using</em> <em>NerdStorage</em>, you will be able to create documents of up to 64kb of <em>data</em>, different collections of documents, and store your <em>data</em> on an Entity, Account, or User level. To find out more about <em>NerdStorage</em>, please read the docs"
      },
      "id": "5e9b197464441f798f38fe97"
    },
    {
      "body": "Intro to NerdStorage 30 min To help you build a New Relic One application, we provide you with the New Relic One SDK. On this page, you’ll learn how to use NerdStorage SDK components. Use NerdStorage in your apps NerdStorage is used to store and retrieve simple sets of data, including users's configuration settings and preferences (like favorites), or any other small data sets. This storage is unique per Nerdpack, and can't be shared with any other Nerdpack. NerdStorage can be classified into three categories: User storage: Data that is attached to a particular user. If you’re authenticated as the user the data is attached to, you can read it and write it. Account storage: Data that is attached to a particular account. If you’re authenticated and can access the account, you can read and write to account scoped NerdStorage. Visibility of account data is also determined by master/subaccount rules: If a user has access to the master account, then they also have access to data in all subaccounts. Entity storage: Data that is attached to a particular entity. If you can see the corresponding entity, you can read and write data on that entity. Data model You can imagine NerdStorage as a nested key-value map. Data is inside documents, which are nested inside collections: { 'YourNerdpackUuid': { 'collection-1': { 'document-1-of-collection-1': '{\"lastNumber\": 42, \"another\": [1]}', 'document-2-of-collection-1': '\"userToken\"', // ... }, 'another-collection': { 'fruits': '[\"pear\", \"apple\"]', // ... }, // ... }, } Copy Each NerdStorage level has different properties and purpose: Collections: From a Nerdpack, you can create multiple collections by naming each of them. Inside a collection you can put one or more documents. Think of a collection as key-value storage, where each document is a key-value pair. Documents: A document is formed by an identifier (documentId) and a set of data associated with it. Data associated with a document: NerdStorage accepts any sort of data associated to a documentId. Query and mutation components that are provided work by serializing and deserializing JSON. Limits A Nerdpack can hold up to 1,000 collections and 10,000 documents, plus storage type. A collection can hold up to 1,000 documents, plus storage type. Each document can have a maximum length of 64 KiB when serialized. Data access To access NerdStorage, you can run NerdGraph queries, or use the provided storage queries. Depending on which storage you want to access, you can use a different set of SDK components: User access: UserStorageQuery and UserStorageMutation Account access: AccountStorageQuery and AccountStorageMutation Entity access: EntityStorageQuery and EntityStorageMutation Each of these components can operate declaratively (for example, as part of your React rendering methods) or imperatively (by using the static methods for query and mutation). For more information on this, see Data querying and mutations. Permissions for working with NerdStorage In order to persist changes on NerdStorage, such as creating, updating, and deleting account and entity storage, you must have one of the following roles: admin owner user all_product_admin standard_user",
      "type": "developer",
      "document_type": "page",
      "info": "Intro to NerdStorage on New Relic One",
      "sections": [
        "Intro to NerdStorage",
        "Use NerdStorage in your apps",
        "Data model",
        "Limits",
        "Data access",
        "Permissions for working with NerdStorage"
      ],
      "title": "Intro to NerdStorage",
      "popularity": 1,
      "external_id": "709e06c25376d98b2191ca369b4d139e5084bd62",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nerdstorage/",
      "published_at": "2020-08-13T01:49:29Z",
      "updated_at": "2020-08-01T01:42:02Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.006380546,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>NerdStorage</em>",
        "sections": "<em>Use</em> <em>NerdStorage</em> in your apps",
        "info": "Intro to <em>NerdStorage</em> on New Relic One",
        "body": " and Entity<em>Storage</em>Mutation Each of these components can operate declaratively (for example, as part of your React rendering methods) or imperatively (by <em>using</em> the static methods for <em>query</em> and mutation). For more information on this, see <em>Data</em> querying and mutations. Permissions for working with <em>NerdStorage</em> In order"
      },
      "id": "5efa989ee7b9d2048e7bab92"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us NerdStorage Access Outside of Nerdlet Build on New Relic Nerdpacks rfb graphql nerdlet nerdpack cgilling November 18, 2019, 11:47am #1 I’m thinking through various possible uses of Nerdlets, and one of them involves being able to have some configuration that would be generated and modified when we deploy our services. I was hoping that there would be a way for our CICD pipeline to modify the nerdlet config that could be stored in the NerdStorage. It seems like this might be doable through the graphql API, since it does show up as something that is queryable. But when I try to query it I run into the the following error: { actor { account(id: ....) { nerdStorage { collection(collection: \"\") { id } } } } } { \"data\": { \"actor\": { \"account\": { \"nerdStorage\": null } } }, \"errors\": [ { \"locations\": [ { \"column\": 0, \"line\": 5 } ], \"message\": \"No External Package ID found. This field only functions in the context of an External Package.\", \"path\": [ \"actor\", \"account\", \"nerdStorage\" ] } ] } Is there a way that I can set the External Package ID? I’m assuming thats just the nerdlet UUID? 1 Like mweitzel October 27, 2019, 12:44pm #2 @cgilling – this is definitely on the roadmap, for the exact reasons that you outline above. i don’t have a definitive time yet, but we are looking/exploring how we might accomplish this. 1 Like cgilling October 29, 2019, 6:55pm #3 Thanks, good to hear it’s something you want to do. Look forward to being able to use it 1 Like mweitzel May 14, 2020, 9:51pm #4 @cgilling – Check out the Developer Toolkit and the newrelic cli – We’ve added support for this!! New Relic CLI - 0.6.0 Developer Toolkit newrelic-cli v0.6.0 has been released with support for NerdStorage, a document store for New Recic One Nerdpacks. Read more about Nerdstorage here: https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage [v0.6.0] - 2020-04-02 Features nerdstorage: add command for managing nerdstorage documents cgilling May 15, 2020, 4:16pm #5 great, thanks, I’ll check it out soon! Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "NerdStorage Access Outside of Nerdlet"
      ],
      "title": "NerdStorage Access Outside of Nerdlet - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "237602ae1152ad43cd00005bb9c1702424c94849",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/nerdstorage-access-outside-of-nerdlet/86223",
      "published_at": "2020-08-10T20:59:24Z",
      "updated_at": "2020-07-22T11:20:54Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0040534856,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdStorage</em> Access Outside of <em>Nerdlet</em> - <em>Nerdpacks</em> - New Relic Explorers Hub",
        "sections": "<em>NerdStorage</em> Access Outside of <em>Nerdlet</em>",
        "body": " in the <em>NerdStorage</em>. It seems like this might be doable through the graphql API, since it does show up as something that is queryable. But when I try to <em>query</em> it I run into the the following error: { actor { account(id: ....) { <em>nerdStorage</em> { collection(collection: &quot;&quot;) { id } } } } } { &quot;<em>data</em>&quot;: { &quot;actor"
      },
      "id": "5db407f4e7b9d2e4ea23ed15"
    },
    {
      "body": "Query and store data 10 min To help you build a New Relic One application, we provide you with the New Relic One SDK. Here you can learn how to use the SDK query components, which allow you to make queries and mutations via NerdGraph, our GraphQL endpoint. Query-related React components can be identified by the Query suffix. Mutation-related components can be identified by the Mutation prefix. Components overview Our data components are based on React Apollo. The most basic component is NerdGraphQuery, which accepts any GraphQL (or GraphQL AST generated by the graphql-tag library as the query parameter, and a set of query variables passed as variables. Over this query, we have created an additional set of queries, which can be divided into four groups: User queries: These allow you to query the current user and its associated accounts. Components in this category: UserStorageQuery and AccountsQuery. Entities queries: Because New Relic One is entity-centric, we use queries to make access to your entities easier. You can count, search, list, query, and favorite them. Components in this category: EntityCountQuery, EntitySearchQuery, EntitiesByDomainTypeQuery, EntitiesByGuidsQuery, EntityByGuidQuery, EntityByNameQuery. Storage queries: New Relic One provides a simple storage mechanism that we call NerdStorage. This can be used by Nerdpack creators to store application configuration setting data, user-specific data, and other small pieces of data. Components in this category: UserStorageQuery, AccountStorageQuery, EntityStorageQuery, UserStorageMutation, AccountStorageMutation, and EntityStorageMutation. For details, see NerdStorage. NRQL queries: To be able to query your New Relic data via NRQL (New Relic Query Language), we provide a NrqlQuery component. This component can return data in different formats, so that you can use it for charting and not only for querying. Query components All query components accept a function as a children prop where the different statuses can be passed. This callback receives an object with the following properties: loading: Boolean that is set to true when data fetching is happening. Our components use the cache-and-network strategy, meaning that after the data has loaded, subsequent data reloads might be triggered first with stale data, then refreshed when the most recent data has arrived. data: Root property where the data requested is retrieved. The structure matches a root structure based on the NerdGraph schema. This is true even for highly nested data structures, which means you’ll have to traverse down to find the desired data. error: Contains an Error instance when the query fails. Set to undefined when data is loading or the fetch was successful. fetchMore: Callback function that can be called when the query is being loaded in chunks. The function will only be present when it’s feasible to do so, more data is available, and no fetchMore has already been triggered. Data is loaded in batches of 200 by default. Other components provided by the platform (like the Dropdown or the List) are capable of accepting fetchMore, meaning you can combine them easily. Mutation components Mutation components also accept a children as a function, like the query ones. The mutation can be preconfigured at the component level, and a function is passed back that you can use in your component. This is the standard React Apollo approach for performing mutations, but you might find it easier to use our static mutation method added to the component. More on this topic below. Static methods All of the described components also expose a static method so that they can be used imperatively rather than declaratively. All Query components have a static Query method, and all Mutation components have a mutation method. These static methods accept the same props as their query component, but passed as an object. For example: // Declarative way (using components). function renderAccountList() { return ( <ul> <AccountsQuery> ({data, error}) => { if (error) { return <li>Failed to retrieve list: {error.message}</li>; } return data.map((account) => { <li key={account.id}>{account.name}</li> }); }} </AccountsQuery> </ul> ); } // Imperative way (using promises). async function getAccountList() { let data = {}; try { data = await AccountsQuery.query(); } catch (error) { console.log('Failed to retrieve list: ' + error.message); return; } return data.actor.accounts.map((account) => { return account.name; }); } Copy Similarly, a mutation can happen either way; either declaratively or imperatively. NrqlQuery NrqlQuery deserves additional explanation, because there are multiple formats in which you can return data from it. To provide maximum functionality, all three are exposed through a formatType property. You can find its different values under NrqlQuery.formatType: NERD_GRAPH: Returns the format in which it arrives from NerdGraph. RAW: The format exposed by default in Insights and dashboards when being plotted as JSON. This format is useful if you have a pre-existing script in this format that you're willing to migrate to or incorporate with. CHART: The format used by the charting engine that we also expose. You can find a more detailed explanation of how to manipulate this format in the guide to chart components, and some examples. If you are willing to push data, we currently do not expose NrqlMutation. To do that, see the Event API for how to add custom events.",
      "type": "developer",
      "document_type": "page",
      "info": "Reference guide for SDK query components using NerdGraph",
      "sections": [
        "Query and store data",
        "Components overview",
        "Query components",
        "Mutation components",
        "Static methods",
        "NrqlQuery"
      ],
      "title": "Query and store data",
      "popularity": 1,
      "external_id": "cbbf363393edeefbc4c08f9754b43d38fd911026",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/query-and-store-data/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-01T01:42:02Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.002621669,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Query</em> <em>and</em> store <em>data</em>",
        "sections": "<em>Query</em> <em>and</em> store <em>data</em>",
        "info": "Reference guide for SDK <em>query</em> components <em>using</em> <em>NerdGraph</em>",
        "body": ", EntityByGuid<em>Query</em>, EntityByName<em>Query</em>. <em>Storage</em> queries: New Relic One provides a simple <em>storage</em> mechanism that we call <em>NerdStorage</em>. This can be used by Nerdpack creators to store application configuration setting <em>data</em>, user-specific <em>data</em>, and other small pieces of <em>data</em>. Components in this category"
      },
      "id": "5efa989e28ccbc2f15307deb"
    }
  ],
  "/automate-workflows/get-started-terraform": [
    {
      "body": "In order to provide a unified experience, we're deprecating Synthetics monitor alert notifications and alert conditions violations, and replacing these pages with a new synthetic monitor overview experience in New Relic One. This new experience provides visibility into a monitor's open violations and alert conditions with the monitor results in a single view, removing the need to open multiple tabs to view violations or alert conditions. For more information, check the EoL Announcements page. If you want to receive alert notifications when a synthetic monitor fails, you can configure the alert notification either while creating a monitor or after you have created one. You can configure your monitor's alert policy directly from the Synthetics UI or via the Alerts UI for existing monitors. To identify which monitors do not have policies assigned to them, review their color-coded health status. Add a synthetic monitor to alert policies A monitor can be included in multiple alert policies. You can view the alert policies and conditions for the selected monitor from the Synthetics UI or from the Alerts UI. To add an existing monitor to an alert policy: Go to one.newrelic.com > Alerts & AI > Policies. From the list of existing alert policies, use the search box or scroll the list to locate one or more alert policies where the monitor has not already been added. Open the policy, then click Add a condition. Click Synthetics and then select the monitor. Fill out the remaining settings and click Create condition. Existing monitor: Remove from alert policy To remove an existing monitor from an existing alert policy: Go to one.newrelic.com > Alerts & AI > Policies. From the list of existing alert policies, use the search box or scroll the list to locate one or more alert policies where the monitor has not already been added. Select the trash can (delete) icon on the monitor's row. Receive alert notifications on a three-strike basis Synthetic alert notifications operate on a three-strike basis, sending an alert after three monitor attempts from a single location return an error. Your alert policy configuration and notification channel settings will determine when you receive alerts for specific monitors and locations. If you monitor a non-public app and add your selected public minion IPs to your allow list, you may very infrequently receive a false downtime alert. When a synthetic monitoring data center goes down, New Relic may decide to temporarily use an alternate host, which results in the temporary server's IP being blocked by your app. Mute (disable) monitor's alert notifications To temporarily disable alerting for a monitor, mute it: Go to one.newrelic.com > Synthetics > Monitors > (select a monitor). Click General under the Settings menu in the left menu sidebar. Click the Notifications button to Off. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Synthetic monitoring / Synthetic monitoring / Using monitors",
      "info": "New Relic can use alerts to notify you about synthetic monitors's failures.",
      "nodeid": 6371,
      "sections": [
        "Synthetic monitoring",
        "Getting started",
        "Guides",
        "Using monitors",
        "Monitor scripting",
        "Administration",
        "Private locations",
        "UI pages",
        "Synthetics API",
        "Troubleshooting",
        "Alerts for synthetic monitoring",
        "Add a synthetic monitor to alert policies",
        "Existing monitor: Remove from alert policy",
        "Receive alert notifications on a three-strike basis",
        "Mute (disable) monitor's alert notifications",
        "For more help"
      ],
      "title": "Alerts for synthetic monitoring",
      "translation_ja_url": "https://docs.newrelic.co.jp/docs/synthetics/synthetic-monitoring/using-monitors/alerts-synthetic-monitoring",
      "popularity": 1,
      "external_id": "b69353439d3cc180ca46c64bef5e8470cdda1636",
      "category_1": "Synthetic monitoring",
      "category_2": "Using monitors",
      "image": "",
      "url": "https://docs.newrelic.com/docs/synthetics/synthetic-monitoring/using-monitors/alerts-synthetic-monitoring",
      "published_at": "2020-08-10T21:03:10Z",
      "updated_at": "2020-08-10T21:03:10Z",
      "category_0": "Synthetic monitoring",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.64609873,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Alerts for <em>synthetic</em> <em>monitoring</em>",
        "sections": "Mute (disable) <em>monitor&#x27;s</em> alert <em>notifications</em>",
        "info": "New Relic can use alerts to <em>notify</em> you about <em>synthetic</em> <em>monitors&#x27;s</em> failures.",
        "category_0": "<em>Synthetic</em> <em>monitoring</em>",
        "category_1": "<em>Synthetic</em> <em>monitoring</em>",
        "category_2": "Using <em>monitors</em>",
        "translation_ja_url": "https:&#x2F;&#x2F;docs.newrelic.co.jp&#x2F;docs&#x2F;<em>synthetics</em>&#x2F;<em>synthetic</em>-<em>monitoring</em>&#x2F;using-<em>monitors</em>&#x2F;alerts-<em>synthetic</em>-<em>monitoring</em>",
        "body": " the alert <em>notification</em> either while creating a <em>monitor</em> or after you have created one. You can configure your <em>monitor</em>&#x27;s alert policy directly from the <em>Synthetics</em> UI or via the Alerts UI for existing <em>monitors</em>. To identify which <em>monitors</em> do not have policies assigned to them, review their color-coded health",
        "breadcrumb": "Contents &#x2F; Synthetic monitoring &#x2F; Synthetic monitoring &#x2F; Using <em>monitors</em>"
      },
      "id": "5f31b60e196a6742d2fbd6c8"
    },
    {
      "body": "Depending on the selected channel type, different values appear. Reference for updating channels Here's a quick reference for updating channels which also includes links to more detailed information and procedures. Add or remove policies assigned to a channel To add or remove policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Choose a channel, and then click Alert policies. From the selected policy, use the windows to select, remove, or clear all notification channels. Assign a channel to policies To add a notification channel to one or more policies: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies. Choose a policy, click Notification channels, and then click Add notification channels. Choose a channel, and then click Update policy. Change a channel's name To rename an existing notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details, change the name (maximum 64 characters) based on the channel type if applicable, and then save. Check for policies assigned to a user To check whether an account user has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Optional: Search by \"user\" to browse users or a specific username or email. Choose the user, then click Alert policies. Check how many policies are assigned to a channel To check whether a notification channel has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. The Policy subscriptions column lists how many policies are assigned to the channel. Create more channels To create a new notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Click New notification channel. Delete a channel To delete a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. In the list, click the Delete icon. Test a saved channelView assigned alert policies To view the policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, choose a channel, and then click Alert policies. OR To view the notification channels assigned to a policy: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies, choose a policy, then click Notification channels. Basic process Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details page, make any necessary changes, and then save. The user interface shows a Last modified time stamp for any changes to policies, including their conditions and notification channels. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / Alert notifications",
      "info": "Read about how to update alerts notification channels. ",
      "nodeid": 6481,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "Update alert notification channels",
        "Reference for updating channels",
        "Basic process",
        "For more help"
      ],
      "title": "Update alert notification channels",
      "popularity": 1,
      "external_id": "ee8bce401d0623e8b85d84a6a20bd8a72b9764ef",
      "category_1": "New Relic Alerts",
      "category_2": "Alert notifications",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/update-alert-notification-channels",
      "published_at": "2020-08-11T06:42:27Z",
      "updated_at": "2020-08-11T06:42:27Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.61570364,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Update alert <em>notification</em> <em>channels</em>",
        "sections": "Update alert <em>notification</em> <em>channels</em>",
        "info": "Read about how to update alerts <em>notification</em> <em>channels</em>. ",
        "category_2": "Alert <em>notifications</em>",
        "body": " to a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click Alerts &amp; AI, click <em>Notification</em> channels. Choose a <em>channel</em>, and then click Alert policies. From the selected policy, use the windows to select, remove, or clear all <em>notification</em> channels. Assign a <em>channel</em> to policies To add"
      },
      "id": "5f2dbad928ccbcb8ca88dfed"
    },
    {
      "body": "If you delete a channel, you cannot restore it. If you want to keep the notification channel, you can remove it from any associated policy. Delete a channel To delete a channel permanently: Go to alerts.newrelic.com > Notification channels. Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Optional: To find the notification channel easily, search the Notification channels index. From the Notification channels index, select the channel's delete icon, and then select the confirmation prompt to cancel or continue. When you delete (or remove) a channel, any policies associated with it will still remain. You must delete policies separately. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / Alert notifications",
      "info": "You can delete alerts notification channels permanently or you can keep channels but remove them from associated policies.",
      "nodeid": 6471,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "Delete alert notification channels",
        "Delete a channel",
        "For more help"
      ],
      "title": "Delete alert notification channels",
      "popularity": 1,
      "external_id": "dcea3b60f23ddeb74a7a0a0f44a5130cd9e2885d",
      "category_1": "New Relic Alerts",
      "category_2": "Alert notifications",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/delete-alert-notification-channels",
      "published_at": "2020-08-11T04:16:54Z",
      "updated_at": "2020-08-11T04:16:54Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.611537,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Delete alert <em>notification</em> <em>channels</em>",
        "sections": "Delete alert <em>notification</em> <em>channels</em>",
        "info": "You can delete alerts <em>notification</em> <em>channels</em> permanently or you can keep <em>channels</em> but remove them from associated policies.",
        "category_2": "Alert <em>notifications</em>",
        "body": "If you delete a <em>channel</em>, you cannot restore it. If you want to keep the <em>notification</em> <em>channel</em>, you can remove it from any associated policy. Delete a <em>channel</em> To delete a <em>channel</em> permanently: Go to alerts.newrelic.com &gt; <em>Notification</em> channels. Go to one.newrelic.com, in the top nav click Alerts &amp; AI"
      },
      "id": "5f2dbb3628ccbc65c788dfcb"
    },
    {
      "body": "You must save a new notification channel or any changes to an existing notification channel before testing it. Alerts will then send a test message to your chosen destination. Request the test To test a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Follow standard procedures to add a new notification channel or to update an existing notification channel, and save it. Select a notification channel, and then click Envelope Message Icon Send a test notification. Review the test confirmation message, and then click Got it. Troubleshoot the test results A confirmation message will automatically show up in the user interface that indicates where the test was sent (for example, email) and whether it was successful. Also, the test notification message itself includes detailed information, including: The person who requested the test Links to policies for the channel Links to all notification channels and policies for the account When troubleshooting problems, review the test notification message, and verify the setup requirements for the type of notification channel you selected. If necessary, make additional changes to your notification channel, and test it again as needed. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / Alert notifications",
      "info": "Be sure to save your alerts notification channels before testing them to make sure they're working properly.",
      "nodeid": 6491,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "Test alert notification channels",
        "Request the test",
        "Troubleshoot the test results",
        "For more help"
      ],
      "title": "Test alert notification channels",
      "popularity": 1,
      "external_id": "fcea4cf920f099fa1fcf7fab3760d57bdf2e02b7",
      "category_1": "New Relic Alerts",
      "category_2": "Alert notifications",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/test-alert-notification-channels",
      "published_at": "2020-08-11T04:16:54Z",
      "updated_at": "2020-08-11T04:16:54Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.611537,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Test alert <em>notification</em> <em>channels</em>",
        "sections": "Test alert <em>notification</em> <em>channels</em>",
        "info": "Be sure to save your alerts <em>notification</em> <em>channels</em> before testing them to make sure they&#x27;re working properly.",
        "category_2": "Alert <em>notifications</em>",
        "body": "You must save a new <em>notification</em> <em>channel</em> or any changes to an existing <em>notification</em> <em>channel</em> before testing it. Alerts will then send a test message to your chosen destination. Request the test To test a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click Alerts &amp; AI, then click"
      },
      "id": "5f2dbb3664441fd3a556a97c"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Feature Idea: How to get notification channel information for a Synthetic monitor with REST API? Support: Full-Stack Observability (FSO) Synthetic restapi featureidea synthetic Alan_Tsui December 31, 2019, 10:36am #1 Hi all, Specifically, how can I get a list of notification channel email addresses of each Synthetic monitor with REST API? Regards, Alan New Relic Edit I want this too I have more info to share (reply below) I have a solution for this 0 voters We take feature ideas seriously and our product managers review every one when plotting their roadmaps. However, there is no guarantee this feature will be implemented. This post ensures the idea is put on the table and discussed though. So please vote and share your extra details with our team. philweber December 30, 2019, 2:34pm #2 Hi, @Alan_Tsui: I think you will have to: Get a list of all alert policies For each alert policy, check if it includes Synthetic monitors Get a list of all alert channels Compare the channels[links][policy_ids] list of each alert channel with the list of Synthetics-containing alert policies from Step 2 1 Like stefan_garnham December 30, 2019, 4:25pm #3 That is really painful. I hear a feature request being warmed up Alan_Tsui December 31, 2019, 12:55am #4 Thank you @philweber for your confirmation. And yes @stefan_garnham, it’s very painful… May I know which feature request did you refer to? stefan_garnham December 31, 2019, 8:32am #5 I meant that your original enquiry would make a great feature request. An API method to get the notification channels for a synthetic would be a great new feature. RyanVeitch December 31, 2019, 10:34am #6 Hey @Alan_Tsui - @stefan_garnham is right, a clean solution for this doesn’t currently exist. I have created a feature idea for you, and I have converted your post into a feature idea poll 1 Like Alan_Tsui December 31, 2019, 1:46pm #7 Hi @RyanVeitch, Please loop me in. Happy new year~ 1 Like RyanVeitch December 31, 2019, 2:20pm #8 Thanks Alan, Happy New Year to you too. We’ll try to keep this thread up to date as we hear more on the feature idea! @Alan_Tsui -Ryan. anon85944545 December 31, 2019, 9:22pm #9 I agree that the nested queries via API can be a bit troublesome; but just in case you need a solution faster than the FR can be implemented; you can try this out: note: this is based on a few of the functions I keep in my public Github repo results: image.png932×222 52.5 KB PowerShell script: #region Top of Script #requires -version 2 <# .SYNOPSIS Queries the New Relic API to audit alert policies and their associated Synthetics alert conditions and notification channels .DESCRIPTION Requires the Account API Key for the target account .NOTES Version: 1.0 Author: Zack Mutchler Creation Date: 12/31/2019 Purpose/Change: Initial script development. #> #endregion #####-----------------------------------------------------------------------------------------##### #region Script Parameters Param( [ Parameter( Mandatory = $true ) ] [ValidateNotNullOrEmpty() ] [ string ] $AccountAPIKey ) #endregion Script Parameters #####-----------------------------------------------------------------------------------------##### #region Functions # Create a function to enumerate all Alert Policies for an account Function Get-NRAlertPolicies { Param ( [ Parameter (Mandatory = $true ) ] [ string ] $AccountAPIKey, [ Parameter (Mandatory = $false ) ] [ string ] $FilterName, [ Parameter (Mandatory = $false ) ] [ ValidateSet( 'true', 'false' ) ] [ string ] $ExactMatch = 'false' ) # Set the target URI if no FilterName is provided If ( ( !$FilterName ) ) { $getPoliciesUri = \"https://api.newrelic.com/v2/alerts_policies.json\" } # Set the target URI with provided filter Else { $getPoliciesUri = \"https://api.newrelic.com/v2/alerts_policies.json/?filter[name]=\" + $FilterName + '&filter[exact_match]=' + $ExactMatch } # Set the headers to pass $headers = @{ 'X-Api-Key' = $AccountAPIKey; 'Content-Type' = 'application/json' } # Query the API $results = ( Invoke-RestMethod -Method Get -Uri $getPoliciesUri -Headers $headers ).policies RETURN $results } # Create a function to enumerate all Synthetics Alert Conditions for an account Function Get-NRSyntheticsConditions { Param ( [ Parameter (Mandatory = $true ) ] [ string ] $AccountAPIKey, [ Parameter (Mandatory = $true ) ] [ string ] $PolicyID ) # Set the target URI with query string $getSyntheticsConditionsUri = \"https://api.newrelic.com/v2/alerts_synthetics_conditions.json?policy_id=\" + $PolicyID # Set the headers to pass $headers = @{ 'X-Api-Key' = $AccountAPIKey; 'Content-Type' = 'application/json' } # Query the API $results = ( Invoke-RestMethod -Method Get -Uri $getSyntheticsConditionsUri -Headers $headers ).synthetics_conditions RETURN $results } # Create a function to enumerate all Notification Channels for an account Function Get-NRNotificationChannels { Param( [ Parameter ( Mandatory = $true ) ] [ string ] $AccountAPIKey ) # Set the target URI $uri = 'https://api.newrelic.com/v2/alerts_channels.json' # Set the headers to pass $headers = @{ 'X-Api-Key' = $AccountAPIKey } # Query the API $results = ( Invoke-RestMethod -Method Get -Uri $uri -Headers $headers -ContentType 'application/json' ).channels RETURN $results } #endregion Functions #####-----------------------------------------------------------------------------------------##### #region Execution # Get a list of all Alert Policies $policies = Get-NRAlertPolicies -AccountAPIKey $AccountAPIKey # Get a list of all Notification Channels $channels = Get-NRNotificationChannels -AccountAPIKey $AccountAPIKey # Build an empty array to hold our Alert Policy IDs that have Synthetics Alert Conditions $syntheticsPolicies = @() # Iterate through each policy and isolate the ones with Synthetics Alert Conditions foreach ( $p in $policies ) { $query = Get-SyntheticsConditions -AccountAPIKey $AccountAPIKey -PolicyID $p.id foreach ( $q in $query ) { Write-Host \"Synthetics Conditions found in Alert Policy: $( $p.name )\" -ForegroundColor Cyan $syntheticsPolicies += $p.id } } # Build an empty array to hold our results $results = @() # Iterate through the Notification Channels to see if any are assigned to a Policy with Synthetics Alert Conditions foreach ( $c in $channels ) { foreach( $l in $c.links.policy_ids ) { # Build a PSObject to add to our results $item = New-Object -TypeName psobject if( $l -in $syntheticsPolicies ) { # Grab the alert policy name for readability in the results $pName = ( $policies | Where-Object { $_.id -eq $l } ).name Write-Host \"Notification Channel \"$( $c.name )\" is assigned to Alert Policy: $( $pName )\" -ForegroundColor Yellow # Fill the PSObject $item | Add-Member -MemberType NoteProperty -Name 'AlertPolicyID' -Value $l $item | Add-Member -MemberType NoteProperty -Name 'AlertPolicyName' -Value $pName $item | Add-Member -MemberType NoteProperty -Name 'ChannelID' -Value $c.id $item | Add-Member -MemberType NoteProperty -Name 'ChannelName' -Value $c.name $item | Add-Member -MemberType NoteProperty -Name 'ChannelType' -Value $c.type # Add the PSObject to our results array $results += $item } } } #endregion Execution # Play that beautiful bean footage... $results | Format-Table -AutoSize 4 Likes Alan_Tsui January 1, 2020, 3:42pm #10 Thank you @anon85944545. I programmed a Python script for this too, please free feel to comment on my public GitHub repo. Sample output result_df.png2032×1169 478 KB 2 Likes RyanVeitch January 2, 2020, 10:09am #11 This is great! Thanks both of you for sharing those scripts! @anon85944545 @Alan_Tsui Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Feature Idea: How to get notification channel information for a Synthetic monitor with REST API?"
      ],
      "title": "Feature Idea: How to get notification channel information for a Synthetic monitor with REST API? - Synthetic - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "bdbb045c3d65f768754131aee97c0199d48ede1d",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/5/1/51a1bab08a8e6e700fa097c886d462adb65b3e27_2_690x396.png",
      "url": "https://discuss.newrelic.com/t/feature-idea-how-to-get-notification-channel-information-for-a-synthetic-monitor-with-rest-api/90820",
      "published_at": "2020-08-11T02:23:24Z",
      "updated_at": "2020-07-30T21:07:50Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.5424356,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Feature Idea: How to get <em>notification</em> <em>channel</em> information for a <em>Synthetic</em> <em>monitor</em> with REST API? - <em>Synthetic</em> - New Relic Explorers Hub",
        "sections": "Feature Idea: How to get <em>notification</em> <em>channel</em> information for a <em>Synthetic</em> <em>monitor</em> with REST API?",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Feature Idea: How to get <em>notification</em> <em>channel</em> information for a Synthetic <em>monitor</em> with REST API? Support: Full-Stack Observability"
      },
      "id": "5e0b6ce064441fabd8392627"
    }
  ],
  "/build-apps/add-nerdgraphquery-guide": [
    {
      "body": "Build apps You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps 15 min Create a \"Hello, World!\" application Build a \"Hello, World!\" app and publish it to New Relic One 20 min Set up your development environment Prepare to build apps and contribute to this site 20 min Publish and deploy apps Start sharing the New Relic apps you build 45 min Add, query, and mutate data using NerdStorage NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. 20 minutes Add the NerdGraphQuery component to an application The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application 20 min Add a time picker to your app Add a time picker to a sample application 30 min Add a table to your app Add a table to your New Relic One app 30 min Create a custom map view Build an app to show page view data on a map",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Create a \"Hello, World!\" application",
        "Set up your development environment",
        "Publish and deploy apps",
        "Add, query, and mutate data using NerdStorage",
        "Add the NerdGraphQuery component to an application",
        "Add a time picker to your app",
        "Add a table to your app",
        "Create a custom map view"
      ],
      "title": "Build apps",
      "popularity": 1,
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "published_at": "2020-08-13T01:45:07Z",
      "updated_at": "2020-08-12T01:57:08Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1.1805475,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Add</em> <em>the</em> <em>NerdGraphQuery</em> <em>component</em> <em>to</em> <em>an</em> <em>application</em>",
        "body": " to modify, save, and retrieve documents from one session to the next. 20 minutes <em>Add</em> the <em>NerdGraphQuery</em> <em>component</em> to an <em>application</em> The <em>NerdGraphQuery</em> <em>component</em> allows you to <em>query</em> data from your account and <em>add</em> it to a dropdown menu in an <em>application</em> 20 min <em>Add</em> a time picker to your app <em>Add</em> a time"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "body": "NerdGraphQuery Usage Copy Props There are no props for this component.",
      "type": "developer",
      "document_type": "page",
      "info": "A NerdGraphQuery component!",
      "sections": [
        "NerdGraphQuery",
        "Usage",
        "Props"
      ],
      "title": "NerdGraphQuery",
      "popularity": 1,
      "external_id": "1ada6e056e031c141b2bb989e4ec200b3a7ce988",
      "image": "",
      "url": "https://developer.newrelic.com/components/nerd-graph-query/",
      "published_at": "2020-08-13T01:47:34Z",
      "updated_at": "2020-08-01T01:48:20Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.026767705,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraphQuery</em>",
        "sections": "<em>NerdGraphQuery</em>",
        "info": "A <em>NerdGraphQuery</em> <em>component</em>!",
        "body": "<em>NerdGraphQuery</em> Usage Copy Props There are no props for this <em>component</em>."
      },
      "id": "5efa999d28ccbc6bfd307ddb"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How To: Use the NerdGraphQuery component Build on New Relic Nerdpacks nerdpack nrnerdpack jsius April 12, 2020, 1:13pm #1 Use the NerdGraphQuery component Difficulty Level: Intermediate Products: APM Getting Started For this how-to example, we will be adding the NerdGraph component to our transaction overview application to query data from our account and add it to a dropdown menu. NerdGraph is New Relic’s GraphQl implementation. GraphQL has some key differences when compared to REST. For example, it’s the client, not the server, that determines what data will be returned. Also, it becomes easy to collect data from multiple sources. In the case of New Relic, we’ll see you can get account information, data about infrastructure, and issue an NRQL request, all in one GraphQL query. Explore NerdGraph To get started, we will clone the example applications from our how-to GitHub repo: Next, we will use the NR1 CLI to update the application UUID and run our application locally. In the terminal, let’s change into the /nr1-howto/use-nerdgraph directory. cd /nr1-howto/use-nerdgraph Before moving forward, let’s make sure we are getting data from the right New Relic account. If you open the sample code in your preferred text editor, open the /use-nerdgraphd/nerdlets/use-nerdgraph-nerdlet/index.js. In your text editor, you want to update the line below to include your account id. this.accountId = <REPLACE ME WITH YOUR ACCOUNT ID>; Note: Your account id is viewable in the profile selection menu of the developer center, where you downloaded in the nr1 CLI. Now, we want to update the UUID and serve our application. nr1 nerdpack:uuid -gf nr1 nerdpack:serve Once our app is successfully served, in your terminal, you’ll be provided with a URL to access New Relic One and see your running application. New Relic link: https://one.newrelic.com/?nerdpacks=local Now on the New Relic homepage, you should have a new launcher to the how-to example. use-nerdgraph-launcher.png3178×1098 497 KB After launching the 'Use NerdGraph application, you will see a dashboard that gives an overview of the transactions in your New Relic account. no-name.png3174×1494 417 KB Adding the NerdGraphQuery component In this application, you will see an overview of the Transaction data that is your account. By following the instructions in this how-to, you will add the NerdGraphQuery component to access to build a dropdown menu to change the account the application is viewing. The first step is to import the NerdGraphQuery Component. We can find the component and details on how to import it on the APIs and components page on https://developer.newrelic.com/client-side-sdk/index.html#data-fetching/NerdGraphQuery. Please take a moment to get caught up on the NerdGraphQuery component, then import the component into our application’s index.js file. Add the NerdGraphQuery component into the first StackItem inside of the return in the index.js file. <NerdGraphQuery query={query} variables={variables}> {({loading, error, data}) => { console.log({loading, error, data}) if (loading) { return <Spinner />; } if (error) { return 'Error!'; } return null; }} </NerdGraphQuery> The NerdGraphQuery component takes an an query object that states the what source you’d like to access and the data you want to have returned. Add the following code to your index.js file in the render method. const query = ` query($id: Int!) { actor { account(id: $id) { name } } } `; If you take a look at your browser console, you should see something similar to below: console-screenshot.png3176×548 113 KB You can see the data from your query returned in an object following the same structure of the object provided in the initial query. Now, you want to take the data returned by the NerdGraph query and display it in the application. Replace the return null in the current NerdGraphQuery component with the return statement below. return <HeadingText>{data.actor.account.name} Apps:</HeadingText>; If you go back to the browser and view your application, you will see a new headline showing the name of your account returned from NerdGraph. with-name.png3174×1612 443 KB Using the NerdGraphQuery.query We have implemented the NerdGraphQuery component with the application’s render method and displayed the return data within the transaction overview application. Now, we want to be able to query NerdGraph outside of the render method and save the returned data for later usage throughout the NR1 app. To do this, we will use the NerdGraphQuery.query method within the componentDidMount react lifecycle method. Add the following code into the index.js just under the constructor. componentDidMount(){ const accountId = this.state; const gql = `{ actor { accounts { id name } } }`; const accounts = NerdGraphQuery.query({query: gql}) accounts.then(results => { console.log('Nerdgraph Response:', results); const accounts = results.data.actor.accounts.map(account => { return account; }); const account = accounts.length > 0 && accounts[0]; this.setState({ selectedAccount: account, accounts }); }).catch((error) => { console.log('Nerdgraph Error:', error); }) } In the code, we just added to the transaction app a few things would happen after the HTML in the render method is successfully rendered, and the componentDidMount lifecycle method has been called. The NerdGraphQuery.query method called with the query object to get your account data will be stored into a variable called accounts. Once the response has come back from NerdGraph, the results will be logged to the browser console for your viewing, processed, and stored into the application state. After the data is stored into state, we want to use it to display and account selection for users to change accounts and update the application quickly. Add the following code into the second StackItem in the index.js return statement. {accounts && <StackItem> <Select value={selectedAccount} onChange={(evt, value) => this.selectAccount(value)}> {accounts.map(a => { return <SelectItem key={a.id} value={a}> {a.name} </SelectItem> })} </Select> </StackItem> } If you look at the application in your browser, you will see a dropdown menu that displays the data returned from the NerdGraphQuery.query and allows the user to select an account. Once a new account is selected, the application will render showing data from the new selection. complete.png3172×1432 441 KB The final index.js file should have code similar to the code below. This completed sample code is in your nerdlet final.js. import React from 'react'; import { PlatformStateContext, NerdGraphQuery, Spinner, HeadingText, Grid, GridItem, Stack, StackItem, Select, SelectItem, AreaChart, TableChart, PieChart } from 'nr1' import { timeRangeToNrql } from '@newrelic/nr1-community'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class UseNerdgraphNerdletNerdlet extends React.Component { constructor(props){ super(props) this.state = { accountId: <YOUR ACCOUNT ID>, accounts: null, selectedAccount: null, } } componentDidMount(){ const accountId = this.state; const gql = `{ actor { accounts { id name } } }`; const accounts = NerdGraphQuery.query({query: gql}) accounts.then(results => { console.log('Nerdgraph Response:', results); const accounts = results.data.actor.accounts.map(account => { return account; }); const account = accounts.length > 0 && accounts[0]; this.setState({ selectedAccount: account, accounts }); }).catch((error) => { console.log('Nerdgraph Error:', error); }) } selectAccount(option) { this.setState({ accountId: option.id,selectedAccount: option }); } render() { const { accountId, accounts, selectedAccount } = this.state; console.log({accountId, accounts, selectedAccount}); const query = ` query($id: Int!) { actor { account(id: $id) { name } } } `; const variables = { id: accountId, }; const avgResTime = `SELECT average(duration) FROM Transaction FACET appName TIMESERIES AUTO `; const trxOverview = `FROM Transaction SELECT count(*) as 'Transactions', apdex(duration) as 'apdex', percentile(duration, 99, 95) FACET appName `; const errCount = `FROM TransactionError SELECT count(*) as 'Transaction Errors' FACET error.message `; const responseCodes = `SELECT count(*) as 'Response Code' FROM Transaction FACET httpResponseCode `; return ( <Stack fullWidth horizontalType={Stack.HORIZONTAL_TYPE.FILL} gapType={Stack.GAP_TYPE.EXTRA_LOOSE} spacingType={[Stack.SPACING_TYPE.MEDIUM]} directionType={Stack.DIRECTION_TYPE.VERTICAL}> <StackItem> <NerdGraphQuery query={query} variables={variables}> {({loading, error, data}) => { if (loading) { return <Spinner />; } if (error) { return 'Error!'; } return <HeadingText>{data.actor.account.name} Apps:</HeadingText>; }} </NerdGraphQuery> </StackItem> {accounts && <StackItem> <Select value={selectedAccount} onChange={(evt, value) => this.selectAccount(value)}> {accounts.map(a => { return <SelectItem key={a.id} value={a}> {a.name} </SelectItem> })} </Select> </StackItem> } <StackItem> <hr /> <PlatformStateContext.Consumer> {(PlatformState) => { /* Taking a peek at the PlatformState */ const since = timeRangeToNrql(PlatformState); return ( <> <Grid className=\"primary-grid\" spacingType={[Grid.SPACING_TYPE.NONE, Grid.SPACING_TYPE.NONE]} > <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Overview </HeadingText> <TableChart fullWidth accountId={accountId} query={trxOverview+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Average Response Time </HeadingText> <AreaChart fullWidth accountId={accountId} query={avgResTime+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Response Code </HeadingText> <PieChart fullWidth accountId={accountId} query={responseCodes+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Errors </HeadingText> <PieChart fullWidth accountId={accountId} query={errCount+since} /> </main> </GridItem> </Grid> </> ); }} </PlatformStateContext.Consumer> </StackItem> </Stack> ) } } How to use the NerdGraph component recap Wrapping up this how-to example, you’ve successfully queried data from your account using the NerdGraphQuery component. Using the NerdGraphQuery.query method allows the separation of querying data and visualization. For more experience querying your data with NerdGraph, use New Relic’s GraphQL tool to explore what’s possible. To continue your learning, take a look at our self-paced workshop on Github. 2 Likes Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "How To: Use the NerdGraphQuery component",
        "Use the NerdGraphQuery component",
        "Getting Started",
        "Adding the NerdGraphQuery component",
        "Using the NerdGraphQuery.query",
        "How to use the NerdGraph component recap"
      ],
      "title": "How To: Use the NerdGraphQuery component - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "54afe87c7dc00daab3cab31d9fc01b774391d3d3",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/a/4/a43c1bd30420ce0a39563ad803a05c512a681ab7_2_690x238.png",
      "url": "https://discuss.newrelic.com/t/how-to-use-the-nerdgraphquery-component/96289",
      "published_at": "2020-08-12T04:52:18Z",
      "updated_at": "2020-07-22T05:47:01Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.017421223,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How <em>To</em>: Use <em>the</em> <em>NerdGraphQuery</em> <em>component</em> - <em>Nerdpacks</em> - New Relic Explorers Hub",
        "sections": "How <em>To</em>: Use <em>the</em> <em>NerdGraphQuery</em> <em>component</em>",
        "body": " the <em>NerdGraphQuery</em> <em>component</em> Difficulty Level: Intermediate Products: APM Getting Started For this how-to example, we will be adding the <em>NerdGraph</em> <em>component</em> to our transaction overview <em>application</em> to <em>query</em> data from our account and <em>add</em> it to a dropdown menu. <em>NerdGraph</em> is New Relic’s <em>Graph</em>Ql implementation"
      },
      "id": "5e61d6b9196a67486b7ed48e"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0044204337,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create a &quot;Hello, World!&quot; <em>application</em>",
        "sections": "Create a local version of <em>the</em> &quot;Hello, World!&quot; <em>application</em>",
        "info": "Build a &quot;Hello, World!&quot; app <em>and</em> publish it <em>to</em> New Relic One",
        "tags": "Subscribe <em>applications</em>",
        "body": " how to <em>add</em> descriptive metadata. <em>Add</em> details to describe your project Now that your new <em>application</em> is in the New Relic One catalog, you can <em>add</em> details that help users understand what your <em>application</em> does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Use NrqlQuery component to execute query and store result in nerdlets Build on New Relic Nerdpacks nrql nerdpack sikharam May 6, 2020, 1:07am #1 Is it possible to use the NrqlQuery component to execute a query and store the result of it? sikharam May 5, 2020, 11:20pm #2 I’m trying to get the results of one query, and then use the results in other queries/operations… RyanVeitch May 6, 2020, 8:50am #3 Hey @sikharam that should absolutely be possible! There is an example of similar happening here: Is it possible to query the Insights API from a Nerdpack? Nerdpacks I can’t diagnose the invariant violation in this setting, but I can verify that the following code works, using the NerdGraphQuery static method and models the idea of using an initial query to feed a secondary query in the render. Maybe this is helpful. import React from 'react'; import { Spinner, NerdGraphQuery } from 'nr1'; import { NerdGraphError } from '@newrelic/nr1-community'; import gql from \"graphql-tag\"; import get from 'lodash.get'; import camelCase from 'lodash.camelcase'; // http… I see that this is using NerdGraphQuery rather than NrqlQuery, but, this NerdGraph Query is querying NRQL data, and the same result chaining should be possible in the NRQL query component. 1 Like sikharam May 6, 2020, 6:19pm #4 That works! Thank you! 1 Like RyanVeitch May 7, 2020, 6:56am #5 Awesome! Thanks for confirming Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Use NrqlQuery component to execute query and store result in nerdlets"
      ],
      "title": "Use NrqlQuery component to execute query and store result in nerdlets - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "8bf23a29e60f7ef15ebd24d982166ad7540e98d4",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/use-nrqlquery-component-to-execute-query-and-store-result-in-nerdlets/101450",
      "published_at": "2020-08-11T17:17:45Z",
      "updated_at": "2020-07-23T02:43:53Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.004134622,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Use NrqlQuery <em>component</em> <em>to</em> execute <em>query</em> <em>and</em> store result in <em>nerdlets</em> - <em>Nerdpacks</em> - New Relic Explorers Hub",
        "sections": "Use NrqlQuery <em>component</em> <em>to</em> execute <em>query</em> <em>and</em> store result in <em>nerdlets</em>",
        "body": " from &#x27;lodash.camelcase&#x27;; &#x2F;&#x2F; http… I see that this is using <em>NerdGraphQuery</em> rather than Nrql<em>Query</em>, but, this <em>NerdGraph</em> <em>Query</em> is querying NRQL data, and the same result chaining should be possible in the NRQL <em>query</em> <em>component</em>. 1 Like sikharam May 6, 2020, 6:19pm #4 That works! Thank you! 1 Like"
      },
      "id": "5eb2c51c28ccbcd7f7c213ce"
    }
  ],
  "/collect-data/custom-events": [
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.13377646,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> CLI Reference",
        "sections": "<em>New</em> <em>Relic</em> CLI Reference",
        "info": "The command line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> cli",
        "body": "<em>New</em> <em>Relic</em> CLI Reference The <em>New</em> <em>Relic</em> CLI enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> CLI commands Find details for the <em>New</em> <em>Relic</em> CLI command docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.093906194,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "sections": "<em>Create</em> your <em>New</em> <em>Relic</em> CLI profile",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> CLI, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> CLI",
        "body": ". This guide walks you through the essentials of <em>New</em> <em>Relic</em> CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your <em>New</em> <em>Relic</em> personal API Key, which you can <em>create</em> from the Account settings of your <em>New</em> <em>Relic</em> account An instrumented application in your"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.08688526,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> One CLI reference",
        "sections": "<em>New</em> <em>Relic</em> One CLI reference",
        "info": "An overview of the CLI to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> One app",
        "body": " application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to <em>create</em> a profile, generate your first &quot;Hello World&quot; app, and serve it locally. <em>New</em> <em>Relic</em> One CLI Commands This table provides"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Determine who created a custom event type Support: Telemetry Data Platform (TDP) Dashboards insights mhernandez1 May 17, 2018, 3:04pm #1 Is there a way to query who created a custom event type or do I need to create a support ticket? hross May 17, 2018, 4:40pm #2 Hey there @mhernandez1 - welcome back to the Explorers Hub! There is no way to do this through the New Relic UI, so this is a feature idea. We’re not certain that we can, but it’s possible that a support engineer could extract this data. If you want to give that a shot, I can create a ticket from this post. Please just let me know. 1 Like Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Determine who created a custom event type"
      ],
      "title": "Determine who created a custom event type - Dashboards - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "311375cb1610f0f082cd9c6fd2960afdc1f5e620",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/determine-who-created-a-custom-event-type/55789",
      "published_at": "2020-08-11T00:49:29Z",
      "updated_at": "2020-07-31T14:01:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.060816064,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Determine who <em>created</em> a <em>custom</em> <em>event</em> type - Dashboards - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "Determine who <em>created</em> a <em>custom</em> <em>event</em> type",
        "body": " from the world of <em>New</em> <em>Relic</em> and digital intelligence. Our Company About Us Leadership Meetups and <em>Events</em> Resources Investor Relations Newsroom Partner Program Contact Us Determine who created a <em>custom</em> <em>event</em> type Support: Telemetry Data Platform (TDP) Dashboards insights mhernandez1 May 17, 2018, 3"
      },
      "id": "5b0011d88e9c0f01cc598512"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Monitor NR1 App with Browser Agent Build on New Relic Nerdpacks browser nerdpack alex.plaza.gonzalez July 30, 2020, 4:21am #1 Hi, I’m attempting to install the New Relic Browser agent on a New Relic One application. I downloaded the agent script and uploaded in a publicly accessible S3 bucket and then tried to use the following to create the <script> tag in the <head> tag of the application: componentDidMount () { const script = document.createElement(\"script\"); script.src = 'https://url/to/browser-agent.js'; script.type = 'text/javascript'; document.head.appendChild(script); } The app doesn’t throw any errors, but it doesn’t seem to successfully inject the script and no data is being reported. Any idea what I’m missing here? alex.plaza.gonzalez July 30, 2020, 4:26am #2 I also tried directly inputting the script instead of getting it from a source, but that was also unsuccessful componentDidMount () { const script = document.createElement('script'); const scriptText = document.createTextNode(`super long agent script`); script.type = 'text/javascript'; script.appendChild(scriptText); document.head.appendChild(script); } RyanVeitch July 30, 2020, 7:09am #3 Hey @alex.plaza.gonzalez - As far as I know, it’s currently impossible to monitor Nerdpacks with the Browser agent. This, essentially, is because there can’t be 2 agents sending NR data from the one source. All New Relic UI Pages have the browser agent running sending us data, so for now it’s not possible for NR customers to also monitor these pages. I’d recommend posting over in the #full-stack-observability:browser space, where we will be able to file this as a feature request for you Feature Idea: Unable to Monitor NR1 App with Browser Agent alex.plaza.gonzalez July 30, 2020, 4:23pm #4 Thanks @RyanVeitc , will do. In the meantime, is there any New Relic product I can use to monitor a nerdpack app? Edit: By the way, I opened another topic in the browser space as suggested. RyanVeitch July 31, 2020, 7:16am #5 Thanks for opening that topic. It looks like Holly has already gotten a feature idea filed for you on that thread. As for other methods of monitoring NR1 Apps… I guess it depends on the kind of metrics you are looking for, but, an option you could try is to collect some metrics in the app code yourself, and send them to NR as events: developer.newrelic.com Create custom New Relic events Create custom New Relic events Which will allow you to NRQL query that data in the Chart Builder and build out a dashboard. 1 Like alex.plaza.gonzalez August 2, 2020, 1:10am #6 Great suggestion. Thanks @RyanVeitch! 1 Like RyanVeitch August 4, 2020, 6:56am #7 Please do keep us updated! I’m excited to hear how this goes for you Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Monitor NR1 App with Browser Agent",
        "Create custom New Relic events"
      ],
      "title": "Monitor NR1 App with Browser Agent - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "03e083114463096e88ffe375b3d3eba35cf6b3e7",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/monitor-nr1-app-with-browser-agent/109965",
      "published_at": "2020-08-11T22:19:37Z",
      "updated_at": "2020-08-06T04:10:42Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.035184417,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Monitor NR1 App with Browser Agent - Nerdpacks - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "<em>Create</em> <em>custom</em> <em>New</em> <em>Relic</em> <em>events</em>",
        "body": " you could try is to collect some metrics in the app code yourself, and send them to NR as <em>events</em>: developer.newrelic.com <em>Create</em> <em>custom</em> <em>New</em> <em>Relic</em> <em>events</em> <em>Create</em> <em>custom</em> <em>New</em> <em>Relic</em> <em>events</em> Which will allow you to NRQL query that data in the Chart Builder and build out a dashboard. 1 Like"
      },
      "id": "5f2314d2e7b9d2a388beb2b1"
    }
  ],
  "/build-apps/set-up-dev-env": [
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.037312243,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish <em>your</em> application to New Relic",
        "body": " installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting <em>up</em> <em>your</em> <em>environment</em>, see <em>Set</em> <em>up</em> <em>your</em> <em>development</em> <em>environment</em>. Create a local version of the &quot;Hello, World!&quot; application The CLI allows you to run a local version of New"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Using NerdStorage, you can create individual documents of up to 64kb in size, create different collections of documents, and store data by entity, account, or user level. This guide explains how to add data and documents to NerdStorage. For an introduction to what NerdStorage is and how it works, see Intro to NerdStorage. Before you begin This guide requires that you have an API key and the New Relic One CLI as described in Set up your development environment. Get started First, get the NerdStorage app running successfully inside New Relic One. Step 1 of 3 Clone the example applications from the GitHub repo. Step 2 of 3 Use the New Relic One CLI to update the application UUID and run the application locally. In the terminal, switch to the /nr1-howto/use-nerdstorage directory: cd / nr1 - howto / use - nerdstorage; Copy Update the UUID and serve the application: nr1 nerdpack:uuid -gf nr1 nerdpack:serve Copy Step 3 of 3 Once the app is successfully served, your terminal will return the URL to view your running application on New Relic One. Load the URL. Under Your applications you'll see the Use Nerdstorage app listed. Click to launch the app. Add data to NerdStorage Once the app is up and running on New Relic One, you can prepare the app and start adding data. On the How To Use NerdStorage app screen, there's a Saved to NerdStorage pane with a field for adding data. However, if you type something you'll get an error message. This is because you need to be set up to store data at the User level. You can do this with the help of the UserStorageMutation component. Step 1 of 3 Open the application’s ./nerdlets/use-nerdstorage-nerdlet/index.js file in the text editor of your choice and find the code for the TextField and Button used to enter data. The Button onClick prop makes a call to a helper method called _addToNerdStorage, and you need to update it to add UserStorageMutation The UserStorage NerdStorage components require a collection and documentId. In the constructor method in the application’s index.js file, you can see the variables being provided. In the .js file, it will look something like this: constructor(props) { super(props) this.collectionId = 'mycollection'; this.documentId = 'learning-nerdstorage'; this.state = { isOpen: true, storage: [], text: '', }; this._addToNerdStorage = this._addToNerdStorage.bind(this); this._removeFromNerdStorage = this._removeFromNerdStorage.bind(this); this._deleteDocument = this._deleteDocument.bind(this); } Copy Step 2 of 3 Import the UserStorageMutation by adding it to your import statement at the top of the index.js file: import { UserStorageMutation } from 'nr1'; Copy Then update the helper with this code beginning with _addToNerdStorage: _addToNerdStorage(){ const { text, storage } = this.state; storage.push(text); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { this.setState({text: ''}); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Copy Step 3 of 3 Return to your running How To Use NerdStorage app screen on New Relic One and reload the page. Add some text in the text entry field and click the check button. This will update NerdStorage and trigger a Toast notification inside the app. You should then see the text you typed displayed as a table row below the text entry field. Query data from NerdStorage Once you get data storage working as described in the section above, you also need to get the app properly reading data from NerdStorage, or the app will reload with an empty state every time you navigate away from the app page and back. To do this, add the UserStorageQuery component and update the componentDidMount method. Step 1 of 3 Import the UserStorageQuery by adding it to the import statement in the application’s ./nerdlets/use-nerdstorage-nerdlet/index.js file. import { UserStorageMutation, UserStorageQuery } from 'nr1'; Copy Step 2 of 3 Then, add the following componentDidMount method to your application: componentDidMount(){ UserStorageQuery.query({ collection: this.collectionId, documentId: this.documentId, }) .then(({ data }) => { if(data !== null) { this.setState({storage: data.storage}); } }) .catch(err => console.log(err)); } Copy Step 3 of 3 Back inside the NerdStorage app, test your changes by adding a few more rows using the text entry field. Then exit and relaunch the application. The application should load and show all the data you entered before you navigated away. Mutate data in NerdStorage Each NerdStorage entry displayed in the table inside the app has a trash button that can be used to update a specific entry. The trash button works by making a call to the _removeFromNerdStorage helper method. Step 1 of 1 To get this process working, update the code in _removeFromNerdStorage: _removeFromNerdStorage(index, data){ const { storage } = this.state; storage.pop(data); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Copy Once this is done, clicking the trash button will remove the item it's associated with, and the app will update to show the change. Delete collection from NerdStorage While the trash button is a good method for removing specific entries one at a time, you may also want the ability to delete a whole NerdStorage document at once. You can do this by adding the Delete Document button to your app. Step 1 of 2 Add a new GridItem to the application immediately before the closing Grid tag. In the new GridItem add the following code to display your new button: <Button onClick={() => this._deleteDocument()} type={Button.TYPE.DESTRUCTIVE} sizeType={Button.SIZE_TYPE.SMALL} iconType={Button.ICON_TYPE.INTERFACE__OPERATIONS__TRASH} > Delete Document </Button>; Copy Step 2 of 2 As the new Delete Document button will be calling the _deleteDocument helper method, you'll need to update that using the code below: _deleteDocument(){ this.setState({storage: []}); UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, }); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.CRITICAL }); } Copy Back inside the application, you should now see both the individual trash buttons and the newly added Delete Document button. Next steps Now that you’ve successfully implemented NerdStorage into a New Relic One application, you can store and mutate data connected to your User. For more information on the various NerdStorage components, please visit the New Relic developer website API documentation.",
      "type": "developer",
      "document_type": "page",
      "info": "NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next.",
      "sections": [
        "Add, query, and mutate data using NerdStorage",
        "Before you begin",
        "Get started",
        "Add data to NerdStorage",
        "Query data from NerdStorage",
        "Mutate data in NerdStorage",
        "Delete collection from NerdStorage",
        "Next steps"
      ],
      "title": "Add, query, and mutate data using NerdStorage",
      "popularity": 1,
      "external_id": "97cc9637edea35ecd68683f1010f67a5f8c79038",
      "image": "https://developer.newrelic.com/static/e03456a7ed8556f83bd3329ea38b261d/8f217/add-data-NerdStorage.png",
      "url": "https://developer.newrelic.com/build-apps/add-query-mutate-data-nerdstorage/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.035431262,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " and the New Relic One CLI as described in <em>Set</em> <em>up</em> <em>your</em> <em>development</em> <em>environment</em>. Get started First, get the NerdStorage app running successfully inside New Relic One. Step 1 of 3 Clone the example applications from the GitHub repo. Step 2 of 3 Use the New Relic One CLI to update the application UUID and run"
      },
      "id": "5efa98d4e7b9d26d6b7bab74"
    },
    {
      "body": "Add the NerdGraphQuery component to an application 20 minutes This guide steps you through the process of adding the NerdGraphQuery component to a sample transaction overview application. This allows you to query data from your New Relic account and add it to a dropdown menu. NerdGraph is New Relic's GraphQL implementation. GraphQL has some key differences when compared to REST: The client, not the server, determines what data is returned. You can easily collect data from multiple sources. For example, in a single New Relic query, you can get account information, infrastructure data, and issue a NRQL request. Note Before completing this exercise, you can experiment with GraphQL queries in our NerdGraph API explorer. We also have a 14-minute video that covers the steps below. Before you begin To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete steps 1–4 of our CLI wizard, and be sure to make a copy of your account ID from step 1 because you’ll need it later. Note If you already installed the New Relic One CLI, but you can't remember your account ID, you can re-run the wizard just to get your account ID. For additional details, see Set up your development environment. Prepare the sample code To get started, complete these steps to update the application UUID (unique ID) and run the sample application locally: Step 1 of 7 If you haven't already done so, clone the example applications from our how-to GitHub repo. Here's an example using HTTPS: git clone https://github.com/newrelic/nr1-how-to.git Copy Step 2 of 7 Change to the directory use-nerdgraph-nerdlet: cd nr1-how-to/use-nerdgraph/nerdlets/use-nerdgraph-nerdlet Copy Step 3 of 7 In your preferred text editor, open index.js. Step 4 of 7 Replace <ADD YOUR ACCOUNT ID> with your account id: Note Your account ID is available in the CLI wizard (see Before you begin). this.accountId = <ADD YOUR ACCOUNT ID>; Copy Step 5 of 7 Change to the /nr1-howto/use-nerdgraph directory: cd ../.. Copy Step 6 of 7 Execute these commands to update the UUID and serve the sample application: nr1 nerdpack:uuid -gf nr1 nerdpack:serve Copy Step 7 of 7 Once the sample application is successfully served, go to the local New Relic One homepage (https://one.newrelic.com/?nerdpacks=local) and click Use NerdGraph. Note If you don't see any launchers, click Your applications. After launching the Use NerdGraph application, you see a dashboard that gives an overview of the transactions in your New Relic account: Add the NerdGraphQuery component Now you can create a dropdown menu for changing the account the application is viewing. The first step is to import the NerdGraphQuery component into the application's index.js file. Note If you need more details about our example below, see the APIs and components page on https://developer.newrelic.com Step 1 of 3 Add the NerdGraphQuery component into the first StackItem inside of the return in the index.js file: <NerdGraphQuery query={query} variables={variables}> {({ loading, error, data }) => { console.log({ loading, error, data }); if (loading) { return <Spinner />; } if (error) { return 'Error!'; } return null; }} </NerdGraphQuery>; Copy Step 2 of 3 The NerdGraphQuery component takes a query object that states the source you want to access and the data you want returned. Add the following code to your index.js file in the render method: Note In the browser console, you can see the data from your query returned in an object that follows the same structure of the object in the initial query. const query = ` query($id: Int!) { actor { account(id: $id) { name } } } `; Copy Step 3 of 3 To take the data returned by the NerdGraph query and display it in the application, replace the return null in the current NerdGraphQuery component with this return statement: return <HeadingText>{data.actor.account.name} Apps:</HeadingText>; Copy When you go back to the browser and view your application, you see a new headline showing the name of your account returned from NerdGraph: How to use NerdGraphQuery.query At this point, you implemented the NerdGraphQuery component with the application's render method and displayed the return data within the transaction overview application. Here's what you need to do next: Query NerdGraph inside of the componentDidMount lifecycle method. Save the returned data for later usage throughout the New Relic One application. Complete the following: Step 1 of 2 The following code takes the response from NerdGraph and makes sure the results are processed, stored into the application state, and logged to the browser console for viewing. Add the following code into the index.js just under the constructor: componentDidMount() { const accountId = this.state; const gql = `{ actor { accounts { id name } } }`; const accounts = NerdGraphQuery.query({query: gql}) //The NerdGraphQuery.query method called with the query object to get your account data is stored in the accounts variable. accounts.then(results => { console.log('Nerdgraph Response:', results); const accounts = results.data.actor.accounts.map(account => { return account; }); const account = accounts.length > 0 && accounts[0]; this.setState({ selectedAccount: account, accounts }); }).catch((error) => { console.log('Nerdgraph Error:', error); }) } Copy Step 2 of 2 After the data is stored into state, display a selection so users can change accounts and update the application. To do this, add the following code to index.js for the second StackItem in the return statement: { accounts && ( <StackItem> <Select value={selectedAccount} onChange={(evt, value) => this.selectAccount(value)} > {accounts.map((a) => { return ( <SelectItem key={a.id} value={a}> {a.name} </SelectItem> ); })} </Select> </StackItem> ); } Copy After you complete these steps, look at the application in your browser, and note the following: The dropdown menu displays the data returned from the NerdGraphQuery.query and allows you to select an account. After you select a new account, the application shows data from the new selection. The final index.js file should have code similar to the code below. This completed sample is in your nerdlet final.js. import React from 'react'; import { PlatformStateContext, NerdGraphQuery, Spinner, HeadingText, Grid, GridItem, Stack, StackItem, Select, SelectItem, AreaChart, TableChart, PieChart } from 'nr1' import { timeRangeToNrql } from '@newrelic/nr1-community'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class UseNerdgraphNerdletNerdlet extends React.Component { constructor(props){ super(props) this.state = { accountId: <YOUR ACCOUNT ID>, accounts: null, selectedAccount: null, } } componentDidMount() { const accountId = this.state; const gql = `{ actor { accounts { id name } } }`; const accounts = NerdGraphQuery.query({ query: gql }) accounts.then(results => { console.log('Nerdgraph Response:', results); const accounts = results.data.actor.accounts.map(account => { return account; }); const account = accounts.length > 0 && accounts[0]; this.setState({ selectedAccount: account, accounts }); }).catch((error) => { console.log('Nerdgraph Error:', error); }) } selectAccount(option) { this.setState({ accountId: option.id, selectedAccount: option }); } render() { const { accountId, accounts, selectedAccount } = this.state; console.log({ accountId, accounts, selectedAccount }); const query = ` query($id: Int!) { actor { account(id: $id) { name } } } `; const variables = { id: accountId, }; const avgResTime = `SELECT average(duration) FROM Transaction FACET appName TIMESERIES AUTO `; const trxOverview = `FROM Transaction SELECT count(*) as 'Transactions', apdex(duration) as 'apdex', percentile(duration, 99, 95) FACET appName `; const errCount = `FROM TransactionError SELECT count(*) as 'Transaction Errors' FACET error.message `; const responseCodes = `SELECT count(*) as 'Response Code' FROM Transaction FACET httpResponseCode `; return ( <Stack fullWidth horizontalType={Stack.HORIZONTAL_TYPE.FILL} gapType={Stack.GAP_TYPE.EXTRA_LOOSE} spacingType={[Stack.SPACING_TYPE.MEDIUM]} directionType={Stack.DIRECTION_TYPE.VERTICAL}> <StackItem> <NerdGraphQuery query={query} variables={variables}> {({loading, error, data}) => { if (loading) { return <Spinner />; } if (error) { return 'Error!'; } return <HeadingText>{data.actor.account.name} Apps:</HeadingText>; }} </NerdGraphQuery> </StackItem> {accounts && <StackItem> <Select value={selectedAccount} onChange={(evt, value) => this.selectAccount(value)}> {accounts.map(a => { return ( <SelectItem key={a.id} value={a}> {a.name} </SelectItem> ) })} </Select> </StackItem> } <StackItem> <hr /> <PlatformStateContext.Consumer> {(PlatformState) => { /* Taking a peek at the PlatformState */ const since = timeRangeToNrql(PlatformState); return ( <> <Grid className=\"primary-grid\" spacingType={[Grid.SPACING_TYPE.NONE, Grid.SPACING_TYPE.NONE]} > <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Overview </HeadingText> <TableChart fullWidth accountId={accountId} query={trxOverview+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Average Response Time </HeadingText> <AreaChart fullWidth accountId={accountId} query={avgResTime+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Response Code </HeadingText> <PieChart fullWidth accountId={accountId} query={responseCodes+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Errors </HeadingText> <PieChart fullWidth accountId={accountId} query={errCount+since} /> </main> </GridItem> </Grid> </> ); }} </PlatformStateContext.Consumer> </StackItem> </Stack> ) } } Copy Summary Now that you completed all the steps in this example, you successfully queried data from your account using the NerdGraphQuery component in two methods: Using the NerdGraphQuery component inside the application's render method and then passing the returned data into the children's components. Using the NerdGraphQuery.query method to query data before the application renders.",
      "type": "developer",
      "document_type": "page",
      "info": "The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application",
      "sections": [
        "Add the NerdGraphQuery component to an application",
        "Note",
        "Before you begin",
        "Prepare the sample code",
        "Add the NerdGraphQuery component",
        "How to use NerdGraphQuery.query",
        "Summary"
      ],
      "title": "Add the NerdGraphQuery component to an application",
      "popularity": 1,
      "external_id": "6bd6c8a72eab352a3e8f4332570e286c7831ba84",
      "image": "https://developer.newrelic.com/static/5dcf6e45874c1fa40bb6f21151af0c24/b01d9/no-name.png",
      "url": "https://developer.newrelic.com/build-apps/add-nerdgraphquery-guide/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.026545232,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "info": "The NerdGraphQuery component allows you to query data from <em>your</em> account and add it to a dropdown menu in an application",
        "body": " just to get <em>your</em> account ID. For additional details, see <em>Set</em> <em>up</em> <em>your</em> <em>development</em> <em>environment</em>. Prepare the sample code To get started, complete these steps to update the application UUID (unique ID) and run the sample application locally: Step 1 of 7 If you haven&#x27;t already done so, clone the example"
      },
      "id": "5efa993c64441ff4865f7e32"
    },
    {
      "body": "Add a time picker 20 min This guide steps you through the process of adding access to the New Relic time picker in the sample transaction overview application. The sample application provides an overview of the telemetry data showing your account's transactions by application, average response time, HTTP response codes, and transaction errors. When you enable the time picker, users can specify the time range of data to view. We also have a 12 minute video that covers the steps below. Before you begin To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete steps 1–4 of our CLI wizard, and be sure to make a copy of your account ID from step 1 because you’ll need it later. Note If you already installed the New Relic One CLI, but you can't remember your account ID, you can re-run the wizard just to get your account ID. For additional details, see Set up your development environment. Prepare the time picker sample code To get started, complete these steps to update the application UUID (unique ID) and run the sample application locally: Step 1 of 7 If you haven't already done so, clone the example applications from our how-to GitHub repo. git clone https://github.com/newrelic/nr1-how-to.git Copy Step 2 of 7 Change to the directory nr1-howto-add-time-picker-nerdlet: cd nr1-how-to/add-time-picker/nerdlets/nr1-howto-add-time-picker-nerdlet Copy Step 3 of 7 In your preferred text editor, open index.js. Step 4 of 7 Replace <ADD YOUR ACCOUNT ID> with your account id: Note Your account ID is available in the CLI wizard (see Before you begin). this.accountId = <ADD YOUR ACCOUNT ID>; Copy Step 5 of 7 Change to the add-time-picker directory: cd / nr1 - howto / add - time - picker; Copy Step 6 of 7 Execute these commands to update the UUID and serve the sample application: nr1 nerdpack:uuid -gf nr1 nerdpack:serve Copy Step 7 of 7 Once the sample application is successfully served, go to the local New Relic One homepage: https://one.newrelic.com/?nerdpacks=local and click Add Time Picker: Note If you don't see any launchers, click Your applications. After launching the Add Time Picker application, you see a dashboard that gives an overview of the transactions in your New Relic account: By default, the application shows your data within the last 60 minutes. If you toggle the time picker, it doesn't update the charts because the transaction overview application isn't connected to the New Relic One platform. It has no access to the data from the time picker. In the following sections, you'll add the time picker to the example application and add the time to the queries. Import the PlatformStateContext component The first step in adding the time picker is to import the PlatformStateContext component. Note If you need more details about the PlatformStateContext example that follows, see the APIs and components page Here's what the PlatformStateContext component does: Wraps all of the code within the return statement of the render method Makes a function call passing in the New Relic platform state Returns all of the code within our current return statement Complete these steps: Step 1 of 5 In a text editor, open /add-time-picker/nerdlets/nr1-howto-add-time-picker-nerdlet/index.js. Step 2 of 5 Add the PlatformStateContext component to the end of the import statement so it looks like this: import { Grid, GridItem, HeadingText, AreaChart, TableChart, PieChart, PlatformStateContext, } from 'nr1'; Copy Step 3 of 5 Just below the current return insert this code for the PlatformStateContext component: <PlatformStateContext.Consumer> {(platformState) => { return ( // ADD THE CURRENT RETURN CODE HERE ) }} </PlatformStateContext.Consumer> Copy Step 4 of 5 Move the current application code so it is under the return of the PlatformState function call. The return statement should now look like this: return ( <PlatformStateContext.Consumer> {(PlatformState) => { return ( <> <Grid className=\"primary-grid\" spacingType={[Grid.SPACING_TYPE.NONE, Grid.SPACING_TYPE.NONE]} > <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Transaction Overview </HeadingText> <TableChart fullWidth accountId={this.accountId} query={trxOverview} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Average Response Time </HeadingText> <AreaChart fullWidth accountId={this.accountId} query={avgResTime} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Response Code </HeadingText> <PieChart fullWidth accountId={this.accountId} query={responseCodes} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Transaction Errors </HeadingText> <PieChart fullWidth accountId={this.accountId} query={errCount} /> </main> </GridItem> </Grid> </> ); }} </PlatformStateContext.Consumer> ); Copy Step 5 of 5 Add a console.log statement to make sure you are seeing appropriate data. Insert the following code inside the PlatformState return statement just before the opening tag for the <Grid> component: /* Taking a peek at the PlatformState */ console.log(PlatformState); Copy After you complete these steps, your browser console displays something like this: Add the time to the queries In your console, you should see some data from the New Relic platform state. Now you are ready to add timeRange data to update the charts in the transaction overview application. This step requires you to import the timeRangeToNrql utility method from the New Relic One community library. Note You can get more details on the New Relic One community library from our GitHub repo. This helper method takes your PlatformState.timeRange duration data, formats it from milliseconds, and returns a formatted SINCE statement to add to your NRQL. Step 1 of 4 Import the timeRangeToNrql method by inserting this line of code below the other import sections: Note You don't need to include the AccountDropdown from the community import example. import { timeRangeToNrql } from '@newrelic/nr1-community'; Copy Step 2 of 4 Pass the PlatformState to the timeRangeToNrql helper, and save its output as a since statement for later use: const since = timeRangeToNrql(PlatformState); Copy Step 3 of 4 After creating the since variable, go through the code in the PlatformStateContext return statement and concatenate the since variable in each of the existing chart component queries. Here's a TableChart example: <TableChart fullWidth accountId={this.accountId} query={trxOverview + since} />; Copy Step 4 of 4 After you update all of the chart components, confirm that the final index.js file looks similar to this: Note This completed sample code is in your nerdlet final.js. import React from 'react'; import { PlatformStateContext, Grid, GridItem, HeadingText, AreaChart, TableChart, PieChart, } from 'nr1'; import { timeRangeToNrql } from '@newrelic/nr1-community'; export default class Nr1HowtoAddTimePicker extends React.Component { constructor(props) { super(props); this.accountId = 1; } render() { const avgResTime = `SELECT average(duration) FROM Transaction FACET appName TIMESERIES AUTO `; const trxOverview = `FROM Transaction SELECT count(*) as 'Transactions', apdex(duration) as 'apdex', percentile(duration, 99, 95) FACET appName `; const errCount = `FROM TransactionError SELECT count(*) as 'Transaction Errors' FACET error.message `; const responseCodes = `SELECT count(*) as 'Response Code' FROM Transaction FACET httpResponseCode `; return ( <PlatformStateContext.Consumer> {(PlatformState) => { /* Taking a peek at the PlatformState */ console.log(PlatformState); const since = timeRangeToNrql(PlatformState); console.log(since); return ( <> <Grid className=\"primary-grid\" spacingType={[Grid.SPACING_TYPE.NONE, Grid.SPACING_TYPE.NONE]} > <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Transaction Overview </HeadingText> <TableChart fullWidth accountId={this.accountId} query={trxOverview + since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Average Response Time </HeadingText> <AreaChart fullWidth accountId={this.accountId} query={avgResTime + since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Response Code </HeadingText> <PieChart fullWidth accountId={this.accountId} query={responseCodes + since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4} > Transaction Errors </HeadingText> <PieChart fullWidth accountId={this.accountId} query={errCount + since} /> </main> </GridItem> </Grid> </> ); }} </PlatformStateContext.Consumer> ); } } Copy Summary When you completed all the steps in this example, you successfully implemented the time picker in your application by importing the PlatformStateContext component and accessing its timePicker data object.",
      "type": "developer",
      "document_type": "page",
      "info": "Add a time picker to a sample application",
      "sections": [
        "Add a time picker",
        "Before you begin",
        "Note",
        "Prepare the time picker sample code",
        "Import the PlatformStateContext component",
        "Add the time to the queries",
        "Summary"
      ],
      "title": "Add a time picker",
      "popularity": 1,
      "external_id": "2602edf3077388ba4fded3a76208e5e0ae1be98f",
      "image": "https://developer.newrelic.com/static/aeaa23cefbcc326c64be764bfd26df69/b01d9/homepage-launcher.png",
      "url": "https://developer.newrelic.com/build-apps/add-time-picker-guide/",
      "published_at": "2020-08-13T01:50:35Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.02650183,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " the wizard just to get <em>your</em> account ID. For additional details, see <em>Set</em> <em>up</em> <em>your</em> <em>development</em> <em>environment</em>. Prepare the time picker sample code To get started, complete these steps to update the application UUID (unique ID) and run the sample application locally: Step 1 of 7 If you haven&#x27;t already done so"
      },
      "id": "5efa993d28ccbc91ff307dde"
    },
    {
      "body": "You can get Prometheus data flowing in New Relic with just a few simple steps. If you don't already have an account, you can sign up for New Relic right now. This page covers basic setup for the remote write integration, as well as a few common troubleshooting topics. For information on high availability integration, see the Prometheus High Availability resource. Set up the integration From the Prometheus remote write setup page, complete these steps. Enter a name for the Prometheus server you’re connecting to and your remote_write URL. The name you enter for the server will create an attribute on your data, and will be the name used to identify which Prometheus server you're connecting to. Add a new remote_write URL to your Prometheus YML file. A good place to add this information is under global_config in the file, at the same indentation level as the global section. The end result should look like this: remote_write: - url: https://metric-api.newrelic.com/prometheus/v1/write?X-License-Key=<YOUR_LICENSE_KEY>&prometheus_server=<YOUR_DATA_SOURCE_NAME> ​​​​If you are completing the remote write integration using Kubernetes (with or without Helm), you should instead add the remote write URL to your YAML operator file. The result should look something like this example. Restart your Prometheus server. View your data. Add Prometheus data Customize remote write behavior You may be interested in customizing the following parameters if you are writing to more than one account in New Relic or are connecting more than one Prometheus data source to the same account in New Relic. X-License Key Your account's license key is not an API key. The license key is used for authentication and to identify which account to write data into. Details: If you are configuring Prometheus to write into different New Relic accounts or sub-accounts you should use a different key on each remote write URL. prometheus_server URL parameter The prometheus_server parameter is a label or attribute used to add to stats that are written to NRDB. You should use this same label when configuring your Grafana data source to limit results to just those from a particular prometheus_server. Troubleshooting the integration If you receive an integration error message from New Relic or error messages in your Prometheus server logs after restarting your Prometheus server, there are several actions you can take to troubleshoot and get data flowing properly. Below are a few tips regarding common issues and error messages. Common errors and issues: Missing or incorrect characters in the remote write URL in the config file (for example the endpoint, license key, or prometheus_server name) or incorrect placement of the information in the file will result in the Prometheus server not starting, remote write not working properly, or errors appearing in Prometheus server logs. 400: bad request error. If no data appears with a bad request error, check your configuration file to confirm that the placement of the remote write information is correct, and that there are no missing or incorrect characters. 413: request entity too large. This means you have sent a request in which one or more fields, or the entire payload, has exceeded our limits. 429: rate limit error. This means you have hit a rate limit on the amount of data being sent at one time (for example cardinality or data points per minute). You can troubleshoot by reducing the amount of Prometheus or general metric data you are sending, or by requesting a rate-limit increase. You can investigate error messages in New Relic by doing either or both of the following: Run a query on the error message using NRQL then look at the Message field in UI to see a description of what went wrong. For example: SELECT * FROM NrIntegrationError WHERE newRelicFeature = 'Metrics' Investigate individual errors in time to see when and where they occur and any simultaneously occurring issues, and perform targeted troubleshooting based on what you find out. For example: SELECT count(*) FROM NrIntegrationError WHERE newRelicFeature = 'Metrics' TIMESERIES If you’ve validated that you can send data successfully but are unable to query it, you may be running into other kinds of limits, like the inspected count limit. This may manifest itself as an error message during the integration process that says: Unable to retrieve data for Prometheus data source <name>. Remove the integration To remove the integration, remove the configuration code snippet from your Prometheus YML file and restart the server. When you remove the integration, this stops new data from flowing, but will not purge or remove any historical data. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Integrations / Prometheus integrations / Install and configure",
      "info": "How to set up or remove your Prometheus remote write integration on New Relic. ",
      "nodeid": 38766,
      "sections": [
        "Prometheus integrations",
        "Get started",
        "Install and configure",
        "View and query data",
        "Troubleshooting",
        "Set up your Prometheus remote write integration",
        "Set up the integration",
        "Customize remote write behavior",
        "Troubleshooting the integration",
        "Remove the integration",
        "For more help"
      ],
      "title": "Set up your Prometheus remote write integration",
      "popularity": 1,
      "external_id": "45a644202d25d6e49b8d4ffd61a4512316f5a38b",
      "category_1": "Prometheus integrations",
      "category_2": "Install and configure",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/prometheus-integrations/install-configure/set-your-prometheus-remote-write-integration",
      "published_at": "2020-08-11T04:39:51Z",
      "updated_at": "2020-07-31T01:42:36Z",
      "category_0": "Integrations",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0049282894,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Set</em> <em>up</em> <em>your</em> Prometheus remote write integration",
        "sections": "<em>Set</em> <em>up</em> <em>your</em> Prometheus remote write integration",
        "info": "How to <em>set</em> <em>up</em> or remove <em>your</em> Prometheus remote write integration on New Relic. ",
        "body": " availability integration, see the Prometheus High Availability resource. <em>Set</em> <em>up</em> the integration From the Prometheus remote write setup page, complete these steps. Enter a name for the Prometheus server you’re connecting to and <em>your</em> remote_write URL. The name you enter for the server will create"
      },
      "id": "5f23770c28ccbc272332c204"
    }
  ],
  "/build-apps/map-pageviews-by-region": [
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Announcing the NEW Developer Site - built by developers, for developers Build on New Relic developer mweitzel July 8, 2020, 7:24am #1 Developers are the center of everything we do. You build solutions, solve problems everyday, and are the reason we exist as an organization. After a lot of discussion with fellow developers and hearing your needs, we’re excited to announce the new and improved developer site. This new site is a central resource for technical references, tutorials, and how-to guides on how to collect data from any source, visualize and instrument your data, and customize it in any way you want. Best of all? This site is open source. Submit ideas, feedback, or Pull Requests directly to our team. New Relic Developers 2020-07-07 13-38-28.png2938×3108 1.32 MB Find what you need With the new build of the website, we had a primary goal in mind: provide resources that help developers find answers to their questions. Whether you’re looking for immediate answers, that are out-of-the-box implementations, or looking to extend New Relic One, we’ve got you covered. Map page views by region in a custom app | New Relic Developers 2020-07-07 13-44-49.jpg2854×2262 745 KB You can expect to find: How-to guides Demo videos Code samples Community advice Contributor opportunities Query data with NRQL | New Relic Developers 2020-07-07 13-47-41.png2290×172 16.8 KB We’re proud to have built the developer site using open source software and platforms like Gatsby, React, and GraphQL. Every page invites you to submit an issue or contribute a change through Pull Request—and we encourage you to collaborate with us. Visit developer.newrelic.com to explore the available resources! 4 Likes Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Announcing the NEW Developer Site - built by developers, for developers"
      ],
      "title": "Announcing the NEW Developer Site - built by developers, for developers - Build on New Relic - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "b3ab53e258e8e8beb7ae5175ccc4709684e11fc0",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/c/6/c6ae187b5a7090dd526ef7995a55324c6bde4985_2_630x500.jpeg",
      "url": "https://discuss.newrelic.com/t/announcing-the-new-developer-site-built-by-developers-for-developers/108032",
      "published_at": "2020-08-11T00:52:49Z",
      "updated_at": "2020-07-11T23:36:57Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0716338,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Announcing</em> the NEW Developer Site - built <em>by</em> developers, for developers - Build on New Relic - New Relic Explorers Hub",
        "sections": "<em>Announcing</em> the NEW Developer Site - built <em>by</em> developers, for developers",
        "body": ", or looking to extend New Relic One, we’ve got you covered. <em>Map</em> <em>page</em> <em>views</em> by <em>region</em> in a <em>custom</em> <em>app</em> | New Relic Developers 2020-07-07 13-44-49.jpg2854×2262 745 KB You can expect to find: How-to guides Demo videos Code samples Community advice Contributor opportunities Query data with NRQL | New Relic"
      },
      "id": "5f05dc4664441f5804cd74a2"
    },
    {
      "body": "The Map page for New Relic Mobile gives an architectural view of your mobile app and the services it uses, to help find performance problems for the app or its services. This gives you a clear picture of your mobile app's relationships to other services and the influence of each service on the others. If one service fails, you can see at a glance which other services are affected. The Map page is not the same as the Geography page for New Relic Mobile. Geography shows your mobile users' experience as a world view with color-coded response times, network failure rates, active users, network requests per minute, or data transfer size. Viewing the Map page rpm.newrelic.com/mobile > (select an app) > Network > Map: The Map provides a visual representation of how performance issues by your mobile app and its services are related to each other. To view your mobile app and its related services as an architectural map: Go to rpm.newrelic.com/mobile > (select an app) > Network > Map. To view HTTP request details for a service, select its name. To view details for a New Relic app related to the service, select the service's name below the associated hostname. To view throughput details as a chart, select the icon or the cpm bar below the service's name. To view detailed metrics for a service, mouse over the throughput chart. Map drill-down details The Map page helps you quickly identify performance problems between your mobile app and its related services. Map details Comments Lines The map shows your mobile app and its list of services by relative throughput. Straight lines indicate a higher percentage of total throughput than dotted lines. Icons Related services include icons to identify them; for example, New Relic apps, webpages, tools, etc. Color The service's label is color coded to indicate its current health status: Green: Live Yellow: Warning Red: Critical Gray: Inactive Active sessions The Map lists the average number of active users for your mobile app for the selected versions and time period. To change these settings, use the Versions menu and time picker below the New Relic menu bar. Network error rate percentage The Map provides summary percentages for your mobile app and each related service. To view additional details for errors: Go to rpm.newrelic.com/mobile > (select an app) > Mobile > Errors. Average response time The title for each service includes this value. Calls per minute (cpm) This value appears below the service's name. Throughput This appears as a chart below the service's name. For more help Additional documentation resources include: HTTP requests page (detailed information about HTTP requests, response time, transfer size, average throughput, network failures, errors, and other data) Errors page for mobile apps (detailed information about HTTP errors and network failures by host APM Map page (additional details about New Relic APM's Map feature for web applications) If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Mobile / Mobile monitoring UI / Network pages",
      "info": "The Map page for New Relic Mobile provides an architectural view, to help find performance problems for the app or its services.",
      "nodeid": 3636,
      "sections": [
        "Mobile monitoring UI",
        "Mobile App pages",
        "Network pages",
        "Exceptions",
        "Usage pages",
        "Map page for mobile apps",
        "Viewing the Map page",
        "Map drill-down details",
        "For more help"
      ],
      "title": "Map page for mobile apps",
      "popularity": 1,
      "external_id": "c5f7c425bec38ba5a947314c671b6b0ce4d0bf74",
      "category_1": "Mobile monitoring UI",
      "category_2": "Network pages",
      "image": "https://docs.newrelic.com/sites/default/files/thumbnails/image/screen%20mobile%20map_0.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/mobile-monitoring-ui/network-pages/map-page-mobile-apps",
      "published_at": "2020-08-11T02:41:40Z",
      "updated_at": "2020-07-25T00:35:43Z",
      "category_0": "Mobile",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0018755242,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Map</em> <em>page</em> for mobile <em>apps</em>",
        "sections": "<em>Map</em> <em>page</em> for mobile <em>apps</em>",
        "info": "The <em>Map</em> <em>page</em> for New Relic Mobile provides <em>an</em> <em>architectural</em> <em>view</em>, to help find performance problems for the <em>app</em> or its services.",
        "category_2": "Network <em>pages</em>",
        "body": "The <em>Map</em> <em>page</em> for New Relic Mobile gives an architectural <em>view</em> of your mobile <em>app</em> and the services it uses, to help find performance problems for the <em>app</em> or its services. This gives you a clear picture of your mobile <em>app</em>&#x27;s relationships to other services and the influence of each service"
      },
      "id": "561c8e27827a6652fc000051"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Custom browser data to page views Support: Telemetry Data Platform (TDP) Agents .netagent eskomorko October 8, 2014, 12:20pm #1 Hi, We have a .NET application and I’m trying to get custom data to show up on Browser Page Views. I have configured the .NET agent like this: <browserMonitoring autoInstrument=\"true\"> <attributes enabled=\"true\"> <include>mc.*</include> </attributes> </browserMonitoring> And I use the .NET Api from Global.asax.cs like this: NewRelic.Api.Agent.NewRelic.AddCustomParameter(\"mc.url\", Request.Url.ToString()); NewRelic.Api.Agent.NewRelic.AddCustomParameter(\"mc.method\", Request.HttpMethod); NewRelic.Api.Agent.NewRelic.AddCustomParameter(\"mc.useragent\", Request.UserAgent); And I can see my custom data on the Transactions but not on the Page Views. If I look at the source of the page I’m viewing I can see the NREUM injected and it has an atts variable which contains obfuscated data. Some Page Views are associated with an appserver-drilldown and I can look at the data there, but not all the views have those associations. What I’m missing here? Tjd October 8, 2014, 11:41pm #2 If you are using agent version 3.6.x+ then your configuration above looks fine. Can you confirm that you are using a recent version of the agent? Are you trying to view these attributes in Insights? Sounds like they are showing up in transaction traces but not browser traces. Is that correct? Do your New Relic logs show any errors that might be relevant? eskomorko October 9, 2014, 5:59am #3 I’m using version 3.7.135.0. No not in Insights but in the New Relic Browser, or whatever it is called And you are correct, the data is shown on the transactions traces but not in the browser traces. There is nothing relevat on the logs. QuietWyatt October 9, 2014, 4:01pm #4 @eskomorko would you send us a permalink to the application where you are capturing custom attributes? I’d like to see if these attributes are being gathered or if any configuration problems show up. You can find permalinks in the bottom right-hand corner of every rpm.newrelic.com page. The links should look like this: http://goo.gl/5T9SV Only New Relic staff will be able to view this data. eskomorko October 13, 2014, 7:59am #5 This is the permalink to the application (the app itself is on my dev machine so it may show up that no data is gathered at the moment) https://rpm.newrelic.com/accounts/677577/applications/4973799?tw[end]=1413160500&tw[start]=1412555700 I noticed that the New Relic Browser is no longer in beta and apparently the Page Views don’t work like previously anymore, there is no “browser traces”, instead there is now “session traces” which looks neat. Is it possible to add custom data to these session traces, like the users name or such? QuietWyatt October 15, 2014, 10:39am #6 Thanks for the permalink @eskomorko. It looks like you have the Pro Browser trial enabled. The original Browser Monitoring product (still available with the Lite option in Settings) can display basic traces that show custom attributes you gather, as shown here. The new Session Traces don’t currently display custom attributes. You can still forward them from the browser to Insights, however. hross closed July 15, 2020, 10:16pm #7 Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Custom browser data to page views"
      ],
      "title": "Custom browser data to page views - Agents - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "a60dc756091c4dd23f358e190584d3beeeac764a",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/custom-browser-data-to-page-views/8993",
      "published_at": "2020-08-12T01:08:52Z",
      "updated_at": "2020-07-31T01:10:06Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0016123287,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Custom</em> browser data to <em>page</em> <em>views</em> - <em>Agents</em> - New Relic Explorers Hub",
        "sections": "<em>Custom</em> browser data to <em>page</em> <em>views</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us <em>Custom</em> browser data to <em>page</em> <em>views</em> Support: Telemetry Data Platform (TDP) Agents .netagent eskomorko October 8, 2014, 12:20pm #1 Hi"
      },
      "id": "57a96082e621f438e4b4d6ce"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Custom attributes on browser page views Support: Full-Stack Observability (FSO) Browser browser jpotu May 12, 2020, 2:54pm #1 Hi, I have set some custom attributes in APM and forwarded those to browser as mentioned here. https://docs.newrelic.com/docs/insights/insights-data-sources/custom-data/insert-custom-data-new-relic-browser-agent I could see them in the insights query. But I can’t find them on Browser page views. Do we need to set up anything else to show the custom attributes in page view. Thank you. philweber May 12, 2020, 3:12pm #2 Hi, @jpotu: I think Browser custom attributes are only visible in Insights. I don’t think it is possible to see them in the Browser UI. 2 Likes vishnu.tammi June 22, 2020, 7:34pm #3 Custom attributes are also visible in the browser UI, but only available under page views section. Open browser UI > click pageViews section > click filter and then select the required custom attribute to filter the page views accordingly. 1 Like Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Custom attributes on browser page views"
      ],
      "title": "Custom attributes on browser page views - Browser - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "7dce22a39b3d4e046b12f1abac2ccfffbcff9666",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/custom-attributes-on-browser-page-views/101998",
      "published_at": "2020-08-10T23:31:59Z",
      "updated_at": "2020-07-30T16:35:38Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0015765755,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Custom</em> <em>attributes</em> on browser <em>page</em> <em>views</em> - Browser - New Relic Explorers Hub",
        "sections": "<em>Custom</em> <em>attributes</em> on browser <em>page</em> <em>views</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us <em>Custom</em> attributes on browser <em>page</em> <em>views</em> Support: Full-Stack Observability (FSO) Browser browser jpotu May 12, 2020, 2:54pm #1 Hi, I"
      },
      "id": "5ebb3eb164441f9d423c9154"
    },
    {
      "body": "Products Pricing Solutions Help Center About Search icon Search the blog Monitor New Relic from your phone or tablet Learn more or download using the links below. New Relic app for iOS or Android    New Relic Insights app for iOS or Android    Log In Sign Up Search icon Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore Open Source Projects Training Get Help Community Forum Global Technical Support Expert Services About Our CustomersOver 15,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our BlogThe latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look PAGE-VIEW-MAP-SCREENSHOT-1 By Matthew McKenzie • Nov. 21st, 2019 • Matthew McKenzie is a Senior Content Editor at New Relic. He's a veteran writer, editor, content strategist and IT industry analyst with more than two decades of experience following the evolution of cloud computing and related technologies. View posts by Matthew McKenzie. The views expressed on this blog are those of the author and do not necessarily reflect the views of New Relic. Any solutions offered by the author are environment-specific and not part of the commercial solutions or support offered by New Relic. Please join us exclusively at the Explorer’s Hub (discuss.newrelic.com) for questions and support related to this blog post. This blog may contain links to content on third-party sites. By providing such links, New Relic does not adopt, guarantee, approve or endorse the information, views or products available on such sites. Interested in writing for New Relic Blog? Send us a pitch! Related Posts Create Grafana Dashboards with Prometheus Data Stored in New Relic By Gavin Johnson • Aug. 10th, 2020 • New Relic News and Products Grafana, New Relic One, Prometheus, Telemetry Data Platform New Relic and Grafana Labs CEOs Discuss Partnership to Bring Observability to All By Joel Worrall • Aug. 10th, 2020 • New Relic News and Products Grafana, New Relic One, observability, Telemetry Data Platform The Best Resources for Software Developers in 2020 By Manasa Gogineni • Aug. 7th, 2020 • Software Engineering developers Company Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal Connect Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "blog",
      "info": "",
      "sections": [
        "PAGE-VIEW-MAP-SCREENSHOT-1",
        "Related Posts",
        "Create Grafana Dashboards with Prometheus Data Stored in New Relic",
        "New Relic and Grafana Labs CEOs Discuss Partnership to Bring Observability to All",
        "The Best Resources for Software Developers in 2020",
        "Company",
        "Connect",
        "international"
      ],
      "title": "PAGE-VIEW-MAP-SCREENSHOT-1 - New Relic Blog",
      "popularity": 1,
      "external_id": "2a18d5aa32a96a235860b1ab205b4c465f63c2ce",
      "image": "https://newrelic-wpengine.netdna-ssl.com/wp-content/uploads/PAGE-VIEW-MAP-SCREENSHOT-1-300x166.png",
      "url": "https://blog.newrelic.com/product-news/most-popular-new-relic-one-apps-3/attachment/page-view-map-screenshot-1/",
      "published_at": "2020-08-11T10:39:08Z",
      "updated_at": "2020-08-11T10:39:08Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0014897331,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>PAGE</em>-<em>VIEW</em>-<em>MAP</em>-SCREENSHOT-1 - New Relic Blog",
        "sections": "<em>PAGE</em>-<em>VIEW</em>-<em>MAP</em>-SCREENSHOT-1",
        "body": " 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look <em>PAGE</em>-<em>VIEW</em>-<em>MAP</em>-SCREENSHOT-1 By Matthew McKenzie • Nov. 21st, 2019 • Matthew McKenzie is a Senior Content Editor at New Relic. He&#x27;s a veteran writer, editor, content strategist and IT industry analyst with more"
      },
      "id": "5f23d033196a67167e94f5f4"
    }
  ],
  "/explore-docs/nr1-plugins": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.4863343,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>Commands</em>",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " descriptions for the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>commands</em>. For more context, including usage and option details, click any individual <em>command</em> or the <em>command</em> category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.29451144,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference The <em>New</em> <em>Relic</em> <em>CLI</em> enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em> Find details for the <em>New</em> <em>Relic</em> <em>CLI</em> <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18140446,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": " that you&#x27;ve installed the <em>New</em> <em>Relic</em> <em>CLI</em>, it&#x27;s time to create your first profile. Profiles contain credentials and settings that you can apply to any <em>CLI</em> <em>command</em>, which is useful when switching between accounts. To create your first <em>CLI</em> profile, run the profiles add <em>command</em>. Note that you need"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.05715613,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "nr1 <em>cli</em>",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic One CLI common commands Here is a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from New Relic databases using a NRQL (New Relic query language) query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "title": "New Relic One CLI common commands",
      "popularity": 1,
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.01598174,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "info": "An overview of common <em>commands</em> you can use with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em> Here is a list of common <em>commands</em> to get you started with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 help Shows all nr1 <em>commands</em> or details about each <em>command</em>. nr1"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    }
  ],
  "/explore-docs/nr1-catalog": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.49069577,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>Commands</em>",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " on Deploying your <em>New</em> <em>Relic</em> <em>One</em> app. Get started nr1 help Shows all nr1 <em>commands</em> or details about each <em>command</em>. nr1 update Updates to the latest version of the <em>CLI</em>. nr1 create Creates a <em>new</em> component from a template (Nerdpack, Nerdlet, launcher, or <em>catalog</em>). nr1 profiles Manages the profiles you use to run"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.2956028,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference The <em>New</em> <em>Relic</em> <em>CLI</em> enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em> Find details for the <em>New</em> <em>Relic</em> <em>CLI</em> <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18021941,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": " that you&#x27;ve installed the <em>New</em> <em>Relic</em> <em>CLI</em>, it&#x27;s time to create your first profile. Profiles contain credentials and settings that you can apply to any <em>CLI</em> <em>command</em>, which is useful when switching between accounts. To create your first <em>CLI</em> profile, run the profiles add <em>command</em>. Note that you need"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.09411753,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "NR <em>One</em> <em>Catalog</em>",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic One CLI common commands Here is a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from New Relic databases using a NRQL (New Relic query language) query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "title": "New Relic One CLI common commands",
      "popularity": 1,
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.017271575,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "info": "An overview of common <em>commands</em> you can use with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em> Here is a list of common <em>commands</em> to get you started with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 help Shows all nr1 <em>commands</em> or details about each <em>command</em>. nr1"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    }
  ],
  "/explore-docs/nr1-config": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.472973,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>Commands</em>",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " descriptions for the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>commands</em>. For more context, including usage and option details, click any individual <em>command</em> or the <em>command</em> category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.2874415,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference The <em>New</em> <em>Relic</em> <em>CLI</em> enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em> Find details for the <em>New</em> <em>Relic</em> <em>CLI</em> <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18215537,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and <em>configuration</em> to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": " that you&#x27;ve installed the <em>New</em> <em>Relic</em> <em>CLI</em>, it&#x27;s time to create your first profile. Profiles contain credentials and settings that you can apply to any <em>CLI</em> <em>command</em>, which is useful when switching between accounts. To create your first <em>CLI</em> profile, run the profiles add <em>command</em>. Note that you need"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.055365354,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "nr1 <em>cli</em>",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic One CLI common commands Here is a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from New Relic databases using a NRQL (New Relic query language) query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "title": "New Relic One CLI common commands",
      "popularity": 1,
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.015956009,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "info": "An overview of common <em>commands</em> you can use with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em> Here is a list of common <em>commands</em> to get you started with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 help Shows all nr1 <em>commands</em> or details about each <em>command</em>. nr1"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    }
  ],
  "/explore-docs/nr1-nerdpack": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.6077676,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>Commands</em>",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " on Deploying your <em>New</em> <em>Relic</em> <em>One</em> app. Get started nr1 help Shows all nr1 <em>commands</em> or details about each <em>command</em>. nr1 update Updates to the latest version of the <em>CLI</em>. nr1 create Creates a <em>new</em> component from a template (<em>Nerdpack</em>, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.2916764,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference The <em>New</em> <em>Relic</em> <em>CLI</em> enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em> Find details for the <em>New</em> <em>Relic</em> <em>CLI</em> <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18142736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": " that you&#x27;ve installed the <em>New</em> <em>Relic</em> <em>CLI</em>, it&#x27;s time to create your first profile. Profiles contain credentials and settings that you can apply to any <em>CLI</em> <em>command</em>, which is useful when switching between accounts. To create your first <em>CLI</em> profile, run the profiles add <em>command</em>. Note that you need"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "New Relic One CLI subscription commands To manage your Nerdpack subscriptions, use the commands below. You can click any command to see its usage options and additional details about the command. Command Description nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Command details nr1 subscription:set Subscribe to a Nerdpack Subscribes your account to a specific Nerdpack and channel. This command can be run with a Nerdpack UUID or within a specific Nerdpack folder. By default, the command uses the Nerdpack ID in package.json and subscribes to the STABLE channel. An account can only be subscribed to one Nerdpack and channel at a time. Usage $ nr1 subscription:set Options -i, --nerdpack-id=NERDPACK_ID Specifies the Nerdpack to subscribe to. By default, the command will use the one in package.json. -c, --channel=DEV/BETA/STABLE Specifies the channel to subscribe to. [default: STABLE] --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. Aliases $ nr1 nerdpack:subscribe nr1 subscription:list See your subscription Lists all the Nerdpacks your account is subscribed to. Your account is linked to your API key. Usage $ nr1 subscription:list Options --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 subscription:unset Unsubscribe from a Nerdpack Unsubscribes your account from a specific Nerdpack. When this command is executed within a Nerdpack folder, the Nerdpack ID from package.json is used by default. Usage $ nr1 subscription:unset Options -i, --nerdpack-id=NERDPACK_ID Specifies the Nerdpack to subscribe to. By default, the command will use the one in package.json. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. Aliases $ nr1 nerdpack:unsubscribe $ nr1 subscription:delete $ nr1 subscription:remove $ nr1 subscription:rm",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI commands you can use to manage your Nerdpack subscriptions.",
      "sections": [
        "New Relic One CLI subscription commands",
        "Command details",
        "nr1 subscription:set",
        "Subscribe to a Nerdpack",
        "Usage",
        "Options",
        "Aliases",
        "nr1 subscription:list",
        "See your subscription",
        "nr1 subscription:unset",
        "Unsubscribe from a Nerdpack"
      ],
      "title": "New Relic One CLI subscription commands",
      "popularity": 1,
      "external_id": "12d2e1b06dede5b1272527f95a14518010aecc58",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-subscription/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-06T01:44:54Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.10332608,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> subscription <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> subscription <em>commands</em>",
        "info": "An overview of the <em>CLI</em> <em>commands</em> you can use to manage your <em>Nerdpack</em> subscriptions.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> subscription <em>commands</em> To manage your <em>Nerdpack</em> subscriptions, use the <em>commands</em> below. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 subscription:set Subscribes your account to a <em>Nerdpack</em> and channel. nr1"
      },
      "id": "5f2b6096e7b9d225ebc9de6f"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.090515696,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "nr1 <em>cli</em>",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    }
  ],
  "/automate-workflows/get-started-new-relic-cli": [
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 8.951381,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "info": "The command line tools for performing tasks against <em>New</em> <em>Relic</em> <em>APIs</em>",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": " of the <em>New</em> <em>Relic</em> <em>CLI</em> newrelic documentation - Generate <em>CLI</em> documentation newrelic <em>entity</em> - Interact with <em>New</em> <em>Relic</em> entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph <em>API</em> newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Quickly tag a set of resources 5 min Tags help you group, search, filter, and focus the data about your entities, which can be anything from applications to hosts to services. Tagging entities using the New Relic CLI is a good candidate for automation. In this 5-minute guide, you are going to use the New Relic CLI to add multiple tags to one of your entities. Before you begin For this guide you need your New Relic personal API Key: Create it at the Account settings screen of your New Relic account. Step 1 of 6 Install the New Relic CLI You can download the New Relic CLI via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 6 Create your New Relic CLI profile New Relic CLI profiles contain credentials and settings that you can apply to any CLI command. To create your first CLI profile, run the profiles add command. Don't forget to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey API_KEY -r us # Set the profile as default newrelic profiles default -n tutorial Copy Step 3 of 6 Search for an entity Your New Relic account may have hundreds of entities: Have a quick look by opening the Entity explorer. In the terminal, run entity search to retrieve a list of entities from your account as JSON. In the example, you're searching for all entities with \"test\" in their name. # Change the `name` to match any of your existing entities newrelic entity search --name \"test\" Copy Step 4 of 6 If there are matching entities in your account, the query yields data in JSON format, similar to this workload example. Select an entity from the results and look for its guid value; the guid is the unique identifier of the entity. Write it down. { \"accountId\": 123456789, \"domain\": \"NR1\", \"entityType\": \"WORKLOAD_ENTITY\", \"guid\": \"F7B7AE59FDED4204B846FB08423DB18E\", \"name\": \"Test workload\", \"reporting\": true, \"type\": \"WORKLOAD\" }, Copy Step 5 of 6 Add tags and tag lists to your entity With your entity guid, you can add tags right away. You can do so by invoking the entities tags create command. What if you want to add multiple tags? You can use tag sets for that: While tags are key-value pairs separated by colons, tag sets are comma-separated lists of tags. For example: tag1:value1,tag2:value2 Note Adding tags is an asynchronous operation: it could take a little while for the tags to get created. # Adding a single tag newrelic entity tags create --guid GUID --tag key:value # Adding multiple tags newrelic entity tags create --guid GUID --tag tag1:test,tag2:test Copy Step 6 of 6 Check that the tags are there To make sure that the tags have been added to your entities, retrieve them using the entity tags get command. All tags associated with your entity are retrieved as a JSON array. newrelic entity tags get --guid GUID Tip Tags can be deleted at any time by invoking the entity tags delete command followed by the same arguments you used to create them. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Next steps Have a look at all the New Relic CLI commands. For example, you could create a New Relic workflow using workload create. If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Add tags to applications you instrument for easier filtering and organization.",
      "sections": [
        "Quickly tag a set of resources",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Search for an entity",
        "Add tags and tag lists to your entity",
        "Note",
        "Check that the tags are there",
        "Tip",
        "Next steps"
      ],
      "title": "Quickly tag a set of resources",
      "popularity": 1,
      "external_id": "c7c374812f8295e409a9b06d552de51ceefc666b",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/5-mins-tag-resources/",
      "published_at": "2020-08-13T01:45:07Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.42114788,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Quickly <em>tag</em> a set of resources",
        "sections": "Install the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Add <em>tags</em> to applications you instrument for easier filtering and organization.",
        "body": " be deleted at any time by invoking the <em>entity</em> <em>tags</em> delete command followed by the same arguments you used to create them. [ { <em>Key</em>: &#x27;<em>tag</em>1&#x27;, Values: [&#x27;true&#x27;], }, { <em>Key</em>: &#x27;<em>tag</em>2&#x27;, Values: [&#x27;test&#x27;], }, { <em>Key</em>: &#x27;<em>tag</em>3&#x27;, Values: [&#x27;testing&#x27;], }, &#x2F;&#x2F; ... ]; Copy Next steps Have a look at all the <em>New</em> <em>Relic</em> <em>CLI</em>"
      },
      "id": "5efa999d64441fa74a5f7e2d"
    },
    {
      "body": "Automate workflows When building today's complex systems, you want an easy, predictable way to verify that your configuration is defined as expected. This concept, Observability as Code, is brought to life through a collection of New Relic-supported orchestration tools, including Terraform, AWS CloudFormation, and a command-line interface. These tools enable you to integrate New Relic into your existing workflows, easing adoption, accelerating deployment, and returning focus to your main job — getting stuff done. In addition to our Terraform and CLI guides below, find more automation solutions in our Developer Toolkit. Guides to automate workflows 5 min Quickly tag resources Add tags to apps for easy filtering 20 min Set up New Relic using the Kubernetes operator Learn how to provision New Relic resources using the Kubernetes operator 20 min Automate common tasks Use the New Relic CLI to tag apps and create deployment markers 20 min Set up New Relic using Terraform Learn how to provision New Relic resources using Terraform",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Automate workflows",
        "Guides to automate workflows",
        "Quickly tag resources",
        "Set up New Relic using the Kubernetes operator",
        "Automate common tasks",
        "Set up New Relic using Terraform"
      ],
      "title": "Automate workflows",
      "popularity": 1,
      "external_id": "d4f408f077ed950dc359ad44829e9cfbd2ca4871",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-12T01:49:29Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.35518292,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Set up <em>New</em> <em>Relic</em> using the Kubernetes operator",
        "body": " solutions in our Developer Toolkit. Guides to automate workflows 5 min Quickly <em>tag</em> resources Add <em>tags</em> to apps for easy filtering 20 min Set up <em>New</em> <em>Relic</em> using the Kubernetes operator Learn how to provision <em>New</em> <em>Relic</em> resources using the Kubernetes operator 20 min Automate common tasks Use the <em>New</em> <em>Relic</em> <em>CLI</em> to <em>tag</em> apps and create <em>deployment</em> <em>markers</em> 20 min Set up <em>New</em> <em>Relic</em> using Terraform Learn how to provision <em>New</em> <em>Relic</em> resources using Terraform"
      },
      "id": "5efa999c196a67dfb4766445"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic CLI - Intro Video Build on New Relic Developer Toolkit cli developertoolkit jthurman March 23, 2020, 5:20pm #1 The Developer Toolkit team has been working over the last few months on improving the New Relic orchestration story. With our SRE and Ops folks in mind, we’ve created a scriptable CLI for managing Tags, Deployment Markers, Entity searching, and well any NerdGraph query you want! Initial Features Entity searching, including filters for tag/type/domain/etc Entity Tag CRUD (YES!) APM Deployment marker CRUD NerdGraph query execution including variable support. Public Homebrew installation! (Linux and Windows binaries are also available) brew install newrelic-cli Public Docker image docker pull newrelic/cli NR1 CLI profile and configuration compatible - If you’ve created a Nerdpack, you just need to install and go! Completely created and run as an Open Source project on GitHub (here) 5 Likes Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "New Relic CLI - Intro Video",
        "Initial Features"
      ],
      "title": "New Relic CLI - Intro Video - Developer Toolkit - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "7858df943c22c3d5faa6fb8f225099363c8d78d4",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/new-relic-cli-intro-video/97395",
      "published_at": "2020-08-11T16:57:08Z",
      "updated_at": "2020-07-19T07:48:27Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.26072323,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> - Intro Video - Developer Toolkit - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> - Intro Video",
        "body": " The Developer Toolkit team has been working over the last few months on improving the <em>New</em> <em>Relic</em> orchestration story. With our SRE and Ops folks in mind, we’ve created a scriptable <em>CLI</em> for managing <em>Tags</em>, <em>Deployment</em> <em>Markers</em>, <em>Entity</em> searching, and well any NerdGraph query you want! Initial Features <em>Entity</em>"
      },
      "id": "5e738c0b64441f1e5867e577"
    },
    {
      "body": "To query data with the New Relic NerdGraph, we use the concept of an entity. An entity provides unified access to all the things you monitor with New Relic, including but not limited to: Applications monitored by New Relic (APM) Cloud integrations, services, and hosts monitored by New Relic (Infrastructure monitoring) To view entity details in the New Relic UI, use the entity explorer in New Relic One. Entity definition Each entity has similar traits: A unique entity GUID identifies it. It exists over a span of time, even if it is a short period. It provides a useful entry point for exploring data about specific metrics and events, or for exploring data related to other entities. Requirements You must have a user-specific API key to run NerdGraph queries. If you do not already have one: Generate a new API key in the NerdGraph GraphiQL explorer. OR Create a new API key from your New Relic account settings. Search for entities New Relic searches for entities by their attributes: primarily their name, but also by type of entity and other values. The search returns basic data about entities matching the search criteria. Then, from the basic query results, you can query a specific entity by its GUID. For example, to use NerdGraph to query one or more entities, you can search by attribute or GUID. Search by attribute Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Run a basic query to find entities that match your search criteria. For example: query($query: String! ) { actor { entitySearch(query: $query) { count results { entities { name entityType guid } } } } } Add the following variables to the Query variables section in NerdGraph: {\"query\": \"name LIKE 'nerd-graph' AND type IN ('APPLICATION')\"} Search by entity GUID Use a specific entity's GUID to query deeper into its related data. For example: query($guids: EntityGuid! ) { actor { entities(guids: $guids) { entityType name } } } Add the following variables to the Query variables section: {\"guids\": \"entity-guid-here\"} Example queries Queries are requests that are intended to only fetch data (no side effects). NerdGraph queries are not static, meaning that you can ask for more or less data depending on your needs. For each query, you can specify exactly what data you want to retrieve, as long as it is supported by the schema. Entities in NerdGraph rely on GraphQL interfaces, a concept that allows objects to share common fields. Interfaces are used to provide data for specific entity types, as you will see in many of these NerdGraph query examples. Get alert information on alertable entities in search results You can fetch the alert severity of any entity that can be monitored by New Relic Alerts. This NerdGraph query will tell you if New Relic is currently receiving data from your application (using the reporting field). If the entity is an alertable type, results will include the alert severity of the entity. If the results include entities that are not alertable, they will not include the AlertableEntityOutline fields. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { reporting ... on AlertableEntityOutline { alertSeverity } } } } } } Get summary data on APM entities in search results Different entity types have specific data associated with them. The following NerdGraph query example shows a selection of fields available for APM application entities; more summary data can be requested in your query. If entities of other types are returned in your search results, they will not include these fields. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { name ... on ApmApplicationEntityOutline { apmSummary { errorRate apdexScore webResponseTimeAverage responseTimeAverage } } } } } } } Get data specific to each entity type in search results Different entity types have specific data associated with them. This NerdGraph query example requests the name for all entities regardless of which entity type they are, as well as the error rate for APM, Browser, and Mobile entities. If entities of other types are returned in your search results, they will not include an error rate field. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { name ... on ApmApplicationEntityOutline { apmSummary { errorRate } } ... on BrowserApplicationEntityOutline { browserSummary { jsErrorRate } } ... on MobileApplicationEntityOutline { mobileSummary { httpErrorRate } } } } } } } Get all tags for each entity in search results This NerdGraph query example fetches tags for every entity returned in the search results. For more information, see the NerdGraph GraphiQL tagging tutorial. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { name tags { key values } } } } } } Get the nextCursor for paginated search results The NerdGraph GraphiQL explorer paginates results from an entity search. If your search criteria yields more than the API limit and you want to view the rest of the results, you can request nextCursor in your initial request and use its value in another query to retrieve the following \"page\" of results. If there are no more results, nextCursor will be null. { actor { entitySearch(query: \"name like 'nerd-graph'\") { results { nextCursor entities { name } } } } } Use the value of nextCursor in your next search: { actor { entitySearch(query: \"name like 'nerd-graph'\") { results(cursor: \"next_cursor_value\") { nextCursor entities { name } } } } } For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / APIs / NerdGraph / Examples",
      "info": "Use New Relic's NerdGraph (our GraphQL API) to query your monitored entities (applications, hosts, etc.)",
      "nodeid": 19141,
      "sections": [
        "NerdGraph",
        "Get started",
        "Examples",
        "NerdGraph entities API tutorial",
        "Entity definition",
        "Requirements",
        "Search for entities",
        "Search by attribute",
        "Search by entity GUID",
        "Example queries",
        "For more help"
      ],
      "title": "NerdGraph entities API tutorial",
      "popularity": 1,
      "external_id": "6dad137791a70630e57cb10aa5f574776c26613f",
      "category_1": "NerdGraph",
      "category_2": "Examples",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-entities-api-tutorial",
      "published_at": "2020-08-11T01:39:48Z",
      "updated_at": "2020-08-11T01:39:48Z",
      "category_0": "APIs",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.24235949,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>entities</em> <em>API</em> tutorial",
        "sections": "NerdGraph <em>entities</em> <em>API</em> tutorial",
        "info": "Use <em>New</em> <em>Relic&#x27;s</em> NerdGraph (our GraphQL <em>API</em>) to query your monitored <em>entities</em> (applications, hosts, etc.)",
        "category_0": "<em>APIs</em>",
        "body": "To query data with the <em>New</em> <em>Relic</em> NerdGraph, we use the concept of an <em>entity</em>. An <em>entity</em> provides unified access to all the things you monitor with <em>New</em> <em>Relic</em>, including but not limited to: Applications monitored by <em>New</em> <em>Relic</em> (APM) Cloud integrations, services, and hosts monitored by <em>New</em> <em>Relic</em>"
      },
      "id": "5d8fd87f196a67bba0756f3f"
    }
  ],
  "/build-apps/add-time-picker-guide": [
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How to add the time picker to NRQL queries Build on New Relic Nerdpacks nerdpack jsius February 12, 2020, 6:43pm #1 Add Time Picker to Queries Difficulty Level: Beginner Products: APM Getting Started For this how-to example, we will be adding access to the time picker in New Relic One to our transaction overview application and adding the selected time to the queries used in the application’s chart components. To get started, we will clone the example applications from our how-to GitHub repo: Next, we will use the NR1 CLI to update the application UUID and run our application locally. In the terminal, let’s change into the /nr1-howto/add-time-picker directory. cd /nr1-howto/add-time-picker Before moving forward, let’s make sure we are getting data from the right New Relic account. If you open the sample code in your preferred text editor, open the /add-time-picker/nerdlets/nr1-howto-add-time-picker-nerdlet/index.js. In your text editor, you want to update the line below to include your account id. this.accountId = <REPLACE ME WITH YOUR ACCOUNT ID>; Note: Your account id is viewable in the profile selection menu of the developer center, where you downloaded in the nr1 CLI. Now, we want to update the UUID and serve our application. nr1 nerdpack:uuid -gf nr1 nerdpack:serve Once our app is successfully served, in your terminal, you’ll be provided with a URL to access New Relic One and see your running application. New Relic One link: https://one.newrelic.com/?nerdpacks=local Now on the New Relic homepage, you should have a new launcher to the how-to example. homepage-launcher.png2564×680 185 KB After launching the ‘Add Time Picker’ application, you will see a dashboard that gives an overview of the transactions in your New Relic account. add-timepicker.png2776×1949 502 KB Adding Time Picker When looking at the example application, you get an overview of the transaction telemetry data showing your account’s transaction by application, average response time, HTTP response codes, and transaction errors. By default, the application is showing your data within the last 60 minutes, but if there were a change made to the time in the time picker, you would notice the charts do not update. Currently, the transaction overview app isn’t connected to the New Relic One platform and has no access to the data from the time picker. In the steps going forward, we will add the time picker to our example application and add the time to our queries. Adding the PlatformStateContext Component The first step in adding the time picker is to import the PlatformStateContext Component. We can find the component and details on how to import it on the APIs and components page on https://developer.newrelic.com. Once we’ve had a chance to visit the developer website and review the PlatformStateComponent, the first step is to import the component into our application’s index.js file. Add the following import statement to your /nerdlets/nr1-howto-add-time-picker-nerdlet index.js. import { PlatformStateContext } from ‘nr1’; The PlatformStateContext component will wrap all of the code within the return statement of the render method, make a function call passing in the New Relic platform state and return all of the conde within our current return statement. It sounds like a lot, but it’s not that bad. Promise We will start by wrapping all the code within the current return with the PlatformStateContext component. <PlatformStateContext.Consumer> {(platformState) => { return ( // ADD THE CURRENT RETURN CODE HERE ) }} </PlatformStateContext.Consumer> Making sure to add the current application code as the return of the PlatformState function call. Our return statement should now look like this: return ( <PlatformStateContext.Consumer> {(PlatformState) => { return ( <> <Grid className=\"primary-grid\" spacingType={[Grid.SPACING_TYPE.NONE, Grid.SPACING_TYPE.NONE]} > <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Overview </HeadingText> <TableChart fullWidth accountId={this.accountId} query={trxOverview} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Average Response Time </HeadingText> <AreaChart fullWidth accountId={this.accountId} query={avgResTime} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Response Code </HeadingText> <PieChart fullWidth accountId={this.accountId} query={responseCodes} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Errors </HeadingText> <PieChart fullWidth accountId={this.accountId} query={errCount} /> </main> </GridItem> </Grid> </> ); }} </PlatformStateContext.Consumer> ); Now that we have our platform state passed into our application, let’s take a quick look at the data provided. We’ll add a console.log statement to the PlatformStateContext return and take a look at our browser console. Add the following code the PlatformState return statement just before the opening tag for the <Grid> component. /* Taking a peek at the PlatformState */ console.log(PlatformState); If you take a look at your browser console, you should see something similar to below: console.png1251×200 16.1 KB Adding time data to your queries In your console, you should see some data from the New Relic platform state, but now we want to take advantage of the timeRange data to update the charts in our Transaction overview app. We’ll start by importing another component. We’re going to use the timeRangeToNrql utility method from the nr1 community library. You can get more details on the nr1 community library from our GitHub repo. Import the timeRangeToNrql method using the line of code below. import { timeRangeToNrql } from '@newrelic/nr1-community'; We will pass the PlatformState to the timeRangeToNrql helper and save its output as our since statement for later use. const since = timeRangeToNrql(PlatformState); console.log(since); If you were to look in your console, you’d see the helper method takes your PlatformState.timeRage duration data, formats it from milliseconds, and returns a formatted SINCE statement to add to your NRQL. After creating the since variable, go through the code in the PlatformStateContext return statement and concatenate the since variable to the existing chart component queries. Your charts to should look similar to the TableChart below: <TableChart fullWidth accountId={this.accountId} query={trxOverview+since} /> After we’ve updated all of the chart components, the final index.js file should have code similar to the code below. This completed sample code is in your nerdlet final.js. import React from 'react'; import { PlatformStateContext, Grid, GridItem, HeadingText, AreaChart, TableChart, PieChart } from 'nr1'; import { timeRangeToNrql } from '@newrelic/nr1-community'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class Nr1HowtoAddTimePicker extends React.Component { constructor(props){ super(props) this.accountId = 1; } render() { const avgResTime = `SELECT average(duration) FROM Transaction FACET appName TIMESERIES AUTO `; const trxOverview = `FROM Transaction SELECT count(*) as 'Transactions', apdex(duration) as 'apdex', percentile(duration, 99, 95) FACET appName `; const errCount = `FROM TransactionError SELECT count(*) as 'Transaction Errors' FACET error.message `; const responseCodes = `SELECT count(*) as 'Response Code' FROM Transaction FACET httpResponseCode `; return ( <PlatformStateContext.Consumer> {(PlatformState) => { /* Taking a peek at the PlatformState */ console.log(PlatformState) const since = timeRangeToNrql(PlatformState); console.log(since); return ( <> <Grid className=\"primary-grid\" spacingType={[Grid.SPACING_TYPE.NONE, Grid.SPACING_TYPE.NONE]} > <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Overview </HeadingText> <TableChart fullWidth accountId={this.accountId} query={trxOverview+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Average Response Time </HeadingText> <AreaChart fullWidth accountId={this.accountId} query={avgResTime+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Response Code </HeadingText> <PieChart fullWidth accountId={this.accountId} query={responseCodes+since} /> </main> </GridItem> <GridItem className=\"primary-content-container\" columnSpan={6}> <main className=\"primary-content full-height\"> <HeadingText spacingType={[HeadingText.SPACING_TYPE.MEDIUM]} type={HeadingText.TYPE.HEADING_4}> Transaction Errors </HeadingText> <PieChart fullWidth accountId={this.accountId} query={errCount+since} /> </main> </GridItem> </Grid> </> ); }} </PlatformStateContext.Consumer> ); } } How to add the time picker recap Wrapping up this how-to example, if you’ve made it this far, you’ve successfully implemented the time picker into your application, by importing the PlatformStateContext component and accessing its timePicker data object. To continue your learning, take a look at our self-paced workshop on Github. 2 Likes philweber February 10, 2020, 8:31pm #2 Hi, @jsius. Question: You are adding a SINCE clause to your NRQL queries, but what if the user selects the Custom option from the time picker, and specifies both a start and end time: Then a simple SINCE clause won’t work, will it? jsius February 10, 2020, 8:48pm #3 Hi @philweber, by using the timeRangeToNrql component it’s going to properly format the duration and provide the correct since statement even if the user specifies a start and end time. 3 Likes scarpenter February 12, 2020, 7:12pm #4 Thanks for sharing this Jemiah! Super helpful code examples. Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "How to add the time picker to NRQL queries",
        "Add Time Picker to Queries",
        "Getting Started",
        "Adding Time Picker",
        "Adding the PlatformStateContext Component",
        "Adding time data to your queries",
        "How to add the time picker recap"
      ],
      "title": "How to add the time picker to NRQL queries - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "a7882595b027a01d87de8ac86f312c4714fb086a",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/7/e/7ee33783312bc737108d4e3480a57c407512626d_2_690x484.png",
      "url": "https://discuss.newrelic.com/t/how-to-add-the-time-picker-to-nrql-queries/94268",
      "published_at": "2020-08-13T01:51:41Z",
      "updated_at": "2020-07-22T01:55:38Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.6087457,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How to <em>add</em> the <em>time</em> <em>picker</em> to NRQL queries - Nerdpacks - New Relic Explorers Hub",
        "sections": "How to <em>add</em> the <em>time</em> <em>picker</em> to NRQL queries",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How to <em>add</em> the <em>time</em> <em>picker</em> to NRQL queries Build on New Relic Nerdpacks nerdpack jsius February 12, 2020, 6:43pm #1 <em>Add</em> <em>Time</em> <em>Picker</em>"
      },
      "id": "5e452dc164441fed456d5671"
    },
    {
      "body": "Build apps You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps 15 min Create a \"Hello, World!\" application Build a \"Hello, World!\" app and publish it to New Relic One 20 min Set up your development environment Prepare to build apps and contribute to this site 20 min Publish and deploy apps Start sharing the New Relic apps you build 45 min Add, query, and mutate data using NerdStorage NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. 20 minutes Add the NerdGraphQuery component to an application The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application 20 min Add a time picker to your app Add a time picker to a sample application 30 min Add a table to your app Add a table to your New Relic One app 30 min Create a custom map view Build an app to show page view data on a map",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Create a \"Hello, World!\" application",
        "Set up your development environment",
        "Publish and deploy apps",
        "Add, query, and mutate data using NerdStorage",
        "Add the NerdGraphQuery component to an application",
        "Add a time picker to your app",
        "Add a table to your app",
        "Create a custom map view"
      ],
      "title": "Build apps",
      "popularity": 1,
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "published_at": "2020-08-13T01:45:07Z",
      "updated_at": "2020-08-12T01:57:08Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18721867,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build <em>apps</em>",
        "sections": "<em>Add</em> <em>a</em> <em>time</em> <em>picker</em> to your <em>app</em>",
        "body": " to modify, save, and retrieve documents from one session to the next. 20 minutes <em>Add</em> the NerdGraphQuery component to an application The NerdGraphQuery component allows you to query data from your account and <em>add</em> it to a dropdown menu in an application 20 min <em>Add</em> a <em>time</em> <em>picker</em> to your app <em>Add</em> a <em>time</em>"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "body": "Observability for every developer Whether you're new to New Relic or already a data nerd, you can start building right now. For free. Create an account and start using New Relic One as your foundation to instrument everything. Ready to dive even deeper? Create custom observability apps to better visualize your data to answer your engineering problems. Let's start building. Get coding Create a free account 5 min Create custom events Define, visualize, and get alerts on the data you want using custom events Start the guide 7 min Add tags to apps Add tags to applications you instrument for easier filtering and organization Start the guide 12 min Build a Hello, World! app Build a Hello, World! app and publish it to your local New Relic One Catalog Start the guide Get inspired 30 min Add a table to your app Add a table to your New Relic One app 15 min Collect data - any source APIs, agents, OS emitters - get any data 20 min Automate common tasks Use the New Relic CLI to tag apps and create deployment markers 30 min Create a custom map view Build an app to show page view data on a map 20 min Add a time picker to your app Add a time picker to a sample application   Add custom attributes Use custom attributes for deeper analysis Show 18 more guides Looking for more inspiration? Check out the open source projects built by the New Relic community. New Relic developer champions New Relic Champions are solving big problems using New Relic as their linchpin and are recognized as experts and leaders in the New Relic technical community. Nominate a developer champion Learn more about developer champions New Relic Podcasts We like to talk, especially to developers about developer things. Join us for conversations on open source, observability, software design and industry news. Listen",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Observability for every developer",
        "Get coding",
        "Create custom events",
        "Add tags to apps",
        "Build a Hello, World! app",
        "Get inspired",
        "Add a table to your app",
        "Collect data - any source",
        "Automate common tasks",
        "Create a custom map view",
        "Add a time picker to your app",
        "Add custom attributes",
        "New Relic developer champions",
        "New Relic Podcasts"
      ],
      "title": "New Relic Developers",
      "popularity": 1,
      "external_id": "214583cf664ff2645436a1810be3da7a5ab76fab",
      "image": "https://developer.newrelic.com/static/dev-champion-badge-0d8ad9c2e9bbfb32349ac4939de1151c.png",
      "url": "https://developer.newrelic.com/",
      "published_at": "2020-08-13T01:44:01Z",
      "updated_at": "2020-08-04T01:37:15Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.12374799,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Add</em> <em>a</em> <em>time</em> <em>picker</em> to your <em>app</em>",
        "body": ", OS emitters - get any data 20 min Automate common tasks Use the New Relic CLI to tag apps and create deployment markers 30 min Create a custom map view Build an app to show page view data on a map 20 min <em>Add</em> a <em>time</em> <em>picker</em> to your app <em>Add</em> a <em>time</em> <em>picker</em> to a sample application   <em>Add</em> custom attributes"
      },
      "id": "5d6fe49a64441f8d6100a50f"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Topic Replies Activity Magento Cloud setup with New Relic Agents 5 February 13, 2020 JS Snippet gives \"Uncaught SyntaxError: Unexpected token ,\" Browser 20 July 15, 2020 Calculating 90% of response times for every transaction Data Queries 7 February 13, 2020 Newrelic-daemon not loading Agents 23 July 15, 2020 Resque::Server and injected javascript leading to incomplete body Agents 3 February 13, 2020 TLS 1.0/1.1 to be deprecated for Logs & Dimensional Metrics APIs Security Notifications 2 February 12, 2020 RabbitMQ monitoring doesn't work for queues_regexes '[\".*\"]' Infrastructure 6 February 12, 2020 Please document explicitly that transactions don't pay attention to rejections Agents 6 July 15, 2020 How to add the time picker to NRQL queries Nerdpacks 4 February 12, 2020 Schema for Data Tables Dashboards 11 July 15, 2020 Get max of sum group by timestamp Data Queries 3 February 12, 2020 Alerts on Kubernetes Pod Status Alerts 4 February 12, 2020 Page view amount looks wried in the latest report Browser 16 February 12, 2020 How to get metrics from mysql running in kubernetes? Infrastructure 4 February 12, 2020 Feature Idea: Browser deployment markers Browser 11 February 12, 2020 Missing Error message and StackTrace with custom Exception Agents 23 February 12, 2020 New Relic Logs is not accessible Logs 2 February 12, 2020 Agent does not install Infrastructure 2 February 12, 2020 Alert Policy need to Assign to Servers in bulk Alerts 2 February 12, 2020 New Relic Agent Installation Agents 2 February 12, 2020 Unable to find and click element/ Unable to scroll Synthetic 3 February 12, 2020 Does Newrelic basic alert has 'maintenance mode' for scheduled maintenance? Alerts 11 February 12, 2020 See app version range for a crash Mobile 2 February 12, 2020 Feature Idea: ExternalServices: show percentage per Service API path Agents 8 July 15, 2020 Dashboard not accessible by creator Application Performance Monitoring 11 February 11, 2020 Count calls for an external service in a time frame Data Queries 4 February 11, 2020 Elasticsearch plugin issue reporting with a proxy Infrastructure 5 July 15, 2020 Getting Browser/RUM metric in our environment 2160856 - RC1-Env Browser 2 February 11, 2020 AJax request showing in default Browser monitoring UI but not in Insights Browser 3 February 11, 2020 New Relic Insights not able to capture some of the ajax request Browser 5 July 15, 2020 ← previous page   next page → Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [],
      "title": "Latest topics - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "afbdaad2d52688f700e9c466dafb7a66b23f3128",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/latest?exclude_category_ids%5B%5D=87&exclude_category_ids%5B%5D=146&exclude_category_ids%5B%5D=98&no_definitions=true&no_subcategories=false&page=84",
      "published_at": "2020-08-12T01:03:22Z",
      "updated_at": "2020-08-12T01:03:22Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.08107353,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " for Logs &amp; Dimensional Metrics APIs Security Notifications 2 February 12, 2020 RabbitMQ monitoring doesn&#x27;t work for queues_regexes &#x27;[&quot;.*&quot;]&#x27; Infrastructure 6 February 12, 2020 Please document explicitly that transactions don&#x27;t pay attention to rejections Agents 6 July 15, 2020 How to <em>add</em> the <em>time</em>"
      },
      "id": "5f333fdae7b9d278bec9dea3"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Topic Replies Activity Difference between weekly and monthly SLA uptime values Synthetic 5 July 15, 2020 Extreme Slowness with NewRelic Website Agents 4 February 13, 2020 Browser - Pro Features Browser 4 February 13, 2020 Magento Cloud setup with New Relic Agents 5 February 13, 2020 JS Snippet gives \"Uncaught SyntaxError: Unexpected token ,\" Browser 20 July 15, 2020 Calculating 90% of response times for every transaction Data Queries 7 February 13, 2020 Newrelic-daemon not loading Agents 23 July 15, 2020 Resque::Server and injected javascript leading to incomplete body Agents 3 February 13, 2020 TLS 1.0/1.1 to be deprecated for Logs & Dimensional Metrics APIs Security Notifications 2 February 12, 2020 RabbitMQ monitoring doesn't work for queues_regexes '[\".*\"]' Infrastructure 6 February 12, 2020 Please document explicitly that transactions don't pay attention to rejections Agents 6 July 15, 2020 How to add the time picker to NRQL queries Nerdpacks 4 February 12, 2020 Schema for Data Tables Dashboards 11 July 15, 2020 Get max of sum group by timestamp Data Queries 3 February 12, 2020 Alerts on Kubernetes Pod Status Alerts 4 February 12, 2020 Page view amount looks wried in the latest report Browser 16 February 12, 2020 How to get metrics from mysql running in kubernetes? Infrastructure 4 February 12, 2020 Feature Idea: Browser deployment markers Browser 11 February 12, 2020 Missing Error message and StackTrace with custom Exception Agents 23 February 12, 2020 New Relic Logs is not accessible Logs 2 February 12, 2020 Agent does not install Infrastructure 2 February 12, 2020 Alert Policy need to Assign to Servers in bulk Alerts 2 February 12, 2020 New Relic Agent Installation Agents 2 February 12, 2020 Unable to find and click element/ Unable to scroll Synthetic 3 February 12, 2020 Does Newrelic basic alert has 'maintenance mode' for scheduled maintenance? Alerts 11 February 12, 2020 See app version range for a crash Mobile 2 February 12, 2020 Feature Idea: ExternalServices: show percentage per Service API path Agents 8 July 15, 2020 Dashboard not accessible by creator Application Performance Monitoring 11 February 11, 2020 Count calls for an external service in a time frame Data Queries 4 February 11, 2020 Elasticsearch plugin issue reporting with a proxy Infrastructure 5 July 15, 2020 ← previous page   next page → Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [],
      "title": "Latest topics - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "3b8aebdf6bacdcd98a2875a33655f1fb16e72dba",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/latest?exclude_category_ids%5B%5D=322&no_definitions=true&no_subcategories=false&page=84",
      "published_at": "2020-08-12T02:38:39Z",
      "updated_at": "2020-08-12T02:38:39Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.080112934,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " doesn&#x27;t work for queues_regexes &#x27;[&quot;.*&quot;]&#x27; Infrastructure 6 February 12, 2020 Please document explicitly that transactions don&#x27;t pay attention to rejections Agents 6 July 15, 2020 How to <em>add</em> the <em>time</em> <em>picker</em> to NRQL queries Nerdpacks 4 February 12, 2020 Schema for Data Tables Dashboards 11 July 15, 2020"
      },
      "id": "5f2c969428ccbca07888dfef"
    }
  ],
  "/collect-data/get-started-nerdgraph-api-explorer": [
    {
      "body": "New Relic monitoring is built around the concept of the entity. This document explains: What entities are How to find entity data How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities An entity is anything that reports data to New Relic, so you'll find your entities wherever you see your data reporting in New Relic. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the entity explorer, hover over a specific entity and click the information icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use service maps and distributed tracing to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities) For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / New Relic One / Use New Relic One / Core concepts",
      "info": "The definition of 'entity' in New Relic, and how to use and organize entities. ",
      "nodeid": 34131,
      "sections": [
        "Use New Relic One",
        "Get started",
        "Core concepts",
        "UI and data",
        "Workloads",
        "Build on New Relic One",
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Group and organize entities",
        "For more help"
      ],
      "title": "What is an entity in New Relic?",
      "translation_ja_url": "https://docs.newrelic.co.jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic",
      "popularity": 1,
      "external_id": "e37477cb70139a420735f58b6655484bf927ca96",
      "category_1": "Use New Relic One",
      "category_2": "Core concepts",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic",
      "published_at": "2020-08-10T23:53:11Z",
      "updated_at": "2020-08-06T23:06:23Z",
      "category_0": "New Relic One",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.1551677,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Find and <em>explore</em> entities",
        "info": "<em>The</em> definition of &#x27;entity&#x27; in New Relic, and how to <em>use</em> and organize entities. ",
        "category_1": "<em>Use</em> New Relic One",
        "translation_ja_url": "https:&#x2F;&#x2F;docs.newrelic.co.jp&#x2F;docs&#x2F;new-relic-one&#x2F;<em>use</em>-new-relic-one&#x2F;core-concepts&#x2F;what-entity-new-relic",
        "body": ". An entity&#x27;s GUID is reported as the attribute entityGuid. You can query for an entity <em>using</em> this attribute in the query builder. <em>Use</em> service maps and distributed tracing to see connections between entities. <em>Explore</em> entity data <em>using</em> our <em>NerdGraph</em> GraphiQL <em>explorer</em> (<em>api</em>.newrelic.com&#x2F;graphiql). Group",
        "breadcrumb": "Contents &#x2F; New Relic One &#x2F; <em>Use</em> New Relic One &#x2F; Core concepts"
      },
      "id": "5cdc20638e9c0f35676a8106"
    },
    {
      "body": "You can manage your policies, conditions, and muting rules programmatically using our GraphQL NerdGraph API. This is a powerful alternative to managing them in New Relic One or through the REST API. Alerts features you can manage with NerdGraph Here's what you can do in NerdGraph: Manage policies Use NRQL conditions Muting rules: suppress notifications The easiest way to discover alerts queries and mutations is through the NerdGraph API explorer. NerdGraph API explorer Our NerdGraph API explorer is a GraphiQL editor where you can prototype queries and mutations. Here are some examples showing how to find fields for queries and mutations. For general information about NerdGraph, see Introduction to NerdGraph. Queries To explore the various queries, look for the available queries under the actor.account.alerts namespace in NerdGraph API explorer: Mutations To explore various mutations, look in the alerts dropdown in the NerdGraph API explorer: For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / Alerts and Nerdgraph",
      "info": "Read about how you can manage alerts conditions, policies, and muting rules using NerdGraph.",
      "nodeid": 37751,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "NerdGraph API: Examples",
        "Alerts features you can manage with NerdGraph",
        "NerdGraph API explorer",
        "Queries",
        "Mutations",
        "For more help"
      ],
      "title": "NerdGraph API: Examples ",
      "popularity": 1,
      "external_id": "017d6c34d340b9bc035e91483d675915fa5252eb",
      "category_1": "New Relic Alerts",
      "image": "https://docs.newrelic.com/sites/default/files/thumbnails/image/alerts_query_0.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alerts-nerdgraph/nerdgraph-api-examples",
      "published_at": "2020-08-11T04:59:01Z",
      "updated_at": "2020-08-11T04:59:00Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.043460377,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> <em>API</em>: Examples ",
        "sections": "<em>NerdGraph</em> <em>API</em> <em>explorer</em>",
        "info": "Read about how you can manage alerts conditions, policies, and muting rules <em>using</em> <em>NerdGraph</em>.",
        "body": " <em>Use</em> NRQL conditions Muting rules: suppress notifications The easiest way to discover alerts queries and mutations is through the <em>NerdGraph</em> <em>API</em> <em>explorer</em>. <em>NerdGraph</em> <em>API</em> <em>explorer</em> Our <em>NerdGraph</em> <em>API</em> <em>explorer</em> is a GraphiQL editor where you can prototype queries and mutations. Here are some examples showing",
        "breadcrumb": "Contents &#x2F; Alerts and Applied intelligence &#x2F; New Relic Alerts &#x2F; Alerts and <em>Nerdgraph</em>"
      },
      "id": "5f2dbad864441fd15456a9eb"
    },
    {
      "body": "To query data with the New Relic NerdGraph, we use the concept of an entity. An entity provides unified access to all the things you monitor with New Relic, including but not limited to: Applications monitored by New Relic (APM) Cloud integrations, services, and hosts monitored by New Relic (Infrastructure monitoring) To view entity details in the New Relic UI, use the entity explorer in New Relic One. Entity definition Each entity has similar traits: A unique entity GUID identifies it. It exists over a span of time, even if it is a short period. It provides a useful entry point for exploring data about specific metrics and events, or for exploring data related to other entities. Requirements You must have a user-specific API key to run NerdGraph queries. If you do not already have one: Generate a new API key in the NerdGraph GraphiQL explorer. OR Create a new API key from your New Relic account settings. Search for entities New Relic searches for entities by their attributes: primarily their name, but also by type of entity and other values. The search returns basic data about entities matching the search criteria. Then, from the basic query results, you can query a specific entity by its GUID. For example, to use NerdGraph to query one or more entities, you can search by attribute or GUID. Search by attribute Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Run a basic query to find entities that match your search criteria. For example: query($query: String! ) { actor { entitySearch(query: $query) { count results { entities { name entityType guid } } } } } Add the following variables to the Query variables section in NerdGraph: {\"query\": \"name LIKE 'nerd-graph' AND type IN ('APPLICATION')\"} Search by entity GUID Use a specific entity's GUID to query deeper into its related data. For example: query($guids: EntityGuid! ) { actor { entities(guids: $guids) { entityType name } } } Add the following variables to the Query variables section: {\"guids\": \"entity-guid-here\"} Example queries Queries are requests that are intended to only fetch data (no side effects). NerdGraph queries are not static, meaning that you can ask for more or less data depending on your needs. For each query, you can specify exactly what data you want to retrieve, as long as it is supported by the schema. Entities in NerdGraph rely on GraphQL interfaces, a concept that allows objects to share common fields. Interfaces are used to provide data for specific entity types, as you will see in many of these NerdGraph query examples. Get alert information on alertable entities in search results You can fetch the alert severity of any entity that can be monitored by New Relic Alerts. This NerdGraph query will tell you if New Relic is currently receiving data from your application (using the reporting field). If the entity is an alertable type, results will include the alert severity of the entity. If the results include entities that are not alertable, they will not include the AlertableEntityOutline fields. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { reporting ... on AlertableEntityOutline { alertSeverity } } } } } } Get summary data on APM entities in search results Different entity types have specific data associated with them. The following NerdGraph query example shows a selection of fields available for APM application entities; more summary data can be requested in your query. If entities of other types are returned in your search results, they will not include these fields. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { name ... on ApmApplicationEntityOutline { apmSummary { errorRate apdexScore webResponseTimeAverage responseTimeAverage } } } } } } } Get data specific to each entity type in search results Different entity types have specific data associated with them. This NerdGraph query example requests the name for all entities regardless of which entity type they are, as well as the error rate for APM, Browser, and Mobile entities. If entities of other types are returned in your search results, they will not include an error rate field. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { name ... on ApmApplicationEntityOutline { apmSummary { errorRate } } ... on BrowserApplicationEntityOutline { browserSummary { jsErrorRate } } ... on MobileApplicationEntityOutline { mobileSummary { httpErrorRate } } } } } } } Get all tags for each entity in search results This NerdGraph query example fetches tags for every entity returned in the search results. For more information, see the NerdGraph GraphiQL tagging tutorial. { actor { entitySearch(query: \"name like 'nerdgraph'\") { results { entities { name tags { key values } } } } } } Get the nextCursor for paginated search results The NerdGraph GraphiQL explorer paginates results from an entity search. If your search criteria yields more than the API limit and you want to view the rest of the results, you can request nextCursor in your initial request and use its value in another query to retrieve the following \"page\" of results. If there are no more results, nextCursor will be null. { actor { entitySearch(query: \"name like 'nerd-graph'\") { results { nextCursor entities { name } } } } } Use the value of nextCursor in your next search: { actor { entitySearch(query: \"name like 'nerd-graph'\") { results(cursor: \"next_cursor_value\") { nextCursor entities { name } } } } } For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / APIs / NerdGraph / Examples",
      "info": "Use New Relic's NerdGraph (our GraphQL API) to query your monitored entities (applications, hosts, etc.)",
      "nodeid": 19141,
      "sections": [
        "NerdGraph",
        "Get started",
        "Examples",
        "NerdGraph entities API tutorial",
        "Entity definition",
        "Requirements",
        "Search for entities",
        "Search by attribute",
        "Search by entity GUID",
        "Example queries",
        "For more help"
      ],
      "title": "NerdGraph entities API tutorial",
      "popularity": 1,
      "external_id": "6dad137791a70630e57cb10aa5f574776c26613f",
      "category_1": "NerdGraph",
      "category_2": "Examples",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-entities-api-tutorial",
      "published_at": "2020-08-11T01:39:48Z",
      "updated_at": "2020-08-11T01:39:48Z",
      "category_0": "APIs",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.03178692,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> entities <em>API</em> tutorial",
        "sections": "<em>NerdGraph</em> entities <em>API</em> tutorial",
        "info": "<em>Use</em> New Relic&#x27;s <em>NerdGraph</em> (our <em>GraphQL</em> <em>API</em>) to query your monitored entities (applications, hosts, etc.)",
        "category_0": "<em>APIs</em>",
        "category_1": "<em>NerdGraph</em>",
        "body": " entity by its GUID. For example, to <em>use</em> <em>NerdGraph</em> to query one or more entities, you can search by attribute or GUID. Search by attribute Go to the <em>NerdGraph</em> GraphiQL <em>explorer</em> at https:&#x2F;&#x2F;<em>api</em>.newrelic.com&#x2F;graphiql. Run a basic query to find entities that match your search criteria. For example: query",
        "breadcrumb": "Contents &#x2F; APIs &#x2F; <em>NerdGraph</em> &#x2F; Examples"
      },
      "id": "5d8fd87f196a67bba0756f3f"
    },
    {
      "body": "You can manage your alerts policies using our GraphQL NerdGraph API. Here are some queries and mutations you can develop in our NerdGraph API explorer. See the NerdGraph introduction for help getting started with NerdGraph API explorer. List and filter policies The policiesSearch query allows you to paginate through all of your policies per account. It also allows some filtering functionality on the account policies. Listing all policies for an account Here's an example: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { policiesSearch { policies { id name incidentPreference } } } } } } Paginating through policies with cursor pagination In order to paginate through your policies, you must request the nextCursor field on your initial query. With cursor pagination, you continue to make a request through the result set until the nextCursor that is returned from the response comes back empty. This signifies that you reached the end of your results. Here's an example: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { policiesSearch { nextCursor policies { id name incidentPreference } totalCount } } } } } The code above returns a set of results like this: { \"data\": { \"actor\": { \"account\": { \"alerts\": { \"policiesSearch\": { \"nextCursor\": \"/8o0y2qiR54m6thkdgHgwg==:jZTXDFKbTkhKwvMx+CtsPVM=\", \"policies\": [ { \"id\": \"3455\", \"incidentPreference\": \"PER_POLICY\", \"name\": \"First Policy Name\" }, { \"id\": \"2123\", \"incidentPreference\": \"PER_POLICY\", \"name\": \"Another Policy\" }, // ... more policies here in reality ], \"totalCount\": 745 } } } } } } So, in your subsequent request, provide the cursor like so, until the cursor is empty: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { policiesSearch(cursor: \"/8o0y2qiR54m6thkdgHgwg==:jZTXDFKbTkhKwvMx+CtsPVM=\") { nextCursor policies { id name incidentPreference } totalCount } } } } } Find all policies by selected ids The API allows policy queries by a sub-select of ids. This will only return the information for these policies that you provide. { actor { account(id: YOUR_ACCOUNT_ID) { alerts { policiesSearch(searchCriteria: { ids: [A_POLICY_ID, ANOTHER_POLICY_ID] }) { policies { id name incidentPreference } } } } } } Find policy by id The API lets you query by policy id: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { policy(id: YOUR_POLICY_ID) { id name incidentPreference } } } } } Create a policy In order to create a policy, supply a name and an incidentPreference. The incident preference will configure how incidents get created for each condition created in the policy. For more information, refer to the documentation about choosing your incident preference. mutation { alertsPolicyCreate(accountId: YOUR_ACCOUNT_ID, policy: { name: \"Your Policy Name\" incidentPreference: PER_CONDITION }) { id name incidentPreference } } Update a policy When you update a policy, note that you don't need to supply all of the attributes on the policy. For example, you only need to supply the name if you only intend to update the name: mutation { alertsPolicyUpdate(accountId: YOUR_ACCOUNT_ID, id: YOUR_POLICY_ID, policy: { name: \"Updated Policy Name\" }) { id name incidentPreference } } Delete a policy You can delete policies via the NerdGraph API. Note that only the id may be requested back from a deleted resource: mutation { alertsPolicyDelete(accountId: YOUR_ACCOUNT_ID, id: YOUR_POLICY_ID) { id } } For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / Alerts and Nerdgraph",
      "info": "Read about how you can list, create, update, and delete policies using the NerdGraph API.",
      "nodeid": 37716,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "NerdGraph API: Alerts policies",
        "List and filter policies",
        "Create a policy",
        "Update a policy",
        "Delete a policy",
        "For more help"
      ],
      "title": "NerdGraph API: Alerts policies ",
      "popularity": 1,
      "external_id": "cde6b52e96940389d03ae58acbfce482b5d455e6",
      "category_1": "New Relic Alerts",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alerts-nerdgraph/nerdgraph-api-alerts-policies",
      "published_at": "2020-08-11T04:56:49Z",
      "updated_at": "2020-08-11T04:56:49Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.02844091,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> <em>API</em>: Alerts policies ",
        "sections": "<em>NerdGraph</em> <em>API</em>: Alerts policies",
        "info": "Read about how you can list, create, update, and delete policies <em>using</em> <em>the</em> <em>NerdGraph</em> <em>API</em>.",
        "body": "You can manage your alerts policies <em>using</em> our <em>Graph</em>QL <em>NerdGraph</em> <em>API</em>. Here are some queries and mutations you can develop in our <em>NerdGraph</em> <em>API</em> <em>explorer</em>. See the <em>NerdGraph</em> introduction for help getting started with <em>NerdGraph</em> <em>API</em> <em>explorer</em>. List and filter policies The policiesSearch query allows you",
        "breadcrumb": "Contents &#x2F; Alerts and Applied intelligence &#x2F; New Relic Alerts &#x2F; Alerts and <em>Nerdgraph</em>"
      },
      "id": "5f2dee1128ccbc65b688dfc1"
    },
    {
      "body": "You can manage alerts conditions using our GraphQL NerdGraph API. Here are some conditions queries and mutations you can develop in our NerdGraph API explorer. See the NerdGraph introduction for help getting started with NerdGraph API explorer. This document covers the following: Steps to create a NRQL condition NRQL static condition NRQL baseline condition NRQL outlier condition Update a condition Update mutations List and filter NRQL conditions Singular NRQL condition queries Create a description Delete conditions Steps to create a NRQL condition Follow these steps: Decide which condition type you want to create (see NRQL Condition threshold types). Find your relevant policyID by doing one of the following: Use the NerdGraph policies API. Go to one.newrelic.com, in the top nav click Alerts & AI, then click Policies. Choose a policy. Find the ID under the policy name. Provide the appropriate mutation for your NRQL condition type and the relevant values. The NerdGraph GraphiQL explorer is the best place to find up-to-date documentation about the per-field specifics of the NerdGraph NRQL Conditions API. For example, questions like \"What does the valueFunction field accept?\" are best answered with the inline NerdGraph documentation. NRQL static condition Here's an example of creating a static condition: mutation { alertsNrqlConditionStaticCreate(accountId: YOUR_ACCOUNT_ID, policyId: YOUR_POLICY_ID, condition: { name: \"Low Host Count - Catastrophic\" enabled: true nrql: { query: \"SELECT uniqueCount(host) from Transaction where appName='my-app-name'\" evaluationOffset: 3 } terms: { threshold: 2 thresholdOccurrences: AT_LEAST_ONCE thresholdDuration: 600 operator: BELOW priority: CRITICAL } valueFunction: SINGLE_VALUE violationTimeLimit: TWENTY_FOUR_HOURS }) { id name } } NRQL baseline condition Here's an example of creating a baseline condition: mutation { alertsNrqlConditionBaselineCreate(accountId: YOUR_ACCOUNT_ID, policyId: YOUR_POLICY_ID, condition: { name: \"Baseline Condition\" enabled: true baselineDirection: UPPER_ONLY nrql: { query: \"SELECT average(duration) FROM Transaction\" evaluationOffset: 3 } terms: { threshold: 13 thresholdDuration: 180 thresholdOccurrences: ALL operator: ABOVE priority: CRITICAL } violationTimeLimit: TWENTY_FOUR_HOURS }) { id name baselineDirection } } NRQL outlier condition Here's an example of creating an outlier condition: mutation { alertsNrqlConditionOutlierCreate(accountId: YOUR_ACCOUNT_ID, policyId: YOUR_POLICY_ID, condition: { name: \"Outlier Condition\" enabled: true expectedGroups: 4 openViolationOnGroupOverlap: false nrql: { query: \"SELECT average(duration) FROM Transaction FACET httpResponseCode\" evaluationOffset: 3 } terms: { threshold: 1 thresholdDuration: 300 thresholdOccurrences: ALL operator: ABOVE priority: CRITICAL } violationTimeLimit: TWENTY_FOUR_HOURS }) { id name expectedGroups openViolationOnGroupOverlap } } Update a condition Complete the following: Determine the type of your existing condition by requesting the type field in a nrqlConditionsSearch query like this: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlConditionsSearch { nrqlConditions { id type } } } } } } The type returned is what you use for your update mutation. For example, if the type returned is STATIC, use alertsNrqlConditionStaticUpdate. If the type returned is BASELINE, use alertsNrqlConditionBaselineUpdate. If the type returned is OUTLIER, use alertsNrqlConditionOutlierUpdate. Provide the id of your condition to your relevant condition type mutation. Note that you can only update conditions of the relevant type. Only provide update mutations for the fields you want to update. Fields you don't provide in the update are not touched. Update mutations Only fields that you provide in the update are changed. In the following example, baselineDirection returns unchanged, but name is updated. mutation { alertsNrqlConditionBaselineUpdate(id: YOUR_CONDITION_ID, accountId: YOUR_ACCOUNT_ID, condition: { name: \"Your updated name\" }) { id name baselineDirection } } List and filter NRQL conditions To list or filter your NRQL conditions, use the nrqlConditionsSearch query in NerdGraph. Use cursor pagination The basic of list functionality for NRQL conditions allows you to paginate through your NRQL conditions as well as request the total count of conditions per account. The nrqlConditionsSearch query utilizes cursor pagination to paginate through resources. The idea behind cursor pagination is that the client will request a cursor in a programmatic loop until the cursor comes back empty. An initial list response will look something like this: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlConditionsSearch { nextCursor nrqlConditions { id name type } totalCount } } } } } This example returns a JSON response like this: { \"data\": { \"actor\": { \"account\": { \"alerts\": { \"nrqlConditionsSearch\": { \"nextCursor\": \"WOwfJ4+TWm9QTFeKMGyg+w==:QqkI8S4+Wwnpno6z+uk8kQ==\", \"nrqlConditions\": [ { \"id\": \"4432\", \"name\": \"Baseline Condition\", \"type\": \"BASELINE\" }, { \"id\": \"443\", \"name\": \"A static condition\", \"type\": \"STATIC\" }, // more conditions here in reality ], \"totalCount\": 435 } } } } }, } In order to paginate through conditions in the response, have the client request the cursor to be returned until the nextCursor returns from the response as null: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlConditionsSearch(cursor: \"WOwfJ4+TWm9QTFeKMGyg+w==:QqkI8S4+Wwnpno6z+uk8kQ==\", ) { nextCursor nrqlConditions { id name type } totalCount } } } } } Request type-specific fields Certain fields are only available on specific NRQL condition types. The main reason that mutations are split between the different condition types is because they have minor differences between the fields they accept. For example, valueFunction is only relevant for static NRQL conditions and baselineDirection is only relevant on baseline NRQL conditions. But if these fields are only available on these certain condition types, how do we return them in a list of all of our condition types? The answer is a GraphQL convention known as inline fragments. Inline fragments allow you to access the data on a specific type of NRQL condition: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlConditionsSearch { nrqlConditions { id name type ...on AlertsNrqlStaticCondition { valueFunction } ...on AlertsNrqlBaselineCondition { baselineDirection } ...on AlertsNrqlOutlierCondition { expectedGroups } } } } } } } In the previous example query, we are asking GraphQL to do the hard work for us to determine which NRQL conditions are the correct type. So, when the returned type is a static condition, it will return the valueFunction in the object. When the returned type is a baseline condition, it will return baselineDirection instead, and when the type is an outlier condition, it will return expectedGroups. Here is an example response: { \"data\": { \"actor\": { \"account\": { \"alerts\": { \"nrqlConditionsSearch\": { \"nrqlConditions\": [ { \"baselineDirection\": \"UPPER_ONLY\", \"id\": \"342\", \"name\": \"My baseline condition\", \"type\": \"BASELINE\" }, { \"id\": \"553\", \"name\": \"My static condition\", \"type\": \"STATIC\", \"valueFunction\": \"SINGLE_VALUE\" }, { \"expectedGroups\": 4, \"id\": \"802\", \"name\": \"My outlier condition\", \"type\": \"OUTLIER\" } ] } } } } } } Filter NRQL conditions You can filter NRQL conditions with the searchCriteria argument of the nrqlConditionsSearch query: Here's an example of filtering NRQL conditions with matching by name. This query returns NRQL conditions that match the provided name. Note that this match is case insensitive. { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlConditionsSearch(searchCriteria: { name: \"Baseline Condition\" }) { nrqlConditions { id name type } } } } } } Singular NRQL condition queries You can use the NRQL condition API to query for a singular condition. Run the nrqlCondition query in the alerts namespace. Similar to type specific fields on the nrqlConditionSearch query, you can also use these inline fragmentsto request fields that are restricted to a NRQL condition type. { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlCondition(id: YOUR_CONDITION_ID) { id name ...on AlertsNrqlStaticCondition { valueFunction } } } } } } Update the description This will walk you through the procedure to create a description for a NRQL alert condition. 1. Get all the conditions for a policy: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlConditions(policyId: YOUR_POLICY_ID) { nextCursor results { id name description enabled nrql { query sinceValue } policyId runbookUrl terms { duration operator priority timeFunction threshold } type violationTimeLimit } } } } } } 2. Get the details for a single condition: { actor { account(id: YOUR_ACCOUNT_ID) { alerts { nrqlCondition(id: \"YOUR_CONDITION_ID\") { description id enabled name nrql { query evaluationOffset } policyId runbookUrl terms { operator priority threshold thresholdDuration thresholdOccurrences } type violationTimeLimit } } } } } 3. Create a mutation with the description. Here's an empty mutation template: mutation { alertsNrqlConditionStaticUpdate(accountId: YOUR_ACCOUNT_ID, id: \"YOUR_CONDITION_ID\", condition: {description: \"\"}) { description } } Here'a an example mutation with an included example description: mutation { alertsNrqlConditionStaticUpdate(accountId: 123456, id: \"123456\", condition: {description: \"timestamp : {{timestamp}} \\n accountId : {{accountId}} \\n type : {{type}} \\n event : {{event}} \\n description : {{description}} \\n policyId : {{policyId}} \\n policyName: {{policyName}} \\n conditionName : {{conditionName}} \\n conditionId : {{conditionId}} \\n product : {{product}} \\n conditionType : {{conditionType}} \\n RunbookUrl : {{runbookUrl}} \\n nrqlQuery : {{nrqlQuery}} \\n nrqlEventType : {{nrqlEventType}} \\n targetID : {{targetId}} \\n targetName : {{targetName}} \\n commandLine : {{tag.commandLine}} \\n entityGuid : {{tag.entityGuid}} \\n entityName : {{tag.entityName}} \\n fullHostname : {{tag.fullHostname}} \\n instanceType : {{tag.instanceType}} \\n processDisplayName : {{tag.processDisplayName}}\"}) { description } } Delete conditions You can use the alertsConditionDelete mutation to delete any type of condition. You can only request the id field on a delete mutation; for example: mutation { alertsConditionDelete(accountId: YOUR_ACCOUNT_ID, id: YOUR_CONDITION_ID) { id } } For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / Alerts and Nerdgraph",
      "info": "Examples of how to use the NerdGraph API explorer to create alert conditions, queries, and mutations.",
      "nodeid": 37711,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "NerdGraph API: NRQL condition alerts",
        "Steps to create a NRQL condition",
        "NRQL static condition",
        "NRQL baseline condition",
        "NRQL outlier condition",
        "Update a condition",
        "Update mutations",
        "List and filter NRQL conditions",
        "Singular NRQL condition queries",
        "Update the description",
        "Delete conditions",
        "For more help"
      ],
      "title": "NerdGraph API: NRQL condition alerts ",
      "popularity": 1,
      "external_id": "86591bd20017930f1e4eef1b1a76e3806298dbb9",
      "category_1": "New Relic Alerts",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alerts-nerdgraph/nerdgraph-api-nrql-condition-alerts",
      "published_at": "2020-08-11T04:56:49Z",
      "updated_at": "2020-08-11T04:56:49Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.02434766,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> <em>API</em>: NRQL condition alerts ",
        "sections": "<em>NerdGraph</em> <em>API</em>: NRQL condition alerts",
        "info": "Examples of how to <em>use</em> <em>the</em> <em>NerdGraph</em> <em>API</em> <em>explorer</em> to create alert conditions, queries, and mutations.",
        "body": "You can manage alerts conditions <em>using</em> our <em>Graph</em>QL <em>NerdGraph</em> <em>API</em>. Here are some conditions queries and mutations you can develop in our <em>NerdGraph</em> <em>API</em> <em>explorer</em>. See the <em>NerdGraph</em> introduction for help getting started with <em>NerdGraph</em> <em>API</em> <em>explorer</em>. This document covers the following: Steps to create",
        "breadcrumb": "Contents &#x2F; Alerts and Applied intelligence &#x2F; New Relic Alerts &#x2F; Alerts and <em>Nerdgraph</em>"
      },
      "id": "5f2dee1128ccbc562e88dfc1"
    }
  ],
  "/explore-docs/nerdstorage": [
    {
      "body": "Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Using NerdStorage, you can create individual documents of up to 64kb in size, create different collections of documents, and store data by entity, account, or user level. This guide explains how to add data and documents to NerdStorage. For an introduction to what NerdStorage is and how it works, see Intro to NerdStorage. Before you begin This guide requires that you have an API key and the New Relic One CLI as described in Set up your development environment. Get started First, get the NerdStorage app running successfully inside New Relic One. Step 1 of 3 Clone the example applications from the GitHub repo. Step 2 of 3 Use the New Relic One CLI to update the application UUID and run the application locally. In the terminal, switch to the /nr1-howto/use-nerdstorage directory: cd / nr1 - howto / use - nerdstorage; Copy Update the UUID and serve the application: nr1 nerdpack:uuid -gf nr1 nerdpack:serve Copy Step 3 of 3 Once the app is successfully served, your terminal will return the URL to view your running application on New Relic One. Load the URL. Under Your applications you'll see the Use Nerdstorage app listed. Click to launch the app. Add data to NerdStorage Once the app is up and running on New Relic One, you can prepare the app and start adding data. On the How To Use NerdStorage app screen, there's a Saved to NerdStorage pane with a field for adding data. However, if you type something you'll get an error message. This is because you need to be set up to store data at the User level. You can do this with the help of the UserStorageMutation component. Step 1 of 3 Open the application’s ./nerdlets/use-nerdstorage-nerdlet/index.js file in the text editor of your choice and find the code for the TextField and Button used to enter data. The Button onClick prop makes a call to a helper method called _addToNerdStorage, and you need to update it to add UserStorageMutation The UserStorage NerdStorage components require a collection and documentId. In the constructor method in the application’s index.js file, you can see the variables being provided. In the .js file, it will look something like this: constructor(props) { super(props) this.collectionId = 'mycollection'; this.documentId = 'learning-nerdstorage'; this.state = { isOpen: true, storage: [], text: '', }; this._addToNerdStorage = this._addToNerdStorage.bind(this); this._removeFromNerdStorage = this._removeFromNerdStorage.bind(this); this._deleteDocument = this._deleteDocument.bind(this); } Copy Step 2 of 3 Import the UserStorageMutation by adding it to your import statement at the top of the index.js file: import { UserStorageMutation } from 'nr1'; Copy Then update the helper with this code beginning with _addToNerdStorage: _addToNerdStorage(){ const { text, storage } = this.state; storage.push(text); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { this.setState({text: ''}); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Copy Step 3 of 3 Return to your running How To Use NerdStorage app screen on New Relic One and reload the page. Add some text in the text entry field and click the check button. This will update NerdStorage and trigger a Toast notification inside the app. You should then see the text you typed displayed as a table row below the text entry field. Query data from NerdStorage Once you get data storage working as described in the section above, you also need to get the app properly reading data from NerdStorage, or the app will reload with an empty state every time you navigate away from the app page and back. To do this, add the UserStorageQuery component and update the componentDidMount method. Step 1 of 3 Import the UserStorageQuery by adding it to the import statement in the application’s ./nerdlets/use-nerdstorage-nerdlet/index.js file. import { UserStorageMutation, UserStorageQuery } from 'nr1'; Copy Step 2 of 3 Then, add the following componentDidMount method to your application: componentDidMount(){ UserStorageQuery.query({ collection: this.collectionId, documentId: this.documentId, }) .then(({ data }) => { if(data !== null) { this.setState({storage: data.storage}); } }) .catch(err => console.log(err)); } Copy Step 3 of 3 Back inside the NerdStorage app, test your changes by adding a few more rows using the text entry field. Then exit and relaunch the application. The application should load and show all the data you entered before you navigated away. Mutate data in NerdStorage Each NerdStorage entry displayed in the table inside the app has a trash button that can be used to update a specific entry. The trash button works by making a call to the _removeFromNerdStorage helper method. Step 1 of 1 To get this process working, update the code in _removeFromNerdStorage: _removeFromNerdStorage(index, data){ const { storage } = this.state; storage.pop(data); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Copy Once this is done, clicking the trash button will remove the item it's associated with, and the app will update to show the change. Delete collection from NerdStorage While the trash button is a good method for removing specific entries one at a time, you may also want the ability to delete a whole NerdStorage document at once. You can do this by adding the Delete Document button to your app. Step 1 of 2 Add a new GridItem to the application immediately before the closing Grid tag. In the new GridItem add the following code to display your new button: <Button onClick={() => this._deleteDocument()} type={Button.TYPE.DESTRUCTIVE} sizeType={Button.SIZE_TYPE.SMALL} iconType={Button.ICON_TYPE.INTERFACE__OPERATIONS__TRASH} > Delete Document </Button>; Copy Step 2 of 2 As the new Delete Document button will be calling the _deleteDocument helper method, you'll need to update that using the code below: _deleteDocument(){ this.setState({storage: []}); UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, }); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.CRITICAL }); } Copy Back inside the application, you should now see both the individual trash buttons and the newly added Delete Document button. Next steps Now that you’ve successfully implemented NerdStorage into a New Relic One application, you can store and mutate data connected to your User. For more information on the various NerdStorage components, please visit the New Relic developer website API documentation.",
      "type": "developer",
      "document_type": "page",
      "info": "NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next.",
      "sections": [
        "Add, query, and mutate data using NerdStorage",
        "Before you begin",
        "Get started",
        "Add data to NerdStorage",
        "Query data from NerdStorage",
        "Mutate data in NerdStorage",
        "Delete collection from NerdStorage",
        "Next steps"
      ],
      "title": "Add, query, and mutate data using NerdStorage",
      "popularity": 1,
      "external_id": "97cc9637edea35ecd68683f1010f67a5f8c79038",
      "image": "https://developer.newrelic.com/static/e03456a7ed8556f83bd3329ea38b261d/8f217/add-data-NerdStorage.png",
      "url": "https://developer.newrelic.com/build-apps/add-query-mutate-data-nerdstorage/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.7927603,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Add, query, and mutate data using <em>NerdStorage</em>",
        "sections": "Add data <em>to</em> <em>NerdStorage</em>",
        "info": "<em>NerdStorage</em> is a document database accessible within New Relic One. It allows you <em>to</em> modify, save, and retrieve documents from one session <em>to</em> the next.",
        "body": " collections of documents, and store data by entity, account, or user level. This guide explains how to add data and documents to <em>NerdStorage</em>. For an introduction to what <em>NerdStorage</em> is and how it works, see <em>Intro</em> to <em>NerdStorage</em>. Before you begin This guide requires that you have an API key"
      },
      "id": "5efa98d4e7b9d26d6b7bab74"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How To: Use NerdStorage Build on New Relic Nerdpacks nerdpack nerdstorage jsius July 21, 2020, 10:04pm #1 How to use NerdStorage Difficulty Level: Intermediate Products: N/A Getting Started In this how-to example, you will add NerdStorage to a New Relic One application teaching you how to store and configure data within your applications. To get started, we will clone the example applications from our how-to GitHub repo. Next, we will use the NR1 CLI to update the application UUID and run our application locally. In the terminal, let’s change into the /nr1-howto/use-nerdstorage directory. cd /nr1-howto/use-nerdstorage Now, we want to update the UUID and serve our application. nr1 nerdpack:uuid -gf nr1 nerdpack:serve Once our app is successfully served, in your terminal, you’ll be provided with a URL to access New Relic One and see your running application. New Relic link: https://one.newrelic.com/?nerdpacks=local Now on the New Relic homepage, you should have a new launcher to the how-to example. launcher.png3156×1074 519 KB After launching the ‘Use NerdStorage’ application, you will see the running New Relic app that should look similar to the image below: nerdstorage-app.png3154×750 94.6 KB What is NerdStorage? NerdStorage is a document database that is accessible within the New Relic One interface. Allowing for use and retrieval of data the next time we enter this Nerdlet Using NerdStorage, you will be able to create documents of up to 64kb of data, different collections of documents, and store your data on an Entity, Account, or User level. To find out more about NerdStorage, please read the docs on the New Relic developer website. Add data to NerdStorage Now that you have a better understanding of what is NerdStorage, you will be adding it to the example application currently running on your local machine. Go to the New Relic One homepage and click the launcher for How To Use NerdStorage. You will find an application that looks similar to below: no-nerdstorage.png3296×1650 262 KB Type something to add to NerdStorage and click the check button. Nothing happens… but why? In the app, we want to display data saved to NerdStorage and allow the user to quickly update and delete that data. Currently, the red error message shows, there is no data stored. To add data into this application, we will store data to the user level, using the UserStorageMutation component in the NR1 library. Open the application’s ‘./nerdlets/use-nerdstorage-nerdlet/index.js’ file in the text editor of your choice and find the code for the TextField and Button used to enter data. The Button onClick prop makes a call to a helper method called _addToNerdStorage This helper method needs to be updated to add the UserStorageMutation. The UserStorage NerdStorage components require a collection and documentId to be provided. If you look at the constructor in the application’s index.js file, you can see the variables being provided to the components. Your constructor should be similar to below: constructor(props) { super(props) this.collectionId = 'mycollection'; this.documentId = 'learning-nerdstorage'; this.state = { isOpen: true, storage: [], text: '', }; this._addToNerdStorage = this._addToNerdStorage.bind(this); this._removeFromNerdStorage = this._removeFromNerdStorage.bind(this); this._deleteDocument = this._deleteDocument.bind(this); } Replace the current _addToNerdStorage method with the code below: Import the UserStorageMutation by adding it to your import statement at the top of the index.js file. import {UserStorageMutation } from 'nr1'; then update the helper with the code below: _addToNerdStorage(){ const { text, storage } = this.state; storage.push(text); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { this.setState({text: ''}); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Now, enter text into the TextField and click the check button. From the code added into the UserStorageMutation the text inserted into the TextField will be stored into the application state and then saved to NerdStorage. After NerdStroage is updated, a Toast notification displays, and you can see your data displayed in a table similar to below. data-added.png3272×1248 219 KB Query data from NerdStorage After the last section, the application can now store data to NerdStorage, but if you were to exit the application, back to the New Relic One homepage and re-enter, you’d see that the red warning message is back. The application isn’t reading the data from NerdStorage and loads with an empty state. The UserStorageQuery component will be used to query data from NerdStorage and render the table when after the app mounts. Import the UserStorageQuery by adding it to the import statement. import {UserStorageMutation, UserStorageQuery } from 'nr1'; Add the following componentDidMount method to your application. componentDidMount(){ UserStorageQuery.query({ collection: this.collectionId, documentId: this.documentId, }) .then(({ data }) => { if(data !== null) { this.setState({storage: data.storage}); } }) .catch(err => console.log(err)); } Insert a few more entries into NerdStorage using the TextField, exit the application, and re-enter by clicking it’s launcher on the homepage. Your application will load, showing the data queried from NerdStorage. Your app should look similar to below: data-query.png3296×1638 288 KB Mutate data in NerdStorage Each NerdStorage entry displayed in the table has a trashcan button that can be used to update a specific entry. The trash Button is making a call to the _removeFromNerdStorage helper method. Update the code in the _removeFromNerdStorage to match the code below: _removeFromNerdStorage(index, data){ const { storage } = this.state; storage.pop(data); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Now, if you click one of the buttons, that item will be removed, and NerdStorage will be updated to reflect that change. Delete collection from NerdStorage Once the _removeFromNerdStorage method is added, a user can go through their list of entries and delete unwanted data. But, in large collections of data, this would be a viable option. In the next steps, we’ll add another button to the application that will allow the deletion of the entire NerdStorage document at one time. Add a new GridItem to the application just before the closing Grid tag. In the new GridItem, the following code will be added to display a new button. <Button onClick={() => this._deleteDocument()} type={Button.TYPE.DESTRUCTIVE} sizeType={Button.SIZE_TYPE.SMALL} iconType={Button.ICON_TYPE.INTERFACE__OPERATIONS__TRASH} > Delete Document </Button> The delete document button is making a call to the _deleteDocument helper method. Update the helper method with the code below. _deleteDocument(){ this.setState({storage: []}); UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, }); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.CRITICAL }); } Your application should look similar to below: with-delete.png3292×1582 260 KB If you click the delete document button, your entire list will be permanently deleted from NerdStorage, and your application will return back to the empty message. This deletion is triggered by using the UserStorageMutation component, passing it an action type of UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, and the collection and document id. How to use NerdStorage recap Wrapping up this how-to example, you’ve successfully implemented NerdStorage into a New Relic One application. By using the UserStorageQuery and UserStorageMutation components, the application stores and mutates data connect to your user. For more information on the various NerdStorage components, please visit the New Relic developer website’s API documentation. To continue your learning, take a look at our self-paced workshop on Github. 4 Likes Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "How To: Use NerdStorage",
        "How to use NerdStorage",
        "Getting Started",
        "What is NerdStorage?",
        "Add data to NerdStorage",
        "Query data from NerdStorage",
        "Mutate data in NerdStorage",
        "Delete collection from NerdStorage",
        "How to use NerdStorage recap"
      ],
      "title": "How To: Use NerdStorage - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "3280570cdb2757ee13dfa211590ebce93bda47f2",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/3/b/3bf77cde5a92f01ae4f8dd5b00d1e054f40c638e_2_690x345.png",
      "url": "https://discuss.newrelic.com/t/how-to-use-nerdstorage/99918",
      "published_at": "2020-08-11T19:04:04Z",
      "updated_at": "2020-08-06T10:13:01Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.09656956,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How <em>To</em>: Use <em>NerdStorage</em> - <em>Nerdpacks</em> - New Relic Explorers Hub",
        "sections": "How <em>To</em>: Use <em>NerdStorage</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us How To: Use <em>NerdStorage</em> Build on New Relic Nerdpacks nerdpack <em>nerdstorage</em> jsius July 21, 2020, 10:04pm #1 How to use <em>NerdStorage</em>"
      },
      "id": "5e9b197464441f798f38fe97"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us NerdStorage Access Outside of Nerdlet Build on New Relic Nerdpacks rfb graphql nerdlet nerdpack cgilling November 18, 2019, 11:47am #1 I’m thinking through various possible uses of Nerdlets, and one of them involves being able to have some configuration that would be generated and modified when we deploy our services. I was hoping that there would be a way for our CICD pipeline to modify the nerdlet config that could be stored in the NerdStorage. It seems like this might be doable through the graphql API, since it does show up as something that is queryable. But when I try to query it I run into the the following error: { actor { account(id: ....) { nerdStorage { collection(collection: \"\") { id } } } } } { \"data\": { \"actor\": { \"account\": { \"nerdStorage\": null } } }, \"errors\": [ { \"locations\": [ { \"column\": 0, \"line\": 5 } ], \"message\": \"No External Package ID found. This field only functions in the context of an External Package.\", \"path\": [ \"actor\", \"account\", \"nerdStorage\" ] } ] } Is there a way that I can set the External Package ID? I’m assuming thats just the nerdlet UUID? 1 Like mweitzel October 27, 2019, 12:44pm #2 @cgilling – this is definitely on the roadmap, for the exact reasons that you outline above. i don’t have a definitive time yet, but we are looking/exploring how we might accomplish this. 1 Like cgilling October 29, 2019, 6:55pm #3 Thanks, good to hear it’s something you want to do. Look forward to being able to use it 1 Like mweitzel May 14, 2020, 9:51pm #4 @cgilling – Check out the Developer Toolkit and the newrelic cli – We’ve added support for this!! New Relic CLI - 0.6.0 Developer Toolkit newrelic-cli v0.6.0 has been released with support for NerdStorage, a document store for New Recic One Nerdpacks. Read more about Nerdstorage here: https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage [v0.6.0] - 2020-04-02 Features nerdstorage: add command for managing nerdstorage documents cgilling May 15, 2020, 4:16pm #5 great, thanks, I’ll check it out soon! Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "NerdStorage Access Outside of Nerdlet"
      ],
      "title": "NerdStorage Access Outside of Nerdlet - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "237602ae1152ad43cd00005bb9c1702424c94849",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/nerdstorage-access-outside-of-nerdlet/86223",
      "published_at": "2020-08-10T20:59:24Z",
      "updated_at": "2020-07-22T11:20:54Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.06135596,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdStorage</em> Access Outside of <em>Nerdlet</em> - <em>Nerdpacks</em> - New Relic Explorers Hub",
        "sections": "<em>NerdStorage</em> Access Outside of <em>Nerdlet</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us <em>NerdStorage</em> Access Outside of Nerdlet Build on New Relic Nerdpacks rfb graphql nerdlet nerdpack cgilling November 18, 2019, 11:47am"
      },
      "id": "5db407f4e7b9d2e4ea23ed15"
    },
    {
      "body": "Intro to New Relic One API components To help you build a New Relic One application we provide you with the New Relic One SDK. Here we give you an introduction to the types of API calls and components in the SDK. The SDK provides everything you need to build your Nerdlets, create visualizations, and fetch data (New Relic or third-party). Components of the New Relic SDK SDK components are located in the Node module package named nr1, which you get when you install the NR1 CLI. The nr1 components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components category of the SDK contains React UI components, including: Text components: These components provide basic font and heading elements. These include HeadingText and BlockText. Layout components: These components give you control over the layout, and help you build complex layout designs without having to deal with the CSS. Layout components include: Grid and GridItem: for organizing more complex, larger scale page content in rows and columns Stack and StackItem: for organizing simpler, smaller scale page content (in column or row) Tabs and TabsItem: group various related pieces of content into separate hideable sections List and ListItem: for providing a basic skeleton of virtualized lists Card, CardHeader and CardBody : used to group similar concepts and tasks together Form components: These components provide the basic building blocks to interact with the UI. These include Button, TextField, Dropdown and DropdownItem, Checkbox, RadioGroup, Radio, and Checkbox. Feedback components: These components are used to provide feedback to users about actions they have taken. These include: Spinnerand Toast. Overlaid components: These components are used to display contextual information and options in the form of an additional child view that appears above other content on screen when an action or event is triggered. They can either require user interaction (like modals), or be augmenting (like a tooltip). These include: Modal and Tooltip. Components suffixed with Item can only operate as direct children of that name without the suffix. For example: GridItem should only be found as a child of Grid. Chart components The Charts category of New Relic One SDK contains components representing different types of charts. The ChartGroup component helps a group of related charts share data and be aligned. Some chart components can perform NRQL queries on their own; some accept a customized set of data. Query and storage components The Query components category of the New Relic One SDK contains components for fetching and storing New Relic data. The main way to fetch New Relic data is with NerdGraph, our GraphQL endpoint. This can be queried using NerdGraphQuery. To simplify use of NerdGraph queries, we provide some components with pre-defined queries. For more on using NerdGraph, see Queries and mutations. We also provide storage for storing small data sets, such as configuration settings data, or user-specific data. For more on this, see NerdStorage. Platform APIs The Platform API components of the New Relic One SDK enable your application to interact with different parts of the New Relic One platform, by reading and writing state from and to the URL, setting the configuration, etc. They can be divided into these categories: PlatformStateContext: provides read access to the platform URL state variables. Example: timeRange in the time picker. navigation: an object that allows programmatic manipulation of the navigation in New Relic One. Example: opening a new Nerdlet. NerdletStateContext: provides read access to the Nerdlet URL state variables. Example: an entityGuid in the entity explorer. nerdlet: an object that provides write access to the Nerdlet URL state.",
      "type": "developer",
      "document_type": "page",
      "info": "Intro to New Relic One API components",
      "sections": [
        "Intro to New Relic One API components",
        "Components of the New Relic SDK",
        "UI components",
        "Chart components",
        "Query and storage components",
        "Platform APIs"
      ],
      "title": "Intro to New Relic One API components",
      "popularity": 1,
      "external_id": "3620920c26bcd66c59c810dccb1200931b23b8c2",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/intro-to-sdk/",
      "published_at": "2020-08-13T01:49:29Z",
      "updated_at": "2020-08-08T01:40:45Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.019122131,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Intro</em> <em>to</em> New Relic One API components",
        "sections": "<em>Intro</em> <em>to</em> New Relic One API components",
        "info": "<em>Intro</em> <em>to</em> New Relic One API components",
        "body": " <em>storage</em> for storing small data sets, such as configuration settings data, or user-specific data. For more on this, see <em>NerdStorage</em>. Platform APIs The Platform API components of the New Relic One SDK enable your application to interact with different parts of the New Relic One platform, by reading"
      },
      "id": "5efa989e28ccbc4071307de5"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic CLI - 0.6.0 Build on New Relic Developer Toolkit developertoolkit ctrombley April 3, 2020, 10:00pm #1 newrelic-cli v0.6.0 has been released with support for NerdStorage, a document store for New Recic One Nerdpacks. Read more about Nerdstorage here: https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage [v0.6.0] - 2020-04-02 Features nerdstorage: add command for managing nerdstorage documents NerdStorage Access Outside of Nerdlet Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "New Relic CLI - 0.6.0",
        "[v0.6.0] - 2020-04-02",
        "Features"
      ],
      "title": "New Relic CLI - 0.6.0 - Developer Toolkit - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "2e371da8d83e1947bc110a7c8525cd54fd6911a9",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/new-relic-cli-0-6-0/98839",
      "published_at": "2020-08-11T12:20:42Z",
      "updated_at": "2020-07-19T03:17:09Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.011305277,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic CLI - 0.6.0 - Developer <em>Toolkit</em> - New Relic Explorers Hub",
        "body": " has been released with support for <em>NerdStorage</em>, a document store for New Recic One Nerdpacks. Read more about <em>Nerdstorage</em> here: https:&#x2F;&#x2F;developer.newrelic.com&#x2F;build-tools&#x2F;new-relic-one-applications&#x2F;<em>nerdstorage</em> [v0.6.0] - 2020-04-02 Features <em>nerdstorage</em>: add command for managing <em>nerdstorage</em> documents <em>NerdStorage</em> Access Outside of Nerdlet Home Categories FAQ&#x2F;Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled"
      },
      "id": "5e89331228ccbc91c139e326"
    }
  ],
  "/explore-docs/query-and-store-data": [
    {
      "body": "Query data with NRQL 10 min With NRQL, you can query any of the default event data being reported by New Relic, plus any custom events and attributes you’ve added. Step 1 of 4 NRQL syntax is comparable to ANSI SQL. Learn more about NRQL syntax SELECT function(attribute) [AS 'label'][, ...] FROM event [WHERE attribute [comparison] [AND|OR ...]][AS 'label'][, ...] [FACET attribute | function(attribute)] [LIMIT number] [SINCE time] [UNTIL time] [WITH TIMEZONE timezone] [COMPARE WITH time] [TIMESERIES time] Copy Step 2 of 4 NRQL queries can be as simple as fetching rows of data in a raw tabular form to inspect individual events. Learn what events New Relic opensource agents provide out of the box -- Fetch a list of New Relic Browser PageView events SELECT * FROM PageView Copy Step 3 of 4 NRQL queries can also do extremely powerful calculations before the data is presented to you, such as crafting funnels based on the way people actually use your website. Learn more about NRQL funnels -- See how many users visit, signup, browse and purchase from your site as a funnel SELECT funnel(session, WHERE pageUrl='http://www.demotron.com/' AS 'Visited Homepage', WHERE pageUrl='http://www.demotron.com/signup' AS 'Signed Up', WHERE pageUrl='http://www.demotron.com/browse' AS 'Browsed Items', WHERE pageUrl='http://www.demotron.com/checkout' AS 'Made Purchase') FROM PageView SINCE 12 hours ago Copy Step 4 of 4 Using NRQL, you can customize your New Relic experience by crafting diverse dashboards in New Relic One that show your data from multiple angles. These dashboards can be shared with technical and non-technical stakeholders alike. Learn more and start building Documentation For an overview of NRQL syntax, see Introduction to NRQL. For a detailed description of all available functions, see NRQL syntax, components, and functions. NRU Tutorials To learn how to query and narrow a large data store by a specific parameter, watch the tutorial on Filtering queries with NRQL. Community Forum Connect with other developers in the New Relic Explorers Hub. GitHub For examples of integrations and other technologies, check us out on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Query default event data as well as custom events and attributes with our powerful, SQL-like query language. Start querying now.",
      "sections": [
        "Query data with NRQL",
        "Learn more and start building",
        "Documentation",
        "NRU Tutorials",
        "Community Forum",
        "GitHub"
      ],
      "title": "Query data with NRQL",
      "popularity": 1,
      "external_id": "7bb23b086badd7a572964357aad776116f5bfbbe",
      "image": "https://developer.newrelic.com/static/eb2adf50e7680e8ba5b7daaf06c203d1/757a2/nr1-dashboard.png",
      "url": "https://developer.newrelic.com/collect-data/query-data-nrql/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-01T01:39:59Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.03883258,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Query</em> <em>data</em> with NRQL",
        "sections": "<em>Query</em> <em>data</em> with NRQL",
        "info": "<em>Query</em> default event <em>data</em> as well as custom events <em>and</em> attributes with our powerful, SQL-like <em>query</em> language. Start <em>querying</em> now.",
        "body": " functions, see NRQL syntax, components, and functions. NRU Tutorials To learn how to <em>query</em> and narrow a large <em>data</em> <em>store</em> by a specific parameter, watch the tutorial on Filtering queries with NRQL. Community Forum Connect with other developers in the New Relic Explorers Hub. GitHub For examples of integrations and other technologies, check us out on GitHub."
      },
      "id": "5efa999ce7b9d29f377bab69"
    },
    {
      "body": "Products Pricing Solutions Help Center About Search icon Search the blog Monitor New Relic from your phone or tablet Learn more or download using the links below. New Relic app for iOS or Android    New Relic Insights app for iOS or Android    Log In Sign Up Search icon Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore Open Source Projects Training Get Help Community Forum Global Technical Support Expert Services About Our CustomersOver 15,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our BlogThe latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look The Who and What of GoGaRuCo 2012 By Chris Kelly • Oct. 22nd, 2012 • Software Engineering app performance, events, New Relic News, Rails Tweet Share Share So you didn’t make it to GoGaRuCo in San Francisco this year. That’s okay. We’ve got you covered. The wonderful Confreaks team has already made all of the session videos available. And if you have nine hours to spare you should watch each and every one of them. If you’re anything like me though, your “to watch list” never gets any shorter. Read on to discover a few of our favorites if you don’t have time to watch the entire conference. The Best in Show award goes to Heather Rivers for Linguistic Potluck: Crowdsourcing Localization in Rails. If you only watch one session, make it this one. You’ll learn about linguistics as well as Rails internationalization. Heather had a great stage presence, clear slides and a surprisingly interesting problem to solve. What makes this session all the more impressive is that this was Heather’s first time speaking at a conference. If you’re looking to do heavy internationalization work, then you should be looking at the Rails engine Tr8n. Avdi Grimm’s session Code to Joy had the highest code to slide ratio of the conference. Avdi explored some hidden gems within Ruby (no pun intended) that make writing code a joyful experience. Watch his presentation for some insight into the splat operator, implicit splatting and to_ary. If you’re looking for a dead simple datastore, then YAML::Store is a great choice. But if you need a little more speed and aren’t concerned with reading the file, take a look at PStore instead. To turn any “collection” into an Enumberable with to_enum, you’ll just need an each method. Then you can use all of the magic Enumerable has to offer. You’ve likely used break within a while or loop block, but that’s just the tip of the iceberg. Forwardable gives you the ability to delegate methods to another object and method. Here you can give your objects a custom interface without having to do the heavy lifting. People Patterns from Joe O’Brien reminded us of the human component to software development. For all the time we spend making technical decisions, we should remember that projects and companies don’t fail or succeed because of technical reasons. That’s not to say we should spend less time making technical decision, but rather that we should spend more time working on the human decisions. Joe Kutner told us why we shouldn’t be afraid of JRuby in Deploy, Scale and Sleep at Night with JRuby. Using JRuby doesn’t mean you’ll need to write Java or XML, all it means is that you are running Ruby on the Java Virtual Machine. Running an MRI application on Passenger or Unicorn poses a couple issues including memory growth, requiring shared session state and managing database connection pools. Joe identifies the GIL in MRI as the root of these pain points. His suggested solution is to use a runtime that doesn’t have a GIL like JRuby. That’s not to say switching to JRuby will instantly send rainbows flying out of your application. You’ll need to get your app to be compatible with JRuby first. The biggest hurdle to overcome is resolving any dependency conflicts you may have, but luckily the JRuby-Lint gem can identify those for you. The way you deploy your application may change a bit as well, but that’s likely a minor consideration. If you want even more JRuby, then be sure to watch High Performance Ruby from Charles Nutter. Carina Zona challenged us to rethink our schemas to better reflect the real world. Her insightful session highlighted the assumptions we make about the world, particularly about relationships and sexual identity, through our technical decisions. When designing our applications, we should focus on modeling the world as it is, and worry less about how we’ll store and query the data. We can extrapolate out this idea further when thinking about software design. Instead of viewing our applications as interfaces to a datastore, they should be interfaces to our world. Storing the data is the easy part, writing our applications so that they are flexible to our dynamic world is much harder. (If you’d like to learn more about this topic, you should also check out Sandi Metz’s talk Go Ahead, Make a Mess.) Today’s monolithic Rails applications are a little like a “… mule with a spinning wheel. Nobody knows how we got it and danged if we know how to use it.” If you’ve spent a couple years doing Rails application development, you’ve almost certainly worked on an app of this type. Jack Danger Canty shared Square’s experience in Mega Rails by taking their monolithic Rails app down into smaller services. Jack rephrases Conway’s Law as “the shape of your people defines the shape of the products they make.” Ownership is the linchpin to tackling the monorail. Give a team clearly defined ownership of code and build interfaces around that ownership. Just as we write DRY code, we should be working in DRY teams. Cargo Cult Web Performance Optimization, presented by Ilya Grigorik, was a call to arms to understand what’s going on in the browser. This is especially true if you are working on rich client-side applications. While we have a strong understanding of how the server executes our code, we also need to have a deep understanding of how the client (browser) executes our code. Don’t look at the browser as a black box, but instead start to look at it as a full operating system that your applications run in. New Relic was proud to be a sponsor of GoGaRuCo 2012. And we’re already counting down to GoGaRuCo 2013. See you there. app performance, events, New Relic News, Rails View posts by Chris Kelly. The views expressed on this blog are those of the author and do not necessarily reflect the views of New Relic. Any solutions offered by the author are environment-specific and not part of the commercial solutions or support offered by New Relic. Please join us exclusively at the Explorer’s Hub (discuss.newrelic.com) for questions and support related to this blog post. This blog may contain links to content on third-party sites. By providing such links, New Relic does not adopt, guarantee, approve or endorse the information, views or products available on such sites. Interested in writing for New Relic Blog? Send us a pitch! Related Posts Company Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal Connect Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "blog",
      "info": "",
      "sections": [
        "The Who and What of GoGaRuCo 2012",
        "Related Posts",
        "Company",
        "Connect",
        "international"
      ],
      "title": "The Who and What of GoGaRuCo 2012 - New Relic Blog",
      "popularity": 1,
      "external_id": "9883096b4eba0fecbbb7a6a405b58b17328133a5",
      "image": "http://newrelic-wpengine.netdna-ssl.com/wp-content/uploads/gogaruco_joekutner.png",
      "url": "https://blog.newrelic.com/engineering/the-who-and-what-of-gogaruco-2012/",
      "published_at": "2020-08-11T08:02:36Z",
      "updated_at": "2020-07-31T10:03:08Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.012117346,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "The Who <em>and</em> What of GoGaRuCo 2012 - New Relic Blog",
        "sections": "The Who <em>and</em> What of GoGaRuCo 2012",
        "body": " as it is, and worry less about how we’ll <em>store</em> and <em>query</em> the <em>data</em>. We can extrapolate out this idea further when thinking about software design. Instead of viewing our applications as interfaces to a datastore, they should be interfaces to our world. Storing the <em>data</em> is the easy part, writing our applications so"
      },
      "id": "5b658e8eb5b9e107deb4789a"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Use NrqlQuery component to execute query and store result in nerdlets Build on New Relic Nerdpacks nrql nerdpack sikharam May 6, 2020, 1:07am #1 Is it possible to use the NrqlQuery component to execute a query and store the result of it? sikharam May 5, 2020, 11:20pm #2 I’m trying to get the results of one query, and then use the results in other queries/operations… RyanVeitch May 6, 2020, 8:50am #3 Hey @sikharam that should absolutely be possible! There is an example of similar happening here: Is it possible to query the Insights API from a Nerdpack? Nerdpacks I can’t diagnose the invariant violation in this setting, but I can verify that the following code works, using the NerdGraphQuery static method and models the idea of using an initial query to feed a secondary query in the render. Maybe this is helpful. import React from 'react'; import { Spinner, NerdGraphQuery } from 'nr1'; import { NerdGraphError } from '@newrelic/nr1-community'; import gql from \"graphql-tag\"; import get from 'lodash.get'; import camelCase from 'lodash.camelcase'; // http… I see that this is using NerdGraphQuery rather than NrqlQuery, but, this NerdGraph Query is querying NRQL data, and the same result chaining should be possible in the NRQL query component. 1 Like sikharam May 6, 2020, 6:19pm #4 That works! Thank you! 1 Like RyanVeitch May 7, 2020, 6:56am #5 Awesome! Thanks for confirming Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Use NrqlQuery component to execute query and store result in nerdlets"
      ],
      "title": "Use NrqlQuery component to execute query and store result in nerdlets - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "8bf23a29e60f7ef15ebd24d982166ad7540e98d4",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/use-nrqlquery-component-to-execute-query-and-store-result-in-nerdlets/101450",
      "published_at": "2020-08-11T17:17:45Z",
      "updated_at": "2020-07-23T02:43:53Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.009031923,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Use NrqlQuery component to execute <em>query</em> <em>and</em> <em>store</em> result in nerdlets - Nerdpacks - New Relic Explorers Hub",
        "sections": "Use NrqlQuery component to execute <em>query</em> <em>and</em> <em>store</em> result in nerdlets",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Use Nrql<em>Query</em> component to execute <em>query</em> and <em>store</em> result in nerdlets Build on New Relic Nerdpacks nrql nerdpack sikharam May 6"
      },
      "id": "5eb2c51c28ccbcd7f7c213ce"
    },
    {
      "body": "Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Using NerdStorage, you can create individual documents of up to 64kb in size, create different collections of documents, and store data by entity, account, or user level. This guide explains how to add data and documents to NerdStorage. For an introduction to what NerdStorage is and how it works, see Intro to NerdStorage. Before you begin This guide requires that you have an API key and the New Relic One CLI as described in Set up your development environment. Get started First, get the NerdStorage app running successfully inside New Relic One. Step 1 of 3 Clone the example applications from the GitHub repo. Step 2 of 3 Use the New Relic One CLI to update the application UUID and run the application locally. In the terminal, switch to the /nr1-howto/use-nerdstorage directory: cd / nr1 - howto / use - nerdstorage; Copy Update the UUID and serve the application: nr1 nerdpack:uuid -gf nr1 nerdpack:serve Copy Step 3 of 3 Once the app is successfully served, your terminal will return the URL to view your running application on New Relic One. Load the URL. Under Your applications you'll see the Use Nerdstorage app listed. Click to launch the app. Add data to NerdStorage Once the app is up and running on New Relic One, you can prepare the app and start adding data. On the How To Use NerdStorage app screen, there's a Saved to NerdStorage pane with a field for adding data. However, if you type something you'll get an error message. This is because you need to be set up to store data at the User level. You can do this with the help of the UserStorageMutation component. Step 1 of 3 Open the application’s ./nerdlets/use-nerdstorage-nerdlet/index.js file in the text editor of your choice and find the code for the TextField and Button used to enter data. The Button onClick prop makes a call to a helper method called _addToNerdStorage, and you need to update it to add UserStorageMutation The UserStorage NerdStorage components require a collection and documentId. In the constructor method in the application’s index.js file, you can see the variables being provided. In the .js file, it will look something like this: constructor(props) { super(props) this.collectionId = 'mycollection'; this.documentId = 'learning-nerdstorage'; this.state = { isOpen: true, storage: [], text: '', }; this._addToNerdStorage = this._addToNerdStorage.bind(this); this._removeFromNerdStorage = this._removeFromNerdStorage.bind(this); this._deleteDocument = this._deleteDocument.bind(this); } Copy Step 2 of 3 Import the UserStorageMutation by adding it to your import statement at the top of the index.js file: import { UserStorageMutation } from 'nr1'; Copy Then update the helper with this code beginning with _addToNerdStorage: _addToNerdStorage(){ const { text, storage } = this.state; storage.push(text); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { this.setState({text: ''}); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Copy Step 3 of 3 Return to your running How To Use NerdStorage app screen on New Relic One and reload the page. Add some text in the text entry field and click the check button. This will update NerdStorage and trigger a Toast notification inside the app. You should then see the text you typed displayed as a table row below the text entry field. Query data from NerdStorage Once you get data storage working as described in the section above, you also need to get the app properly reading data from NerdStorage, or the app will reload with an empty state every time you navigate away from the app page and back. To do this, add the UserStorageQuery component and update the componentDidMount method. Step 1 of 3 Import the UserStorageQuery by adding it to the import statement in the application’s ./nerdlets/use-nerdstorage-nerdlet/index.js file. import { UserStorageMutation, UserStorageQuery } from 'nr1'; Copy Step 2 of 3 Then, add the following componentDidMount method to your application: componentDidMount(){ UserStorageQuery.query({ collection: this.collectionId, documentId: this.documentId, }) .then(({ data }) => { if(data !== null) { this.setState({storage: data.storage}); } }) .catch(err => console.log(err)); } Copy Step 3 of 3 Back inside the NerdStorage app, test your changes by adding a few more rows using the text entry field. Then exit and relaunch the application. The application should load and show all the data you entered before you navigated away. Mutate data in NerdStorage Each NerdStorage entry displayed in the table inside the app has a trash button that can be used to update a specific entry. The trash button works by making a call to the _removeFromNerdStorage helper method. Step 1 of 1 To get this process working, update the code in _removeFromNerdStorage: _removeFromNerdStorage(index, data){ const { storage } = this.state; storage.pop(data); this.setState({storage}, () => { UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, document: { storage }, }) .then((res) => { Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.NORMAL }); }) .catch((err) => console.log(err)); }); } Copy Once this is done, clicking the trash button will remove the item it's associated with, and the app will update to show the change. Delete collection from NerdStorage While the trash button is a good method for removing specific entries one at a time, you may also want the ability to delete a whole NerdStorage document at once. You can do this by adding the Delete Document button to your app. Step 1 of 2 Add a new GridItem to the application immediately before the closing Grid tag. In the new GridItem add the following code to display your new button: <Button onClick={() => this._deleteDocument()} type={Button.TYPE.DESTRUCTIVE} sizeType={Button.SIZE_TYPE.SMALL} iconType={Button.ICON_TYPE.INTERFACE__OPERATIONS__TRASH} > Delete Document </Button>; Copy Step 2 of 2 As the new Delete Document button will be calling the _deleteDocument helper method, you'll need to update that using the code below: _deleteDocument(){ this.setState({storage: []}); UserStorageMutation.mutate({ actionType: UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT, collection: this.collectionId, documentId: this.documentId, }); Toast.showToast({ title: \"NerdStorage Update.\", type: Toast.TYPE.CRITICAL }); } Copy Back inside the application, you should now see both the individual trash buttons and the newly added Delete Document button. Next steps Now that you’ve successfully implemented NerdStorage into a New Relic One application, you can store and mutate data connected to your User. For more information on the various NerdStorage components, please visit the New Relic developer website API documentation.",
      "type": "developer",
      "document_type": "page",
      "info": "NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next.",
      "sections": [
        "Add, query, and mutate data using NerdStorage",
        "Before you begin",
        "Get started",
        "Add data to NerdStorage",
        "Query data from NerdStorage",
        "Mutate data in NerdStorage",
        "Delete collection from NerdStorage",
        "Next steps"
      ],
      "title": "Add, query, and mutate data using NerdStorage",
      "popularity": 1,
      "external_id": "97cc9637edea35ecd68683f1010f67a5f8c79038",
      "image": "https://developer.newrelic.com/static/e03456a7ed8556f83bd3329ea38b261d/8f217/add-data-NerdStorage.png",
      "url": "https://developer.newrelic.com/build-apps/add-query-mutate-data-nerdstorage/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.008786911,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Add, <em>query</em>, <em>and</em> mutate <em>data</em> using NerdStorage",
        "sections": "Add, <em>query</em>, <em>and</em> mutate <em>data</em> using NerdStorage",
        "info": "NerdStorage is a document <em>database</em> accessible within New Relic One. It allows you to modify, save, <em>and</em> retrieve documents from one session to the next.",
        "body": "Add, <em>query</em>, and mutate <em>data</em> using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Using NerdStorage, you can create individual documents of up to 64kb in size, create different"
      },
      "id": "5efa98d4e7b9d26d6b7bab74"
    },
    {
      "body": "When metrics are reported to New Relic via the Metric API (including from integrations that use that API), the data is reported as the Metric data type and is available for querying. This document contains: How to view and query your metrics Example metric queries How to query multiple metrics with wildcards How to explore metric data Query APM metric timeslice data New Relic APM reports a specific type of data that we call metric timeslice data. For how to query that, see Query metric timeslice data. For information about other types of metrics, see Metric data types. View and query your metrics You can use NRQL to query your metric data in the New Relic One query builder or using our NerdGraph API. To query a metric, use the following query format: FROM Metric SELECT function(metric_name) WHERE attribute=value FACET attribute TIMESERIES Below are the functions supported for each metric type: Metric type Supported functions Summary count, sum, min, max, and average Count sum Gauge count, sum, min, max, average, and latest Add the names of the metrics you want to chart with the appropriate value functions in the SELECT clause. The WHERE and FACET clauses can be used with attribute values. Remember to include the keyword TIMESERIES if you want to chart the data. This example demonstrates how you could chart the CPU usage in seconds for cluster foo . This query breaks down CPU usage by container, given a count metric named container_cpu_usage_seconds_total with the attributes containerName and clusterName: FROM Metric select sum(container_cpu_usage_seconds_total) WHERE clusterName = 'foo' FACET containerName TIMESERIES If you want the CPU usage per minute (the rate of change), then you can add the rate function to the query above. FROM Metric select rate(sum(container_cpu_usage_seconds_total), 1 minute) WHERE clusterName = 'foo' FACET containerName TIMESERIES View example metric queries The previous examples demonstrate basic forms of metric queries, but NRQL can also be used to chart, explore, and analyze metric data. Chart multiple metrics Chart multiple metrics using a single query by providing a comma-separated list of metrics in the SELECT clause. For example, to chart the memory usage for a container along with the memory limit metric, use the following query: FROM Metric SELECT latest(container_memory_usage_bytes), latest(container_spec_memory_limit_bytes) WHERE containerName = 'inventory' TIMESERIES You can also do this using wildcards, as explained below. Perform mathematical operations on metric data Perform math operations on one or more metrics to compute a new, derived metric. To monitor available memory, you can calculate the percentage of available memory from the two metrics used in the previous example: FROM Metric SELECT (latest(container_spec_memory_limit_bytes) - latest(container_memory_usage_bytes)) / latest(container_spec_memory_limit_bytes) * 100 AS '% Memory Available' WHERE containerName = 'inventory' TIMESERIES You can also do this using wildcards, as explained below. Use filters to select specific time series In addition to using a WHERE clause which applies to everything in SELECT, NRQL provides another aggregation function called filter which can be used to select a specific time series to be charted or operated on. The following example charts a memory usage metric labeled \"Total (k8s)\" which is computed by adding together the memory usage of two specific containers within a pod: FROM Metric SELECT filter( latest( container_memory_usage_bytes), WHERE containerName = 'discovery') + filter( latest( container_memory_usage_bytes), WHERE containerName = 'istio-proxy') AS 'Total (k8s)' WHERE clusterName = 'my-cluster' AND podName LIKE 'istio-pilot-%' TIMESERIES View the raw metric data points When querying metric data using FROM Metric, New Relic automatically selects the specific aggregate to use in the query, depending on the length of the query window and any bucket size specified as an argument to the TIMESERIES keyword. This ensures efficient querying and chart resolution. If you want to override this behavior to view or operate on the raw metric data points, use the optional RAW keyword in your query. When querying these raw metric data points, there is a query time window limit of 48 hours. Any query attempting to access more than 48 hours of raw metric data will result in a query error. This example shows how to list the last 20 data points received for a particular metric: FROM Metric SELECT * WHERE metricName = 'container_fs_usage_bytes' LIMIT 20 RAW Query multiple metrics with wildcards Wildcards are represented in NRQL by the % character. If you want to query multiple metrics that use a standard naming convention, you can use the wildcard feature to return results for all of them without having to specify each metric name individually. Wildcards can help you: Aggregate metrics together and chart the results​ FACET results by metric name in a chart Find and chart all metrics matching a given naming convention Wildcards are particularly helpful if you later add new metrics matching an existing naming convention. By using % instead of writing out each metric name in your query, you won't have to rewrite the query when you add new metrics. Let's say you have multiple algorithms that perform a similar task. You can define the following metrics, which show the duration of the different algorithms: myNeatProcess.algorithm1.duration myNeatProcess.algorithm2.duration myNeatProcess.algorithm3.duration If used in a query, myNeatProcess.%.duration will return results for all three of the algorithms above. If you later create new algorithms named algorithm4, algorithm5, and algorithm6, the same query will return results for all six algorithms. Chart multiple metrics with wildcards You can chart multiple metrics using a single query by using wildcards (%) in the SELECT clause. For example, to query all the algorithms in the example above and plot a line on the chart for each algorithm's average duration, use the following query: FROM Metric SELECT average(myNeatProcess.%.duration) FACET metricName TIMESERIES Perform mathematical operations on metric data with wildcards You can also use wildcards to perform math operations on multiple metrics and compute a new metric. You can calculate the mean duration for all algorithms listed in the example above: FROM Metric SELECT average(myNeatProcess.%.duration) TIMESERIES You can calculate what percentage of overall runtime a single algorithm takes: FROM Metric SELECT myNeatProcess.algorithm1.duration / sum(myNeatProcess.%.duration) TIMESERIES Explore metric data The NRQL keyset and uniques functions can be used together with the metricName attribute (available on all metrics) to perform tasks like listing all the available metrics in your account or discovering the attributes available on a particular metric. List all metric names in an account FROM Metric SELECT uniques(metricName) List all metric names for a particular host FROM Metric SELECT uniques(metricName) WHERE hostname = 'host1.mycompany.com' Show the attribute keys for a specific metric FROM Metric SELECT keyset() WHERE metricName = METRIC_NAME For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Query your data / NRQL: New Relic Query Language / NRQL query tutorials",
      "info": "How to query New Relic's Metric data type, which is reported by our Metric API and the integrations that use it. ",
      "nodeid": 35956,
      "sections": [
        "NRQL: New Relic Query Language",
        "Get started",
        "NRQL query tools",
        "NRQL query tutorials",
        "Query the Metric data type",
        "Query APM metric timeslice data",
        "View and query your metrics",
        "View example metric queries",
        "Query multiple metrics with wildcards",
        "Explore metric data",
        "For more help"
      ],
      "title": "Query the Metric data type",
      "popularity": 1,
      "external_id": "da71db0251b27d1c4d2c9d4b8154e2a4e0c9e0c3",
      "category_1": "NRQL: New Relic Query Language",
      "category_2": "NRQL query tutorials",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/get-data/apis/query-metric-data-type",
      "published_at": "2020-08-11T00:11:05Z",
      "updated_at": "2020-08-03T13:34:47Z",
      "category_0": "Query your data",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.00820913,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Query</em> the Metric <em>data</em> type",
        "sections": "<em>Query</em> the Metric <em>data</em> type",
        "info": "How to <em>query</em> New Relic&#x27;s Metric <em>data</em> type, which is reported by our Metric API <em>and</em> the integrations that use it. ",
        "category_0": "<em>Query</em> your <em>data</em>",
        "category_1": "NRQL: New Relic <em>Query</em> Language",
        "category_2": "NRQL <em>query</em> tutorials",
        "body": "When metrics are reported to New Relic via the Metric API (including from integrations that use that API), the <em>data</em> is reported as the Metric <em>data</em> type and is available for querying. This document contains: How to view and <em>query</em> your metrics Example metric queries How to <em>query</em> multiple metrics",
        "breadcrumb": "Contents &#x2F; <em>Query</em> your <em>data</em> &#x2F; NRQL: New Relic <em>Query</em> Language &#x2F; NRQL <em>query</em> tutorials"
      },
      "id": "5efdd99528ccbc94fa307dca"
    }
  ],
  "/collect-data/custom-attributes": [
    {
      "body": "New Relic allows you to collect custom attributes. For example, you can create a custom attribute to track the user name associated with a slow or failing request. This document contains links to docs on how to do this for APM, infrastructure monitoring, browser monitoring, and mobile monitoring. APM: Record custom attributes Review the list of reserved terms used by NRQL. Using reserved terms can cause issues. To enable and use custom attributes for APM, follow the procedure for your APM agent: C SDK To add custom attributes to applications monitored by the C SDK, call one of the attribute functions; for example, newrelic_add_attribute_double(). The key name for your custom attribute depends on what you specify when you call the function. Go Custom attribute collection is enabled by default in the Go agent. However, you can disable custom attribute collection. Java Custom attribute collection is enabled by default in Java. You can collect custom attributes using XML and the Java agent APIs. These two methods can be used in conjunction with each other. Method How to do it Specify attributes in XML XML allows you to specify custom attributes without changing any of your source code. You can have multiple XML files for custom attributes that are grouped by some logical facet. To set custom attributes for your Java app via XML: Review the New Relic Java agent's documentation about XML file format, methods and classes, and examples. From your Extensions directory within the New Relic Java agent, create a single XML file. Define the methods you want New Relic to monitor by editing your XML file directly. Define an XML instrumentation file using the New Relic UI. This may require additional config in the common: block of your newrelic.yml. See Report custom attributes under Instrumentation options for more detail. Call the agent's API Example 1: Adding custom attributes to transactions To collect custom attributes using the agent's API, call the relevant methods: For each method you want to record an attribute for, call NewRelic.addCustomParameter(...). Optional: Include or exclude certain attributes with attributes.include and attributes.exclude. For example, to record a variable named userId, include this code in the parent method: NewRelic.addCustomParameter(\"userId\", userId); Example 2: Adding custom attributes to spans in distributed traces To collect custom attributes using the agent's API, call the relevant methods: For each span (currently executing method) that you want to record an attribute for, call NewRelic.getAgent().getTracedMethod().addCustomAttribute(...). Optional: Include or exclude certain attributes with span_events.attributes.include and span_events.attributes.exclude. For example, to record a variable named userId on the current span, include this code in the associated method: NewRelic.getAgent().getTracedMethod().addCustomAttribute(\"userId\", userId); Collect user attributes The Java agent also includes a built-in mechanism to enable user attributes and collect user information from HttpServletRequest.getUserPrincipal() as custom attributes. .NET Custom attribute collection is enabled by default in .NET. To collect custom attributes, call the relevant API methods: For each method for which you want to record an attribute, call AddCustomAttribute. Optional: Include or exclude attributes with the include and exclude configuration options. For example, to record attributes for a coupon code (string) and an item ID code (number), you could include this code in the parent method: IAgent agent = NewRelic.Api.Agent.NewRelic.GetAgent(); ITransaction transaction = agent.CurrentTransaction; transaction .AddCustomAttribute(\"Discount Code\", \"Summer Super Sale\") .AddCustomAttribute(\"Item Code\", 31456); Node.js Custom attribute collection is enabled by default in Node.js. To collect custom attributes, call the relevant API method: For each attribute you want to record, call newrelic.addCustomAttribute. To record multiple attributes using a single call, use newrelic.addCustomAttributes. For example, to record attributes for a coupon code and an item ID code, you could include this in the parent method: newrelic.addCustomAttributes({ \"Discount Code\": \"Summer Super Sale\", \"Item Code\": 31456 }); PHP Custom attribute collection is enabled by default in PHP. To collect custom attributes, call the relevant API method for each method that you want to record an attribute; newrelic_add_custom_parameter for transaction events and spans newrelic_add_custom_span_parameter for only spans For example, to record a variable named $userId, include this code in the parent method: newrelic_add_custom_parameter ('userID', $userId) Python Custom attribute collection is enabled by default in Python. To collect custom attributes, call add_custom_parameter for each method that you want to record an attribute. For example, to record a variable named user_id, include this code in the parent method: newrelic.agent.add_custom_parameter('user_id', user_id) Ruby Custom attribute collection is enabled by default in Ruby. To collect custom attributes, call the relevant API methods: For Ruby agent version 3.12.0 or higher, use the add_custom_attributes method. For example, to record a variable named @user_id, include this code in the parent method: ::NewRelic::Agent.add_custom_attributes({ user_id: @user.id }) For Ruby agent version 3.11.2 or lower, use the add_custom_parameters method. For example, to record a variable named @user_id, include this code in the parent method: ::NewRelic::Agent.add_custom_parameters({ user_id: @user.id }) Browser monitoring: Record custom attributes The browser agent provides an API to specify extra details associated with a page view or browser interaction, either by forwarding attributes from APM to browser monitoring or by specifying custom attributes through JavaScript. Values forwarded from the APM agent are encoded and injected into browser attributes by our browser agent. Infrastructure monitoring: Record custom attributes Our Infrastructure monitoring lets you create custom attributes that are used to annotate the data from the infrastructure agent. You can use this metadata to build filter sets, group your results, and annotate your data. Mobile monitoring: Record custom attributes Mobile agents include API calls to record custom attributes: For an overview of mobile monitoring custom data, see Insert custom events and attributes Android method: setAttribute iOS method: setAttribute For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Using New Relic / Cross-product functions / Install and configure",
      "info": "How to add custom attributes to data reported from some New Relic products. ",
      "nodeid": 2726,
      "sections": [
        "Cross-product functions",
        "Install and configure",
        "Troubleshooting",
        "Collect custom attributes",
        "APM: Record custom attributes",
        "Browser monitoring: Record custom attributes",
        "Infrastructure monitoring: Record custom attributes",
        "Mobile monitoring: Record custom attributes",
        "For more help"
      ],
      "title": "Collect custom attributes",
      "popularity": 1,
      "external_id": "5a43638e8ef969ce9f0b16fedf433317e67bb4a6",
      "category_1": "Cross-product functions",
      "category_2": "Install and configure",
      "image": "",
      "url": "https://docs.newrelic.com/docs/using-new-relic/data/customize-data/collect-custom-attributes",
      "published_at": "2020-08-11T00:28:22Z",
      "updated_at": "2020-08-11T00:28:22Z",
      "category_0": "Using New Relic",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1.0378852,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Collect <em>custom</em> <em>attributes</em>",
        "sections": "Collect <em>custom</em> <em>attributes</em>",
        "info": "How to add <em>custom</em> <em>attributes</em> to data reported from some New Relic products. ",
        "body": ". APM: Record <em>custom</em> <em>attributes</em> Review the list of reserved terms used by <em>NRQL</em>. Using reserved terms can cause issues. To enable and use <em>custom</em> <em>attributes</em> for APM, follow the procedure for your APM agent: C SDK To add <em>custom</em> <em>attributes</em> to applications monitored by the C SDK, call one of the attribute"
      },
      "id": "5e9a9d9728ccbc90cdd949ca"
    },
    {
      "body": "In New Relic, attributes are key-value pairs containing information that determines the properties of an event or transaction. These key-value pairs can help you gain greater insight into your application and query your data in New Relic Insights. View and use attributes Both default APM attributes and custom attributes for your C application appear in: New Relic APM transaction traces and error analytics APM events in Insights C-specific attributes Before creating custom attributes, review New Relic's list of reserved terms used by NRQL and Insights. Otherwise unexpected results may occur. To add custom attributes to your C application, call one of the attribute functions in the C SDK API; for example, newrelic_add_attribute_double(). The key name for your custom attribute depends on what you specify when you call the function. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / APM agents / C SDK / Instrumentation",
      "info": "You can create custom attributes for your C app to supplement the New Relic event data that automatically includes default APM attributes.",
      "nodeid": 15891,
      "sections": [
        "C SDK",
        "Get started",
        "Install and configure",
        "Instrumentation",
        "Troubleshooting",
        "Use default or custom attributes (C SDK)",
        "View and use attributes",
        "C-specific attributes",
        "For more help"
      ],
      "title": "Use default or custom attributes (C SDK)",
      "popularity": 1,
      "external_id": "45876c14a1d258566a824f7c49a50bb8c8fb709d",
      "category_1": "C SDK",
      "category_2": "Instrumentation",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/c-sdk/instrumentation/use-default-or-custom-attributes-c-sdk",
      "published_at": "2020-08-10T23:02:11Z",
      "updated_at": "2020-07-26T11:55:10Z",
      "category_0": "APM agents",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.5008368,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Use default or <em>custom</em> <em>attributes</em> (C SDK)",
        "sections": "Use default or <em>custom</em> <em>attributes</em> (C SDK)",
        "info": "You can create <em>custom</em> <em>attributes</em> for your C app to supplement the New Relic event data that automatically includes default APM <em>attributes</em>.",
        "body": " and <em>custom</em> <em>attributes</em> for your C application appear in: New Relic APM transaction traces and error analytics APM events in Insights C-specific <em>attributes</em> Before creating <em>custom</em> <em>attributes</em>, review New Relic&#x27;s list of reserved terms used by <em>NRQL</em> and Insights. Otherwise unexpected results may occur"
      },
      "id": "5cd8abf7e621f45d85a089a9"
    },
    {
      "body": "Collect data Through our opensource agents or APIs, New Relic makes it easy to collect data from any source. The guides in this section provide strategies for collecting and querying data for use in your existing New Relic implementation, or in apps you build. The opportunities are endless. Guides to collect data 5 min Create custom events Define, visualize, and get alerts on the data you want using custom events 15 min Collect data - any source APIs, agents, OS emitters - get any data   Add custom attributes Use custom attributes for deeper analysis 25 min Build queries with NerdGraph Try NerdGraph and build the queries you need 10 min Query data with NRQL Query default event data, custom events, and attributes",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Collect data",
        "Guides to collect data",
        "Create custom events",
        "Collect data - any source",
        "Add custom attributes",
        "Build queries with NerdGraph",
        "Query data with NRQL"
      ],
      "title": "Collect data",
      "popularity": 1,
      "external_id": "fb5d6f75b61858b09e3e8c63f3b2af97813f47b6",
      "image": "",
      "url": "https://developer.newrelic.com/collect-data/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-12T01:50:25Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.4750001,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Add <em>custom</em> <em>attributes</em>",
        "body": " to collect data 5 min Create <em>custom</em> events Define, visualize, and get alerts on the data you want using <em>custom</em> events 15 min Collect data - any source APIs, agents, OS emitters - get any data   Add <em>custom</em> <em>attributes</em> Use <em>custom</em> <em>attributes</em> for deeper analysis 25 min Build queries with NerdGraph Try NerdGraph and build the queries you need 10 min Query data with <em>NRQL</em> Query default event data, <em>custom</em> events, and <em>attributes</em>"
      },
      "id": "5efa997328ccbc768c307de2"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Query Results Bug / Custom Attributes Support: Telemetry Data Platform (TDP) Dashboards insights pchimbolo November 19, 2018, 8:36pm #1 I’m baffled! Running a simple PageView query against one of our custom attributes (search_query) and not getting accurate results… clearly! Using the query “SELECT * from PageView where search_query like ‘%lname=|%’” This should return results that have nothing in the “lname” parameter. However the results being shown to me in the query builder has results like “lname=ralston|”, but should only be returning results with an empty lname parameter (ex. “lname=|”). Why is this query not matching correctly? Helpful Resources: NRQL syntax, components, and functions Insights default data from other New Relic products NRQL Library full of queries our customers use every day 6MM November 19, 2018, 9:52pm #2 SELECT * from PageView where search_query = 'lname=|' Does that work? 2 Likes RyanVeitch November 20, 2018, 7:36am #3 Hey @pchimbolo - Adding to @6MM’s point, your query: SELECT * from PageView where search_query like ‘%lname=|%’ is running with wildcard characters, the % wildcard character before and after your search filter states to the query to search for anything that has the string lname=| in it, regardless of what comes before or after that string. This is why you are getting results that contain lname=ralston You may be better suited to search for something like: SELECT * from PageView where search_query like ‘%lname=|’ As @6MM Suggested 1 Like pchimbolo November 20, 2018, 2:47pm #4 OK, this bug is me! Turns out there was another parameter called “fullname” which obviously contains the text “lname”. That’s what I get for staring at the code all day and getting cross-eyed while losing sight of the obvious matching that was going on with that other parameter. Ugh!!! Thanks for the input guys. 1 Like RyanVeitch November 20, 2018, 2:49pm #5 Glad to hear you got it figured out Thanks for posting back here Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Query Results Bug / Custom Attributes"
      ],
      "title": "Query Results Bug / Custom Attributes - Dashboards - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "11d5d4e4d331796ddd1f168757198b8e2ee8950c",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/query-results-bug-custom-attributes/61961",
      "published_at": "2020-08-11T00:22:57Z",
      "updated_at": "2020-07-30T23:50:06Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.45381594,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Query Results Bug &#x2F; <em>Custom</em> <em>Attributes</em> - Dashboards - New Relic Explorers Hub",
        "sections": "Query Results Bug &#x2F; <em>Custom</em> <em>Attributes</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Query Results Bug &#x2F; <em>Custom</em> <em>Attributes</em> Support: Telemetry Data Platform (TDP) Dashboards insights pchimbolo November 19, 2018, 8:36pm"
      },
      "id": "5bf81a960cc37f89b90cbbc0"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Improve Syntax for Int Custom Attributes Support: Telemetry Data Platform (TDP) Dashboards nrql insights rfb icardenas November 28, 2017, 6:20pm #1 Hi, Can you allow us to set data types for custom attributes so we won’t have to put single quotes in every query if it’s int? For example: use select * from transaction where request.size > 0 since 8 days ago instead of select * from transaction where request.size > '0' since 8 days ago Not sure if we could alter the syntax but it would be great to make it similar to syntax used in different languages.[poll type=regular public=true] I’d love this feature! Disregard [/poll] philweber November 13, 2017, 9:26pm #2 Hi, @icardenas: How are you sending the attribute value to Insights? You should not have to put quotes around numeric values if you send them as numbers, rather than strings. 1 Like icardenas November 13, 2017, 9:28pm #3 Thanks Phil. I got what you mean. I’m sending it as Request.TotalBytes Isn’t that int? philweber November 14, 2017, 1:14am #4 Are you using the New Relic agent to send the attribute? Which programming language are you using? icardenas November 22, 2017, 10:32pm #5 I declared the custom attribute in our app’s global.asax c# Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Improve Syntax for Int Custom Attributes"
      ],
      "title": "Improve Syntax for Int Custom Attributes - Dashboards - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "5ed6d7ed735eaae0453b320d72c518bb965774e4",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/improve-syntax-for-int-custom-attributes/52938",
      "published_at": "2020-08-11T15:09:17Z",
      "updated_at": "2020-07-31T05:45:17Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.4466424,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Improve Syntax for Int <em>Custom</em> <em>Attributes</em> - Dashboards - New Relic Explorers Hub",
        "sections": "Improve Syntax for Int <em>Custom</em> <em>Attributes</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Improve Syntax for Int <em>Custom</em> <em>Attributes</em> Support: Telemetry Data Platform (TDP) Dashboards <em>nrql</em> insights rfb icardenas November 28"
      },
      "id": "5a0b26f2c75d07174327a313"
    }
  ],
  "/terms": [
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Programmability -> Need to accept terms and conditions Build on New Relic Nerdpacks nerdpack harmod1 October 7, 2019, 1:09pm #1 I’m trying to create my first nerdpack and keep getting this error: please accept the New Relic Developer Terms and Conditions prior to executing this operation. Not sure where/how to do that. Workshop - Setup Your Environment hross October 7, 2019, 1:09pm #2 Hi there @harmod1 - Let’s get you set up and ready to code! From New Relic One, you need to click on the “Build your own application” Nerdlet: Screen Shot 2019-09-19 at 11.56.13 AM.png1698×1254 324 KB Then, you’ll want to get your API key. Screen Shot 2019-09-19 at 11.56.20 AM.png1318×396 14.5 KB Once you make a selection there, it brings up the terms of service, which you can accept: Screen Shot 2019-09-19 at 11.55.20 AM.png2866×1416 485 KB That should take care of you, but let me know if that’d not working for some reason. 1 Like harmod1 October 7, 2019, 1:09pm #3 I select my api key…i even went back and generated a new one. I do not get a pop-up like you show. hross October 7, 2019, 1:09pm #4 Hey @harmod1 - are you in the US? hross October 7, 2019, 1:09pm #5 Hey @harmod1 - Actually, I did some digging and have discovered what we need to do. I’m going to put you in touch with your account rep. Be on the lookout for an email from me. 2 Likes saravanarajan.natara December 5, 2019, 4:55pm #6 Hi, Iam having the same issue here, could you please help me as well. Thanks in advance! RyanVeitch December 5, 2019, 5:10pm #7 Hi @saravanarajan.natara - Watch out for an email, I’ll CC in your Account Rep to help you out here mtsou January 9, 2020, 10:24pm #8 I am having the same issue with Demotron2. But I don’t get the pop up to accept the Terms and Conditions. $ nr1 nerdpack:uuid -gf --profile demotron2 Error : Please accept the New Relic Developer Terms and Conditions prior to executing this operation. New Relic One terms and conditions mtsou January 9, 2020, 11:04pm #9 Resolved by select existing key in the right account, the pop up will appear. 1 Like Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Programmability -> Need to accept terms and conditions"
      ],
      "title": "Programmability -> Need to accept terms and conditions - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "05e14e5c21fcaa35a0280ca6c8caed28b33d3259",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/3/0/304c82102ba80013b4bf78e61ddce3600f5c906d_2_677x500.png",
      "url": "https://discuss.newrelic.com/t/programmability-need-to-accept-terms-and-conditions/84668",
      "published_at": "2020-08-10T22:25:48Z",
      "updated_at": "2020-07-22T05:38:55Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.6433784,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Programmability -&gt; Need to accept <em>terms</em> <em>and</em> <em>conditions</em> - Nerdpacks - New Relic Explorers Hub",
        "sections": "Programmability -&gt; Need to accept <em>terms</em> <em>and</em> <em>conditions</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Programmability -&gt; Need to accept <em>terms</em> and <em>conditions</em> Build on New Relic Nerdpacks nerdpack harmod1 October 7, 2019, 1:09pm #1 I’m"
      },
      "id": "5d9d50a828ccbc3a4ad1dc62"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic One terms and conditions Build on New Relic Nerdpacks nerdpack bfalese1 January 31, 2020, 1:44pm #1 Hi, I can’t use NR one cli, where are this terms and conditions hidding? nr1 nerdpack:uuid -gf --verbose --profile prod init version: @oclif/command@1.5.19 argv: [ ‘-gf’, ‘–verbose’, ‘–profile’, ‘prod’, [length]: 4 ] Using profile prod Request: POST https://artifact-registry.service.newrelic.com/graphql Data: mutation { generatePackageUuid } Headers: { ‘API-Key’: ‘XXX’, ‘Content-Type’: ‘application/graphql’ } Sending usage event cliError Error: Please accept the New Relic Developer Terms and Conditions prior to executing this operation. { locations: [ { line: 3, column: 17 } ], path: [ ‘generatePackageUuid’ ], extensions: { type: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’ }, code: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’, origin: ‘graphql-service’ } BTW, I tryed to create a support ticket, but after ticket submit i only get a white screen and no ticket filed. RyanVeitch January 31, 2020, 4:42pm #2 Hi @bfalese1 - From the New Relic One landing page, when you hit Build your own applications (the launcher that takes you to the CLI download), there are some Terms and Conditions you must accept when you generate an API key. Can you go there to try accept the terms & then try your CLI commands again? 2 Likes bfalese1 January 31, 2020, 4:42pm #3 Thanks, that did it. It’s everything so white that i did not saw it. 1 Like RyanVeitch January 31, 2020, 5:07pm #4 Glad it’s sorted now! Thanks for marking the solution AAASeva May 15, 2020, 9:27am #5 Hi, @RyanVeitch , I have absolutely the same issue with accepting terms and conditions, but when I’m changing to the page \" Build New Relic One applications\" I do not see any button/checkbox/link which can be used to “accept terms and conditions” I’m downloading NR1 cli to the ubuntu Linux VM. But even if I choose the download to mac I do not see any prompt to accept something Screenshot 2020-05-15 at 08.26.06.jpg2990×1732 422 KB RyanVeitch May 15, 2020, 7:29am #6 Hi @AAASeva - Are you getting errors in the CLI that indicate you need to accept T&Cs? I’d expect an error on the page you screenshotted if you hadn’t yet accepted the terms and conditions… (Side note - I edited your post to obfuscate your API keys) AAASeva May 15, 2020, 9:27am #7 Hi, @RyanVeitch, thank you for the prompt answer. Sorry I will remove/obfuscate API keys from my posts later. Yes, the CLI output is below seva@NewRelic-Lab01:~$ nr1 nerdpack:uuid -gf --verbose init version: @oclif/command@1.5.19 argv: [ ‘-gf’, ‘–verbose’, [length]: 2 ] Error: This command can only be ran inside of a Nerdpack seva@NewRelic-Lab01:~$ cd nr1-top/ seva@NewRelic-Lab01:~/nr1-top$ nr1 nerdpack:uuid -gf --verbose init version: @oclif/command@1.5.19 argv: [ ‘-gf’, ‘–verbose’, [length]: 2 ] Using profile V.Semouchin Request: POST https://artifact-registry.service.eu.newrelic.com/graphql Data: mutation { generatePackageUuid } Headers: { ‘API-Key’: ‘XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX’, ‘Content-Type’: ‘application/graphql’ } Sending usage event cliError Error: Please accept the New Relic Developer Terms and Conditions prior to executing this operation. { locations: [ { line: 3, column: 17 } ], path: [ ‘generatePackageUuid’ ], extensions: { type: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’ }, code: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’, origin: ‘graphql-service’ } seva@NewRelic-Lab01:~/nr1-top$ cd … Is it possible to accept terms and conditions in the CLI? RyanVeitch May 15, 2020, 7:50am #8 I’m wondering if this is an API key issue. In the UI Screenshot the API key that is checked ends in: KM7, whereas the one you use in your CLI commands, is: 15M… Would you be able to use the KM7 key in the CLI? OR, alternatively, click the 15M key in the UI and see if that prompts you for the terms and conditions? AAASeva May 15, 2020, 9:27am #9 HI, @RyanVeitch, I tried both I selected one-by-one all three keys, but this does not lead me to prompt for terms and conditions. I selected the …KM7 key - see the screenshot Screenshot 2020-05-15 at 10.05.30.png3222×1724 459 KB And rebuild everything from scratch init version: @oclif/command@1.5.19 argv: [ ‘-s’, ‘–verbose’, [length]: 2 ] Name Region API key V.Semouchin (default) eu NRAK-XXXXXXXXXXXXXXXXXXXXKM7 seva@NewRelic-Lab01:~$ nr1 nerdpack:uuid -gf --verbose init version: @oclif/command@1.5.19 argv: [ ‘-gf’, ‘–verbose’, [length]: 2 ] Error: This command can only be ran inside of a Nerdpack seva@NewRelic-Lab01:~$ cd nr1-top/ seva@NewRelic-Lab01:~/nr1-top$ nr1 nerdpack:uuid -gf --verbose init version: @oclif/command@1.5.19 argv: [ ‘-gf’, ‘–verbose’, [length]: 2 ] Using profile V.Semouchin Request: POST https://artifact-registry.service.eu.newrelic.com/graphql Data: mutation { generatePackageUuid } Headers: { ‘API-Key’: ‘NRAK-XXXXXXXXXXXXXXXXXXXXXKM7’, ‘Content-Type’: ‘application/graphql’ } Sending usage event cliError Error: Please accept the New Relic Developer Terms and Conditions prior to executing this operation. { locations: [ { line: 3, column: 17 } ], path: [ ‘generatePackageUuid’ ], extensions: { type: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’ }, code: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’, origin: ‘graphql-service’ } seva@NewRelic-Lab01:~/nr1-top$ AAASeva May 15, 2020, 2:33pm #10 Sorry I’m trying to post the whole log, but always my post is rejected with the message: Screenshot 2020-05-15 at 11.07.44.png1232×238 9.13 KB What should I do to get ride of it? Remove URLs? RyanVeitch May 15, 2020, 10:21am #11 Could you try to DM that to me? If that doesn’t work, then yes, remove the URLs, I’m not sure what URL the Explorers Hub is blocking but I’d like to see the full log. Thanks @AAASeva AAASeva May 15, 2020, 2:36pm #12 Hi, @RyanVeitch Could you try to DM that to me? Sorry for my ignorance, what is “DM”? Tried to upload the .txt file, but as new user I can’t Could you try to DM that to me? I Sorry for my ignorance, what is “DM”? –show_keys option at profiles:list throws an exception seva@NewRelic-Lab01:~$ nr1 profiles:list --verbose --show_keys init version: @oclif/command@1.5.19 argv: [ ‘–verbose’, ‘–show_keys’, [length]: 2 ] Sending usage event cliError Error: Unexpected argument: --show_keys See more help with --help at validateArgs (/usr/lib/newrelic-cli/node_modules/@oclif/parser/lib/validate.js:10:19) at Object.validate (/usr/lib/newrelic-cli/node_modules/@oclif/parser/lib/validate.js:57:5) at Object.parse (/usr/lib/newrelic-cli/node_modules/@oclif/parser/lib/index.js:26:7) at ProfilesListCommand.parse (/usr/lib/newrelic-cli/node_modules/@oclif/command/lib/command.js:83:41) at ProfilesListCommand.run (/usr/lib/newrelic-cli/node_modules/@datanerd/3pp-cli-profiles/src/commands/profiles/list.js:8:30) at ProfilesListCommand._run (/usr/lib/newrelic-cli/node_modules/@oclif/command/lib/command.js:44:31) seva@NewRelic-Lab01:~$ nr1 profiles:list --show_keys Error: Unexpected argument: --show_keys See more help with --help Now with -s it works seva@NewRelic-Lab01:~$ nr1 profiles:list -s Name Region API key V.Semouchin (default) eu NRAK-XXXXXXXXXXXXXXXXXXX15M seva@NewRelic-Lab01:~$ nr1 profiles:list -s --verbose init version: @oclif/command@1.5.19 argv: [ ‘-s’, ‘–verbose’, [length]: 2 ] Name Region API key V.Semouchin (default) eu NRAK-XXXXXXXXXXXXXXXXXXXX15M seva@NewRelic-Lab01:~$ nr1 profiles:remove V.Semouchin --verbose init version: @oclif/command@1.5.19 argv: [ ‘V.Semouchin’, ‘–verbose’, [length]: 2 ] Removed profile V.Semouchin. seva@NewRelic-Lab01:~$ nr1 profiles:add --name v-semouchin --api-key NRAK-XXXXXXXXXXXXXXXXXXKM7 --region eu Added profile v-semouchin. seva@NewRelic-Lab01:~$ nr1 nerdpack:clone -r https( //github.com/newrelic/nr1-top.git --force --verbose init version: @oclif/command@1.5.19 argv: [ ‘-r’, ‘nr1-top.git’, ‘–force’, ‘–verbose’, [length]: 4 ] Sending usage event cliClone Cloning repository… Cloning into ‘/home/seva/nr1-top’… remote: Enumerating objects: 161, done. remote: Counting objects: 100% (161/161), done. remote: Compressing objects: 100% (113/113), done. remote: Total 427 (delta 84), reused 104 (delta 38), pack-reused 266 Receiving objects: 100% (427/427), 2.24 MiB | 3.86 MiB/s, done. Resolving deltas: 100% (219/219), done. Setting repo as remote upstream… Installing dependencies… core-js-pure@3.6.4 postinstall /home/seva/nr1-top/node_modules/core-js-pure node -e “try{require(’./postinstall’)}catch(e){}” Thank you for using core-js ( zloirock/core-js ) for polyfilling JavaScript standard library! The project needs your help! Please consider supporting of core-js on Open Collective or Patreon: core-js zloirock Also, the author of core-js ( zloirock ) is looking for a good job -) added 330 packages in 84.21s ┌────────────────────────────────────────────────────────┐ │ npm update check failed │ │ Try running with sudo or get access │ │ to the local update config store via │ │ sudo chown -R $USER:$(id -gn $USER) /home/seva/.config │ └────────────────────────────────────────────────────────┘ Re-generating UUID… Error: The operation you are trying to perform requires an API key The profile V.Semouchin does not exist in your profile keychain or does not have API key and API region. You can try: ⁎ List of your profiles with “nr1 profiles:list” ⁎ Run this command with a different profile (add “–profile profile-name”) ⁎ Configure a new profile through the website: Sending usage event cliError Error: Error on command: nr1 nerdpack:uuid --generate --force seva@NewRelic-Lab01:~$ RyanVeitch May 15, 2020, 2:43pm #13 This is saying now that your profile doesn’t exist in the keychain or has no API key… Could you run: nr1 profiles:list -s And send back a screenshot? (though, obfuscate your API keys ) I want to make sure the profile there looks ok! AAASeva May 15, 2020, 2:53pm #14 Hi, @RyanVeitch, honestly to say if you will scroll the script up you will see how I create the profile and set it as default - following is a party of the command history: 146 nr1 profiles:remove v-semouchin --verbose 147 nr1 profiles:add --name V.Semouchin --api-key NRAK-XXXXXXXXXXXXXXXXXXXXKM7 --region eu 148 nr1 profile --help 149 nr1 profiles --help 150 nr1 profiles:default --help 151 nr1 profiles:default -n V.Semouchin --profile=V.Semouchin --verbose 152 nr1 profiles:default 153 sudo nr1 nerdpack:clone -r https://github.com/newrelic/nr1-top.git --force --verbose 154 sudo chown -R $USER:$(id -gn $USER) $HOME/.config and now still one time: seva@NewRelic-Lab01:~/nr1-top$ nr1 profiles:list -s Name Region API key V.Semouchin (default) eu NRAK-XXXXXXXXXXXXXXXXXXXXXKM7 RyanVeitch May 15, 2020, 2:58pm #15 I did see you creating the profile, which made it weird to see the error citing a lack of profile. I’m going to tag in @dgolden & @joelworrall who may have more ideas than me to find a fix here. New Relic One Top Nerdpack AAASeva May 15, 2020, 3:47pm #16 Hi, Guys @RyanVeitch @dgolden @joelworrall I tried to remove all existing API keys from my account and then recreate the new one. In another thread Programmability -> Need to accept terms and conditions, @mtsou claimed, that that could help. In my case it does not work. After the new key was created I was NOT brought to the popup where I should agree with terms and conditions. Screenshot 2020-05-15 at 17.33.04.png3314×1818 451 KB I tried to rebuild the app and got the same error seva@NewRelic-Lab01:~$ nr1 profiles:remove V.Semouchin --verbose init version: @oclif/command@1.5.19 argv: [ ‘V.Semouchin’, ‘–verbose’, [length]: 2 ] Removed profile V.Semouchin. seva@NewRelic-Lab01:~$ nr1 profiles:add --name V.Semouchin --api-key NRAK-XXXXXXXXXXXXXXXXXQUY --region eu Added profile V.Semouchin. seva@NewRelic-Lab01:~$ nr1 profiles:list -s --verbose init version: @oclif/command@1.5.19 argv: [ ‘-s’, ‘–verbose’, [length]: 2 ] Name Region API key V.Semouchin (default) eu NRAK-XXXXXXXXXXXXXXXXXQUY seva@NewRelic-Lab01:~$ nr1 profiles:default -n V.Semouchin --profile=V.Semouchin --verbose init version: @oclif/command@1.5.19 argv: [ ‘-n’, ‘V.Semouchin’, ‘–profile=V.Semouchin’, ‘–verbose’, [length]: 4 ] seva@NewRelic-Lab01:~$ sudo chown -R $USER:$(id -gn $USER) $HOME/.newrelic [sudo] password for seva: seva@NewRelic-Lab01:~$ sudo chown -R $USER:$(id -gn $USER) $HOME/.config seva@NewRelic-Lab01:~$ sudo rm -R nr1-top/ seva@NewRelic-Lab01:~$ sudo nr1 nerdpack:clone -r [GITHUB]newrelic/nr1-top.git --force --verbose init version: @oclif/command@1.5.19 argv: [ ‘-r’, ‘[GITHUB]newrelic/nr1-top.git’, ‘–force’, ‘–verbose’, [length]: 4 ] Sending usage event cliClone Cloning repository… Cloning into ‘/home/seva/nr1-top’… remote: Enumerating objects: 161, done. remote: Counting objects: 100% (161/161), done. remote: Compressing objects: 100% (113/113), done. remote: Total 427 (delta 84), reused 104 (delta 38), pack-reused 266 Receiving objects: 100% (427/427), 2.24 MiB | 8.66 MiB/s, done. Resolving deltas: 100% (219/219), done. Setting repo as remote upstream… Installing dependencies… core-js-pure@3.6.4 postinstall /home/seva/nr1-top/node_modules/core-js-pure node -e “try{require(’./postinstall’)}catch(e){}” Thank you for using core-js ( [GITHUB]zloirock/core-js ) for polyfilling JavaScript standard library! The project needs your help! Please consider supporting of core-js on Open Collective or Patreon: https://opencollective.com/core-js https://www.patreon.com/zloirock Also, the author of core-js ( [GITHUB]zloirock ) is looking for a good job -) added 330 packages in 61.88s Re-generating UUID… Error: Please accept the New Relic Developer Terms and Conditions prior to executing this operation. You can run this command with “–verbose” for more info. Sending usage event cliError Error: Error on command: nr1 nerdpack:uuid --generate --force seva@NewRelic-Lab01:~$ nr1 nerdpack:uuid --generate --force --verbose init version: @oclif/command@1.5.19 argv: [ ‘–generate’, ‘–force’, ‘–verbose’, [length]: 3 ] Error: This command can only be ran inside of a Nerdpack seva@NewRelic-Lab01:~$ cd nr1-top/ seva@NewRelic-Lab01:~/nr1-top$ nr1 nerdpack:uuid --generate --force --verbose init version: @oclif/command@1.5.19 argv: [ ‘–generate’, ‘–force’, ‘–verbose’, [length]: 3 ] Using profile V.Semouchin Request: POST https://artifact-registry.service.eu.newrelic.com/graphql Data: mutation { generatePackageUuid } Headers: { ‘API-Key’: ‘NRAK-XXXXXXXXXXXXXXXXXQUY’, ‘Content-Type’: ‘application/graphql’ } Sending usage event cliError Error: Please accept the New Relic Developer Terms and Conditions prior to executing this operation. { locations: [ { line: 3, column: 17 } ], path: [ ‘generatePackageUuid’ ], extensions: { type: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’ }, code: ‘TERMS_AND_CONDITIONS_NOT_ACCEPTED’, origin: ‘graphql-service’ } seva@NewRelic-Lab01:~/nr1-top$ RyanVeitch May 18, 2020, 7:29am #17 Good morning @AAASeva - I heard from some colleagues over the weekend who suggested you may not be getting the prompt to accept terms and conditions if you are viewing the UI in https://one.newrelic.com Your accounts are EU datacenter based. So could you try going to https://one.eu.newrelic.com Could you ensure you are in the EU New Relic One UI and head over to the Build on New Relic Launcher to see if that gets you the T&Cs to accept? AAASeva May 18, 2020, 7:40am #18 Thank you @RyanVeitch, that works! RyanVeitch May 18, 2020, 7:57am #19 Fantastic! Glad that got it for you Hopefully you can get going with the Top and other nerdpacks now! AAASeva May 18, 2020, 9:03am #20 Hi, @RyanVeitch, sorry for disturbing again. I created nr1-top successfully. But still cannot see it at the URL (tried both) https://one.eu.newrelic.com/?nerdpacks=local https://one.newrelic.com/?nerdpacks=local During the build phase there were some warnings about missing pages. nr1Install.sh running npm install npm WARN @ newrelic/eslint-plugin-newrelic@0.3.0 requires a peer of prettier@^1.18.2 but none is installed. You must install peer dependencies yourself. npm WARN @ newrelic/nr1-community@1.1.1 requires a peer of nr1@ but none is installed. You must install peer dependencies yourself. npm WARN @semantic-release/changelog@3.0.6 requires a peer of semantic-release@&gt;=15.8.0 &lt;16.0.0 || &gt;=16.0.0-beta &lt;17.0.0 but none is installed. You must install peer dependencies yourself. npm WARN @semantic-release/git@7.0.18 requires a peer of semantic-release@&gt;=15.4.0 &lt;16.0.0 but none is installed. You must install peer dependencies yourself. npm WARN tsutils@3.17.1 requires a peer of typescript@&gt;=2.8.0 || &gt;= 3.2.0-dev || &gt;= 3.3.0-dev || &gt;= 3.4.0-dev || &gt;= 3.5.0-dev || &gt;= 3.6.0-dev || &gt;= 3.6.0-beta || &gt;= 3.7.0-dev || &gt;= 3.7.0-beta but none is installed. You must install peer dependencies yourself. audited 332 packages in 2.904s I tried to add those packages, but got the following messages (sorry I’m not very experienced with the npm) seva@NewRelic-Lab01:~$ sudo npm install typescript@latest npm WARN seva No description npm WARN seva No repository field. npm WARN seva No license field. + typescript@3.9.2 removed 1 package, updated 1 package and audited 1 package in 1.289s found 0 vulnerabilities seva@NewRelic-Lab01:~$ sudo npm install prettier@^1.18.2 npm WARN seva No description npm WARN seva No repository field. npm WARN seva No license field. + prettier@1.19.1 added 1 package from 1 contributor and audited 2 packages in 0.477s found 0 vulnerabilities seva@NewRelic-Lab01:~$ sudo npm install semantic-release@&gt;=15.8.0 npm WARN seva No description npm WARN seva No repository field. npm WARN seva No license field. seva@NewRelic-Lab01:~$ sudo npm install nr1@ npm WARN seva No description npm WARN seva No repository field. npm WARN seva No license field. The full installation log is here Dropbox 2020 05 18 Install nr1-top.log Shared with Dropbox Installation script is here Dropbox nr1Install.sh Shared with Dropbox next page → Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "New Relic One terms and conditions",
        "2020 05 18 Install nr1-top.log",
        "nr1Install.sh"
      ],
      "title": "New Relic One terms and conditions - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "985d3825141d28e2642d5cef6d3300bc94afd671",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/9/6/9699cebf04452dcad5bc89860049186a79906810_2_690x399.jpeg",
      "url": "https://discuss.newrelic.com/t/new-relic-one-terms-and-conditions/93361",
      "published_at": "2020-08-11T13:51:15Z",
      "updated_at": "2020-07-23T03:40:08Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.63634735,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic One <em>terms</em> <em>and</em> <em>conditions</em> - Nerdpacks - New Relic Explorers Hub",
        "sections": "New Relic One <em>terms</em> <em>and</em> <em>conditions</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic One <em>terms</em> and <em>conditions</em> Build on New Relic Nerdpacks nerdpack bfalese1 January 31, 2020, 1:44pm #1 Hi, I can’t use NR one"
      },
      "id": "5e34819128ccbc2eaafffb09"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic One terms and conditions Build on New Relic Nerdpacks nerdpack RyanVeitch May 18, 2020, 11:43am #21 You can ignore those warnings, you should still be ok! The issue is that the Top Nerdpack doesn’t show up as a launcher on the NR One homepage. Instead you need to access it from it a host entity. From https://one.eu.newrelic.com/?nerdpacks=local > Click into Entity Explorer > Filter to Hosts (on the left side bar) > Select a host > From the left sidebar see the Top Nerdpack. Screenshot 2020-05-18 at 10.08.01.png2136×1000 161 KB AAASeva May 18, 2020, 11:44am #22 Thank you, @RyanVeitch, but I do not see it. About the configuration running: Have 2 virtualbox VMs with Ubuntu 18.04 each Each VM has Infrastructure agent, log gathering is enabled Kubernetes agent (minikube is running) Java agent installed in container together with Java application server (Shopizer) Currently the nr1-top is running on NewRelic-Lab02 I do not see the application top in the entity explorer I see each host twice one time as NewRelic-Lab0x and once as newrelic-lab0x (I installed everything on empty VMs cloned from the “gold image”). When I stop newrelic-infra both hosts disappear. When I start the agent both hosts come back Interesting that the entity explore sees two newrelic-lab01, when the “old” interface sees newrelic-lab01 and NewRelic-Lab01 Log integration is detected by the old interface only (link “See Logs”) but noit by the entity browser Screenshots cannot see the “Top” entry in the “TROUBLESHOOT” section Screenshot 2020-05-18 at 13.16.22.png1307×1051 97.1 KB Two agents in the “old” GUI Screenshot 2020-05-18 at 13.16.53.png929×1033 100 KB Infrastructure agent installation script: Dropbox installInfraAgent.sh Shared with Dropbox Should I move it in another topic? RyanVeitch May 18, 2020, 11:44am #23 Hmm, can you double/triple check that you are looking with /?nerdpacks=local on the URL? If so, do you see any errors in the Browser console? Or, in your terminal window? AAASeva May 18, 2020, 1:01pm #24 Hi, @RyanVeitch URL https://one.eu.newrelic.com/launcher/nr1-core.explorer?nerdpacks=local&launcher=eyJ0aW1lUmFuZ2UiOnsiYmVnaW5fdGltZSI6bnVsbCwiZW5kX3RpbWUiOm51bGwsImR1cmF0aW9uIjoxODAwMDAwfSwiJGlzRmFsbGJhY2tUaW1lUmFuZ2UiOnRydWV9&pane=eyJuZXJkbGV0SWQiOiJpbmZyYS1uZXJkbGV0cy5ob3N0IiwiaXNPdmVydmlldyI6dHJ1ZSwiZW50aXR5SWQiOiJNamN4T1RBNU1ueEpUa1pTUVh4T1FYd3hOek14TVRjeE5URTNPVE16T0RjNE16VXoifQ==&sidebars[0]=eyJuZXJkbGV0SWQiOiJucjEtY29yZS5hY3Rpb25zIiwiZW50aXR5SWQiOiJNamN4T1RBNU1ueEpUa1pTUVh4T1FYd3hOek14TVRjeE5URTNPVE16T0RjNE16VXoiLCJzZWxlY3RlZE5lcmRsZXQiOnsibmVyZGxldElkIjoiaW5mcmEtbmVyZGxldHMuaG9zdCIsImlzT3ZlcnZpZXciOnRydWV9fQ== Checked with safari, firefox and chrome - the same result. No errors Screenshot 2020-05-18 at 14.58.12.png1284×752 98.2 KB Safari Screenshot 2020-05-18 at 14.56.20.png1698×1214 278 KB Chrome Screenshot 2020-05-18 at 14.56.50.png1786×1212 284 KB Firefox Screenshot 2020-05-18 at 14.57.55.png1770×1102 219 KB RyanVeitch May 18, 2020, 2:17pm #25 This is weird! It seems you have done everything correct, so it should absolutely be showing up for you. There is probably something really simple getting in the way here, so I’d like to take a step back, and start over. Could you walk through the below list, and see if it still doesn’t work? Start this list while you are not locally serving the nerdpack! Log out of your New Relic account in your browser and delete NR cookies cd nr1-top nr1 profiles:default (Make sure you are selecting the profile you will log in to the account with.) nr1 nerdpack:uuid -gf (regenerating the UUID as a ‘just in case’ as that ~could be the issue.) nr1 nerdpack:clean nr1 nerdpack:serve Navigate to https://one.eu.newrelic.com/?nerdpacks=local (Make sure you are on the same machine that you are serving from) Login with the credentials of the user who owns the API key / Profile you selected in step 2. Click through to a host entity. Look for the top nerdpack. Hopefully starting from scratch will get that nerdpack to show up for you. Sorry it seems that your first experience with nerdpacks hasn’t been a smooth one. Let’s see if we can wrap this up from here AAASeva May 18, 2020, 4:12pm #26 Hi, @RyanVeitch, sorry, mea culpa, I believe I understand, why I’m wrong - I had to start the browser on the same VM, where I deployed the nerd pack. To start it remotely I had to publish it first. Is that correct? And just another question. The I start the nerd pack with nr1 nerdpack:serve - how can I stop it running - ctrl/c, then ps -ef | grep nr1 and then kill? Is there a more elegant way to do that? RyanVeitch May 19, 2020, 7:20am #27 That’s correct, to see it on other machines it first needs to be published to the account, rather than locally served. You do that by sequencing the following commands: nr1 nerdpack:publish nr1 nerdpack:deploy -c DEV|BETA|STABLE // (pick one of these 3 channels that works for you) nr1 nerdpack:subscribe -c DEV|BETA|STABLE // (this should be the same channel you deployed to) As for killing the locally served version, you’re right with CTRL+C You don’t need to kill the NR1 Process with ps -ef | grep nr1, but if you would like to do that you can. AAASeva May 19, 2020, 7:27am #28 Yes, thank you @RyanVeitch I got it running locally Will publish now. The issue is, that after I break the execution of nr1 nerdpack:serve with ctrl/c the process continues to stay in background RyanVeitch May 19, 2020, 7:51am #29 Indeed, that isn’t running anything locally though, it is waiting to listen to the nr1 terminal commands. It should have no impact by just running as a process in the background New Relic One Top Nerdpack ← previous page Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "New Relic One terms and conditions",
        "installInfraAgent.sh"
      ],
      "title": "New Relic One terms and conditions - Nerdpacks - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "c7e93bdb0c72f91616e026cbd8d9029b00055154",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/b/f/bf76c6fe8801b7c955f670a8a6d05234a0cfa67e_2_690x493.png",
      "url": "https://discuss.newrelic.com/t/new-relic-one-terms-and-conditions/93361?page=2",
      "published_at": "2020-08-12T00:52:52Z",
      "updated_at": "2020-07-22T01:49:11Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.59085584,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic One <em>terms</em> <em>and</em> <em>conditions</em> - Nerdpacks - New Relic Explorers Hub",
        "sections": "New Relic One <em>terms</em> <em>and</em> <em>conditions</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us New Relic One <em>terms</em> and <em>conditions</em> Build on New Relic Nerdpacks nerdpack RyanVeitch May 18, 2020, 11:43am #21 You can ignore those"
      },
      "id": "5ec3252d64441faafd3c91a1"
    },
    {
      "body": "As a customer, you are eligible to participate in New Relic’s Developer Program. Additional information and resources are available at New Relic’s Developer Program site. By downloading, accessing, or using the developer resources (including the CLI), you agree that usage of the developer resources is pursuant to the New Relic Developers Terms and Conditions and that you have the authority to bind your organization. Such terms do not have to be signed in order to be binding. If you do not agree to these terms and conditions, your sole remedy is to not use these developer resources. If your use of the New Relic developer resources are covered under a separate agreement, the above does not apply to you. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Licenses / Product or service licenses / Developer Edition",
      "info": "New Relic Developer edition policy",
      "nodeid": 39641,
      "sections": [
        "Product or service licenses",
        "New Relic One",
        "APM",
        "Browser",
        "Developer Edition",
        "Infrastructure",
        "Insights",
        "Logs",
        "Mobile",
        "Synthetics",
        "Mobile apps",
        "Plugins",
        "Miscellaneous",
        "Developer Program Resources",
        "For more help"
      ],
      "title": "Developer Program Resources",
      "popularity": 1,
      "external_id": "98308cfffa652e4c25967e1be5b848b9c28ca410",
      "category_1": "Product or service licenses",
      "category_2": "Developer Edition",
      "image": "",
      "url": "https://docs.newrelic.com/docs/licenses/product-or-service-licenses/new-relic-developer-edition/developer-program-resources",
      "published_at": "2020-08-12T05:58:31Z",
      "updated_at": "2020-08-08T19:17:02Z",
      "category_0": "Licenses",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.074230455,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " is pursuant to the New Relic Developers <em>Terms</em> and <em>Conditions</em> and that you have the authority to bind your organization. Such <em>terms</em> do not have to be signed in order to be binding. If you do not agree to these <em>terms</em> and <em>conditions</em>, your sole remedy is to not use these developer resources. If your"
      },
      "id": "5f338507e7b9d2f670c9de83"
    },
    {
      "body": "The Alerts REST API endpoints allow you to create conditions for your policies. This glossary contains the names and descriptions of each of the fields that you can use to define or update a condition. Required and optional fields The API includes four types of New Relic Alerts conditions: APM External services Synthetic monitoring Plugins All of the fields used with a specific condition type are required except for these optional fields: enabled (defaults to false) runbook_url user_defined Field definitions Not every field listed in this glossary is required for every condition type. The condition type for which a field must be used is listed in each description. condition_scope This field allows you to scope a condition to either a JVM instance or to a whole application. This may be one of the strings: instance application Used for: Conditions Entity conditions For instance-based and JVM health metrics, see also violation_close_timer. enabled This is the status of your alert condition and is optional. The default is false. This field may be used to enable or disable a condition for maintenance or testing periods. Used for: Conditions External service conditions Synthetic monitoring conditions Plugin conditions entities This is an array of entity IDs identifying the objects which will be monitored with your condition. These may be application IDs, browser IDs, plugin IDs, key transaction IDs, external service IDs, etc. These are entered as a series of comma separated integers if there is more than one. Used for: Conditions External service conditions Plugin conditions expected_groups This is the number of groups you expect to see at any given time. It is used in combination with the ignore_overlap option. Used for: NRQL outlier conditions external_service_url This is the URL of the external service to be monitored. This string must not include the protocol. For example, use example.com, not https://example.com. Used for: External service conditions ignore_overlap If disabled, Alerts looks for a convergence of groups. If the condition is looking for 2 or more groups, and the returned values cannot be separated into that number of distinct groups, then that will also produce a violation. This type of overlap event is represented on a chart by group bands touching. Used for: NRQL outlier conditions metric The metric field is used for three alert categories. The exact parameters available for use depend on the setting in the type field. These are listed below according to their alert type field. Alerts plugin conditions For Plugin conditions this is the metric, which has been defined in a plugin, that will be used to trigger an alert. Alerts conditions The value specified in the type field controls which of the parameters may be specified. The type field and corresponding available parameter names are listed in the following table. Only one may be specified. > type Parameter apm_app_metric apdex error_percentage response_time_web response_time_background throughput_web throughput_background user_defined apm_kt_metric apdex error_percentage error_count response_time throughput browser_metric end_user_apdex total_page_load page_rendering web_application network dom_processing request_queuing ajax_response_time page_views_with_js_errors page_view_throughput ajax_throughput user_defined browser_metric_baseline page_view_throughput average_response_time ajax_response_time ajax_application_time mobile_metric database images json, network view_loading network_error_percentage status_error_percentage user_defined Alerts external service conditions The value specified in the type field controls which of the parameters may be specified. The type field and corresponding available parameter names are listed in the following table. Only one may be specified. type Parameter apm_external_service apdex error_percentage response_time_web response_time_background throughput_web throughput_background user_defined apm_app_metric_baseline external_service_transaction_time error_count database_transaction_time throughput_web response_time_web non_web_transaction_time web_transaction_database_time non_web_transaction_database_time mobile_external_service response_time_average response_time_minimum response_time_maximum throughput network_failure_percentage http_status_error_percentage metric_description This is a title for the metric which is displayed in notifications. Make this descriptive and unique so the reader will understand the nature of plugin metric being used to trigger an alert. Used for: Plugin conditions monitor_id This is the GUID of the Synthetic monitoring to alert on. Used for: Synthetic monitoring conditions name This is a title for your condition and will allow to you identify it in the Alerts UI. Follow the guidelines for making this descriptive but short. Used for: Conditions External service conditions Synthetic monitoring conditions Plugin conditions nrql[query] This is the NRQL query that Alerts monitors as part of a NRQL condition. Used for: NRQL conditions nrql[since_value] This is the timeframe (in minutes) in which to evaluate the specified NRQL query. since_value must be between 1 and 20. Used for: NRQL conditions plugin[guid] This is the GUID of the plugin for which the trigger is being defined. Used for: Plugin conditions plugin[id] This is the ID of the plugin for which the trigger is being defined. Used for: Plugin conditions runbook_url The runbook URL to display in notifications. This field is optional. Used for: Conditions External service conditions Synthetic monitoring conditions Plugin conditions terms[duration] This is the time (in minutes) for the condition to persist before triggering an event. It corresponds to the duration set when adding a threshold to an alert in the UI. Used for: Conditions terms[operator] This determines what comparison will be used between the value_function and the terms[threshold] value to trigger an event. It corresponds to the operation selected when adding a threshold to an alert in the UI. It must be one of the following strings: above below equal Used for: Conditions External service conditions Plugin conditions terms[priority] This corresponds to the severity level selected when setting the threshold values for the condition in the UI. This must be one of the following strings: critical warning Used for: Conditions External service conditions Plugin conditions terms[threshold] This is the threshold that the value_function must be compared to using the terms[operator] for an event to be triggered. It corresponds to the numeric value specified in the UI when adding the threshold values. This is a numeric value and must be 0 (zero) or greater. Used for: Conditions External service conditions Plugin conditions terms[time_function] This corresponds to the settings made in the UI when adding the threshold values. The choices are: all (corresponding to for at least in the UI) any (corresponding to at least once in in the UI) Used for: Conditions External service conditions Plugin conditions type This defines the type of metric that will be used for the alert. Allowable content for the metric field depends on the type value chosen. There are two product categories : Alerts conditions For this category, type is set to one of the following strings indicating the type of alerts condition. type Use apm_app_metric APM application metric will trigger an alert. apm_app_metric_baseline APM application metric will trigger an alert (using a baseline threshold). apm_kt_metric APM key transaction metric will trigger an alert. browser_metric Browser metric will trigger an alert. browser_metric_baseline Browser metric will trigger an alert (using a baseline threshold). mobile_metric Mobile metric will trigger an alert. Used for: Conditions Alerts external service conditions For this category, type is set to one of the following strings indicating the type of external service condition. type Use apm_external_service APM external metric will trigger an alert. mobile_external_service Mobile external metric will trigger an alert. Used for: External service conditions user_defined[metric] (optional) This is the name of a user defined custom metric to be used to determine if an event should be triggered. The user_defined[value_function] associated with the metric is compared with the terms[threshold] value when evaluating if an incident should be triggered. The comparison is performed using the operator defined by terms[operator]. Used for: Conditions External service conditions Synthetic monitoring conditions Plugin conditions user_defined[value_function] (optional) This is the numeric value obtained from the custom metric specified by user_defined[metric]. It is compared with the terms[threshold] value when evaluating if an incident should be triggered. The comparison is performed using the operator defined by terms[operator]. One of these value functions must be specified: average min max total sample_size Used for: Conditions value_function This is the value function used from the plugin metric. This may be one of the strings: min max average sample_size total percent Used for: Plugin conditions When used for a NRQL condition, the options are: single_value (condition is evaluated based on each query's returned value) sum (condition is evaluated based on the sum of each query's returned values over the specified duration) violation_time_limit_seconds Use to automatically close instance-based violations after the number of seconds specified. Must be one of these values: 3600 7200 14400 28800 43200 86400 Used for: Location conditions NRQL conditions violation_close_timer Use to automatically close instance-based violations, including JVM health metric violations, after the number of hours specified. Must be one of these values: 1 2 4 8 12 24 Used for: apm_app_metric (with condition_scope set to instance) apm_jvm_metric For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Alerts and Applied intelligence / New Relic Alerts / REST API alerts",
      "info": "This glossary defines the New Relic Alerts API fields, and provides links to relevant content to help better understand each one.",
      "nodeid": 9276,
      "sections": [
        "New Relic Alerts",
        "Get started",
        "Alert policies",
        "Alert conditions",
        "Alert violations",
        "Alert Incidents",
        "Alert notifications",
        "Troubleshooting",
        "Rules, limits, and glossary",
        "Alerts and Nerdgraph",
        "REST API alerts",
        "Alerts conditions API field names",
        "Required and optional fields",
        "Field definitions",
        "For more help"
      ],
      "title": "Alerts conditions API field names",
      "popularity": 1,
      "external_id": "08f92bd7e576017eb032cdd843c616c7c04fba11",
      "category_1": "New Relic Alerts",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names",
      "published_at": "2020-08-10T18:40:31Z",
      "updated_at": "2020-08-08T00:13:05Z",
      "category_0": "Alerts and Applied intelligence",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0613545,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Alerts <em>conditions</em> API field names",
        "sections": "Alert <em>conditions</em>",
        "info": "This glossary defines the New Relic Alerts API fields, <em>and</em> provides links to relevant content to help better understand each one.",
        "category_0": "Alerts <em>and</em> Applied intelligence",
        "body": " defined. Used for: Plugin <em>conditions</em> runbook_url The runbook URL to display in notifications. This field is optional. Used for: <em>Conditions</em> External service <em>conditions</em> Synthetic monitoring <em>conditions</em> Plugin <em>conditions</em> <em>terms</em>[duration] This is the time (in minutes) for the condition to persist before"
      },
      "id": "5f2dee1128ccbc1e7588dff5"
    }
  ],
  "/collect-data/collect-data-from-any-source": [
    {
      "body": "Products Pricing Solutions Help Center About Search icon Search the blog Monitor New Relic from your phone or tablet Learn more or download using the links below. New Relic app for iOS or Android    New Relic Insights app for iOS or Android    Log In Sign Up Search icon Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore Open Source Projects Training Get Help Community Forum Global Technical Support Expert Services About Our CustomersOver 15,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our BlogThe latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look New Relic Open Instrumentation: APIs for New Relic One, the First Observability Platform By Ranna Unthank • Sep. 19th, 2019 • New Relic News and Products New Relic Metrics, New Relic Traces, open instrumentation, open telemetry, opencensus Tweet Share Share Jan. 27, 2020, update: We’ve extended our list of open source integrations built on the Telemetry SDK to include Node/TypeScript and .NET. Metrics, events, logs, and traces are the core telemetry data types that enable observability within the modern software stack. The continual maturation of DevOps and open source tooling has put developers in the driver’s seat with observability-driven instrumentation. In fact, more data than ever is available from sources within business-critical applications and infrastructure, and methods for correlating and visualizing that data in meaningful ways are just as numerous. OpenTelemetry, part of the Cloud Native Computing Foundation (CNCF), is poised to become the one standard for open source instrumentation and telemetry collection, and W3C Trace Context will become the standard for propagating trace context across process boundaries. Both of these projects are building for a future in which instrumentation and tracing becomes easier for everybody. And pre-existing projects like OpenCensus, Zipkin, Prometheus, and statsd (just to name a few) are also well established in the open source community. As software teams orient their practices around these open source APIs and standards, they need the flexibility to send metrics and trace data from a number of sources as well as from custom solutions. But this has led to a proliferation of tools from which teams are unable to achieve a single source of truth about the entities that define their systems. These issues pose real barriers to achieving true observability. At New Relic, we’re more excited than ever to say that we’re all in on the future of observability, and we believe this future holds huge promise for New Relic customers. It’s our goal to provide modern software teams a single observability platform in which they can combine log data, agent-based APM and Infrastructure data, and third-party telemetry data to create an entity-centric system of record that illuminates their entire stack. Aggregating data from disparate sources and storing it in one place provides customers with the ability to analyze, visualize, and troubleshoot their systems from a single platform. To that end, we’ve added two new APIs to support open instrumentation in the New Relic One observability platform: New Relic Metrics and New Relic Traces. Both APIs can be used directly via their HTTP endpoints or via the new Telemetry SDK, which facilitates sending telemetry data to those APIs. With these capabilities, you’ll: Deliver more complete observability. Collect metric and trace data from any number of open source, vendor-agnostic tools; and display that information alongside data gathered from New Relic instrumentation. Reduce the cost of observability. By sending your business-critical observability data to our SaaS platform, you’ll reduce the cost and operational burden of maintaining different systems for storing, querying, and viewing that data. Avoid vendor lock-in from instrumentation. Instrumentation based on open standards is more portable than vendor-specific instrumentation, so DevOps teams can focus on the value of their full observability platform—not on the value of the instrumentation alone. Embrace simplicity and transparency. Open and transparent protocols, formats, and APIs for ingesting data from any source, such as OpenTelemetry, Envoy, and Prometheus, enhance New Relic’s ability to work with data from popular open source tools. Let’s look at how this will work in New Relic: New Relic Metrics A metric is an aggregation of values collected over time, and they’re extremely useful when you know what you want to collect from a large body of data. With the New Relic Metrics API, you’ll use open source data exporters and scrapers built by New Relic, or contributed by third-party developers, to collect data already available through standard metric emitters. You can also build exporters and scrapers using our open source Telemetry SDK, which provides a language-specific, client-side interface for accepting and transforming metric data, so that it can be batched and sent to New Relic via the Metrics API. Today, we’re providing the following open source integrations built on the Telemetry SDK: Prometheus OpenMetrics integration OpenCensus exporter (Python and Go) Micrometer exporter DropWizard exporter Istio exporter The Metrics API is a simple HTTP endpoint that accepts JSON-formatted data for ingest and storage in New Relic’s platform. Metrics data is stored as dimensional metric data consisting of a measurement and its associated key:value pairs. In fact, when integration with the Telemetry SDK isn’t a good option—for example, if you want more control over how the data is packaged or sent—you can send well-formed data directly to the Metrics API via HTTP. You can access this data with the New Relic One chart builder (and with the New Relic Query Language (NRQL)) to create New Relic One dashboards; or use the data in New Relic One applications. You’ll also be able to set fine-grained alerts on these metrics, with the ability to focus in on any condition defined in a NRQL alert. Note: At this time, for New Relic Metrics, the Telemetry SDK supports only Java, Go, and Python. For more specifics on the New Relic Metrics API, including details on rate limits, JSON payload format, and metrics types, see our documentation.  New Relic Traces Distributed tracing helps you find the sources of latency and errors in a distributed system by stitching together operations across all services involved in a single request. New Relic agents automatically instrument your services to time and collect information about operations and create the “spans” that make up a distributed trace. There are many tools available for instrumenting and creating tracing data. The New Relic Trace API is a new HTTP endpoint that accepts tracing data in the Zipkin JSON v2 format or the New Relic-specific format. If you’ve instrumented parts of your system with Zipkin, you can now send that tracing data to New Relic with no changes to your instrumentation. And you’ll no longer need to manage the complex, high-availability storage systems necessary for storing trace data because we do that for you! If you’re using OpenCensus or Istio, you can now use the New Relic OpenCensus exporters and Istio adapter to send tracing data created by those tools as well. And like with the Metrics API, you can also use the Telemetry SDK’s language-specific client-side interface to accept and transform trace data, so that it can be batched and sent to the New Relic Trace API. Once you’ve sent distributed tracing data to New Relic, you’ll be able to take advantage of New Relic’s powerful trace visualizations, querying capabilities, anomaly detection and analytics tools to understand and troubleshoot systems in context with the rest of their New Relic instrumented ecosystem. For more information on the New Relic Trace API, including details on the Zipkin- and New Relic-format, see our documentation. Note: At this time, for New Relic Traces, the Telemetry SDK supports only Go, Python, and Java. Availability and pricing Modern software developers widely embrace open source frameworks and tools that include built-in telemetry, and we know that. But we also know that you need one primary place where you can analyze that data. The New Relic One observability platform provides the curated and customized visualizations you need to understand your telemetry data—and the entities from which it comes—in the context of your entire business or enterprise, and it does so without requiring you to operate any additional software. New Relic Metrics and New Relic Traces provide efficient and easy integrations for getting your telemetry data into New Relic. These APIs are available to all customers on New Relic Pro or equivalent subscription plans—visit newrelic.com to find out more. New Relic Metrics, New Relic Traces, open instrumentation, open telemetry, opencensus Ranna Unthank is a Principal Product Marketing Manager at New Relic. She has over 10 years of experience in product marketing and sales enablement. Her technology experience and knowledge spans from storage to server and desktop virtualization to cloud computing and modern architecture technologies. View posts by Ranna Unthank. The views expressed on this blog are those of the author and do not necessarily reflect the views of New Relic. Any solutions offered by the author are environment-specific and not part of the commercial solutions or support offered by New Relic. Please join us exclusively at the Explorer’s Hub (discuss.newrelic.com) for questions and support related to this blog post. This blog may contain links to content on third-party sites. By providing such links, New Relic does not adopt, guarantee, approve or endorse the information, views or products available on such sites. Interested in writing for New Relic Blog? Send us a pitch! Related Posts New Relic Is All In On The Future of Observability By Kevin Chu • Jul. 15th, 2019 • New Relic News and Products APM, distributed tracing, New Relic APM, New Relic One, observability, open instrumentation, OpenTelemetry OpenTracing, OpenCensus, OpenTelemetry, and New Relic By Kevin Chu • Jun. 24th, 2019 • Software Engineering distributed tracing, OpenTelemetry, OpenTracing Company Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal Connect Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "blog",
      "info": "",
      "sections": [
        "New Relic Open Instrumentation: APIs for New Relic One, the First Observability Platform",
        "New Relic Metrics",
        "New Relic Traces",
        "Availability and pricing",
        "Related Posts",
        "New Relic Is All In On The Future of Observability",
        "OpenTracing, OpenCensus, OpenTelemetry, and New Relic",
        "Company",
        "Connect",
        "international"
      ],
      "title": "Introducing New Relic Metrics API and Traces API",
      "popularity": 1,
      "external_id": "cd5254717d2699641375581c613cc9b24edec1a0",
      "image": "https://newrelic-wpengine.netdna-ssl.com/wp-content/uploads/kevin_chu-300x300.jpeg",
      "url": "https://blog.newrelic.com/product-news/open-instrumentation/",
      "published_at": "2020-08-10T17:30:12Z",
      "updated_at": "2020-07-30T07:35:02Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.26142207,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introducing New Relic <em>Metrics</em> <em>API</em> and <em>Traces</em> <em>API</em>",
        "sections": "New Relic Open Instrumentation: <em>APIs</em> for New Relic One, the First Observability Platform",
        "body": ". Both APIs can be used directly via their HTTP endpoints or via the new <em>Telemetry</em> <em>SDK</em>, which facilitates sending <em>telemetry</em> data to those APIs. With these capabilities, you’ll: Deliver more complete observability. Collect <em>metric</em> and <em>trace</em> data from any number of open source, vendor-agnostic tools"
      },
      "id": "5d83dccde7b9d216e8d48048"
    },
    {
      "body": "Our Telemetry SDKs are an open source set of API client libraries that send metrics and trace data to the New Relic platform. We offer open-source integrations for telemetry tools like Prometheus, Istio, and OpenCensus that were created using our Telemetry SDKs. If those solutions (or our other integrations) don't meet your needs, you can use the Telemetry SDKs to create your own telemetry data solutions. Requirements and compatibility To build with the Telemetry SDKs, you will need an Event API insert key. New Relic has contributed the Telemetry SDK to the open source community under an Apache 2.0 license. Available libraries The Telemetry SDKs are open source software on GitHub. Use the language-specific GitHub links below to get library details, coding examples, and procedures for how to use the SDKs. We currently support the following libraries, with more to be created in the future: Language Library Supported data types Java Java library on GitHub New Relic Metrics New Relic Traces Node/TypeScript NodeJS library on GitHub New Relic Metrics New Relic Traces Python Python library on GitHub New Relic Metrics New Relic Events New Relic Traces Go Go library on Github New Relic Metrics New Relic Traces .NET .NET library on GitHub .NET package in NuGet New Relic Metrics New Relic Traces For more on the supported data types: Metrics: see the Metric API Traces: see the Trace API Write your own Telemetry SDK or contribute to an existing one If you need a Telemetry SDK in a language that does not currently exist or want to contribute to an existing library, please see the Telemetry SDK specifications. Integrations built with the Telemetry SDKs To see the integrations built using our Telemetry SDKs, see Open source telemetry integrations. For all monitoring solutions, see our integrations page. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Telemetry Data Platform / Ingest and manage data / Ingest APIs",
      "info": "Report custom telemetry data with New Relic's open-source Telemetry SDKs.",
      "nodeid": 35471,
      "sections": [
        "Ingest and manage data",
        "Get started",
        "Understand data",
        "Manage data",
        "Ingest APIs",
        "Telemetry SDKs: Report custom telemetry data",
        "Requirements and compatibility",
        "Available libraries",
        "Write your own Telemetry SDK or contribute to an existing one",
        "Integrations built with the Telemetry SDKs",
        "For more help"
      ],
      "title": "Telemetry SDKs: Report custom telemetry data",
      "popularity": 1,
      "external_id": "47a4c8f38c1b1674504ea302d865fd499e90ea39",
      "category_1": "Ingest and manage data",
      "category_2": "Ingest APIs",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/get-started/capabilities/telemetry-sdks-send-custom-telemetry-data-new-relic",
      "published_at": "2020-08-11T01:15:35Z",
      "updated_at": "2020-08-11T01:15:34Z",
      "category_0": "Telemetry Data Platform",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.25059476,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Telemetry</em> <em>SDKs</em>: Report custom <em>telemetry</em> data",
        "sections": "<em>Telemetry</em> <em>SDKs</em>: Report custom <em>telemetry</em> data",
        "info": "Report custom <em>telemetry</em> data with New Relic&#x27;s open-source <em>Telemetry</em> <em>SDKs</em>.",
        "category_0": "<em>Telemetry</em> Data Platform",
        "category_2": "Ingest <em>APIs</em>",
        "body": " Metrics New Relic Traces .NET .NET library on GitHub .NET package in NuGet New Relic Metrics New Relic Traces For more on the supported data types: Metrics: see the <em>Metric</em> <em>API</em> Traces: see the <em>Trace</em> <em>API</em> Write your own <em>Telemetry</em> <em>SDK</em> or contribute to an existing one If you need a <em>Telemetry</em> <em>SDK</em>",
        "breadcrumb": "Contents &#x2F; <em>Telemetry</em> Data Platform &#x2F; Ingest and manage data &#x2F; Ingest APIs"
      },
      "id": "5d89fefbe7b9d2537ed30dc1"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Where do Telemetry SDK \"metrics\" go? Support: Telemetry Data Platform (TDP) telemetrysdk cos1 August 10, 2020, 4:41pm #1 I’ve successfully sent “dimensional metrics” into a sandbox NR account using the Metric API. When I use curl to do so, the metrics I send in show up when I do queries like this: “FROM Metric SELECT * SINCE 2 hours AGO LIMIT 50” - this gives a table of recent Metric values & attributes I sent in using curl. I’m trying to use the python API to do the same thing. For example, from newrelic_telemetry_sdk import GaugeMetric, MetricClient nr_key=os.environ.get(‘NR_SANDBOX_KEY’) nr_metric_client = MetricClient(nr_key) test_metric = GaugeMetric(“cos_test_metric”, number, {“Account”: acctname, “units”: “Kb”, “Resource”: resourcename}) nr_response = nr_metric_client.send_batch((cost_metric)) nr_response.raise_for_status() I get no errors, but when I run the query “FROM Metric SELECT * SINCE 2 hours AGO LIMIT 50” I still see a table showing only the ones I wrote to the API using curl, and not the new cos_test_metric I attempted to write using python. I’ve verified that I’m using the same key, to the same sandbox account, in my python runs as I am using with curl. And I’ve also waited over 30 minutes since I ran the python script, just in case there was some lag for seeing the new metrics. But I still see only the ones from curl, not from python. Does anyone know where those metrics ended up and how I can query for them? Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Where do Telemetry SDK \"metrics\" go?"
      ],
      "title": "Where do Telemetry SDK \"metrics\" go? - Support: Telemetry Data Platform (TDP) - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "d303a32f72d03a8b337afe14eefc8bb8296d891f",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/where-do-telemetry-sdk-metrics-go/111009",
      "published_at": "2020-08-11T01:54:42Z",
      "updated_at": "2020-08-11T01:54:42Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.21421489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Where do <em>Telemetry</em> <em>SDK</em> &quot;<em>metrics</em>&quot; go? - Support: <em>Telemetry</em> Data Platform (TDP) - New Relic Explorers Hub",
        "sections": "Where do <em>Telemetry</em> <em>SDK</em> &quot;<em>metrics</em>&quot; go?",
        "body": " trying to use the python <em>API</em> to do the same thing. For example, from newrelic_<em>telemetry_sdk</em> import Gauge<em>Metric</em>, <em>Metric</em>Client nr_key=os.environ.get(‘NR_SANDBOX_KEY’) nr_<em>metric</em>_client = <em>Metric</em>Client(nr_key) test_<em>metric</em> = Gauge<em>Metric</em>(“cos_test_<em>metric</em>”, number, {“Account”: acctname, “units”: “Kb"
      },
      "id": "5f31fa62196a67fb24fbd6d4"
    },
    {
      "body": "There are many ways to get data into your New Relic account. Any New Relic user can use any of our data ingest methods to report data to our Telemetry Data Platform. New Relic-built agents and integrations When you enable New Relic solutions like APM, browser monitoring, mobile monitoring, infrastructure monitoring, or any of our wide array of integrations, by default you'll receive data from your monitored applications, hosts, services, or other entities. To browse all New Relic-built tools and solutions, see New Relic integrations. Agent APIs Some of our monitoring solutions come with APIs and/or SDKs that allow you to customize the data reported and how it reports. For more information, see the relevant product: APM agent APIs Browser API Mobile API Infrastructure monitoring: the Flex integration tool Telemetry SDKs If our more curated solutions don't work for you, our open source Telemetry SDKs let you build your own solution. These SDKs are language wrappers for our data-ingest APIs (below) that let you send telemetry data to New Relic without requiring install of an agent. APIs for sending metrics, traces, logs, and events If our more curated solutions don't work for you, we also have data-ingest APIs: Trace API Event API Metric API Log API To learn about the differences between these data types, see Data types. New Relic One applications You can build entirely custom applications that reside in New Relic One and make use of any data you want. You can use existing open source New Relic One apps, or share your own with the open source community. For details, see New Relic One applications. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Telemetry Data Platform / Ingest and manage data / Get started",
      "info": "An introduction to how to get data into New Relic. ",
      "nodeid": 36051,
      "sections": [
        "Ingest and manage data",
        "Get started",
        "Understand data",
        "Manage data",
        "Ingest APIs",
        "Get data into New Relic",
        "New Relic-built agents and integrations",
        "Agent APIs",
        "Telemetry SDKs",
        "APIs for sending metrics, traces, logs, and events",
        "New Relic One applications",
        "For more help"
      ],
      "title": "Get data into New Relic",
      "popularity": 1,
      "external_id": "7a413b4d7e5bd81088a08507ae4bad64c7e24b2d",
      "category_1": "Ingest and manage data",
      "category_2": "Get started",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/get-data-new-relic/getting-started/introduction-new-relic-data-ingest-apis-sdks",
      "published_at": "2020-08-10T23:16:40Z",
      "updated_at": "2020-08-10T23:16:39Z",
      "category_0": "Telemetry Data Platform",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18693943,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>APIs</em> for sending <em>metrics</em>, <em>traces</em>, logs, and <em>events</em>",
        "category_0": "<em>Telemetry</em> Data Platform",
        "body": " also have data-ingest APIs: <em>Trace</em> <em>API</em> <em>Event</em> <em>API</em> <em>Metric</em> <em>API</em> Log <em>API</em> To learn about the differences between these data types, see Data types. New Relic One applications You can build entirely custom applications that reside in New Relic One and make use of any data you want. You can use existing open",
        "breadcrumb": "Contents &#x2F; <em>Telemetry</em> Data Platform &#x2F; Ingest and manage data &#x2F; Get started"
      },
      "id": "5f24aa60196a67ede394f5f3"
    },
    {
      "body": "New Relic products report a variety of default event data to your account. This document will explain how to report your own custom events and attributes. Overview of reporting custom events and attributes Event data is one of the fundamental New Relic data types. Events are reported by most New Relic products, and we give you several options for reporting your own custom events. Reporting custom events allows you to create more useful and customized queries and charts of your data, and is a key part of optimizing how New Relic works for you. Before beginning, it's important to know that reporting a large number of custom events and/or attributes can cause degraded query performance, or cause you to approach or pass data collection rate limits. For optimal performance, first think about what data you want to analyze, and then create only the events and/or attributes necessary to meet these specific goals. Be aware of the following data and subscription requirements for inserting and accessing custom data: Ensure you follow limits and requirements around event/attribute data types, naming syntax, and size. The amount of data you have access to over time depends on your data retention policy. Send custom events and attributes Methods for sending custom events and attributes include: Source How to send custom data APM agent Use APM agent APIs to report custom events and custom attributes. Browser agent Add custom attributes to the PageView event via the Browser API call addCustomAttribute. Send PageAction event and attributes via Browser API. Forward APM agent custom attributes to PageView event. Event API To report custom events not associated with other New Relic products, use the Event API. Infrastructure Add custom attributes to default Infrastructure events. Use the Flex integration tool to report your own custom event data. Mobile agent Use the mobile agent API to send custom events and attributes. Synthetics Add custom attributes to the SyntheticCheck event via the $util.insights tools. For ways to report other types of custom data, see: Metric API Logs Trace API Extend data retention To learn about how to extend how long events are retained in your account, see Event data retention. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Insights / Event data sources / Custom events",
      "info": "An overview of the options for sending custom event data to New Relic. ",
      "nodeid": 13806,
      "sections": [
        "Event data sources",
        "Default events",
        "Custom events",
        "Report custom event data",
        "Overview of reporting custom events and attributes",
        "Send custom events and attributes",
        "Extend data retention",
        "For more help"
      ],
      "title": "Report custom event data",
      "popularity": 1,
      "external_id": "afb5f5a81ae06b22935d98c470ed9cabd7c9da6b",
      "category_1": "Event data sources",
      "category_2": "Custom events",
      "image": "",
      "url": "https://docs.newrelic.com/docs/insights/insights-data-sources/custom-data/report-custom-event-data",
      "published_at": "2020-08-10T19:35:12Z",
      "updated_at": "2020-07-26T05:52:23Z",
      "category_0": "Insights",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.13253728,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Report custom <em>event</em> data",
        "sections": "<em>Event</em> data sources",
        "info": "An overview of the options for sending custom <em>event</em> data to New Relic. ",
        "category_1": "<em>Event</em> data sources",
        "category_2": "Custom <em>events</em>",
        "body": " the Flex integration tool to report your own custom <em>event</em> data. Mobile <em>agent</em> Use the mobile <em>agent</em> <em>API</em> to send custom events and attributes. Synthetics Add custom attributes to the SyntheticCheck <em>event</em> via the $util.insights tools. For ways to report other types of custom data, see: <em>Metric</em> <em>API</em> Logs <em>Trace</em>",
        "breadcrumb": "Contents &#x2F; Insights &#x2F; <em>Event</em> data sources &#x2F; Custom events"
      },
      "id": "5e8e7f9de7b9d2aa122cf0f6"
    }
  ],
  "/explore-docs/nr1-common": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.4840286,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>Commands</em>",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " descriptions for the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>commands</em>. For more context, including usage and option details, click any individual <em>command</em> or the <em>command</em> category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.29400957,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference The <em>New</em> <em>Relic</em> <em>CLI</em> enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em> Find details for the <em>New</em> <em>Relic</em> <em>CLI</em> <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18197915,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em> 20 min Access the <em>New</em> <em>Relic</em> platform from the comfort of your terminal: you can use the <em>New</em> <em>Relic</em> <em>CLI</em> to manage entity tags, define workloads, record deployment markers, and much more. Our <em>CLI</em> has been designed for automating <em>common</em> tasks in your DevOps workflow"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.05705873,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "nr1 <em>cli</em>",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic One CLI subscription commands To manage your Nerdpack subscriptions, use the commands below. You can click any command to see its usage options and additional details about the command. Command Description nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Command details nr1 subscription:set Subscribe to a Nerdpack Subscribes your account to a specific Nerdpack and channel. This command can be run with a Nerdpack UUID or within a specific Nerdpack folder. By default, the command uses the Nerdpack ID in package.json and subscribes to the STABLE channel. An account can only be subscribed to one Nerdpack and channel at a time. Usage $ nr1 subscription:set Options -i, --nerdpack-id=NERDPACK_ID Specifies the Nerdpack to subscribe to. By default, the command will use the one in package.json. -c, --channel=DEV/BETA/STABLE Specifies the channel to subscribe to. [default: STABLE] --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. Aliases $ nr1 nerdpack:subscribe nr1 subscription:list See your subscription Lists all the Nerdpacks your account is subscribed to. Your account is linked to your API key. Usage $ nr1 subscription:list Options --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 subscription:unset Unsubscribe from a Nerdpack Unsubscribes your account from a specific Nerdpack. When this command is executed within a Nerdpack folder, the Nerdpack ID from package.json is used by default. Usage $ nr1 subscription:unset Options -i, --nerdpack-id=NERDPACK_ID Specifies the Nerdpack to subscribe to. By default, the command will use the one in package.json. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. Aliases $ nr1 nerdpack:unsubscribe $ nr1 subscription:delete $ nr1 subscription:remove $ nr1 subscription:rm",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI commands you can use to manage your Nerdpack subscriptions.",
      "sections": [
        "New Relic One CLI subscription commands",
        "Command details",
        "nr1 subscription:set",
        "Subscribe to a Nerdpack",
        "Usage",
        "Options",
        "Aliases",
        "nr1 subscription:list",
        "See your subscription",
        "nr1 subscription:unset",
        "Unsubscribe from a Nerdpack"
      ],
      "title": "New Relic One CLI subscription commands",
      "popularity": 1,
      "external_id": "12d2e1b06dede5b1272527f95a14518010aecc58",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-subscription/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-06T01:44:54Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.014311289,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> subscription <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> subscription <em>commands</em>",
        "info": "An overview of the <em>CLI</em> <em>commands</em> you can use to manage your Nerdpack subscriptions.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> subscription <em>commands</em> To manage your Nerdpack subscriptions, use the <em>commands</em> below. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1"
      },
      "id": "5f2b6096e7b9d225ebc9de6f"
    }
  ],
  "/build-apps/build-hello-world-app": [
    {
      "body": "Nerdpack file structure A New Relic One application is represented by a Nerdpack folder, which can include one or more Nerdlet files, and (optionally) one or more launcher files. Here we explain: The file structure for a Nerdpack, a Nerdlet, and a launcher How to link a launcher file to a Nerdlet How to link your application with a monitored entity For basic component definitions, see our component reference. Generate Nerdpack components There are two ways to generate a Nerdpack template: Generate a Nerdpack: Use the New Relic One CLI command nr1 create and select Nerdpack to create a Nerdpack template that includes a Nerdlet and a launcher. Generate Nerdlet or launcher individually: Use the New Relic One CLI command nr1 create and choose either a Nerdlet or a launcher. This may be useful when adding Nerdlets to an existing Nerdpack. For documentation on generating and connecting Nerdpack components, see our workshop. Nerdpack file structure When you generate a Nerdpack template using the nr1 create command, it has the following file structure: my-nerdlet ├── README.md ├── launchers │   └── my-nerdlet-launcher │   ├── icon.png │   └── nr1.json ├── nerdlets │   └── my-nerdlet-nerdlet │   ├── index.js │   ├── nr1.json │   └── styles.scss ├── node_modules │   ├── js-tokens │   ├── loose-envify │   ├── object-assign │   ├── prop-types │   ├── react │   ├── react-dom │   ├── react-is │   └── scheduler ├── nr1.json ├── package-lock.json └── package.json Copy Nerdlet file structure A Nerdpack can contain one or more Nerdlets. A Nerdlet folder starts out with three default files, index.js, nr1.json, and styles.scss. Here is what the default files look like after being generated using the nr1 create command: index.js The JavaScript code of the Nerdlet. import React from 'react'; export default class MyAwesomeNerdpack extends React.Component { render() { return <h1>Hello, my-awesome-nerdpack Nerdlet!</h1>; } } Copy nr1.json The Nerdlet configuration file. { \"schemaType\": \"NERDLET\", \"id\": \"my-awesome-nerdpack-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\" } Copy Besides using the launcher as the access point for your application, you can also associate the application with a monitored entity to get it to appear in the New Relic One entity explorer. To do this, add two additional fields to the config file of the first-launched Nerdlet: entities and actionCategory. In the following example, the Nerdlet has been associated with all New Relic Browser-monitored applications and will appear under the Monitor UI category : { \"schemaType\": \"NERDLET\", \"id\": \"my-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"Custom Data\", \"entities\": [{ \"domain\": \"BROWSER\", \"type\": \"APPLICATION\" }], \"actionCategory\": \"monitor\" } Copy To see this application in the UI, you would go to the New Relic One entity explorer, select Browser applications, and select a monitored application. styles.scss An empty SCSS file for styling your application. icon.png The launcher icon that appears on the one.newrelic.com home page when an application is deployed. Launcher file structure When an application with a launcher file has been deployed, its launcher is located on the New Relic One home page (one.newrelic.com ). Note that: A launcher is not required; as an alternative to using a launcher, you can associate your application with a monitored entity. An application can have more than one launcher; this may be desired for an application with multiple Nerdlets. After generating a launcher using the nr1 create command, its folder contains two files: nr1.json The configuration file. { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy To connect a launcher to a Nerdlet, the rootNerdletId must match the id in the launched Nerdlet's nr1.json config file. For Nerdpacks with multiple Nerdlets, this needs to be done only for the first-launched Nerdlet. icon.png The launcher icon that appears on the one.newrelic.com home page when an application is deployed.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the Nerdpack File Structure",
      "sections": [
        "Nerdpack file structure",
        "Generate Nerdpack components",
        "Nerdlet file structure",
        "index.js",
        "nr1.json",
        "styles.scss",
        "icon.png",
        "Launcher file structure"
      ],
      "title": "Nerdpack file structure",
      "popularity": 1,
      "external_id": "c97bcbb0a2b3d32ac93b5b379a1933e7b4e00161",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nerdpack-file-structure/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:45Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.7911826,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "sections": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "info": "An overview of the <em>Nerdpack</em> <em>File</em> <em>Structure</em>",
        "body": " How to link your application with a monitored entity For basic component definitions, see our component reference. Generate <em>Nerdpack</em> components There are two ways to generate a <em>Nerdpack</em> template: Generate a <em>Nerdpack</em>: Use the New Relic <em>One</em> <em>CLI</em> command <em>nr1</em> create and select <em>Nerdpack</em> to create"
      },
      "id": "5efa989e196a671300766404"
    },
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.6627617,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic <em>One</em> <em>CLI</em> reference",
        "sections": "New Relic <em>One</em> <em>CLI</em> reference",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage New Relic apps.",
        "tags": "New Relic <em>One</em> app",
        "body": " on Deploying your New Relic <em>One</em> app. Get started <em>nr1</em> help Shows all <em>nr1</em> commands or details about each command. <em>nr1</em> update Updates to the latest version of the <em>CLI</em>. <em>nr1</em> create Creates a new component from a template (<em>Nerdpack</em>, Nerdlet, launcher, or <em>catalog</em>). <em>nr1</em> profiles Manages the profiles you use to run"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.49599206,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic <em>CLI</em> Reference",
        "sections": "New Relic <em>CLI</em> Reference",
        "tags": "new relic <em>cli</em>",
        "body": " for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic <em>CLI</em> newrelic workload - Interact with New Relic <em>One</em> workloads"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "A New Relic One application is represented by a Nerdpack folder, which can include one or more Nerdlet files, and (optionally) one or more launcher files. This document explains: The file structure for a Nerdpack, a Nerdlet and a launcher How to link a launcher file to a Nerdlet How to link your application with a monitored entity For basic component definitions, see our developer site. Generate Nerdpack components There are two ways to generate a Nerdpack template: Generate Nerdpack. Use the CLI command nr1 create and select Nerdpack to create a Nerdpack template that includes a Nerdlet and a launcher. Generate Nerdlet or launcher individually. You can use the CLI command nr1 create and choose to select either a Nerdlet or launcher. This may be useful when adding Nerdlets to an existing Nerdpack. For a lesson on generating and connecting Nerdpack components, see the workshop. Nerdpack file structure When you generate a Nerdpack template using the CLI nr1 create command, it has this file structure: my-nerdlet ├── README.md ├── launchers │ └── my-nerdlet-launcher │ ├── icon.png │ └── nr1.json ├── nerdlets │ └── my-nerdlet-nerdlet │ ├── index.js │ ├── nr1.json │ └── styles.scss ├── node_modules │ ├── js-tokens │ ├── loose-envify │ ├── object-assign │ ├── prop-types │ ├── react │ ├── react-dom │ ├── react-is │ └── scheduler ├── nr1.json ├── package-lock.json └── package.json Nerdlet file structure A Nerdpack can contain one or more Nerdlets. A Nerdlet folder starts out with three default files: index.js The JavaScript code. Here's what the default file looks like when a Nerdlet is generated with the CLI nr1 create: import React from 'react'; export default class MyAwesomeNerdpack extends React.Component { render() { return <h1>Hello, my-awesome-nerdpack Nerdlet!</h1> } } nr1.json Configuration file. Here is the default file generated by the CLI nr1 create command: { \"schemaType\": \"NERDLET\", \"id\": \"my-awesome-nerdpack-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\" } Besides using the launcher as the access point for your application, you can also associate the application with a monitored entity to get it to appear in the New Relic One entity explorer. To do this, add two additional fields to the config file of the first-launched Nerdlet: entities and actionCategory. In the following example, the Nerdlet has been associated with all New Relic Browser-monitored applications and will appear under the Monitor UI category : { \"schemaType\": \"NERDLET\", \"id\": \"my-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"Custom Data\", \"entities\": [{\"domain\": \"BROWSER\", \"type\": \"APPLICATION\"}], \"actionCategory\": \"monitor\" } To see this application in the UI, you would go to the New Relic One entity explorer, select Browser applications, and select a monitored application. styles.scss The file for CSS styles (Sass SCSS syntax). Launcher file structure When an application with a launcher file has been deployed, its launcher is located on the New Relic One home page (one.newrelic.com). A launcher is not required; as an alternative to using a launcher, you can associate your application with a monitored entity. An application can have more than one launcher; this may be desired for an application with multiple Nerdlets. A launcher folder contains two files: nr1.json The configuration file. Here is the default file template created by the nr1 create command: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } To connect a launcher to a Nerdlet, the rootNerdletId must match the id in the launched Nerdlet's nr1.json config file. For Nerdpacks with multiple Nerdlets, this needs to be done only for the first-launched Nerdlet. icon.png The launcher icon that appears on the one.newrelic.com home page when an application is deployed. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / New Relic One / Use New Relic One / Build on New Relic One",
      "info": "For building a New Relic One application: an explanation of the Nerdpack/Nerdlet file structure. ",
      "nodeid": 36006,
      "sections": [
        "Use New Relic One",
        "Get started",
        "Core concepts",
        "UI and data",
        "Workloads",
        "Build on New Relic One",
        "Nerdpack file structure",
        "Generate Nerdpack components",
        "Nerdlet file structure",
        "Launcher file structure",
        "For more help"
      ],
      "title": "Nerdpack file structure",
      "popularity": 1,
      "external_id": "6e3788bee17cb65b6dc210862e2a10399f78ff67",
      "category_1": "Use New Relic One",
      "category_2": "Build on New Relic One",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/build-new-relic-one/new-relic-one-application-nerdpack-file-structure",
      "published_at": "2020-08-11T01:30:03Z",
      "updated_at": "2020-07-25T00:32:16Z",
      "category_0": "New Relic One",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.49029303,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "sections": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "info": "For building a New Relic <em>One</em> <em>application</em>: an explanation of the <em>Nerdpack</em>&#x2F;Nerdlet <em>file</em> <em>structure</em>. ",
        "category_0": "New Relic <em>One</em>",
        "category_1": "Use New Relic <em>One</em>",
        "category_2": "Build on New Relic <em>One</em>",
        "body": " <em>file</em> <em>structure</em> When you generate a <em>Nerdpack</em> template using the <em>CLI</em> <em>nr1</em> create command, it has this <em>file</em> <em>structure</em>: my-nerdlet ├── README.md ├── launchers │ └── my-nerdlet-launcher │ ├── icon.png │ └── <em>nr1</em>.json ├── nerdlets │ └── my-nerdlet-nerdlet │ ├── index.js │ ├── <em>nr1</em>.json │ └── styles.scss",
        "breadcrumb": "Contents &#x2F; New Relic <em>One</em> &#x2F; Use New Relic <em>One</em> &#x2F; Build on New Relic <em>One</em>"
      },
      "id": "5da0e07a64441f1328edf241"
    },
    {
      "body": "Add tables to your New Relic One application 30 min Tables are a popular way of displaying data in New Relic applications. For example, with the chart builder you can create tables from NRQL queries. Whether you need to have more control over tables or you're importing third-party data, you can build your own tables into your New Relic One application. In this guide, you are going to build a sample table using various components of the NR1 library. Before you begin Follow the instructions in New Relic One to create an API key and download and configure your NR1 CLI profile. This guide requires that you have Git and node.js installed on your machine. Step 1 of 14 Clone the example application In this guide you are going to experiment with tables. To do that, you need a New Relic One application you can modify and test on your computer. There's a demo application for you in the nr1-how-to repository. Start by cloning the repository from GitHub to your local machine. Then, navigate to the app directory. git clone https://github.com/newrelic/nr1-how-to.git` cd nr1-how-to/create-a-table/nerdlets/create-a-table-nerdlet` Copy Step 2 of 14 Edit the index.json file and set this.accountId to your Account ID as shown in the example. export default class Nr1HowtoAddTimePicker extends React.Component { constructor(props){ super(props) this.accountId = YOUR_ACCOUNT_ID; } ... } Copy Step 3 of 14 Run the demo application Change the directory back to nr1-how-to/create-a-table. Before you can load the demo application, you need to update its unique id by invoking the NR1 CLI. Once you've assigned a new UUID to the app, install the dependencies and serve the demo app locally, so that you can test any change live in your browser. nr1 nerdpack:uuid -gf # Update the app unique ID npm install # Install dependencies nr1 nerdpack:serve # Serve the demo app locally Copy Step 4 of 14 Open one.newrelic.com/?nerdpacks=local in your browser. You should see a Create a table button in your launcher: That's the demo application you are going to work on. Go ahead and select it. Have a good look at the demo app: There is a TableChart on the left side named Transaction Overview, with an AreaChart next to it. You are going to use Table components to add a new table in the second row. Step 5 of 14 Import the Table components Navigate to the nerdlets/create-a-table-nerdlet subdirectory and open the index.js file. Add the following components to the import statement at the top of the file so that it looks like the example: Table TableHeader TableHeaderCell TableRow TableRowCell import { Table, TableHeader, TableHeaderCell, TableRow, TableRowCell, PlatformStateContext, Grid, GridItem, HeadingText, AreaChart, TableChart, } from 'nr1'; Copy Step 6 of 14 Add a basic Table component Locate the empty GridItem in index.js: This is where you start building the table. Add the initial <Table> component. The items property collects the data by calling _getItems(), which contains sample values. <GridItem className=\"primary-content-container\" columnSpan={12}> <Table items={this._getItems()}></Table> </GridItem>; Copy Step 7 of 14 Add the header and rows As the Table component renders a fixed number of header cells and rows, your next step is adding header components, as well as a function that returns the required table rows. Inside of the Table component, add the TableHeader and then a TableHeaderCell child for each heading. Since you don't know how many rows you'll need, your best bet is to call a function to build as many TableRows as items returned by _getItems(). <TableHeader> <TableHeaderCell>Application</TableHeaderCell> <TableHeaderCell>Size</TableHeaderCell> <TableHeaderCell>Company</TableHeaderCell> <TableHeaderCell>Team</TableHeaderCell> <TableHeaderCell>Commit</TableHeaderCell> </TableHeader>; { ({ item }) => ( <TableRow> <TableRowCell>{item.name}</TableRowCell> <TableRowCell>{item.value}</TableRowCell> <TableRowCell>{item.company}</TableRowCell> <TableRowCell>{item.team}</TableRowCell> <TableRowCell>{item.commit}</TableRowCell> </TableRow> ); } Copy Step 8 of 14 Take a look at the application running in New Relic One: you should see something similar to the screenshot below. Step 9 of 14 Replace standard table cells with smart cells The NR1 library includes cell components that can automatically format certain data types, like users, metrics, and entity names. The table you've just created contains columns that can benefit from those components: Application (an entity name) and Size (a metric). Before you can use EntityTitleTableRowCell and MetricTableRowCell, you have to add them to the import statement first. import { EntityTitleTableRowCell, MetricTableRowCell, ... /* All previous components */ } from 'nr1'; Copy Step 10 of 14 Update your table rows by replacing the first and second TableRowCells with entity and metric cells. Notice that EntityTitleTableRowCell and MetricTableRowCell are self-closing tags. { ({ item }) => ( <TableRow> <EntityTitleTableRowCell value={item} /> <MetricTableRowCell type={MetricTableRowCell.TYPE.APDEX} value={item.value} /> <TableRowCell>{item.company}</TableRowCell> <TableRowCell>{item.team}</TableRowCell> <TableRowCell>{item.commit}</TableRowCell> </TableRow> ); } Copy Step 11 of 14 Time to give your table a second look: The cell components you've added take care of properly formatting the data. Step 12 of 14 Add some action to your table! Tables are great, but interactive tables can be better: As a last update, you are going to allow users to act on each data row. Add the _getActions() method to your index.js file, right before _getItems(). As you may have guessed from the code, _getActions() spawns an alert box when you click Team or Commit cells. _getActions() { return [ { label: 'Alert Team', iconType: TableRow.ACTIONS_ICON_TYPE.INTERFACE__OPERATIONS__ALERT, onClick: (evt, { item, index }) => { alert(`Alert Team: ${item.team}`); }, }, { label: 'Rollback Version', iconType: TableRow.ACTIONS_ICON_TYPE.INTERFACE__OPERATIONS__UNDO, onClick: (evt, { item, index }) => { alert(`Rollback from: ${item.commit}`); }, }, ]; } Copy Step 13 of 14 Find the TableRow component in your return statement and point the actions property to _getActions(). The TableRow actions property defines a set of actions that appear when the user hovers over a table row. Actions have a mandatory text and an onClick callback, but can also display an icon or be disabled if needed. <TableRow actions={this._getActions()}> Copy Step 14 of 14 Go back to your application and try hovering over any of the rows: Notice how the two available actions appear. When you click them, a function triggers with the selected row data as an argument, and an alert displays in your browser. Next steps You've built a table into a New Relic One application, using components to format data automatically and provide contextual actions. Well done! Keep exploring the Table components, their properties, and how to use them, in our SDK documentation.",
      "type": "developer",
      "document_type": "page",
      "info": "Add a table to your New Relic One app.",
      "sections": [
        "Add tables to your New Relic One application",
        "Before you begin",
        "Clone the example application",
        "Run the demo application",
        "Import the Table components",
        "Add a basic Table component",
        "Add the header and rows",
        "Replace standard table cells with smart cells",
        "Add some action to your table!",
        "Next steps"
      ],
      "title": "Add tables to your New Relic One application",
      "popularity": 1,
      "external_id": "7ff7a8426eb1758a08ec360835d9085fae829936",
      "image": "https://developer.newrelic.com/static/e637c7eb75a9dc01740db8fecc4d85bf/1d6ec/table-new-cells.png",
      "url": "https://developer.newrelic.com/build-apps/howto-use-nrone-table-components/",
      "published_at": "2020-08-13T01:50:35Z",
      "updated_at": "2020-08-12T01:55:38Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.4460842,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Add tables to your New Relic <em>One</em> <em>application</em>",
        "sections": "Add tables to your New Relic <em>One</em> <em>application</em>",
        "info": "Add a table to your New Relic <em>One</em> app.",
        "body": " build your own tables into your New Relic <em>One</em> application. In this guide, you are going to build a sample table using various components of the <em>NR1</em> library. Before you begin Follow the instructions in New Relic <em>One</em> to create an API key and download and configure your <em>NR1</em> <em>CLI</em> profile. This guide"
      },
      "id": "5efa989ee7b9d2ad567bab51"
    }
  ],
  "/explore-docs/intro-to-sdk": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.31189364,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> CLI reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> CLI reference",
        "info": "An overview of the CLI <em>to</em> help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " application launcher and follow the instructions. This launcher will automatically generate an <em>API</em> key for the account you select, and give you the pre-populated commands to create a profile, generate your first &quot;Hello World&quot; app, and serve it locally. <em>New</em> <em>Relic</em> <em>One</em> CLI Commands This table provides"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.13296422,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "sections": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> CLI, from install and configuration <em>to</em> basic usage.",
        "tags": "<em>New</em> <em>Relic</em> CLI",
        "body": ". This guide walks you through the essentials of <em>New</em> <em>Relic</em> CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your <em>New</em> <em>Relic</em> personal <em>API</em> Key, which you can create from the Account settings of your <em>New</em> <em>Relic</em> account An instrumented application in your"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.12614231,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> CLI Reference",
        "sections": "<em>New</em> <em>Relic</em> CLI Reference",
        "info": "The command line <em>tools</em> for performing tasks against <em>New</em> <em>Relic</em> <em>APIs</em>",
        "tags": "<em>new</em> <em>relic</em> cli",
        "body": " of the <em>New</em> <em>Relic</em> CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with <em>New</em> <em>Relic</em> entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph <em>API</em> newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.025097746,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application <em>to</em> <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it <em>to</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "NR <em>One</em> Catalog",
        "body": "Create a &quot;Hello, World!&quot; application 15 min Here&#x27;s how you can quickly build a &quot;Hello, World!&quot; application in <em>New</em> <em>Relic</em> <em>One</em>. In these steps, we&#x27;ll show you how to create a local version of the <em>New</em> <em>Relic</em> <em>One</em> site where you can prototype your application. Then, when you&#x27;re ready to share"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic Open Source External Projects Highlighted Projects New Relic Projects Menu External Projects Highlighted Projects New Relic Projects Open source New Relic One applications New Relic has a growing body of open-source apps that can extend and enhance your data views. The New Relic One Catalog provides a fast, easy way to browse through the available apps and subscribe to the ones you want, all from the New Relic One GUI. The Catalog also provides links to the code for you to futher customize. You can borrow code sections to use in your own New Relic One applications, or explore the source to understand how they work. Check out our layout templates, which give you a headstart by letting you choose common layouts. New Relic One Catalog Apps Explore the open source repositories for applications in the New Relice One Catalog Other New Relic One Apps Explore the open source repositories for all other New Relic One apps New Relic Open Source Standards External Projects Highlighted Projects New Relic Projects Edit this page Create an issue Copyright © 2020 New Relic Inc.Version 1.8.4",
      "type": "opensource",
      "document_type": "page",
      "info": "",
      "sections": [
        "Open source New Relic One applications",
        "New Relic One Catalog Apps",
        "Other New Relic One Apps"
      ],
      "title": "Open source New Relic One applications",
      "popularity": 1,
      "external_id": "c23435331c53cf175c7610eff7b9a58ba51707ca",
      "image": "",
      "url": "https://opensource.newrelic.com/nerdpacks/",
      "published_at": "2020-08-13T02:14:31Z",
      "updated_at": "2020-08-13T01:57:04Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0068104323,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Open source <em>New</em> <em>Relic</em> <em>One</em> applications",
        "sections": "Open source <em>New</em> <em>Relic</em> <em>One</em> applications",
        "body": "<em>New</em> <em>Relic</em> Open Source External Projects Highlighted Projects <em>New</em> <em>Relic</em> Projects Menu External Projects Highlighted Projects <em>New</em> <em>Relic</em> Projects Open source <em>New</em> <em>Relic</em> <em>One</em> applications <em>New</em> <em>Relic</em> has a growing body of open-source apps that can extend and enhance your data views. The <em>New</em> <em>Relic</em> <em>One</em>"
      },
      "id": "5f3181d528ccbca39a88dff9"
    }
  ],
  "/build-apps/publish-deploy": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18405557,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> CLI reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> CLI reference",
        "info": "An overview of the CLI to help you build, <em>deploy</em>, <em>and</em> manage <em>New</em> <em>Relic</em> <em>apps</em>.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> <em>app</em>",
        "body": " will explain how to use CLI commands to: Generate Nerdpack&#x2F;Nerdlet templates Locally <em>serve</em> Nerdpacks (when developing) <em>Publish</em> and <em>deploy</em> Subscribe to Nerdpacks Add screenshots and metadata to the <em>New</em> <em>Relic</em> <em>One</em> Catalog Installing the <em>New</em> <em>Relic</em> <em>One</em> CLI From within <em>New</em> <em>Relic</em>, go to the Build <em>your</em> own"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.043675333,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> CLI Reference",
        "sections": "<em>New</em> <em>Relic</em> CLI Reference",
        "info": "The command line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> cli",
        "body": "<em>New</em> <em>Relic</em> CLI Reference The <em>New</em> <em>Relic</em> CLI enables integration of <em>New</em> <em>Relic</em> into <em>your</em> existing workflows. Be it fetching data from <em>your</em> laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into <em>your</em> CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> CLI commands Find details for the <em>New</em> <em>Relic</em> CLI command docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.03400307,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "sections": "Create <em>your</em> <em>New</em> <em>Relic</em> CLI profile",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> CLI, from install <em>and</em> configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> CLI",
        "body": "Get started with the <em>New</em> <em>Relic</em> CLI 20 min Access the <em>New</em> <em>Relic</em> platform from the comfort of <em>your</em> terminal: you can use the <em>New</em> <em>Relic</em> CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in <em>your</em> DevOps workflow"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Add tables to your New Relic One application 30 min Tables are a popular way of displaying data in New Relic applications. For example, with the chart builder you can create tables from NRQL queries. Whether you need to have more control over tables or you're importing third-party data, you can build your own tables into your New Relic One application. In this guide, you are going to build a sample table using various components of the NR1 library. Before you begin Follow the instructions in New Relic One to create an API key and download and configure your NR1 CLI profile. This guide requires that you have Git and node.js installed on your machine. Step 1 of 14 Clone the example application In this guide you are going to experiment with tables. To do that, you need a New Relic One application you can modify and test on your computer. There's a demo application for you in the nr1-how-to repository. Start by cloning the repository from GitHub to your local machine. Then, navigate to the app directory. git clone https://github.com/newrelic/nr1-how-to.git` cd nr1-how-to/create-a-table/nerdlets/create-a-table-nerdlet` Copy Step 2 of 14 Edit the index.json file and set this.accountId to your Account ID as shown in the example. export default class Nr1HowtoAddTimePicker extends React.Component { constructor(props){ super(props) this.accountId = YOUR_ACCOUNT_ID; } ... } Copy Step 3 of 14 Run the demo application Change the directory back to nr1-how-to/create-a-table. Before you can load the demo application, you need to update its unique id by invoking the NR1 CLI. Once you've assigned a new UUID to the app, install the dependencies and serve the demo app locally, so that you can test any change live in your browser. nr1 nerdpack:uuid -gf # Update the app unique ID npm install # Install dependencies nr1 nerdpack:serve # Serve the demo app locally Copy Step 4 of 14 Open one.newrelic.com/?nerdpacks=local in your browser. You should see a Create a table button in your launcher: That's the demo application you are going to work on. Go ahead and select it. Have a good look at the demo app: There is a TableChart on the left side named Transaction Overview, with an AreaChart next to it. You are going to use Table components to add a new table in the second row. Step 5 of 14 Import the Table components Navigate to the nerdlets/create-a-table-nerdlet subdirectory and open the index.js file. Add the following components to the import statement at the top of the file so that it looks like the example: Table TableHeader TableHeaderCell TableRow TableRowCell import { Table, TableHeader, TableHeaderCell, TableRow, TableRowCell, PlatformStateContext, Grid, GridItem, HeadingText, AreaChart, TableChart, } from 'nr1'; Copy Step 6 of 14 Add a basic Table component Locate the empty GridItem in index.js: This is where you start building the table. Add the initial <Table> component. The items property collects the data by calling _getItems(), which contains sample values. <GridItem className=\"primary-content-container\" columnSpan={12}> <Table items={this._getItems()}></Table> </GridItem>; Copy Step 7 of 14 Add the header and rows As the Table component renders a fixed number of header cells and rows, your next step is adding header components, as well as a function that returns the required table rows. Inside of the Table component, add the TableHeader and then a TableHeaderCell child for each heading. Since you don't know how many rows you'll need, your best bet is to call a function to build as many TableRows as items returned by _getItems(). <TableHeader> <TableHeaderCell>Application</TableHeaderCell> <TableHeaderCell>Size</TableHeaderCell> <TableHeaderCell>Company</TableHeaderCell> <TableHeaderCell>Team</TableHeaderCell> <TableHeaderCell>Commit</TableHeaderCell> </TableHeader>; { ({ item }) => ( <TableRow> <TableRowCell>{item.name}</TableRowCell> <TableRowCell>{item.value}</TableRowCell> <TableRowCell>{item.company}</TableRowCell> <TableRowCell>{item.team}</TableRowCell> <TableRowCell>{item.commit}</TableRowCell> </TableRow> ); } Copy Step 8 of 14 Take a look at the application running in New Relic One: you should see something similar to the screenshot below. Step 9 of 14 Replace standard table cells with smart cells The NR1 library includes cell components that can automatically format certain data types, like users, metrics, and entity names. The table you've just created contains columns that can benefit from those components: Application (an entity name) and Size (a metric). Before you can use EntityTitleTableRowCell and MetricTableRowCell, you have to add them to the import statement first. import { EntityTitleTableRowCell, MetricTableRowCell, ... /* All previous components */ } from 'nr1'; Copy Step 10 of 14 Update your table rows by replacing the first and second TableRowCells with entity and metric cells. Notice that EntityTitleTableRowCell and MetricTableRowCell are self-closing tags. { ({ item }) => ( <TableRow> <EntityTitleTableRowCell value={item} /> <MetricTableRowCell type={MetricTableRowCell.TYPE.APDEX} value={item.value} /> <TableRowCell>{item.company}</TableRowCell> <TableRowCell>{item.team}</TableRowCell> <TableRowCell>{item.commit}</TableRowCell> </TableRow> ); } Copy Step 11 of 14 Time to give your table a second look: The cell components you've added take care of properly formatting the data. Step 12 of 14 Add some action to your table! Tables are great, but interactive tables can be better: As a last update, you are going to allow users to act on each data row. Add the _getActions() method to your index.js file, right before _getItems(). As you may have guessed from the code, _getActions() spawns an alert box when you click Team or Commit cells. _getActions() { return [ { label: 'Alert Team', iconType: TableRow.ACTIONS_ICON_TYPE.INTERFACE__OPERATIONS__ALERT, onClick: (evt, { item, index }) => { alert(`Alert Team: ${item.team}`); }, }, { label: 'Rollback Version', iconType: TableRow.ACTIONS_ICON_TYPE.INTERFACE__OPERATIONS__UNDO, onClick: (evt, { item, index }) => { alert(`Rollback from: ${item.commit}`); }, }, ]; } Copy Step 13 of 14 Find the TableRow component in your return statement and point the actions property to _getActions(). The TableRow actions property defines a set of actions that appear when the user hovers over a table row. Actions have a mandatory text and an onClick callback, but can also display an icon or be disabled if needed. <TableRow actions={this._getActions()}> Copy Step 14 of 14 Go back to your application and try hovering over any of the rows: Notice how the two available actions appear. When you click them, a function triggers with the selected row data as an argument, and an alert displays in your browser. Next steps You've built a table into a New Relic One application, using components to format data automatically and provide contextual actions. Well done! Keep exploring the Table components, their properties, and how to use them, in our SDK documentation.",
      "type": "developer",
      "document_type": "page",
      "info": "Add a table to your New Relic One app.",
      "sections": [
        "Add tables to your New Relic One application",
        "Before you begin",
        "Clone the example application",
        "Run the demo application",
        "Import the Table components",
        "Add a basic Table component",
        "Add the header and rows",
        "Replace standard table cells with smart cells",
        "Add some action to your table!",
        "Next steps"
      ],
      "title": "Add tables to your New Relic One application",
      "popularity": 1,
      "external_id": "7ff7a8426eb1758a08ec360835d9085fae829936",
      "image": "https://developer.newrelic.com/static/e637c7eb75a9dc01740db8fecc4d85bf/1d6ec/table-new-cells.png",
      "url": "https://developer.newrelic.com/build-apps/howto-use-nrone-table-components/",
      "published_at": "2020-08-13T01:50:35Z",
      "updated_at": "2020-08-12T01:55:38Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.004603906,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Add tables to <em>your</em> <em>New</em> <em>Relic</em> <em>One</em> <em>application</em>",
        "sections": "Add tables to <em>your</em> <em>New</em> <em>Relic</em> <em>One</em> <em>application</em>",
        "info": "Add a table to <em>your</em> <em>New</em> <em>Relic</em> <em>One</em> <em>app</em>.",
        "body": "Add tables to <em>your</em> <em>New</em> <em>Relic</em> <em>One</em> application 30 min Tables are a popular way of displaying data in <em>New</em> <em>Relic</em> applications. For example, with the chart builder you can create tables from NRQL queries. Whether you need to have more control over tables or you&#x27;re importing third-party data, you can"
      },
      "id": "5efa989ee7b9d2ad567bab51"
    },
    {
      "body": "New Relic Open Source External Projects Highlighted Projects New Relic Projects Menu External Projects Highlighted Projects New Relic Projects Open source New Relic One applications New Relic has a growing body of open-source apps that can extend and enhance your data views. The New Relic One Catalog provides a fast, easy way to browse through the available apps and subscribe to the ones you want, all from the New Relic One GUI. The Catalog also provides links to the code for you to futher customize. You can borrow code sections to use in your own New Relic One applications, or explore the source to understand how they work. Check out our layout templates, which give you a headstart by letting you choose common layouts. New Relic One Catalog Apps Explore the open source repositories for applications in the New Relice One Catalog Other New Relic One Apps Explore the open source repositories for all other New Relic One apps New Relic Open Source Standards External Projects Highlighted Projects New Relic Projects Edit this page Create an issue Copyright © 2020 New Relic Inc.Version 1.8.4",
      "type": "opensource",
      "document_type": "page",
      "info": "",
      "sections": [
        "Open source New Relic One applications",
        "New Relic One Catalog Apps",
        "Other New Relic One Apps"
      ],
      "title": "Open source New Relic One applications",
      "popularity": 1,
      "external_id": "c23435331c53cf175c7610eff7b9a58ba51707ca",
      "image": "",
      "url": "https://opensource.newrelic.com/nerdpacks/",
      "published_at": "2020-08-13T02:14:31Z",
      "updated_at": "2020-08-13T01:57:04Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0037238887,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Open source <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>",
        "sections": "Open source <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>",
        "body": "<em>New</em> <em>Relic</em> Open Source External Projects Highlighted Projects <em>New</em> <em>Relic</em> Projects Menu External Projects Highlighted Projects <em>New</em> <em>Relic</em> Projects Open source <em>New</em> <em>Relic</em> <em>One</em> applications <em>New</em> <em>Relic</em> has a growing body of open-source apps that can extend and enhance <em>your</em> data views. The <em>New</em> <em>Relic</em> <em>One</em>"
      },
      "id": "5f3181d528ccbca39a88dff9"
    }
  ],
  "/explore-docs/nr1-subscription": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.47234842,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>Commands</em>",
        "info": "An overview of the <em>CLI</em> to help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " descriptions for the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> <em>commands</em>. For more context, including usage and option details, click any individual <em>command</em> or the <em>command</em> category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.2850509,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference",
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> <em>cli</em>",
        "body": "<em>New</em> <em>Relic</em> <em>CLI</em> Reference The <em>New</em> <em>Relic</em> <em>CLI</em> enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> <em>CLI</em> <em>commands</em> Find details for the <em>New</em> <em>Relic</em> <em>CLI</em> <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.18188033,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": " that you&#x27;ve installed the <em>New</em> <em>Relic</em> <em>CLI</em>, it&#x27;s time to create your first profile. Profiles contain credentials and settings that you can apply to any <em>CLI</em> <em>command</em>, which is useful when switching between accounts. To create your first <em>CLI</em> profile, run the profiles add <em>command</em>. Note that you need"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.05526368,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "nr1 <em>cli</em>",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic One CLI common commands Here is a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from New Relic databases using a NRQL (New Relic query language) query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "title": "New Relic One CLI common commands",
      "popularity": 1,
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.015926708,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em>",
        "info": "An overview of common <em>commands</em> you can use with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> common <em>commands</em> Here is a list of common <em>commands</em> to get you started with the <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 help Shows all nr1 <em>commands</em> or details about each <em>command</em>. nr1"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    }
  ],
  "/automate-workflows/get-started-kubernetes": [
    {
      "body": "Automate workflows When building today's complex systems, you want an easy, predictable way to verify that your configuration is defined as expected. This concept, Observability as Code, is brought to life through a collection of New Relic-supported orchestration tools, including Terraform, AWS CloudFormation, and a command-line interface. These tools enable you to integrate New Relic into your existing workflows, easing adoption, accelerating deployment, and returning focus to your main job — getting stuff done. In addition to our Terraform and CLI guides below, find more automation solutions in our Developer Toolkit. Guides to automate workflows 5 min Quickly tag resources Add tags to apps for easy filtering 20 min Set up New Relic using the Kubernetes operator Learn how to provision New Relic resources using the Kubernetes operator 20 min Automate common tasks Use the New Relic CLI to tag apps and create deployment markers 20 min Set up New Relic using Terraform Learn how to provision New Relic resources using Terraform",
      "type": "developer",
      "document_type": "page",
      "info": "",
      "sections": [
        "Automate workflows",
        "Guides to automate workflows",
        "Quickly tag resources",
        "Set up New Relic using the Kubernetes operator",
        "Automate common tasks",
        "Set up New Relic using Terraform"
      ],
      "title": "Automate workflows",
      "popularity": 1,
      "external_id": "d4f408f077ed950dc359ad44829e9cfbd2ca4871",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-12T01:49:29Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.15555482,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> <em>the</em> <em>Kubernetes</em> <em>operator</em>",
        "body": " solutions in our Developer Toolkit. Guides to automate workflows 5 min Quickly tag resources Add tags to apps for easy filtering 20 min <em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> the <em>Kubernetes</em> <em>operator</em> Learn how to provision <em>New</em> <em>Relic</em> resources <em>using</em> the <em>Kubernetes</em> <em>operator</em> 20 min Automate common tasks <em>Use</em> the <em>New</em> <em>Relic</em> CLI to tag apps and create deployment markers 20 min <em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> Terraform Learn how to provision <em>New</em> <em>Relic</em> resources <em>using</em> Terraform"
      },
      "id": "5efa999c196a67dfb4766445"
    },
    {
      "body": "Set up New Relic using Terraform 20 min Terraform is a popular infrastructure as code software tool by HashiCorp. You can use it to provision all kind of infrastructure and services, including New Relic entities. In this guide you'll learn how to set up New Relic for the first time with Terraform. More specifically, you are going to provision an alert policy with notifications in your New Relic account using Terraform. Before you begin To use this guide, you should have some basic knowledge of both New Relic and Terraform. If you haven't deployed a New Relic opensource agent yet, install New Relic for your application. Install Terraform CLI. Step 1 of 8 Bootstrap your provider configuration New Relic's Terraform Provider detects the environment variables above when running Terraform commands. You can set the environment variables in your .bash_profile or .bashrc file. Set the following environment variables: Set your New Relic Personal API key with the NEW_RELIC_API_KEY environment variable. Most Personal API keys begin with the prefix NRAK-. Set your New Relic Admin API key with the NEW_RELIC_ADMIN_API_KEY environment variable. Most Admin API keys begin with the prefix NRAA-. Set your New Relic Account ID with the NEW_RELIC_ACCOUNT_ID environment variable. Set your New Relic region with the NEW_RELIC_REGION environment variable. Your region is US if your account settings page is located at rpm.newrelic.com, and EU if your account is located at rpm.eu.newrelic.com. # Add this to your .bash_profile export NEW_RELIC_API_KEY=NRAK-... export NEW_RELIC_ADMIN_API_KEY=NRAA-... export NEW_RELIC_ACCOUNT_ID=12345 export NEW_RELIC_REGION=US # Or set it inline when running `terraform plan` or `terraform apply`: $ NEW_RELIC_API_KEY=NRAK-... terraform apply Copy Step 2 of 8 Start with a provider configuration To connect Terraform with New Relic, you need to set New Relic as a provider in your Terraform configuration file, so that Terraform can create and manage New Relic resources in your account. To set New Relic as a provider, create a Terraform configuration file (main.tf). This code sets newrelic as the Terraform provider and provisions an empty alert policy as the resource. provider \"newrelic\" {} resource \"newrelic_alert_policy\" \"alert_policy_name\" { name = \"My Alert Policy Name\" } Copy Step 3 of 8 Initialize and test your setup After adding New Relic as a provider, initialize the working directory from the command line using terraform init. Once you've successfully initialized the working directory, test Terraform's execution plan using terraform plan to confirm that you've the right setup. # Initialize the working directory $ terraform init # Test the Terraform plan $ terraform plan Copy plan performs a dry run of your Terraform configuration, so nothing is actually provisioned. Always run plan to test your configuration before applying it. Step 4 of 8 Add a data source The alert policy you defined in main.tf does not contain any alert condition. You are going to add an alert condition linked to your application. To store your application's information, you need to add a data source. provider \"newrelic\" {} # Data Source data \"newrelic_entity\" \"app_name\" { name = \"my-app\" # This must be an exact match of your app name in New Relic (case sensitive) domain = \"APM\" type = \"APPLICATION\" } resource \"newrelic_alert_policy\" \"alert_policy_name\" { name = \"My Alert Policy Name\" } Copy Step 5 of 8 Add an alert condition to the alert policy Now you can add the alert condition. For example, you can create a critical alert condition that is triggered when the Apdex of your application falls below 0.75 for five minutes. provider \"newrelic\" {} data \"newrelic_entity\" \"app_name\" { name = \"my-app\" domain = \"APM\" type = \"APPLICATION\" } resource \"newrelic_alert_policy\" \"alert_policy_name\" { name = \"My Alert Policy Name\" } # Alert condition resource \"newrelic_alert_condition\" \"alert_condition_name\" { policy_id = newrelic_alert_policy.alert_policy_name.id name = \"My Alert Condition Name\" type = \"apm_app_metric\" entities = [data.newrelic_entity.app_name.application_id] metric = \"apdex\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" term { duration = 5 operator = \"below\" priority = \"critical\" threshold = \"0.75\" time_function = \"all\" } } Copy Step 6 of 8 Add a notification channel Alert policies use notification channels to inform you about incidents and active alerts. To add a notification channel to your alert policy, add the following snippet to your configuration file. When the alert condition is triggered, the notification channel sends an email to the specified recipients. You can send notifications using different tools and channels, such as Slack, by changing the type of your alert channel. # Notification channel resource \"newrelic_alert_channel\" \"alert_notification_email\" { name = \"paul@example.com\" type = \"email\" config { recipients = \"fab@example.com\" include_json_attachment = \"1\" } } # Link the above notification channel to your policy resource \"newrelic_alert_policy_channel\" \"alert_policy_email\" { policy_id = newrelic_alert_policy.alert_policy_name.id channel_ids = [ newrelic_alert_channel.alert_notification_email.id ] } Copy Step 7 of 8 Apply your Terraform configuration The last step is provisioning the resources you've configured in main.tf, so that the alert policy is enabled in your New Relic account for your application. To apply the Terraform configuration and provision the resources in your New Relic account, run terraform apply. Answer yes when prompted to apply the changes. Once the apply process is complete, you should see the new alert policy you've provisioned using Terraform, and its alert conditions, in your New Relic account. You can run terraform apply every time you need to make changes to your configuration. To eliminate the resources you've provisioned, run terraform destroy. Step 8 of 8 Optional: Use the apm module for faster configuration In the Terraform Registry you can find our apm module, which simplifies Terraform's configuration. apm creates an alert policy, a Synthetics monitor, and several alert conditions for a given application reporting data into New Relic. To use our apm module with Terraform: Set newrelic/apm/newrelic as the module source. Add your account_id and application_name. Define your application_url (if any). Here is a configuration example with overridden default values. Initialize the working directory using terraform initto download and enable the module. Tip The apm module doesn't create a notification channel, so you would still have to define one. data \"newrelic_alert_channel\" \"pager\" { name = \"Page Developer Toolkit Team\" } module \"dummy-app-monitor\" { source = \"newrelic/apm/newrelic\" account_id = 2520528 application_name = \"Dummy App\" # An Apdex alert condition will be created with sensible defaults without the use of these attributes. apdex_warning_threshold = 0.9 apdex_critical_threshold = 0.8 # An error rate alert condition will be created with sensible defaults without the use of these attributes. error_rate_warning_threshold = 5 error_rate_critical_threshold = 10 # Specifying an application URL will provision a Synthetics monitor and associated alert condition. application_url = \"https://www.dummyapp.com\" synthetics_monitor_verify_ssl = true # Response time alert condition will not be provisioned unless a critical violation threshold is specified. response_time_critical_threshold = 3 channel_ids = [data.newrelic_alert_channel.pager.id] } Copy Tip: Avoid resources being marked as \"sensitive\" When API results are deemed to be secret and are obfuscated, Terraform may be unable to detect the state of a resource, marking it as changed. Consider this example: resource \"newrelic_alert_channel\" \"slack\" { name = \"slack\" type = \"slack\" config { channel = \"test\" url = \"https://hooks.slack.com/services/xxxx/xxxxx\" } } Copy Running terraform plan yields the following: -/+ newrelic_alert_channel.slack (new resource required) id: \"2344397\" => <computed> (forces new resource) config.%: \"1\" => \"2\" (forces new resource) config.channel: <sensitive> => <sensitive> (attribute changed) config.url: <sensitive> => <sensitive> (forces new resource) name: \"slack\" => \"slack\" type: \"slack\" => \"slack\" Copy To prevent Terraform from wrongly marking a resource as changed, add an ignore_changes directive: resource \"newrelic_alert_channel\" \"slack\" { ... lifecycle { ignore_changes = [\"config\"] } } ... Copy This avoids changes to resources caused by obfuscated items.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn how to provision New Relic resources using [Terraform](https://www.terraform.io/).",
      "sections": [
        "Set up New Relic using Terraform",
        "Before you begin",
        "Bootstrap your provider configuration",
        "Start with a provider configuration",
        "Initialize and test your setup",
        "Add a data source",
        "Add an alert condition to the alert policy",
        "Add a notification channel",
        "Apply your Terraform configuration",
        "Optional: Use the apm module for faster configuration",
        "Tip",
        "Tip: Avoid resources being marked as \"sensitive\""
      ],
      "title": "Set up New Relic using Terraform",
      "popularity": 1,
      "tags": [
        "notification channel",
        "Synthetics monitors"
      ],
      "external_id": "a8e6eb8132628da407bf24eeeca752931f4a09df",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-terraform/",
      "published_at": "2020-08-13T01:49:29Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0036398433,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> Terraform",
        "sections": "<em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> Terraform",
        "info": "Learn how to provision <em>New</em> <em>Relic</em> resources <em>using</em> [Terraform](https:&#x2F;&#x2F;www.terraform.io&#x2F;).",
        "body": "<em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> Terraform 20 min Terraform is a popular infrastructure as code software tool by HashiCorp. You can <em>use</em> it to provision all kind of infrastructure and services, including <em>New</em> <em>Relic</em> entities. In this guide you&#x27;ll learn how to <em>set</em> <em>up</em> <em>New</em> <em>Relic</em> for the first time with Terraform"
      },
      "id": "5efa999d196a67300c766404"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Need to set up the APM for Django web site with Apache server using the mod wsgi Support: Telemetry Data Platform (TDP) Agents Siddha_MI August 10, 2020, 12:30pm #1 Hi, I want to set the New Relic for the Django web-site deploy on Apache server using the mod wsgi on Ubuntu server. Python: 2.7 Django: 1.6.5 Followed all the steps mention in the below link dzone.com Setting Up New Relic on Django, Apache HTTPD, and mod_wsgi - DZone Web Dev Learn how to integrate New Relic when you're using a Django application deployed with Apache HTTPD and mod_wsgi. Successfully installed the “newrelic” python package pip install newrelic Created the .ini file inside the project root directory, given all the read-write permissions newrelic-admin generate-config newrelic.ini Made the changes in the project settings.py file #New Relic settings ENABLE_NEW_RELIC = os.environ[‘ENABLE_NEW_RELIC’] in [‘True’,‘true’] NEW_RELIC_CONFIG_FILE = os.environ[‘NEW_RELIC_CONFIG_FILE’] #End of New Relic settings OR #New Relic settings ENABLE_NEW_RELIC = True NEW_RELIC_CONFIG_FILE = ‘newrelic.ini’ NEW_RELIC_APP_NAME = ‘APP Name’ NEW_RELIC_LICENSE_KEY = ‘LICENSE_KEY’ #End of New Relic settings Made the changes in the project wsgi.py file import os from django.conf import settings from django.core.wsgi import get_wsgi_application os.environ.setdefault(“DJANGO_SETTINGS_MODULE”, “django_project.settings”) application = get_wsgi_application() if settings.ENABLE_NEW_RELIC: import newrelic.agent newrelic.agent.initialize(settings.NEW_RELIC_CONFIG_FILE) #newrelic.agent.initialize(’/path/newrelic.ini’) application = newrelic.agent.WSGIApplicationWrapper(application) Getting the “500 Internal Server Error”. Apache not started. Didn’t shows the proper error on the Apache error log. Issue with the “os.environ[‘ENABLE_NEW_RELIC’]” and “newrelic.agent.initialize” and “newrelic.agent.WSGIApplicationWrapper(application)” commands when added comment to those line Apache started properly without nerelic. Is for Django site SSL is required? Let me know, if anyone implemented this. Thanks in advance. Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Need to set up the APM for Django web site with Apache server using the mod wsgi",
        "Setting Up New Relic on Django, Apache HTTPD, and mod_wsgi - DZone Web Dev"
      ],
      "title": "Need to set up the APM for Django web site with Apache server using the mod wsgi - Agents - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "d6883ead3072544d4d5afaf0e4581a7544a2a144",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/need-to-set-up-the-apm-for-django-web-site-with-apache-server-using-the-mod-wsgi/110970",
      "published_at": "2020-08-11T01:52:13Z",
      "updated_at": "2020-08-11T01:52:13Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0025116545,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Need to <em>set</em> <em>up</em> <em>the</em> APM for Django web site with Apache server <em>using</em> <em>the</em> mod wsgi - Agents - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "<em>Setting</em> <em>Up</em> <em>New</em> <em>Relic</em> on Django, Apache HTTPD, and mod_wsgi - DZone Web Dev",
        "body": " from the world of <em>New</em> <em>Relic</em> and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Need to <em>set</em> <em>up</em> the APM for Django web site with Apache server <em>using</em> the mod wsgi Support: Telemetry Data Platform (TDP) Agents"
      },
      "id": "5f31f9cd196a67e83efbd6f1"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Alert Set up for Kubernetes Jobs Support: Telemetry Data Platform (TDP) Alerts alerts insights kubernetes rabansa July 29, 2019, 9:26am #1 I am running some cron job on Kubernetes cluster . is there any way to set up the alert on Pod failure ? How do I set up the alert in case Job did not trigger at all ? peraut April 6, 2018, 6:59pm #2 Hello! On way to alert possibly would be to set up a process running alert condition. If this process is detected by Infrastructure, this would alert you if the process goes down Here’s more information on the process running condition. https://docs.newrelic.com/docs/infrastructure/new-relic-infrastructure/infrastructure-alert-conditions/alert-infrastructure-processes Hope this helps! Paul rabansa April 6, 2018, 6:47pm #3 Thanks Paul for responding to this one. This is a batch process (not a continuously running process) which kicks in as per schedule . If I understand correctly , suggestion here will be not be applicable for batch process. Right ? Also I guess hyperlink for “more information” in the message is missing somehow ? peraut April 6, 2018, 7:00pm #4 Hi there, I’ve added back the missing URL. sorry about that. You are correct that this wouldn’t work for a batch process that isn’t running continually. We do have a kubernetes integration that is coming out of private beta very soon. This may give you some more functionality to setup alerts. Paul rabansa April 6, 2018, 8:41pm #5 When is the private beta coming . any tentative timelines ? How can we get it ? peraut April 6, 2018, 8:57pm #6 Hi, I would get in contact with your account representative to get started with that. Regards, Paul rabansa April 6, 2018, 9:09pm #7 Great. Thanks Paul . Just to make sure we are aligned , will private beta give me the ability to set up alerts on cron job failures ? hross April 6, 2018, 9:20pm #8 Hi @rabansa - let me check in with our product team on that. They are based in Europe, so I’m not going to hear for a few days. Hang tight! 1 Like hross April 9, 2018, 11:07pm #9 Thanks so much for your patience @rabansa - I checked in with the team and have to report that the beta does not support chron jobs. That said - they have logged your request! rabansa April 12, 2018, 5:33pm #10 thanks @hross for clarifying this . Please keep me posted if and when NR plans to include this feature. 1 Like hross April 12, 2018, 5:38pm #11 Will do - thanks for your understanding @rabansa rabansa April 12, 2018, 8:05pm #12 @hross follow up question , is there alert feature available around POD failure in private beta? avialpando April 12, 2018, 8:11pm #13 Hey @rabansa our kubernetes integration (which is now in public beta) does detect unavailable pods through the attribute podsUnavailable. This attribute can be used in an alert condition. 1 Like rabansa April 16, 2018, 10:39pm #14 thanks @avialpando . when we say , it detects unavailable pods , I assume it will not help me for pods which are launched as a result of cron job run . It will make more sense for pods which are supposed to be highly available. Right ? peraut April 27, 2018, 9:22pm #15 Hello @rabansa, You might consider this type of alert for Kubernetes: https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/kubernetes-monitoring-integration#alert-types Regards, Paul stephan.bertold July 26, 2019, 2:15pm #16 Any news in regards to NR K8 infrastructure monitoring of cronjob execution status? I am looking for the same feature as @rabansa was looking for a year ago. The page https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/kubernetes-monitoring-integration/ is not existing anymore. peraut July 26, 2019, 2:25pm #17 Hello @stephan.bertold, As far as I’m aware, we don’t have anything out yet on cronjob execution status. That being said, you can always make your own integration on this using our Infra SDK: https://docs.newrelic.com/docs/integrations/integrations-sdk/getting-started/introduction-infrastructure-integrations-sdk Regards, Paul stephan.bertold July 26, 2019, 2:46pm #18 Thank you for the quick response. I’m looking at sdk. 1 Like RyanVeitch July 29, 2019, 2:54pm #19 Let us know how it goes @stephan.bertold Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Alert Set up for Kubernetes Jobs"
      ],
      "title": "Alert Set up for Kubernetes Jobs - Alerts - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "3c17a138f011faea2beee8005970bca405b2676d",
      "image": "https://nr-production-discourse.s3.amazonaws.com/original/2X/f/f6107441676f77294613ec559377aa90da19dd52.png",
      "url": "https://discuss.newrelic.com/t/alert-set-up-for-kubernetes-jobs/54873",
      "published_at": "2020-08-11T01:07:33Z",
      "updated_at": "2020-07-30T08:58:53Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0024316055,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Alert <em>Set</em> <em>up</em> for <em>Kubernetes</em> Jobs - Alerts - <em>New</em> <em>Relic</em> Explorers Hub",
        "sections": "Alert <em>Set</em> <em>up</em> for <em>Kubernetes</em> Jobs",
        "body": " from the world of <em>New</em> <em>Relic</em> and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Alert <em>Set</em> <em>up</em> for <em>Kubernetes</em> Jobs Support: Telemetry Data Platform (TDP) Alerts alerts insights <em>kubernetes</em> rabansa July 29, 2019, 9"
      },
      "id": "5ac6c22e8e9c0f30bdcf9b87"
    },
    {
      "body": "Products Pricing Solutions Help Center About Search icon Search the blog Monitor New Relic from your phone or tablet Learn more or download using the links below. New Relic app for iOS or Android    New Relic Insights app for iOS or Android    Log In Sign Up Search icon Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore Open Source Projects Training Get Help Community Forum Global Technical Support Expert Services About Our CustomersOver 15,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our BlogThe latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look How to Use the New Relic Kubernetes Operators for Parallel Deployment By Sander Blue • Jul. 1st, 2020 • New Relic News and Products developer toolkit, Kubernetes, observability Tweet Share Share The New Relic Developer Toolkit offers a suite of tools expressly built to reduce toil for developers. In Practicing Observability as Code: Defining New Relic Alert Policies with Terraform, we explained how to use the New Relic Terraform provider to deploy monitoring and alerting configurations alongside your infrastructure and application code. Now we’re doing the same for Kubernetes. In this post, we’ll briefly go over Kubernetes Operators, why they’re useful, and show how the New Relic Kubernetes Operator provides a seamless way to deploy New Relic resources alongside your Kubernetes deployment. What is a Kubernetes Operator? Operators are software extensions to Kubernetes that make use of custom resources to manage applications and their components. Operators follow Kubernetes principles, notably the control loop. Kubernetes is becoming the de-facto standard for orchestrating containerized services in the cloud. Kubernetes introduced the Operator pattern in version 1.7, giving you the ability to extend Kubernetes by defining custom Kubernetes objects that can perform domain-specific operations, such as configuring and provisioning third-party services. About the New Relic Kubernetes Operator The New Relic Kubernetes Operator provides the ability to configure your New Relic monitoring resources the same way you manage the rest of your Kubernetes configuration. For example, once you’ve installed the operator in your cluster, you can create a New Relic alert policy via kubectl apply using New Relic’s custom Kubernetes AlertsPolicy object. You can also configure the AlertsPolicy object using NRQL alert conditions. To configure a standalone New Relic NRQL alert condition and apply it to a pre-existing alert policy, you can use New Relic’s custom AlertsNrqlCondition object. Note: This post was written with the New Relic Kubernetes Operator version v0.0.2 and Kubernetes version 1.18.2. Before you begin This walkthrough assumes you’ve already deployed a Kubernetes cluster. You could even create a local cluster on your machine with kind. To complete the full exercise, you’ll need to: Install kubectl, and point it at the correct cluster, as this will determine the cluster where you’ll install the New Relic operator. Install kustomize. Installing the operator on your Kubernetes cluster Installing the New Relic operator is a two-step process. First, install cert-manager, which automatically provisions and manages TLS certificates in Kubernetes: kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.0/cert-manager.yaml Next, install the Kubernetes operator: kustomize build https://github.com/newrelic/newrelic-kubernetes-operator/configs/default | kubectl apply -f - To confirm the installation was successful, run a few kubectl commands to check the status of the Kubernetes operator. Ensure the Kubernetes operator’s namespace, newrelic-kubernetes-operator-system, has been applied: kubectl get namespaces The output should be similar to the example below, which includes the Kubernetes operator’s namespace, newrelic-kubernetes-operator-system: NAME                                     STATUS   AGE cert-manager                          Active   4m35s default                               Active   20m kube-node-lease                       Active   20m kube-public                           Active   20m kube-system                           Active   20m newrelic-kubernetes-operator-system   Active   3m48s Now, make sure the Kubernetes operator’s controller manager is running: kubectl get pods --namespace newrelic-kubernetes-operator-system Note: Don’t forget to include the --namespace (shorthand -n) option when running kubectl get pods to ensure you’re inspecting resources within the correct namespace. You should see output similar to the following: NAME                                                               READY   STATUS    RESTARTS   AGE newrelic-kubernetes-operator-controller-manager-7b9c64f58crwg9j   2/2     Running   0          157m If you see output similar to the above, you’re ready for the next step. If you don’t see a pod named newrelic-kubernetes-operator-controller-manager-<hash>, double check your Kubernetes configuration to ensure you’re within the correct context and pointing to the correct cluster. Using the Kubernetes operator Now that Kubernetes operator is deployed to your cluster, you can put it to work. You’ll write the alert policy and NRQL alert condition configuration the same way you write your other Kubernetes configurations. Workflow overview Generally, it’s a three-step process to create your first alert policy using kubectl apply. Using a declarative approach, you’ll write an alert policy configuration file. You’ll add your New Relic personal API key to the configuration. You’ll run kubectl apply when your configuration is ready to go. Creating your first alert policy To kick things off, start small. First, create an alert policy with the minimum required configuration, then add a NRQL alert condition to the policy, which will add the condition to the policy in New Relic. A minimal alert policy configuration is represented in the code below. For the sake of this walkthrough, name this file new_relic_alert_policy.yaml. new_relic_alert_policy.yaml apiVersion: nr.k8s.newrelic.com/v1 kind: AlertsPolicy metadata: name: my-policy spec: account_id: <your New Relic account ID> api_key: <your New Relic personal API key> name: \"Alert Policy Created With k8s\" # Feel free to rename region: \"us\" Note: For help locating your personal API key, check out New Relic’s personal API key documentation. Now run the kubectl apply command to create your alert policy: kubectl apply -f ./new_relic_alert_policy.yaml You’ll see output that reads similar to the following: alertspolicy.nr.k8s.newrelic.com/my-policy created\\ Confirm that your alert policy was created by viewing your policies at alerts.newrelic.com/accounts/{your account ID}/policies. You can search for your new policy by its name. In this case , you’d search for “Alert Policy Created With k8s.” You should see your new alert policy. Now it’s time to add a NRQL alert condition to the policy using the same configuration file. Add NRQL alert conditions to your alert policy Now that you’ve created an alert policy, you’ll want to add some alert conditions to the policy so you can trigger alerts when certain metrics are out of line. In your new_relic_alert_policy.yaml file, add a NRQL alert condition to the policy that will alert you when an application’s average overall response time is above five seconds for a three minute period. new_relic_alert_policy.yaml # The policy from the previous steps apiVersion: nr.k8s.newrelic.com/v1 kind: AlertsPolicy metadata: name: my-policy spec: account_id: <your New Relic account ID> api_key: <your New Relic personal API key> name: \"Alert Policy Created With k8s\" # Feel free to rename region: \"us\" # Add a NRQL alert condition to the policy conditions: - spec: type: \"NRQL\" name: \"NRQL Alert Condition Created With k8s\" nrql: query: \"SELECT average(duration) FROM Transaction WHERE appName = 'YOUR APP NAME'\" evaluationOffset: 3 enabled: true terms: - threshold: \"5\" threshold_occurrences: \"ALL\" threshold_duration: 180 priority: \"CRITICAL\" operator: \"ABOVE\" violationTimeLimit: \"ONE_HOUR\" valueFunction: \"SINGLE_VALUE\" Note: To receive notifications when an alert is triggered, you’ll want to add notification channels to your alert policy. With the alert condition added to the configuration,  you can apply the update, which will create a NRQL alert condition and add it to your policy. kubectl apply -f ./new_relic_alert_policy.yaml To confirm the successful creation of the NRQL alert condition, refresh your alert policy. If you see a new alert condition added to the alert policy, it was a success. To finish things off,  create and add an alert channel to your alert policy. For example, maybe you want to send an email out to your team when your alert condition is triggered. What’s next? Nice work—now you can manage your New Relic alert policies and NRQL alert conditions with code that integrates seamlessly within your Kubernetes workflow. This allows you to configure and manage your alerts with a domain-specific pattern, providing consistency and maintainability. You also gain the benefits of code reviews for any potential changes moving forward. As you and your team progress, you may need to adjust some of the configuration values to better fit your needs. The New Relic Kubernetes Operator is just one of several tools in the New Relic Developer Toolkit aimed at facilitating observability as code. Check out the New Relic Kubernetes Operator and other tools to help automate your workflows at New Relic Open Source. developer toolkit, Kubernetes, observability Sander is a Senior Software Engineer at New Relic. View posts by Sander Blue. The views expressed on this blog are those of the author and do not necessarily reflect the views of New Relic. Any solutions offered by the author are environment-specific and not part of the commercial solutions or support offered by New Relic. Please join us exclusively at the Explorer’s Hub (discuss.newrelic.com) for questions and support related to this blog post. This blog may contain links to content on third-party sites. By providing such links, New Relic does not adopt, guarantee, approve or endorse the information, views or products available on such sites. Interested in writing for New Relic Blog? Send us a pitch! Related Posts Which Kubernetes Certification Is Right For You? By Isaac Eldridge • Jun. 3rd, 2020 • Technology Industry best practices, certification, Kubernetes Understanding the Relationships Between Kubernetes Clusters, Nodes, and Pods By Alexis Jones • Mar. 12th, 2020 • Software Engineering Kubernetes How To Set Up Logs In Context For A Java Application Running In Kubernetes By Alec Isaacson • Feb. 12th, 2020 • Software Engineering Kubernetes, New Relic APM, New Relic cluster explorer, New Relic Infrastructure Company Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal Connect Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "blog",
      "info": "",
      "sections": [
        "How to Use the New Relic Kubernetes Operators for Parallel Deployment",
        "What is a Kubernetes Operator?",
        "About the New Relic Kubernetes Operator",
        "Before you begin",
        "Installing the operator on your Kubernetes cluster",
        "Using the Kubernetes operator",
        "Workflow overview",
        "Creating your first alert policy",
        "Add NRQL alert conditions to your alert policy",
        "What’s next?",
        "Related Posts",
        "Which Kubernetes Certification Is Right For You?",
        "Understanding the Relationships Between Kubernetes Clusters, Nodes, and Pods",
        "How To Set Up Logs In Context For A Java Application Running In Kubernetes",
        "Company",
        "Connect",
        "international"
      ],
      "title": "How to Use the New Relic Kubernetes Operators for Parallel Deployment - New Relic Blog",
      "popularity": 1,
      "external_id": "52fdfac2c92c1ca8d4f56e2308cd83444a94a4bc",
      "image": "http://newrelic-wpengine.netdna-ssl.com/wp-content/uploads/K8s2.png",
      "url": "https://blog.newrelic.com/product-news/kubernetes-operators-for-parallel-deployment/",
      "published_at": "2020-08-10T17:38:24Z",
      "updated_at": "2020-07-30T08:06:35Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0023903162,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How to <em>Use</em> <em>the</em> <em>New</em> <em>Relic</em> <em>Kubernetes</em> <em>Operators</em> for Parallel Deployment - <em>New</em> <em>Relic</em> Blog",
        "sections": "How to <em>Use</em> <em>the</em> <em>New</em> <em>Relic</em> <em>Kubernetes</em> <em>Operators</em> for Parallel Deployment",
        "body": " The <em>New</em> <em>Relic</em> <em>Kubernetes</em> <em>Operator</em> provides the ability to configure your <em>New</em> <em>Relic</em> monitoring resources the same way you manage the rest of your <em>Kubernetes</em> configuration. For example, once you’ve installed the <em>operator</em> in your cluster, you can create a <em>New</em> <em>Relic</em> alert policy via kubectl apply <em>using</em>"
      },
      "id": "5efd3c0d196a67d905766436"
    }
  ],
  "/automate-workflows/5-mins-tag-resources": [
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.007102921,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Add</em> <em>a</em> simple <em>tag</em> to your <em>application</em>",
        "info": "Learn the essentials <em>of</em> the New Relic CLI, from install <em>and</em> configuration to basic usage.",
        "tags": "<em>Tags</em>",
        "body": " to <em>set</em> the region of your New Relic account: use -r to <em>set</em> either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # <em>Set</em> the profile as defaults newrelic profiles default -n tutorial Copy Step 3"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "logo-newrelic Search Products Pricing Solutions Help Center About New Relic for iOS or Android    New Relic Insights App for iOS Search icon Sign Up Log In Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media Public Sector By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore open source projects Training Get help Community forum Global technical support Expert services About Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources   Investor Relations Newsroom Partner Program Contact Us logo-newrelic Want to use our logo? There's a page for that, including instructions and different styles and formats. Sorry about grabbing your right-click. Just trying to be helpful. You can also go home. Back to top icon Resources One place for ebooks, reports, videos, and more Filter Resources Language Clear All English Korean German French Japanese Content Type Clear All Analyst Report Article Tutorial Case Study eBook White Paper Datasheet Webinar Infographic Solution Sheet Video Topic Clear All Software Analytics Enterprise Customer Testimonial Performance Tuning Partners Training Mobile Culture Security DevOps Cloud SaaS Product Clear All Browser Plugins APM Insights Infrastructure Synthetics Mobile Featured Resources Datasheet New Relic One: A Simple, Powerful Platform for Observability White Paper New Relic One: Complete Observability, Simplified Video Check Out New Relic One COMPANY Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal CONNECT Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "",
      "info": "",
      "sections": [
        "Featured Resources",
        "COMPANY",
        "CONNECT",
        "international"
      ],
      "title": "Resources",
      "popularity": 1,
      "external_id": "57bee0529a922f26c17af709e06766adbaecd512",
      "image": "https://newrelic.com/content/dam/new-relic/opengraph/newrelic_og_image.png",
      "url": "https://newrelic.com/resources",
      "published_at": "2020-08-13T02:58:14Z",
      "updated_at": "2020-07-31T01:43:11Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0025071006,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Resources</em>",
        "sections": "Featured <em>Resources</em>",
        "body": " Leadership Meetups and Events <em>Resources</em>   Investor Relations Newsroom Partner Program Contact Us logo-newrelic Want to use our logo? There&#x27;s a page for that, including instructions and different styles and formats. Sorry about grabbing your right-click. Just trying to be helpful. You can also go"
      },
      "id": "58a3b08ae621f42edadae752"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us End of life notice: Synthetics labels and Synthetics/APM group by tag Support: Full-Stack Observability (FSO) Synthetic follow-up mod_queue sla_breaching productupdate synthetic ty_herbert August 3, 2020, 5:13pm #1 Background Synthetics and APM are moving to New Relic One to provide a single platform for observability of your complex software systems. To do this we are unifying the tools you use to tag (or label) your services, applications, and monitors. What is Happening? Changes will be made in two different waves over the next couple of months: After July 8th Synthetics labels and the Synthetics label API endpoint will be replaced by tags and the tags API. We are replacing Synthetics labels with a new tag service that is incorporated into the New Relic One platform. Tags allow you to report and visually segment data using NRQL queries. New Relic One has additional features looking across all New Relic products that allow things to be grouped using tags. One time migration (now until July 8th, 2020): Synthetics labels to tags migration The Synthetics monitor listing page now displays an option to trigger a one time label to tag migration when toggling to display/hide labels. Upon completing this migration all Synthetics labels will be migrated to tags (visible in New Relic One). If you are using an API to manage Synthetics labels, you’ll need to update your service to call the Tags service moving forward (see FAQ for more details on this change). Labels will continue to be displayed on the monitor listed pages, but will be read only. Any updates you make in New Relic ONE or via the tag API will not be reflected in Synthetics. Automated labels to tags migration (beginning week of July 8th, 2020): We will be migrating all remaining labels to tags beginning the week of July 8th. We expected this to take up to 2 weeks to migrate all accounts. If you have already migrated your labels to tags, you will not be impacted by this change. After an account has been migrated, the Synthetics labels API will no longer be available to manage labels. Tags can be managed using the tag API moving forward. After July 20, 2020: The use of labels in the Synthetics and APM web user interfaces will be replaced by tags. Conceptually, labels and tags are very similar, but tags are available throughout the New Relic One platform, while labels have been available only for certain experiences. “Rollups” (group by tag) on APM app listing page and Synthetics monitors listing page will be retired. New entity listing experiences will allow you to search across accounts for APM apps and Synthetics monitors. The Workloads concept can be used to create groups of entities by tag, including applications, services, and monitors (see more in the FAQ section below). Why? Synthetics will be adopting tags as we migrate to the New Relic One platform. Tags offer a versatile way to identify entities across the New Relic One platform. Many features leverage tags to automatically group entities showing the status of a group of entities (ex: Workloads can group APM, Browser, and Synthetics entities by tag). What do I need to do? No changes will be required to use the new Synthetics and APM entity listing pages. The new experiences will be available to you after July 20. To recreate the rollups that are being retired, you can begin using Workloads today. Check in the FAQ whether Workloads suit your use case for rollups. Migrate your Synthetics labels to tags Synthetics administrators have the option to perform a one time ‘labels to tags’ migration. This can be done by logging into Synthetics and selecting the ‘show labels’ toggle. Upon completing the migration, labels will still be visible as ‘read only’ on the monitor listing pages. To make changes to tags via API you’ll need to use the New Relic One tags service. This can be done by updating API calls that currently use the Synthetics labels API to use the tags API moving forward. See details on how to migrate below FAQ How do I migrate my Synthetics labels to tags? Login to the Synthetics monitor listing page and click the “Migrate your Synthetics monitor labels to New Relic One tags!” link: Screen Shot 2020-06-02 at 3.22.15 PM.jpg1876×1200 284 KB Accept the labels to tag migration agreement Screen Shot 2020-06-02 at 3.22.28 PM.jpg1750×954 191 KB The job will take a couple of minutes to complete the migration from labels to tags. Upon completion the monitor listing page will reload. From this point forward labels will be read-only. Update APIs that call the Synthetics label service. Moving forward these will need to call the New Relic One Tag service (doc). Will the APM labels API continue to work? Yes, you can continue to use the APM labels endpoint, but we encourage you to start planning to migrate to the tags endpoint. In the future we will be relying solely on the tags API to manage your tags across everything in New Relic One. Learn more about the tags API in our documentation. How can New Relic Workloads help me visualize groups of applications and monitors? New Relic One Workloads gives you the ability to group and monitor entities based on a team or a set of responsibilities, from front-end to back-end services, across your entire stack. You can use workloads to group together applications, infrastructure, monitors and dashboards that are important to your specific team or project, so you can better browse and isolate the most relevant data for your services. You can create a Workload automatically using your existing tags, and refine it manually by adding entities if need be. Any new matching entities are added dynamically. Then take advantage of the curated UI with: Overview of entity health (and the global status of the workload coming soon!) Specific metrics based on the need of different entity types Related violations of alert conditions Related dashboards Connection to all the other tools available in New Relic Screen Shot 2020-06-02 at 3.22.40 PM.jpg1856×900 394 KB How do I pull in tags using NRQL instead of labels? A NRQL against SyntheticCheck events using tags will feel quite similar to the deprecated labels syntax. All tags are prefixed in Insights events with the “tags” prefix followed by the tag key. Tags with a single value will be returned as a String. Tags with multiple values will be returned as single String delimited by the pipe character. Tags can be utilized across SyntheticCheck events with the full power of Insights. You can use tags to filter your queries by including them in a where clause or facet metrics by a specified tag. \"event\": { ... \"tags.exampleTag\": \"exampleValue|exampleValue2\", \"tags.exampleTag2\": \"exampleValue\", ... } For example: select * from SyntheticCheck where tags.myTag = \"myValue\" Or select * from SyntheticCheck where tags.MyTag like \"%myValue\" How do I transition my scripts from the Synthetics API to the tag API (NerdGraph)? Migrating from the Synthetics labels API to the tags API will require updates to the API request (the data structure is different). Review the docs to understand the current labels API vs tag API data structure. Identify which entities that you’d like to add a tag to. On New Relic ONE, monitors are defined as entities (along with APM app, Browser apps, etc). You’ll need to identify the Synthetics monitor that you want to add/delete a tag from and grab the entity GUID. To get the entity guid you can either copy it from the monitor summary page within New Relic One under the Metadata & Tags section for the monitor or you can retrieve it as the “entityId” field from the V5 monitor GET endpoint (e.g. /synthetics/api/v5/monitors/). Use the GUID to add/delete tags from the monitors. Using the tag API you will make a request to take the appropriate action on the GUIDs included in the API request. mutation { taggingAddTagsToEntity(guid: \"NOTAREALGUIDlOVEh8TU9OSVRPUnw5ZmQwODdkMi1kYTYyLTQ4ZTktODFkMi1mYmY0ODFmNjlhMzA\", tags: [{key: \"testKey\", values: [\"testValue\"]}]) { errors{ message } } } Pro Tip: Use the New Relic One API explorer to establish the request and responses from the NerdGraph APIs. 6 Likes Having trouble adding labels to Synthetic monitors New Relic Feature End-of-Life Announcements Feature idea: Alert condition for specific monitor Not able to see + button for adding category and labels to the monitors Tagging in the Nerdgraph API to replace Labels RyanVeitch pinned June 3, 2020, 7:23am #2 wkiNewRelic June 16, 2020, 8:46am #3 Is the feature to add attributes to Insights data with $util.inisights affected by this change or will it continue to work? 1 Like ty_herbert June 16, 2020, 7:35pm #4 This will have no impact to how custom attributes are captured for Synthetics. You can continue to use $util.inisights. 5 Likes harry.mitchinson July 31, 2020, 9:27am #5 Will using the NEW_RELIC_LABELS APM environment variable handle this change automatically? Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "End of life notice: Synthetics labels and Synthetics/APM group by tag",
        "Background",
        "What is Happening?",
        "Why?",
        "What do I need to do?",
        "FAQ",
        "How do I migrate my Synthetics labels to tags?",
        "Will the APM labels API continue to work?",
        "How can New Relic Workloads help me visualize groups of applications and monitors?",
        "How do I pull in tags using NRQL instead of labels?",
        "How do I transition my scripts from the Synthetics API to the tag API (NerdGraph)?"
      ],
      "title": "End of life notice: Synthetics labels and Synthetics/APM group by tag - Synthetic - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "58369726d6f4e48767695a1fd09975d5fba81d85",
      "image": "https://nr-production-discourse.s3.dualstack.us-east-1.amazonaws.com/optimized/3X/a/7/a767d9a702201a9fa2544f77015de1a229c55b3a_2_690x441.jpeg",
      "url": "https://discuss.newrelic.com/t/end-of-life-notice-synthetics-labels-and-synthetics-apm-group-by-tag/103781",
      "published_at": "2020-08-11T05:33:16Z",
      "updated_at": "2020-08-07T03:17:51Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.002189591,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "End <em>of</em> life notice: Synthetics labels <em>and</em> Synthetics&#x2F;<em>APM</em> group by <em>tag</em> - Synthetic - New Relic Explorers Hub",
        "sections": "End <em>of</em> life notice: Synthetics labels <em>and</em> Synthetics&#x2F;<em>APM</em> group by <em>tag</em>",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events <em>Resources</em> Investor Relations Newsroom Partner Program Contact Us End of life notice: Synthetics labels and Synthetics&#x2F;APM group by <em>tag</em> Support: Full-Stack Observability (FSO) Synthetic follow-up"
      },
      "id": "5ed8584b28ccbcc35bea0713"
    },
    {
      "body": "Products Pricing Solutions Help Center About Search icon Search the blog Monitor New Relic from your phone or tablet Learn more or download using the links below. New Relic app for iOS or Android    New Relic Insights app for iOS or Android    Log In Sign Up Search icon Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience By Industry E-commerce and Retail Media By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore Open Source Projects Training Get Help Community Forum Global Technical Support Expert Services About Our CustomersOver 15,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our BlogThe latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture 8 times in a row, New Relic named a Gartner APM Magic Quadrant leader. Take a closer look Underutilized AWS resources By David Gaule • Sep. 1st, 2017 • David Gaule is an editor at New Relic. Prior to joining the company, he served as senior editor for AllBusiness.com. Way back in the days of paper books, David held positions at HarperCollins Publishers and Little, Brown & Company. View posts by David Gaule. The views expressed on this blog are those of the author and do not necessarily reflect the views of New Relic. Any solutions offered by the author are environment-specific and not part of the commercial solutions or support offered by New Relic. Please join us exclusively at the Explorer’s Hub (discuss.newrelic.com) for questions and support related to this blog post. This blog may contain links to content on third-party sites. By providing such links, New Relic does not adopt, guarantee, approve or endorse the information, views or products available on such sites. Interested in writing for New Relic Blog? Send us a pitch! Related Posts Create Grafana Dashboards with Prometheus Data Stored in New Relic By Gavin Johnson • Aug. 10th, 2020 • New Relic News and Products Grafana, New Relic One, Prometheus, Telemetry Data Platform New Relic and Grafana Labs CEOs Discuss Partnership to Bring Observability to All By Joel Worrall • Aug. 10th, 2020 • New Relic News and Products Grafana, New Relic One, observability, Telemetry Data Platform The Best Resources for Software Developers in 2020 By Manasa Gogineni • Aug. 7th, 2020 • Software Engineering developers Company Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal Connect Contact Us Request Demo Events international newrelic.co.jp (Japanese) newrelic.fr (French) newrelic.de (German) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 ©2008-20 New Relic, Inc. All rights reserved",
      "type": "blog",
      "info": "",
      "sections": [
        "Underutilized AWS resources",
        "Related Posts",
        "Create Grafana Dashboards with Prometheus Data Stored in New Relic",
        "New Relic and Grafana Labs CEOs Discuss Partnership to Bring Observability to All",
        "The Best Resources for Software Developers in 2020",
        "Company",
        "Connect",
        "international"
      ],
      "title": "Underutilized AWS resources - New Relic Blog",
      "popularity": 1,
      "external_id": "0513aaa2222089782a6e98b64c5adf972071de4d",
      "image": "https://newrelic-wpengine.netdna-ssl.com/wp-content/uploads/Underutilized-AWS-resources--300x114.jpg",
      "url": "https://blog.newrelic.com/product-news/applied-intelligence-radar/attachment/underutilized-aws-resources/",
      "published_at": "2020-08-11T07:20:23Z",
      "updated_at": "2020-08-11T07:20:23Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0020954441,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Underutilized <em>AWS</em> <em>resources</em> - New Relic Blog",
        "sections": "Underutilized <em>AWS</em> <em>resources</em>",
        "body": " news, tips, and insights from the world of New Relic and digital intelligence. Our Company About New Relic Leadership Meetups and Events <em>Resources</em> Investor Relations Newsroom Partner Program Contact New Relic New Relic Blog Blog Home News and Products Software Engineering Technology Industry Culture"
      },
      "id": "5f237c85e7b9d2291fbeb290"
    },
    {
      "body": "Products & Pricing Solutions Help Center About LEARN Docs Build on New Relic Explore open source projects Training GET HELP Community forum Global technical support Expert services The Platform New Relic One Capabilities Programmability Infinite Tracing Integrations Security Alerts New Relic for Android and iOS Insights Manage Complex Systems Logs Metrics and Traces Applied Intelligence Serverless Improve Client-side Experiences Browser Mobile Synthetics Build and Run Better Software APM Infrastructure BY TOPIC DevOps Cloud Adoption Native Digital Customer Experience BY INDUSTRY E-Commerce and Retail Media Public Sector BY TECHNOLOGY Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Investor Relations Newsroom Partner Program Contact Us Important: We’re updating our AWS integration for better tag retrieval Support: Full-Stack Observability (FSO) Infrastructure aws cloud infrastructure cloudintegration productupdate mburni August 7, 2020, 3:26pm #1 Dear customer, Customer satisfaction is our top priority and we’re evolving our systems to bring you the best experience on the market. In an effort to reduce the number of calls we make to AWS APIs, to reduce throttling errors, and to fetch your metrics even faster, we’re changing our systems to work in a more efficient way. What is happening? We are changing how we retrieve AWS tag information starting August 12th 2020. Background New Relic Infrastructure integrations have been designed to function with AWS ReadOnlyAccess policies. We’re working to reduce the number of requests to the AWS APIs to reduce throttling and improve our monitoring service. As part of our strategy, we will start using the Resource Tagging API (RTA) to retrieve the AWS tags instead of using CloudWatch. This allows us to be more efficient regarding the number of API calls we make. To do this, we need ReadOnlyAccess to the Resource Groups Tagging API. Who is impacted? Please bring this to the attention of the person responsible for the AWS IAM Role used for the New Relic integration. Some of our customers with the AWS integration configured will need to update their AWS Policy used for the integration. You can check your Policy to see if you have the correct permissions set. With some customers’ current New Relic policy configuration New Relic can’t access Resource Groups Tagging API, which is a crucial resource for the upcoming change. What do you need to do? Please, make sure that the Policy in the Role used by the New Relic Infrastructure integration has the tag:GetResources permission by August 12th. To find the relevant role you can navigate to Infrastructure -> AWS -> Manage Services: W8egl2qC3MhSRirSzBk9mf1xvHG-vD4TD_949rtLuAO2XJd8StdPdp50PfEL4wbpoUQNc1nrWDlFUy1AszmfNEEwci6RB8fQ9XWB7KmzmhpeVkmfVTV2WaMR9VsaZQ6_edZNE6S71600×396 Here you will see the ARN, which is a combination of the AWS account number and the role used for the integration. To check for errors related to your role missing the tag:GetResources permission, go to Infrastructure -> AWS -> Account status dashboard: EG5cWokFPh9MS5-txUsKISEySCjAtJKmERVBrbCjTqv9M4j72Iw-gt7ObwiL4fWCi90G8pUVsIr5ceiSH0mp38y4TL35c4On3ve_PyCUhGH2RRGEFRBJtBA_gazn-vd9LTvV1aS91600×389 In the Permission errors chart, if you see the message GetResources then you should check the role and ensure the permission is granted. Example (line 4, 5, 6): If you have many AWS accounts and you would like to check which provider account is affected by this change, you can run the following query in Insights: SELECT count(*) as 'Number of errors', max(timestamp) as 'Last seen' FROM IntegrationError WHERE error = 'ServiceAccessDenied' and method = 'GetResources' FACET dataSourceName, providerAccountName SINCE 1 day ago What happens if you don’t make the recommended changes? If you don’t update your integration role for AWS and include this permission you won’t be able to see tags for most of the AWS integrations starting from August 12th. For further information If you have any questions, please respond to this post or contact your New Relic account team. Note: The change date has been revised from August 5th to August 12th. 2 Likes Home Categories FAQ/Guidelines Terms of Service Privacy Policy Powered by Discourse, best viewed with JavaScript enabled",
      "type": "forum",
      "info": "",
      "sections": [
        "Important: We’re updating our AWS integration for better tag retrieval"
      ],
      "title": "Important: We’re updating our AWS integration for better tag retrieval - Infrastructure - New Relic Explorers Hub",
      "popularity": 1,
      "external_id": "fb528bc7889872cb30998870bb69a7c0d7eba338",
      "image": "https://lh6.googleusercontent.com/GYmWnpyQHRvuYl6Y6B1M57Yautz5oMQkHWoObuh1TDKkMTFkFrUOnIKJxWXOEALyxkncbFsouffYIh9cDuf7Hovgq4Y_xQprbGoDgYhcC7RhQ9MYiOlrQdgrVAXI2Ww8rA_tr3yr",
      "url": "https://discuss.newrelic.com/t/important-we-re-updating-our-aws-integration-for-better-tag-retrieval/104315",
      "published_at": "2020-08-10T19:18:31Z",
      "updated_at": "2020-08-10T19:18:30Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0019389007,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Important: We’re updating our <em>AWS</em> integration for better <em>tag</em> retrieval - Infrastructure - New Relic Explorers Hub",
        "sections": "Important: We’re updating our <em>AWS</em> integration for better <em>tag</em> retrieval",
        "body": " from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events <em>Resources</em> Investor Relations Newsroom Partner Program Contact Us Important: We’re updating our AWS integration for better <em>tag</em> retrieval Support: Full-Stack Observability (FSO) Infrastructure aws"
      },
      "id": "5ee069ce64441fb8900c59a2"
    }
  ],
  "/explore-docs/nr1-cli": [
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1.02403,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> CLI Reference",
        "sections": "<em>New</em> <em>Relic</em> CLI <em>commands</em>",
        "info": "The <em>command</em> line tools for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> cli",
        "body": "<em>New</em> <em>Relic</em> CLI Reference The <em>New</em> <em>Relic</em> CLI enables integration of <em>New</em> <em>Relic</em> into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into your CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> CLI <em>commands</em> Find details for the <em>New</em> <em>Relic</em> CLI <em>command</em> docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.6325432,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "sections": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> CLI, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> CLI",
        "body": " that you&#x27;ve installed the <em>New</em> <em>Relic</em> CLI, it&#x27;s time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI <em>command</em>, which is useful when switching between accounts. To create your first CLI profile, run the profiles add <em>command</em>. Note that you need"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "New Relic One CLI Nerdpack commands To set up your Nerdpacks, use the commands below. You can click any command to see its usage options and additional details about the command. Command Description nr1 nerdpack:clone Clones a Nerdpack from a git repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Command details nr1 nerdpack:clone Clone an existing Nerdpack Duplicates an existing Nerdpack onto your local computer. You can clone an open source Nerdpack from our Open Source GitHub repositories. After choosing a git repository, this command performs the following actions so that you can start using the Nerdpack: Clones the repository. Sets the repository as remote upstream. Installs all of its dependencies (using npm). Generates a new UUID using your profile, and commits it. Usage $ nr1 nerdpack:clone OPTION Options -r, --repo=REPO Repository location (either an HTTPS or SSH path). (Required) -p, --path=PATH Determines the directory to clone to (defaults to the repository name). -f, --force Replaces destination folder if it exists. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 nerdpack:serve Serve your Nerdpack locally Launches a server with your Nerdpack locally on the New Relic One platform, where it can be tested live. To learn more about working with apps locally, see our guide on how to serve, publish, and deploy documentation. Usage $ nr1 nerdpack:serve Options --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 nerdpack:uuid Get your Nerdpack's UUID Prints the UUID (Universal Unique ID) of your Nerdpack, by default. The UUID determines what data the Nerdpack can access and who can subscribe to the Nerdpack. To deploy a Nerdpack you didn't make, you'll have to assign it a new UUID by using the -g or --generate option. For more details, see our GitHub workshop on GitHub. Usage $ nr1 nerdpack:uuid Options --profile=PROFILE The authentication profile you want to use. -f, --force If present, it will override the existing UUID without asking. -g, --generate Generates a new UUID if not available. --verbose Adds extra information to the output. nr1 nerdpack:publish Publish your Nerdpack Publishes your Nerdpack to New Relic. Please note: If no additional parameters are passed in, this command will automatically deploy the Nerdpack onto the DEV channel. If you want to specify your own list of deploy channels, add the --channel option. For example, $ nr1 nerdpack:publish --channel BETA --channel STABLE. If you want to disable this behavior, add -D or --skip-deploy to the command. Then, you can use nr1 nerdpack:deploy to perform a deploy manually. For more on publishing and deploying, see Deploy to New Relic One. Usage $ nr1 nerdpack:publish Options -B, --skip-build Skips the previous build process. -D, --skip-deploy Skips the following deploy process. -c, --channel=DEV/BETA/STABLE Specifies the channel to deploys to. [default: STABLE] -f, --force Forces the publish, overriding any existing version in the registry. --dry-run Undergoes publishing process without actually publishing anything. --extra-metadata-path=extra-metadata-path Specifies a json file .path with extra metadata. [default: extra-metadata.json] --prerelease=STRING The value you enter will be appended to the current version of generated files. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 nerdpack:deploy Deploy your Nerdpack to a channel Deploys a Nerdpack version to a specific channel (DEV, BETA, or STABLE). A channel can only have one Nerdpack version deployed to it at one time. If a channel has an existing Nerdpack associated with it, deploying a new Nerdpack version to that channel will undeploy the previous one. For more on publishing and deploying, see Deploy to New Relic One. Usage $ nr1 nerdpack:deploy OPTION Options -c, --channel=DEV/BETA/STABLE Specifies the channel to deploy to. (required) -i, --nerdpack-id=NERDPACK_ID Specifies the Nerdpack to deploy. By default, the command will use the one in package.json. --from-version=VERSION Specifies which version to deploy. By default, the command will use the one in package.json. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 nerdpack:undeploy Undeploy your Nerdpack Undeploys a Nerdpack version from a specific channel (for example, DEV, BETA, or STABLE). Usage $ nr1 nerdpack:undeploy OPTION Options -c, --channel=DEV/BETA/STABLE Specifies the channel to undeploy from. (required) -i, --nerdpack-id=NERDPACK_ID Specifies the Nerdpack to deploy. By default, the command will use the one in package.json. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI commands you can use to set up your New Relic One Nerdpacks.",
      "sections": [
        "New Relic One CLI Nerdpack commands",
        "Command details",
        "nr1 nerdpack:clone",
        "Clone an existing Nerdpack",
        "Usage",
        "Options",
        "nr1 nerdpack:serve",
        "Serve your Nerdpack locally",
        "nr1 nerdpack:uuid",
        "Get your Nerdpack's UUID",
        "nr1 nerdpack:publish",
        "Publish your Nerdpack",
        "nr1 nerdpack:deploy",
        "Deploy your Nerdpack to a channel",
        "nr1 nerdpack:undeploy",
        "Undeploy your Nerdpack"
      ],
      "title": "New Relic One CLI Nerdpack commands",
      "popularity": 1,
      "external_id": "7c1050a6a8624664b90c15111f7c72e96b2fbe17",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-nerdpack/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.54044926,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> CLI <em>Nerdpack</em> <em>commands</em>",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> CLI <em>Nerdpack</em> <em>commands</em>",
        "info": "An overview of the CLI <em>commands</em> you can use to set up your <em>New</em> <em>Relic</em> <em>One</em> <em>Nerdpacks</em>.",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> CLI <em>Nerdpack</em> <em>commands</em> To set up your Nerdpacks, use the <em>commands</em> below. You can click any <em>command</em> to see its usage options and additional details about the <em>command</em>. <em>Command</em> Description nr1 <em>nerdpack</em>:clone Clones a <em>Nerdpack</em> from a git repository. nr1 <em>nerdpack</em>:serve Serves your <em>Nerdpack</em>"
      },
      "id": "5f28bd6a64441f9817b11a38"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.411622,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create a &quot;Hello, World!&quot; <em>application</em>",
        "sections": "Publish your <em>application</em> to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; <em>app</em> and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Nerdpack</em> file structure",
        "body": " the application with others, you can publish it to <em>New</em> <em>Relic</em> <em>One</em>. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and <em>New</em> <em>Relic</em>. To develop projects, you need our <em>New</em> <em>Relic</em> <em>One</em> CLI (<em>command</em> line interface). If you haven&#x27;t already"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "Developers are creating new and innovative apps that extend and enhance your data views. From New Relic One's apps page, you can subscribe to apps you create, publish, and deploy, as well as those created by New Relic engineers and other organizations. You can also launch the apps you subscribe to. Just select Apps from the New Relic One home page to see what's available. one.newrelic.com > Apps: Under the New Relic One catalog section, you can subscribe to applications. Create and share open source apps The Other apps section shows launchers for New Relic apps, as well as any third-party apps that you subscribe to. The New Relic One catalog provides apps that you haven't subscribed to, some developed by New Relic engineers to provide information we think you'll want, like Cloud Optimizer, which analyzes your cloud environment, or PageView Map, which uses Browser events to chart performance across geographies. Other apps in the catalog are created by third-party contributors and are submitted via opensource.newrelic.com. All are intended to help you visualize the data you need, the way you want it. If you’ve started to develop applications on the New Relic One platform, you probably want to share them with your broader organization. That’s where the catalog comes in. When you publish and deploy your app, it’s available to you in the catalog. You can manage the information that you want to share about your application, as well as how it appears on the New Relic One app page. You can also subscribe accounts to it. Permission for managing applications User permissions vary depending on which pricing plan you are on: New Relic One pricing plan For accounts with New Relic One pricing, there are permissions differences for basic users and full users: Full users have the Nerdpack Manager role and have full capabilities for creating and managing New Relic One applications as well as accessing all types of applications in the New Relic One catalog. A basic user can develop and view their own local New Relic One apps, but they cannot: Subscribe other users to apps they’ve created. Access or manage apps in the New Relic One catalog. Access apps in the entity explorer sidebar. Original product-based pricing For accounts on our original product-based pricing, here are access details: Subscribe to publicly available applications To subscribe to publicly available applications, you must have the Nerdpack manager role. Nerdpack manager permissions are automatically assigned to New Relic account owners and admins and can be assigned to individual users. If you aren’t an owner or admin, you can request Nerdpack manager permission, or ask your New Relic admin or owner to subscribe the apps to your account for you. You can add any of the publicly available applications to master accounts or separate sub-accounts on which you have the Nerdpack manager role, or to separate sub-accounts under a master account you own or administer. If you add the application to a master account, the access flows to all of its sub-accounts as well. Subscribe to applications that you create You also must have the Nerdpack manager role to subscribe the applications you create to accounts. Applications that you publish and deploy can only be subscribed to the master account that was used to publish them, or to its sub-accounts. This means you might want a New Relic admin to deploy your applications for you if they need to be available across the organization. Add images and metadata to your apps Application creators can include a description of what the apps do and how they're best used when they build an app. They can also include screenshots, icons, and metadata that help to make them easy to spot amongst other applications. Some metadata is added automatically when an app is published: Related entities, listed if there are any. Origin label to indicate where the app comes from: local (you made it!), custom, or public. Browser Analyzer app with browser app entity listed, plus duplicate clean up tab. The New Relic One CLI enables you to provide the information and images you want to include with your application. Then it's a matter of kicking off a catalog command that validates the information and saves it to the catalog. When you create an application by running nr1 create, a generic icon.png file is added to your project. Replace this with an icon of your choice, but keep the file name icon.png to update your application's icon in the catalog. 1. Update the New Relic One CLI Make sure you have the latest version of the New Relic One CLI by running nr1 update. 2. Add catalog metadata and screenshots Run nr1 create and then select catalog to add a catalog folder to your New Relic One project. The folder contains the following empty files and folder. Add the information as described in the following table for the process to succeed. File Requirements screenshots folder A directory that must contain no more than 6 images and meet these criteria: 3:2 aspect ratio PNG format landscape orientation 1600 to 2400 pixels wide documentation.md A markdown file that presents usage information pulled into the Documentation tab for the application in the catalog. additionalInfo.md An optional markdown file for any additional information about using your application. config.json A JSON file that contains the following fields: tagline: A brief headline for the application. Must not exceed 30 characters. repository: The URL to the GitHub repo for the application. Must not exceed 1000 characters. details: Describes the purpose of the application and how to use it. Information must not exceed 1000. Use carriage returns for formatting. Do not include any markdown or HTML. support: An object that contains: issues: A valid URL to the GitHub repository's issues list, generally the GitHub Issues tab for the repo. email: A valid email address for the team supporting the application. community: URL to a support thread, forum, or website for troubleshooting and usage support. whatsNew: A bulleted list of changes in this version. Must not exceed 500 characters. Use carriage returns for formatting. Do not include markdown or HTML. Example: { \"tagline\": \"Map your workloads & entities\", \"repository\": \"https://github.com/newrelic/nr1-workload-geoops.git\", \"details\": \"Describe, consume, and manage Workloads and Entities in a geographic model that supports location-specific KPI's, custom metadata, drill-down navigation into Entities and Workloads, real-time configuration, and configuration via automation using the newrelic-cli.\", \"support\": { \"issues\": { \"url\": \"https://github.com/newrelic/nr1-workload-geoops/issues\" }, \"email\": { \"address\": \"opensource+nr1-workload-geoops@newrelic.com\" }, \"community\": { \"url\": \"https://discuss.newrelic.com/t/workload-geoops-nerdpack/99478\" } }, \"whatsNew\": \"\\n-Feat: Geographic mapping of Workloads and Entities\\n-Feat: Programmatic alerting rollup of underlying Entities\\n-Feat: Custom KPI measurement per location\\n-Feat: Empty-state edit workflow\\n-Feat: JSON file upload format\\n-Feat: Published (in open source docs) guide to automating configuration using the newrelic-cli\" } 3. Save the metadata and screenshots to the catalog Run nr1 catalog:submit. This validates the information you added to the catalog directory against the criteria described in the previous step, and saves it to the catalog. Subscribe accounts to an application Select an application you want to add to your New Relic account. Click Add this app. Note that this button says Manage access if the app has already been subscribed to an account you manage. On the Account access page listing the accounts you can subscribe to an application: - Select the accounts you want to subscribe the app to. - Choose the channel you want to subscribe the app to, Stable or Dev. This can only be Stable for the Public apps created by New Relic. - Click the update button. Now you and the accounts you subscribed to the app can launch it from New Relic One. Unsubscribe to an application On the Apps page, open the app you want to unsubscribe. Click Manage access. Clear the check box for any accounts you want to unsubscribe, and then click the update button. The application is no longer listed in the Other apps section of the Apps page, and you have unsubscribed. Handle duplicate applications You might end up with duplicate applications on your New Relic One Apps page. This can happen when you subscribe to the same app using both the CLI and the catalog. Or if you clone an app, modify and deploy it, but keep the original name. You can manage duplicates with the catalog. Good to know before you start: You need a user role with the ability to manage Nerdpacks for accounts that you want to unsubscribe and undeploy from applications. You can't remove the public apps. When a duplicate application has no accounts subscribed to it, you undeploy it. For applications that have accounts subscribed to them, you unscubscribe and undeploy. The unsubscribe and undeploy process happens in a batch. To remove an account from an application, but ensure that other accounts continue to be subscribed, select the checkbox, Resubscribe these accounts to the new application. Remove duplicates In the New Relic One catalog, click a public application that has one or more duplicates. (You can only manage duplicates from the public version of the application.) On the application information page, select Clean up applications. Review the information about the application that's open, as well as any duplicates. Click Manage app for duplicates you want to remove. If needed, select Resubscribe these accounts to the new application. Click Unsubscribe and undeploy, and agree to the terms and conditions. For more help Additional documentation resources include: Add-on roles for learning about Nerdpack manager permissions Permissions for managing applications Take a tour of the catalog If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / New Relic One / Use New Relic One / Build on New Relic One",
      "info": "About the New Relic One catalog, where you can subscribe to open source New Relic One applications, and to which you can deploy your own custom apps. ",
      "nodeid": 37996,
      "sections": [
        "Use New Relic One",
        "Get started",
        "Core concepts",
        "UI and data",
        "Workloads",
        "Build on New Relic One",
        "Discover and manage New Relic One applications",
        "Create and share open source apps",
        "Permission for managing applications",
        "Add images and metadata to your apps",
        "Subscribe accounts to an application",
        "Unsubscribe to an application",
        "Handle duplicate applications",
        "For more help"
      ],
      "title": "Discover and manage New Relic One applications",
      "popularity": 1,
      "external_id": "66a00fb098d21829d83384d8948e701cd9aa86f0",
      "category_1": "Use New Relic One",
      "category_2": "Build on New Relic One",
      "image": "https://docs.newrelic.com/sites/default/files/thumbnails/image/nr1_catalog_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/build-new-relic-one/discover-manage-applications-new-relic-one-catalog",
      "published_at": "2020-08-11T05:10:24Z",
      "updated_at": "2020-08-11T05:10:23Z",
      "category_0": "New Relic One",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.19248888,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Discover and manage <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>",
        "sections": "Discover and manage <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>",
        "info": "About the <em>New</em> <em>Relic</em> <em>One</em> catalog, where you can subscribe to open source <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>, and to which you can deploy your own custom <em>apps</em>. ",
        "category_0": "<em>New</em> <em>Relic</em> <em>One</em>",
        "category_1": "Use <em>New</em> <em>Relic</em> <em>One</em>",
        "category_2": "Build on <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " comes from: local (you made it!), custom, or public. Browser Analyzer <em>app</em> with browser <em>app</em> entity listed, plus duplicate clean up tab. The <em>New</em> <em>Relic</em> <em>One</em> CLI enables you to provide the information and images you want to include with your application. Then it&#x27;s a matter of kicking off a catalog <em>command</em>",
        "breadcrumb": "Contents &#x2F; <em>New</em> <em>Relic</em> <em>One</em> &#x2F; Use <em>New</em> <em>Relic</em> <em>One</em> &#x2F; Build on <em>New</em> <em>Relic</em> <em>One</em>"
      },
      "id": "5e836492196a679b4102bd12"
    }
  ],
  "/build-apps/howto-use-nrone-table-components": [
    {
      "body": "New Relic One CLI reference To build a New Relic One app, you must install the New Relic One CLI. The CLI helps you build, publish, and manage your New Relic app. We provide a variety of tools for building New Relic One apps, including the New Relic One CLI (command line interface). This page will explain how to use CLI commands to: Generate Nerdpack/Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks Add screenshots and metadata to the New Relic One Catalog Installing the New Relic One CLI From within New Relic, go to the Build your own application launcher and follow the instructions. This launcher will automatically generate an API key for the account you select, and give you the pre-populated commands to create a profile, generate your first \"Hello World\" app, and serve it locally. New Relic One CLI Commands This table provides descriptions for the New Relic One CLI commands. For more context, including usage and option details, click any individual command or the command category. For details on user permissions, see Authentication and permissions. For more on how to serve and publish your application, see our guide on Deploying your New Relic One app. Get started nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). Configure your CLI preferences nr1 config:set Sets a specific configuration value. nr1 config:get Shows a specific configuration. nr1 config:list Lists your configuration choices. nr1 config:delete Removes the value of a specific configuration. Set up your Nerdpacks nr1 nerdpack:clone Clones an open source Nerdpack from our GitHub repository. nr1 nerdpack:serve Serves your Nerdpack for testing and development purposes. nr1 nerdpack:uuid Shows or regenerates the UUID of a Nerdpack. nr1 nerdpack:publish Publishes your Nerdpack to New Relic. nr1 nerdpack:deploy Deploys a Nerdpack version to a specific channel. nr1 nerdpack:undeploy Undeploys a Nerdpack version from a specific channel. Manage your Nerdpack subscriptions nr1 subscription:set Subscribes your account to a Nerdpack and channel. nr1 subscription:list Lists all the Nerdpacks your account is subscribed to. nr1 subscription:unset Unsubscribes your account from a Nerdpack. Install and manage plugins nr1 plugins:install Installs a plugin into the CLI. nr1 plugins:link Links a plugin into the CLI for development. nr1 plugins:update Updates your installed plugins. nr1 plugins:uninstall Removes a plugin from the CLI. Manage catalog information nr1 catalog:info Shows the Nerdpack info stored in the catalog. nr1 catalog:submit Gathers and submits the catalog info on the current folder.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of the CLI to help you build, deploy, and manage New Relic apps.",
      "sections": [
        "New Relic One CLI reference",
        "Installing the New Relic One CLI",
        "New Relic One CLI Commands",
        "Get started",
        "Configure your CLI preferences",
        "Set up your Nerdpacks",
        "Manage your Nerdpack subscriptions",
        "Install and manage plugins",
        "Manage catalog information"
      ],
      "title": "New Relic One CLI reference",
      "popularity": 1,
      "tags": [
        "New Relic One app",
        "nerdpack commands"
      ],
      "external_id": "858339a44ead21c83257778ce60b4c352cd30d3b",
      "image": "https://developer.newrelic.com/static/2c6d337608b38a3312b4fc740afe6167/7272b/developercenter.png",
      "url": "https://developer.newrelic.com/explore-docs/nr1-cli/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-04T01:41:46Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.21564405,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>One</em> CLI reference",
        "sections": "<em>New</em> <em>Relic</em> <em>One</em> CLI reference",
        "info": "An overview of the CLI <em>to</em> help you build, deploy, and manage <em>New</em> <em>Relic</em> apps.",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> app",
        "body": " will explain how to use CLI commands to: Generate Nerdpack&#x2F;Nerdlet templates Locally serve Nerdpacks (when developing) Publish and deploy Subscribe to Nerdpacks <em>Add</em> screenshots and metadata to the <em>New</em> <em>Relic</em> <em>One</em> Catalog Installing the <em>New</em> <em>Relic</em> <em>One</em> CLI From within <em>New</em> <em>Relic</em>, go to the Build <em>your</em> own"
      },
      "id": "5efa989e28ccbc535a307dd0"
    },
    {
      "body": "New Relic CLI Reference The New Relic CLI enables integration of New Relic into your existing workflows. Be it fetching data from your laptop while troubleshooting an issue, or adding New Relic into your CI/CD pipeline. New Relic CLI commands Find details for the New Relic CLI command docs in GitHub. Options --format string output text format [YAML, JSON, Text] (default \"JSON\") -h, --help help for newrelic --plain output compact text Copy Commands newrelic apm - Interact with New Relic APM newrelic completion - Generates shell completion functions newrelic config - Manage the configuration of the New Relic CLI newrelic documentation - Generate CLI documentation newrelic entity - Interact with New Relic entities newrelic nerdgraph - Execute GraphQL requests to the NerdGraph API newrelic nerdstorage - Read, write, and delete NerdStorage documents and collections. newrelic nrql - Commands for interacting with the New Relic Database newrelic profile - Manage the authentication profiles for this tool newrelic version - Show the version of the New Relic CLI newrelic workload - Interact with New Relic One workloads",
      "type": "developer",
      "document_type": "page",
      "info": "The command line tools for performing tasks against New Relic APIs",
      "sections": [
        "New Relic CLI Reference",
        "New Relic CLI commands",
        "Options",
        "Commands"
      ],
      "title": "New Relic CLI Reference",
      "popularity": 1,
      "tags": "new relic cli",
      "external_id": "471ed214caaf80c70e14903ec71411e2a1c03888",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/newrelic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:40:44Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.057030186,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> CLI Reference",
        "sections": "<em>New</em> <em>Relic</em> CLI Reference",
        "info": "The command line <em>tools</em> for performing tasks against <em>New</em> <em>Relic</em> APIs",
        "tags": "<em>new</em> <em>relic</em> cli",
        "body": "<em>New</em> <em>Relic</em> CLI Reference The <em>New</em> <em>Relic</em> CLI enables integration of <em>New</em> <em>Relic</em> into <em>your</em> existing workflows. Be it fetching data from <em>your</em> laptop while troubleshooting an issue, or adding <em>New</em> <em>Relic</em> into <em>your</em> CI&#x2F;CD pipeline. <em>New</em> <em>Relic</em> CLI commands Find details for the <em>New</em> <em>Relic</em> CLI command docs"
      },
      "id": "5efa989ee7b9d2024b7bab97"
    },
    {
      "body": "Get started with the New Relic CLI 20 min Access the New Relic platform from the comfort of your terminal: you can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. Our CLI has been designed for automating common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic personal API Key, which you can create from the Account settings of your New Relic account An instrumented application in your New Relic account Step 1 of 10 Install the New Relic CLI The New Relic CLI can be downloaded via Homebrew (macOS), Scoop (Windows), and Snapcraft (Linux). You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux With Snapcraft installed, run: sudo snap install newrelic-cli macOS With Homebrew installed, run: brew install newrelic-cli Windows With Scoop installed, run: scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile Now that you've installed the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. To create your first CLI profile, run the profiles add command. Note that you need to set the region of your New Relic account: use -r to set either us or eu (this is required). # Create the tutorial account for the US region newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_API_KEY -r YOUR_REGION # Set the profile as defaults newrelic profiles default -n tutorial Copy Step 3 of 10 Get your application details In this example, you are going to add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 The New Relic CLI can retrieve your application details as a JSON object. To search for your APM application use the apm application search command. If you get an error, check that the account ID and application name you provided are correct. newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Copy Step 5 of 10 If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example. When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. [ { accountId: YOUR_ACCOUNT_ID, applicationId: YOUR_APP_ID, domain: 'APM', entityType: 'APM_APPLICATION_ENTITY', guid: 'A_LONG_GUID', name: 'NAME_OF_YOUR_APP', permalink: 'https://one.newrelic.com/redirect/entity/A_LONG_GUID', reporting: true, type: 'APPLICATION', }, ]; Copy Step 6 of 10 Add a simple tag to your application Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Let's suppose that you want to add an environment tag to your application. Go ahead and add the dev:testing tag⁠ (or any other key-value pair) to your application using the entities tags create command. newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Copy Step 7 of 10 What if you want to add multiple tags? Tag sets come to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags at once to your application, modify and run the following snippet. newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Copy Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 You've created and added some tags to your application, but how do you know they're there? You need to retrieve your application's tags. To retrieve your application's tags, use the entity tags get command. newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array. [ { Key: 'tag1', Values: ['true'], }, { Key: 'tag2', Values: ['test'], }, { Key: 'tag3', Values: ['testing'], }, // ... ]; Copy Step 9 of 10 Bonus step: Create a deployment marker Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same Application ID from your earlier search. newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Copy Step 10 of 10 Notice that the JSON response includes the revision and timestamp of the deployment. This workflow could be built into a continuous integration or continuous deployment (CI/CD) system to help indicate changes in your application's behavior after deployments. Here is an example. { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands. For example, you could create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "type": "developer",
      "document_type": "page",
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Get your application details",
        "Add a simple tag to your application",
        "Bonus step: Create a deployment marker",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "popularity": 1,
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.03719234,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> CLI",
        "sections": "<em>Add</em> a simple tag <em>to</em> <em>your</em> <em>application</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> CLI, from install and configuration <em>to</em> basic usage.",
        "tags": "<em>New</em> <em>Relic</em> CLI",
        "body": " of 10 Get <em>your</em> <em>application</em> details In this example, you are going to <em>add</em> tags to the <em>application</em> you&#x27;ve instrumented with <em>New</em> <em>Relic</em>. Tags are key-value pairs that can help you organize and filter <em>your</em> entities. An entity (for example, an <em>application</em>) can have a maximum of 100 key-value pairs tied"
      },
      "id": "5efa999c196a67c4e1766461"
    },
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.018269848,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create a &quot;Hello, World!&quot; <em>application</em>",
        "sections": "Publish <em>your</em> <em>application</em> <em>to</em> <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it <em>to</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "Subscribe <em>applications</em>",
        "body": " how to <em>add</em> descriptive metadata. <em>Add</em> details to describe <em>your</em> project Now that <em>your</em> <em>new</em> <em>application</em> is in the <em>New</em> <em>Relic</em> <em>One</em> catalog, you can <em>add</em> details that help users understand what <em>your</em> <em>application</em> does and how to use it. Step 1 of 5 Go to <em>your</em> project in the terminal and execute the following"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "New Relic Open Source External Projects Highlighted Projects New Relic Projects Menu External Projects Highlighted Projects New Relic Projects Open source New Relic One applications New Relic has a growing body of open-source apps that can extend and enhance your data views. The New Relic One Catalog provides a fast, easy way to browse through the available apps and subscribe to the ones you want, all from the New Relic One GUI. The Catalog also provides links to the code for you to futher customize. You can borrow code sections to use in your own New Relic One applications, or explore the source to understand how they work. Check out our layout templates, which give you a headstart by letting you choose common layouts. New Relic One Catalog Apps Explore the open source repositories for applications in the New Relice One Catalog Other New Relic One Apps Explore the open source repositories for all other New Relic One apps New Relic Open Source Standards External Projects Highlighted Projects New Relic Projects Edit this page Create an issue Copyright © 2020 New Relic Inc.Version 1.8.4",
      "type": "opensource",
      "document_type": "page",
      "info": "",
      "sections": [
        "Open source New Relic One applications",
        "New Relic One Catalog Apps",
        "Other New Relic One Apps"
      ],
      "title": "Open source New Relic One applications",
      "popularity": 1,
      "external_id": "c23435331c53cf175c7610eff7b9a58ba51707ca",
      "image": "",
      "url": "https://opensource.newrelic.com/nerdpacks/",
      "published_at": "2020-08-13T02:14:31Z",
      "updated_at": "2020-08-13T01:57:04Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.0054057436,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Open source <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>",
        "sections": "Open source <em>New</em> <em>Relic</em> <em>One</em> <em>applications</em>",
        "body": "<em>New</em> <em>Relic</em> Open Source External Projects Highlighted Projects <em>New</em> <em>Relic</em> Projects Menu External Projects Highlighted Projects <em>New</em> <em>Relic</em> Projects Open source <em>New</em> <em>Relic</em> <em>One</em> applications <em>New</em> <em>Relic</em> has a growing body of open-source apps that can extend and enhance <em>your</em> data views. The <em>New</em> <em>Relic</em> <em>One</em>"
      },
      "id": "5f3181d528ccbca39a88dff9"
    }
  ],
  "/explore-docs/nerdpack-file-structure": [
    {
      "body": "Create a \"Hello, World!\" application 15 min Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, we'll show you how to create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. We also have a 5-minute video that covers the steps below. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need our New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in our CLI wizard. For additional details about setting up your environment, see Set up your development environment. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI wizard, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: npm start Copy Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: nr1 nerdpack:publish Copy Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the New Relic One Catalog launcher. Step 4 of 4 Under Your company applications, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: nr1 create Copy Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: nr1 catalog:submit Copy Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application on the New Relic One homepage, you need to subscribe accounts to the application. Any user with the NerdPack Manager role can subscribe accounts to an application. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update access to save your selections. When you return to the New Relic One homepage, you'll see the launcher for your new application. Summary Now that you've completed the steps in this example, you learned the basic steps to create a custom application: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can see it directly on their homepage.",
      "type": "developer",
      "document_type": "page",
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "popularity": 1,
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2020-08-13T01:45:06Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 7.831006,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "body": " launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the <em>file</em>: { &quot;schemaType&quot;: &quot;LAUNCHER&quot;, &quot;id&quot;: &quot;my-awesome-<em>nerdpack</em>-launcher&quot;, &quot;description&quot;: &quot;Describe me&quot;, &quot;displayName&quot;: &quot;INSERT_YOUR_TILE_LABEL_HERE&quot;, &quot;rootNerdletId&quot;: &quot;my"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "body": "A New Relic One application is represented by a Nerdpack folder, which can include one or more Nerdlet files, and (optionally) one or more launcher files. This document explains: The file structure for a Nerdpack, a Nerdlet and a launcher How to link a launcher file to a Nerdlet How to link your application with a monitored entity For basic component definitions, see our developer site. Generate Nerdpack components There are two ways to generate a Nerdpack template: Generate Nerdpack. Use the CLI command nr1 create and select Nerdpack to create a Nerdpack template that includes a Nerdlet and a launcher. Generate Nerdlet or launcher individually. You can use the CLI command nr1 create and choose to select either a Nerdlet or launcher. This may be useful when adding Nerdlets to an existing Nerdpack. For a lesson on generating and connecting Nerdpack components, see the workshop. Nerdpack file structure When you generate a Nerdpack template using the CLI nr1 create command, it has this file structure: my-nerdlet ├── README.md ├── launchers │ └── my-nerdlet-launcher │ ├── icon.png │ └── nr1.json ├── nerdlets │ └── my-nerdlet-nerdlet │ ├── index.js │ ├── nr1.json │ └── styles.scss ├── node_modules │ ├── js-tokens │ ├── loose-envify │ ├── object-assign │ ├── prop-types │ ├── react │ ├── react-dom │ ├── react-is │ └── scheduler ├── nr1.json ├── package-lock.json └── package.json Nerdlet file structure A Nerdpack can contain one or more Nerdlets. A Nerdlet folder starts out with three default files: index.js The JavaScript code. Here's what the default file looks like when a Nerdlet is generated with the CLI nr1 create: import React from 'react'; export default class MyAwesomeNerdpack extends React.Component { render() { return <h1>Hello, my-awesome-nerdpack Nerdlet!</h1> } } nr1.json Configuration file. Here is the default file generated by the CLI nr1 create command: { \"schemaType\": \"NERDLET\", \"id\": \"my-awesome-nerdpack-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\" } Besides using the launcher as the access point for your application, you can also associate the application with a monitored entity to get it to appear in the New Relic One entity explorer. To do this, add two additional fields to the config file of the first-launched Nerdlet: entities and actionCategory. In the following example, the Nerdlet has been associated with all New Relic Browser-monitored applications and will appear under the Monitor UI category : { \"schemaType\": \"NERDLET\", \"id\": \"my-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"Custom Data\", \"entities\": [{\"domain\": \"BROWSER\", \"type\": \"APPLICATION\"}], \"actionCategory\": \"monitor\" } To see this application in the UI, you would go to the New Relic One entity explorer, select Browser applications, and select a monitored application. styles.scss The file for CSS styles (Sass SCSS syntax). Launcher file structure When an application with a launcher file has been deployed, its launcher is located on the New Relic One home page (one.newrelic.com). A launcher is not required; as an alternative to using a launcher, you can associate your application with a monitored entity. An application can have more than one launcher; this may be desired for an application with multiple Nerdlets. A launcher folder contains two files: nr1.json The configuration file. Here is the default file template created by the nr1 create command: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } To connect a launcher to a Nerdlet, the rootNerdletId must match the id in the launched Nerdlet's nr1.json config file. For Nerdpacks with multiple Nerdlets, this needs to be done only for the first-launched Nerdlet. icon.png The launcher icon that appears on the one.newrelic.com home page when an application is deployed. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / New Relic One / Use New Relic One / Build on New Relic One",
      "info": "For building a New Relic One application: an explanation of the Nerdpack/Nerdlet file structure. ",
      "nodeid": 36006,
      "sections": [
        "Use New Relic One",
        "Get started",
        "Core concepts",
        "UI and data",
        "Workloads",
        "Build on New Relic One",
        "Nerdpack file structure",
        "Generate Nerdpack components",
        "Nerdlet file structure",
        "Launcher file structure",
        "For more help"
      ],
      "title": "Nerdpack file structure",
      "popularity": 1,
      "external_id": "6e3788bee17cb65b6dc210862e2a10399f78ff67",
      "category_1": "Use New Relic One",
      "category_2": "Build on New Relic One",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/build-new-relic-one/new-relic-one-application-nerdpack-file-structure",
      "published_at": "2020-08-11T01:30:03Z",
      "updated_at": "2020-07-25T00:32:16Z",
      "category_0": "New Relic One",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1.303726,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "sections": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "info": "For building a New Relic One application: an explanation of the <em>Nerdpack</em>&#x2F;Nerdlet <em>file</em> <em>structure</em>. ",
        "body": "A New Relic One application is represented by a <em>Nerdpack</em> folder, which can include one or more Nerdlet files, and (optionally) one or more launcher files. This document explains: The <em>file</em> <em>structure</em> for a <em>Nerdpack</em>, a Nerdlet and a launcher How to link a launcher <em>file</em> to a Nerdlet How to link your"
      },
      "id": "5da0e07a64441f1328edf241"
    },
    {
      "body": "New Relic One CLI common commands Here is a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data from New Relic using NRQL (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from New Relic databases using a NRQL (New Relic query language) query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "type": "developer",
      "document_type": "page",
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "title": "New Relic One CLI common commands",
      "popularity": 1,
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "published_at": "2020-08-13T01:49:30Z",
      "updated_at": "2020-08-04T01:44:10Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.11857001,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": ". To learn more about Nerdpacks and their <em>file</em> <em>structure</em>, see <em>Nerdpack</em> <em>file</em> <em>structure</em>. For more on how to set up your Nerdpacks, see our <em>Nerdpack</em> CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    },
    {
      "body": "Map page views by region in a custom app 30 min New Relic has powerful and flexible tools for building custom apps and populating them with data. This guide shows you how to build a custom app and populate it with page view data using New Relic's Query Language (NRQL - pronounced 'nurkle'). Then you make your data interactive. And last, if you have a little more time and want to install a third-party React library, you can display the page view data you collect on a map of the world. In this guide, you build an app to display page view data in two ways: In a table On a map Please review the Before you begin section to make sure you have everything you need and don't get stuck halfway through. Before you begin In order to get the most out of this guide, you must have: A New Relic developer account, API key, and the command-line tool. If you don't have these yet, see the steps in Setting up your development environment New Relic Browser page view data to populate the app. Without this data, you won't be able to complete this guide. To add your data to a world map in the second half of the guide: npm, which you'll use during this section of the guide to install Leaflet, a third-party JavaScript React library used to build interactive maps. If you're new to React and npm, you can go here to install Node.js and npm. New Relic terminology The following are some terms used in this guide: New Relic application: The finished product where data is rendered in New Relic One. This might look like a series of interactive charts or a map of the world. Nerdpack: New Relic's standard collection of JavaScript, JSON, CSS, and other files that control the functionality and look of your application. For more information, see Nerdpack file structure. Launcher: The button on New Relic One that launches your application. Nerdlets: New Relic React components used to build your application. The three default files are index.js, nr1.json, and styles.scss, but you can customize and add your own. Build a custom app with a table chart Step 1 of 8 Query your browser data Use Chart Builder to write a NRQL query to see your page view data, as follows. On New Relic One, select Query your data (in the top right corner), and then select Advanced (NRQL). You'll use NRQL to test your query before dropping the data into your table. Copy and paste this query into the query field, and then select Run. FROM PageView SELECT count(*), average(duration) WHERE appName = 'WebPortal' FACET countryCode, regionCode SINCE 1 week ago LIMIT 1000 Copy If you have PageView data, this query shows a week of average page views broken down by country and limited to a thousand items. The table will be full width and use the \"chart\" class defined in the CSS. If you don't have any results at this point, ensure your query doesn't have any errors. If your query is correct, you might not have the Browser agent installed. Step 2 of 8 Create and serve a new Nerdpack To get started, create a new Nerdpack, and serve it up to New Relic from your local development environment: Create a new Nerdpack for this app: nr1 create --type nerdpack --name pageviews-app Copy Serve the project up to New Relic: cd pageviews-app && nr1 nerdpack:serve Copy Step 3 of 8 Review your app files and view your app locally Navigate to your pageviews-app to see how it's structured. It contains a launcher folder, where you can customize the description and icon that will be displayed on the app's launcher in New Relic One. It also contains nerdlets, which each contain three default files: index.js, nr1.json, and styles.scss. You'll edit some of these files as part of this guide. For more information, see Nerdpack file structure. Now in your browser, open https://one.newrelic.com/?nerdpacks=local to see the pageview-apps Nerdpack that you served up. When you select the launcher, you see a Hello message. Step 4 of 8 Hard code your account ID For the purposes of this exercise and for your convenience, hard code your account ID. In the pageview-app-nerdlet directory, in the index.js file, add this code between the import and export lines. (Read about finding your account ID here). const accountId = [Replace with your account ID]; Copy Step 5 of 8 Import the TableChart component To show your data in a table chart, import the TableChart component from New Relic One. To do so, in index.js, add this code under import React. import { TableChart } from `nr1`; Copy Step 6 of 8 Add a table with a single row To add a table with a single row, in the index.js file, replace this line: return <h1>Hello, pageview-app-nerdlet Nerdlet!</h1>; Copy with this export code: export default class PageViewApp extends React.Component { render() { return ( <div className=\"container\"> <div className=\"row\"></div> </div> ); } } Copy Step 7 of 8 Customize the look of your table (optional) You can use standard CSS to customize the look of your components. In the styles.scss file, add this CSS. Feel free to customize this CSS to your taste. .container { width: 100%; height: 99vh; display: flex; flex-direction: column; .row { margin: 10px; display: flex; flex-direction: row; } .chart { height: 250px; } } Copy Step 8 of 8 Get your data into that table Now that you've got a table, you can drop a TableChart populated with data from the NRQL query you wrote at the very beginning of this guide. Put this code into the row div. <TableChart accountId={accountId} query={`FROM PageView SELECT count(*), average(duration) WHERE appName = 'WebPortal' SINCE 1 week ago LIMIT 1000`} fullWidth className=\"chart\" />; Copy Go to New Relic One and click your app to see your data in the table. (You might need to serve your app to New Relic again.) Congratulations! You made your app! Continue on to make it interactive and show your data on a map. Make your app interactive with a text field Once you confirm that data is getting to New Relic from your app, you can start customizing it and making it interactive. To do this, you add a text field to filter your data. Later, you use a third-party library called Leaflet to show that data on a world map. Step 1 of 3 Import the TextField component Like you did with the TableChart component, you need to import a TextField component from New Relic One. import { TextField } from 'nr1'; Copy Step 2 of 3 Add a row for your text field To add a text field filter above the table, put this code above the TableChart div. The text field will have a default value of \"US\". <div className=\"row\"> <TextField placeholder=\"US\" onChange={(event) => { this.setState({ countryCode: event.target.value }); }} /> </div>; Copy Step 3 of 3 Build the text field object Above the render() function, add a constructor to build the text field object. constructor(props) { super(props); this.state = { countryCode: null } } Copy Then, add a constructor to your render() function. Above return, add: const { countryCode } = this.state; Copy Now add countryCode to your table chart query. <TableChart accountId={accountId} query={`FROM PageView SELECT count(*), average(duration) WHERE appName = 'WebPortal' ${ countryCode ? ` WHERE countryCode like '%${countryCode}%' ` : '' } FACET countryCode, regionCode SINCE 1 week ago LIMIT 1000`} fullWidth className=\"chart\" />; Copy Reload your app to try out the text field. Get your data on a map To create the map, you use npm to install Leaflet. Step 1 of 9 Install Leaflet In your terminal, type: npm install --save leaflet react-leaflet Copy In your nerdlets styles.scss file, import the Leaflet CSS: @import `~leaflet/dist/leaflet.css`; Copy While you're in styles.scss, fix the width and height of your map: .containerMap { width: 100%; z-index: 0; height: 70vh; } Copy Step 2 of 9 Add a webpack config file for Leaflet Add a webpack configuration file .extended-webpackrc.js to the top-level folder in your nerdpack. This supports your use of map tiling information data from Leaflet. module.exports = { module: { rules: [ { test: /\\.(png|jpe?g|gif)$/, use: [ { loader: 'file-loader', options: {}, }, { loader: 'url-loader', options: { limit: 25000 }, }, ], }, ], }, }; Copy Step 3 of 9 Import modules from Leaflet In index.js, import modules from Leaflet. import { Map, CircleMarker, TileLayer } from 'react-leaflet'; Copy Step 4 of 9 Import additional modules from New Relic One You need several more modules from New Relic One to make the Leaflet map work well. Import them with this code: import { NerdGraphQuery, Spinner, Button, BlockText } from 'nr1'; Copy NerdGraphQuery lets you make multiple NRQL queries at once and is what will populate the map with data. Spinner adds a loading spinner. Button gives you button components. BlockText give you block text components. Step 5 of 9 Get data for the map Using latitude and longitude with country codes, you can put New Relic data on a map. mapData() { const { countryCode } = this.state; const query = `{ actor { account(id: 1606862) { mapData: nrql(query: \"SELECT count(*) as x, average(duration) as y, sum(asnLatitude)/count(*) as lat, sum(asnLongitude)/count(*) as lng FROM PageView FACET regionCode, countryCode WHERE appName = 'WebPortal' ${countryCode ? ` WHERE countryCode like '%${countryCode}%' ` : ''} LIMIT 1000 \") { results nrql } } } }`; return query; }; Copy Step 6 of 9 Customize the map marker colors Above the mapData function, add this code to customize the map marker colors. getMarkerColor(measure, apdexTarget = 1.7) { if (measure <= apdexTarget) { return '#11A600'; } else if (measure >= apdexTarget && measure <= apdexTarget * 4) { return '#FFD966'; } else { return '#BF0016'; } }; Copy Feel free to change the HTML color code values to your taste. In this example, #11A600 is green, #FFD966 is sort of yellow, and #BF0016 is red. Step 7 of 9 Set your map's default center point Set a default center point for your map using latitude and longitude. const defaultMapCenter = [10.5731, -7.5898]; Copy Step 8 of 9 Add a row for your map Between the text field row and the table chart row, insert a new row for the map content using NerdGraphQuery. <div className=\"row\"> <NerdGraphQuery query={this.mapData()}> {({ loading, error, data }) => { if (loading) { return <Spinner fillContainer />; } if (error) { return 'Error'; } const { results } = data.actor.account.mapData; console.debug(results); return 'Hello'; }} </NerdGraphQuery> </div>; Copy Reload your application in New Relic One to test that it works. Step 9 of 9 Replace \"Hello\" with the Leaflet code Replace return \"Hello\"; with: return ( <Map className=\"containerMap\" center={defaultMapCenter} zoom={2} zoomControl> <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" /> {results.map((pt, i) => { const center = [pt.lat, pt.lng]; return ( <CircleMarker key={`circle-${i}`} center={center} color={this.getMarkerColor(pt.y)} radius={Math.log(pt.x) * 3} onClick={() => { alert(JSON.stringify(pt)); }} /> ); })} </Map> ); Copy This code creates a world map centered on the latitude and longitude you chose using OpenStreetMap data and your marker colors. Reload your app to see the pageview data on the map!",
      "type": "developer",
      "document_type": "page",
      "info": "Build a New Relic app showing page view data on a world map.",
      "sections": [
        "Map page views by region in a custom app",
        "Before you begin",
        "New Relic terminology",
        "Build a custom app with a table chart",
        "Query your browser data",
        "Create and serve a new Nerdpack",
        "Review your app files and view your app locally",
        "Hard code your account ID",
        "Import the TableChart component",
        "Add a table with a single row",
        "Customize the look of your table (optional)",
        "Get your data into that table",
        "Make your app interactive with a text field",
        "Import the TextField component",
        "Add a row for your text field",
        "Build the text field object",
        "Get your data on a map",
        "Install Leaflet",
        "Add a webpack config file for Leaflet",
        "Import modules from Leaflet",
        "Import additional modules from New Relic One",
        "Get data for the map",
        "Customize the map marker colors",
        "Set your map's default center point",
        "Add a row for your map",
        "Replace \"Hello\" with the Leaflet code"
      ],
      "title": "Map page views by region in a custom app",
      "popularity": 1,
      "external_id": "6ff5d696556512bb8d8b33fb31732f22bab455cb",
      "image": "https://developer.newrelic.com/static/d87a72e8ee14c52fdfcb91895567d268/0086b/pageview.png",
      "url": "https://developer.newrelic.com/build-apps/map-pageviews-by-region/",
      "published_at": "2020-08-13T01:50:34Z",
      "updated_at": "2020-08-08T01:41:47Z",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.106031954,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Create and serve a new <em>Nerdpack</em>",
        "body": " look like a series of interactive charts or a map of the world. <em>Nerdpack</em>: New Relic&#x27;s standard collection of JavaScript, JSON, CSS, and other files that control the functionality and look of your application. For more information, see <em>Nerdpack</em> <em>file</em> <em>structure</em>. Launcher: The button on New Relic One"
      },
      "id": "5efa993c196a67066b766469"
    },
    {
      "body": "A glossary of common terminology you may encounter as a New Relic user. account dropdown When you're logged into New Relic, the account dropdown menu displays your login name and is located at the top right of the New Relic UI. Clicking this gives you access to various account-related abilities. administrator A type of user role on a New Relic account. For more information, see Users. agent At New Relic, an agent is a piece of monitoring software that provides integrations with various technologies (for example, web frameworks, host operating systems, or database types). The agents send that data to New Relic, usually on a specific cadence. For more information, see: New Relic integrations Install agents agent API Some New Relic agents have agent APIs that allow you to extend the functionality of an agent. You can use the API to control, customize and extend the functionality of the New Relic agent. Here are some agent API docs: APM agents: C SDK API Go agent API Java agent API .NET agent API Node.js agent API PHP agent API Ruby agent API Python agent API Browser agent: Browser agent API Mobile agents: iOS SDK API Android SDK API React Native SDK API aggregated metrics Aggregated metric data summarizes calls to specific methods in your application, including how many times each one was called and response times. In the New Relic UI, you see the class and method names along with their aggregate numbers. Metric data aggregation depends on the New Relic product and your subscription level. For more information, see New Relic's documentation about data retention. alert An alert communicates an event or incident that designated personnel can track through New Relic Alerts. For an explanation of how basic Alerts concepts are related, see Alerts concepts and workflow. alert condition An alert condition, identified by its unique numeric condition_id, contains the criteria for Alerts to create a violation. The condition includes the threshold that is set for a metric timeslice or a custom metric over time on a chosen target. For an explanation of how an alert condition relates to other basic Alerts concepts, see Concepts and workflow. alert policy A collection of one or more alert conditions, one or more notification channels, and an Incident preference setting. If a condition contained within the policy opens a violation, an incident may be opened depending on the Incident preference setting. Notifications will then be sent to all channels attached to the policy. For an explanation of how an alert policy relates to other basic Alerts concepts, see Concepts and workflow. apdex Apdex is an industry-standard way to measure users' satisfaction with the response time of an application or service. New Relic rates each response as Satisfied, Tolerated, or Frustrated, and uses these ratings to calculate an overall user satisfaction score. For more information, see Apdex: Measure user satisfaction. apdex_f The response time above which a transaction are rated frustrating. Defaults to four times apdex_t. Requests that complete in less than apdex_t are rated satisfied. Requests that take longer than apdex_t, but less than four times apdex_t (apdex_f), are tolerated. Any requests that take longer than apdex_f are rated frustrating. For more information, see Apdex: Measure user satisfaction. apdex_t The response time above which a transaction is considered tolerable. The default value is 0.5 seconds, but you can change this in your Apdex settings. Requests that complete in less than apdex_t are rated satisfied. Requests that take more than apdex_t, but less than apdex_f, are tolerated. Any requests that take longer than apdex_f are rated frustrating. For more information, see Apdex: Measure user satisfaction. API (application programming interface) New Relic offers a variety of APIs and SDKs. For more information, see the introduction to New Relic's APIs. APM New Relic APM (Application Performance Monitoring) provides monitoring of your web or non-web application's performance. New Relic APM supports apps using several programming languages. application For New Relic purposes, any program instrumented by New Relic. application ID Some New Relic solutions assign a monitored application a unique application ID, often shortened to app ID. When present, this ID is available in the UI. It is also reported as an attribute and can be queried. For how to determine this, see Find app ID. application name The name that New Relic combines with your license key to uniquely identify a particular app. For more information, see Name your application. attribute Attributes are key-value pairs attached to data objects reported to New Relic. Attributes add detail, and they're similar to tags or labels in other SaaS software. You can explore this data by querying or searching via the UI or by using the data dictionary. Examples: APM reports a Transaction event. This includes timing data for the transaction in a duration attribute, which might have a value of .002. Our Infrastructure Monitoring reports a ProcessSample event. This includes a variety of CPU usage attributes, including a cpuSystemPercent attribute, which might have a value of .01. Our Telemetry SDK reports a Metric data type for storing metrics, with attached attributes like metricName and newrelic.source. Some products and subscription levels allow you to collect custom attributes to enhance your monitoring. For more information about attributes in New Relic APM, see Agent attributes. availability monitoring See Types of Synthetics monitors. browser The New Relic user interface supports most browsers. For more information, see Supported browsers. For our end-user browser monitoring product, see Browser Monitoring. background external See web external. cloud-based integration New Relic offers cloud-based integrations with providers such as Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform. collector The component that collects data from New Relic agents running on an app server, mobile device, or end-user browser. While the agent is installed on a user's app server, the collectors are centrally located in New Relic's data center. In order to contact the collector, the agent must be able to reach New Relic's domains and IP addresses. (The exact domain or IP depends on the New Relic product.) The collector receives and interprets this data, and stores it in a database. The data is then retrieved and presented in the New Relic UI and by our various REST APIs. compute unit (CU) A unit of measurement that determines your pricing for some New Relic products governed by our original product-based pricing plan. For more information, see Compute unit pricing. condition_id See alert condition. CPM (calls per minute) The number of calls your application receives each minute. This usually corresponds to the number of page views or external connections, and is usually the same as RPM (requests per minute). CPU burn The time consumed by code minus the wait time for a transaction. This is the time actually spent processing the transaction. It appears in the New Relic UI at the top of the transaction view for the agents that provide it (Ruby and PHP only). custom attribute A key-value pair added to a transaction or event in order to gain additional information about it. For more information, see custom attributes. custom dashboard A customizable dashboard with charts and tables that includes data from multiple New Relic data sources. For more information, see New Relic One dashboards or New Relic Insights dashboards. custom event An event, in New Relic terms, is a data object with attached attributes. New Relic reports default event types, like Transaction and TransactionError. You can also create your own events. Events can be queried in New Relic products, and are used in many other New Relic features. You can generate custom events with APM agents, with the Browser agent, with the Mobile agent, and via the Event API. Alternatively, you can add custom attributes to some existing default New Relic events. custom instrumentation Custom instrumentation allows you to extend New Relic's monitoring to instrument code elements New Relic doesn't automatically instrument. Custom instrumentation is useful when your framework is not supported by New Relic, or when New Relic fails to pick up some element of your program. You can also use custom instrumentation to block a transaction from being reported entirely. For more information, see Custom instrumentation. custom metric Metric timeslice data that is manually recorded via an API call. Custom metrics allow you to record arbitrary metrics; for example, timing or computer resource data. All custom metric names must be prefixed with Custom/. For more information, see Custom metrics. Not to be confused with custom instrumentation data. data collector See collector. degradation period When a data source enters a violating state, a degradation period of time begins. The degradation period is set in the condition's threshold. A violation will open if the source stays in a violating state for the entire degradation period. In addition: If the data source enters a non-violating state before the entire time has elapsed, the degradation period countdown is reset, and a violation does not open. If your alert condition threshold is configured as at least once in, the degradation period always lasts a single minute. dimensional metric A dimensional metric is a metric that has multiple attributes, also known as dimensions. At New Relic, we report dimensional metrics using the Metric data type. For more on other metric data types, see Metric data. Docker An open platform for distributed applications, which allows you to assemble multi-container portable apps. Infrastructure Monitoring includes integrated Docker monitoring. For more information about Docker, see the Docker website. downtime The period of time when customers cannot access your site and your app is not reporting to New Relic. For more information, see Synthetic Monitoring and Types of synthetic monitors. entity In New Relic, an entity is anything we can identify that has data you can monitor. An entity can be something you monitor directly, like applications and microservices, or indirectly, like data centers. You can identify one or more entities to be targets for alert conditions. In the Alerts API, the entity being monitored is identified with an entity_id. For more on this, see What are entities? event The word event is a general term that can have many meanings. At New Relic, event can have several meanings: At New Relic, event data is one of our core data types. Event data represents a record of a single event at a particular moment in time. Events can vary by type (for example, Transaction or Mobile, and will have associated attributes (for example, timestamp or transactionName). For more details, see Event data. For our infrastructure monitoring, the word event can be used to refer to important system and host activity. For example, a configuration change for a monitored host would be registered on Infrastructure's Events UI page. For New Relic Alerts, the Events UI page displays a list of alert-related incidents for your monitored entities. Events are reported for a violation opening and for closing. In some contexts, event can refer to any NRQL-queryable data type. For example, when you run a NRQL query, you will see a count of inspected events: this refers to a count of all data types queried. expected error An expected error is a common error that you don't want to affect your Apdex score or error rate. For more information, see Manage errors in APM. exporter At New Relic, an exporter is a type of integration that reports telemetry data to New Relic from a third-party (non-New Relic) telemetry tool. For examples, see Exporters, or search our integrations. Flex New Relic Flex is an application-agnostic, all-in-one integration. With it, you can build your own integration that collects metric data from a wide variety of services, and that can instrument any app that exposes metrics over a standard protocol (HTTP, file, shell) in a standard format (for example, JSON or plain text) to the terminal. It's a recommended way to create a custom integration, because it doesn't require coding skills. framework A framework is a structured collection of pre-defined functions, into which an application builder inserts their own code to build their application. A framework is not the same as a library. While a library is a collection of functions you can call as needed, a framework is a skeleton for your application. The functions in that framework then call your functions. For more about the distinction between a framework and a library, see What is the difference between a framework and a library?. New Relic automatically instruments many common frameworks. For more about the frameworks New Relic supports, see the agent-specific documentation: C SDK supported frameworks Go supported frameworks Java supported frameworks .NET supported frameworks Node.js supported frameworks PHP supported frameworks Python supported frameworks Ruby supported frameworks harvest cycle The period of time between each connection from a New Relic agent to the collector. Between harvest cycles, an agent collects and caches data. At the end of the cycle an agent reports those data to the collector, then begins a new harvest cycle. health status indicator Some New Relic products have a health status indicator appearing next to an index of monitored entities. This is a colored bar (generally green, yellow, red, or gray) indicating the status of your app or other entity monitored by New Relic. It also indicates whether the entity has any alert policies assigned to it with New Relic Alerts and whether there are any policy violations. In general, the colored bar will be green, yellow, red, or gray to indicate the health status. Exceptions: The New Relic REST API (v2) uses orange instead of yellow for the application's health and reporting status. Service maps use different criteria for reporting the health of a connection between an app and an external service not monitored by New Relic (for example, a third party API). host At New Relic, a host means one of the following: A physical machine is a hardware-based device with dedicated physical resources, including memory, processing, and storage. Each machine has its own OS which applications run on. A virtual machine (VM) is the software implementation of a physical machine that executes programs like a physical machine. One or more virtual machines can run on a physical machine. Each virtual machine has its own OS and allocated virtual machine resources such as RAM and CPU. A cloud instance is a type of virtual machine that is run in the public cloud. In this context, virtual machines and cloud instances are different from Java Virtual Machines (JVMs) and containers. host ID Each host identified by New Relic APM is assigned a host ID. This ID is used to uniquely identify it, and to retrieve data about that host via the REST API. For more information, see List host ID. ignored error An error that you have told the New Relic APM agent not to report to the collector. For more information, see Manage errors in APM. incident An incident is a collection of one or more violations of the conditions defined in an alert policy. An incident record includes all of the open and close time stamps for each violation, as well as chart snapshots of the data being evaluated around the time of each violation. You can view detailed information from the Incidents pages in the Alerts user interface. You can also select your preference for how we roll up violations into the incident. For an explanation of how an incident relates to other basic Alerts concepts, see Concepts and workflow. Infrastructure Monitoring By connecting changes in host performance to changes in your configuration, Infrastructure Monitoring provides real-time metrics and powerful analytics that reduce your mean-time-to-resolution (MTTR). Infrastructure is specifically designed for complex environments that need flexible, dynamic server monitoring, from a physical datacenter to thousands of Amazon Elastic Compute Cloud (Amazon EC2) instances and other types of integrations. Insights Historically, New Relic Insights used to be the primary way to query and chart your New Relic-reported data. Now, we have the improved New Relic One query builder. instance ID Each instance identified by New Relic is assigned a unique instance ID. Instance IDs are most commonly found for JVMs (Java Virtual Machines), but can exist for each agent. This ID is used to uniquely identify it, and to retrieve data about that instance via the REST API. For more information, see List instance IDs. instrumentation The collection of data from an application or host. When New Relic instruments a framework, it detects the methods and calls used by that framework, and intelligently groups them together. integration At New Relic, an integration refers to a solution that integrates with a specific technology (like a web framework or a type of database). See Integrations. interaction In our Mobile Monitoring, an interaction is a specific code path initiated by a user interaction (usually a button press). An interaction is the mobile equivalent of a transaction, and like a transaction an interaction can be traced and monitored. interaction trace An interaction trace is a complete picture of a single interaction. With interaction traces, New Relic gives you much deeper visibility into a single slow interaction, which can help you understand a broader problem. Interaction traces are the mobile equivalent of a transaction trace. For more information, see Creating interactions (iOS) and Creating interactions (Android). inventory data Inventory data is information about the status or configuration of a service or host. Examples of inventory data include: Configuration settings Name of the host the service is on Amazon AWS region Port being used For more information, see Understand and use data. key transaction A web transaction that the user has marked as particularly important; for example, key business events (such as signups or purchase confirmations), or transactions with a high performance impact (such as searches). Key transactions have their own pages in the UI and other customized values. For more information, see Key transactions. launcher A launcher is a specific piece of code you can include when you create a New Relic One app. It creates the tile on the homepage that you click to launch the app. For more information, see the documentation about core UI components. log A log is a message about a system used to understand the activity of the system and to diagnose problems. For more information on how we use log data, see Log management. master account A master account is a New Relic account with related subordinate accounts, called sub-accounts. This is useful, for example, to limit users so they can view specific applications and not others. The option to create master and sub-accounts depends on your New Relic subscription level. For more information, see Creating sub-accounts. metric A metric is a numeric measurement. Metric data is a broad category because there are several ways to make and report measurements. For more about how metrics are reported at New Relic, see New Relic data types. metric timeslice New Relic reports metrics in several ways. One variety of metric data is called metric timeslice data; this is the type of data used to generate many of the charts in APM, Mobile Monitoring, and Browser Monitoring (for more details, see metric timeslice data). Over time, metric timeslice data is aggregated into longer timeslice data records for more efficient storage. For more about how we aggregate this type of data, see Data aggregation. For how to query this type of data, see Query metric timeslice data. metric grouping issue A metric grouping issue occurs when an account sends too many differently named metric timeslice data points to New Relic, and those individual web transactions are not properly aggregated. For example, rather than a single /user/controlpanel/ metric name, you might see /user/controlpanel/alice, /user/controlpanel/bob, and /user/controlpanel/carol. For more information, see Metric grouping issues. minion The software that accepts monitor jobs from a private location. A minion is a packaged virtual appliance that runs in your hypervisor. For more information, see Private locations overview and install and configure private minions. Mobile Monitoring Mobile Monitoring allows you to monitor and manage the performance of your mobile apps on Android, iOS, tvOS, and other systems, such as React Native. Mobile Monitoring provides end-to-end details, including crashes, throughput, HTTP requests, error traces, and more. Not to be confused with New Relic's own mobile apps for Android, iPhone, and iPad. monitor For our Synthetic Monitoring, a monitor ensures your website or API endpoint is available. For more information, see Adding and editing monitors. Nerdlet A Nerdlet is a component of a New Relic One application. It's a specific UI view, represented by a React JavaScript package. For more information, see Nerdpack file structure. Nerdpack A Nerdpack is a component of a New Relic One application. It's the package containing all the files needed by that application. For more information, see Nerdpack file structure. Logs Our Logs feature is a scalable log management platform that allows you to connect your log data with the rest of your telemetry data. Pre-built plugins with some of the most common open-source logging tools make it simple to send your data from anywhere to New Relic. New Relic One For more information, see Introduction to New Relic One. NRQL (New Relic Query Language) NRQL is a query language, similar in form to SQL, that allows you to query the data stored in your New Relic account. non-web transaction APM identifies transactions as either web or non-web. When New Relic does not detect a transaction was initiated by a web request, this is called a non-web transaction. For more information, see New Relic's documentation about background processes and other non-web transactions. notification The message sent when an incident opens, is acknowledged, or closes. The type of notification is defined by the alert policy's notification channel. For an explanation of how notifications relate to other basic Alerts concepts, see Concepts and workflow. notification channel Where we send a notification when an incident opens, is acknowledged, or closes. Available channels include email, mobile push notifications, webhooks, and more. on-host integration On-host integrations refer to integrations that reside on your own servers or hosts and that communicate with our infrastructure agent. For more information, see Introduction to on-host integrations. owner For accounts on our original pricing plan, this is a type of user role: the user who initially created the account. For more information, see Users. page load timing With page load timing, New Relic monitors the full load time for end-user browsers. New Relic's application agents dynamically inject JavaScript into the page, then capture the following key load points: Navigation start: The user initiates the transaction. First byte: The browser receives the requested page. DOM ready: The browser has finished parsing DOM. Page ready: Page loading is complete. Page load timing is sometimes referred to as RUM, or real user monitoring. Unlike standard RUM, page load timing also captures JavaScript errors and AJAX requests. For more information, see Page load timing process. parameter Deprecated term; see attribute. permalink A unique URL that links to a view of your application at a specific point in time. Permalinks are useful for troubleshooting and for sharing interesting time windows with colleagues. For more information, see Permalink. pinger The component of New Relic that connects to your website to verify your website is accessible. New Relic has pingers in Europe, Asia, and the United States. Each pinger attempts to contact your website at least once every two minutes. If enough pingers are unable to reach your website, your application will be considered down. For in-depth scriptable testing, including real browser tests and tests of API endpoints, see Synthetic Monitoring. Synthetic Monitoring includes free ping monitoring, which allows you to monitor your website from locations around the world. For more information, see Types of Synthetic monitors. Plugins Plugins provides an open platform to monitor critical information about your entire stack. New Relic partners, PaAS and SaAS providers, third-party vendors, and plugin users can: Quickly install and use publicly available plugins in Plugin Central. Develop your own plugin agents to collect the metric data that matters most to your business. Publish your plugins for public or private access. polling interval (AWS) Our Amazon integrations query your AWS services according to a polling interval, which varies depending on the integration. Each polling interval occurs for every AWS entity. For example, if you have thirteen Elastic Load Balancers (ELB), each one will be polled every five minutes. Depending on the AWS integration, there may be delays in the timing between the API request and the metric data returned. If you notice unusual delays, follow the integration troubleshooting procedures. PPM (pages per minute) The number of pages per minute your application serves. private location A Synthetic monitor feature that allows you to run Synthetic monitors from within your own systems by creating private minions. Private locations allow you to extend your Synthetic coverage to new geographical locations, and to monitor websites behind your firewall such as an intranet site. For more information, see Private locations overview. React Native Our Mobile Monitoring's flexible and extensible agent, which extends from iOS and Android to React Native. This helps to keep your iOS and Android apps looking and functioning the same way. For more information, see Introduction to Mobile React Native and Introduction to mobile development tools. recovery period A recovery period of time begins when a data source enters a non-violating state after being in a violating state. The recovery period is set in the condition's threshold. A violation will close when a source remains in a non-violating state and the recovery period time has elapsed. If the data source enters a violating state before the time has elapsed, the recovery period clock will reset and the violation won't close. response time The duration of time between a request for service and a response. For more information, see Response time. restricted user A type of user role on a New Relic account. For more information, see Users. rollup Using the same application name for multiple applications. This allows you to combine data in APM, either from multiple applications, or from multiple instances of an application. For more information, see Rolling up app data. root span For distributed tracing, the root span is the first span in a trace. In many cases, the root span duration will represent the duration of the entire trace, or be very close to it. However, for more complex, modern systems that use a lot of asynchronous, non-blocking processes, this will not be true. For those systems, the root span’s duration may be significantly less than the duration of the trace. RPM The term RPM usually refers to the number of requests per minute your application receives from users. This is usually the same as CPM (calls per minute). Historically, some New Relic monitoring solutions, like APM and Browser Monitoring, used to contain RPM in the product URL; for example, https://rpm.newrelic.com. This usage originally referred to Rails performance management because our first agent monitored Ruby on Rails applications. We monitor many languages and systems besides Ruby now. RUM (real user monitoring) See page load timing. runbook A runbook contains standard procedures and operations typically used by system administrators, network operations staff, and other personnel to handle outages, alert incidents, and other situations. If your organization stores runbook instructions as URLs, you can link this information to Alerts so your personnel has easy access to this information when an alert incident violates the defined policy thresholds. SAML (Security Assertion Markup Language) SAML is an XML-based data format for sharing authentication data between two parties. New Relic accounts must obtain a SAML certificate in order to enable Single Sign On for their users. For more information, see SAML service providers. Selenium Selenium is an open-source browser testing suite. Synthetics uses Selenium to test monitored websites with real browsers. For more information, see monitor types. service A service is a cluster of runtime server processes that accomplish a particular task, usually service requests. Unlike an application, a service is not usually invoked by a human. New Relic offers a variety of integrations that allow you to report data from your services. span In a distributed trace, a span is a \"named, timed operation representing a contiguous segment of work in that trace\" (from OpenTracing.io definition). For distributed tracing, spans are displayed in the distributed tracing UI, and the data type Span is available to be queried. See also root span. SSL certificate SSL certificates encrypt data that is being transmitted. While New Relic refers to security certificates as SSL because it is a more commonly used term, all certificates adhere to industry standards for secure encryption in transit. SSO (single sign on) SSO (single sign on) allows you to manage user authentication in New Relic using an external SSO provider. For more information, see Setting up SSO. sub-accounts See master account. Synthetic Monitoring Synthetic Monitoring allows you to monitor your website or API endpoint via automated, scriptable tools. Use free ping monitor to ensure your website is accessible, or expand your monitoring with browser monitors, which test your website with real browsers. Go further with scripting, to script browsers or API monitors for sophisticated testing. target A target is a resource or component monitored by a New Relic product that has been identified in an alert condition. When the data source for that target crosses the defined Critical threshold, we will open a violation. Depending on your policy's Incident preference setting, Alerts may create an incident record and send notifications through the defined channels. See also entity. thresholds Thresholds are alert condition settings that define a violation. Threshold values include the value a data source must pass to trigger a violation and the time-related settings that define a violation; for example: Passing a certain value for at least x minutes Passing a certain value only once in x minutes While the data source passes a certain value, a degradation period starts. Likewise, when that data source stops passing a certain value, a recovery period starts. The durations of these two time periods are defined in the alert condition threshold settings. Thresholds have a required critical (red) threshold and an optional warning (yellow) threshold. In the UI, the entity's health status indicator will change to yellow or red when a threshold has been crossed and a violation will open. For more information, see Define thresholds. For an explanation of how thresholds relate to other basic Alerts concepts, see Concepts and workflow. throughput Throughput is a measurement of user activity for a monitored application. APM throughput and Browser Monitoring throughput are measured in different ways: APM: requests per minute (RPM) Browser: page views per minute (PPM) tier A tier can refer to how New Relic categorizes or visualizes the various agent language ecosystems that we support. For example: In New Relic APM, the color-coded categories that appear on your app's main Overview chart show response time spent in various functions, processes, or agents as tiers; for example, request queuing, garbage collection, Middleware, JVMs, etc. In New Relic labels, TIER can be used to define or classify the client-server architecture; for example, front-end and back-end tiers. Tier may also refer to our pricing tiers. time picker By default the New Relic UI shows data for the past 30 minutes, ending now. To change the time window, use the time picker. time range A time range can refer to a length of time selected in the New Relic UI. New Relic displays a time range depending on the range you select using the time picker. timeslice data See metric timeslice data. trace A trace is a description of how a request travels through a system. Trace data helps you understand the performance of your system and diagnose problems. For more information on how we use trace data, see New Relic data types. traffic light See health status. transaction A transaction is defined as one logical unit of work in an application. This term primarily refers to server-side transactions monitored by New Relic APM. For more information, see New Relic's documentation about web transactions and non-web transactions. The term transaction is also sometimes used in Browser Monitoring. In that case, it primarily refers to activity beginning with a browser-side web request and ending with a complete page load. transaction trace A transaction trace is a complete picture of a single transaction, down to the database queries and exact invocation patterns. With transaction traces, New Relic gives you much deeper visibility into a single slow transaction, which can help you understand a broader problem. For more information, see Transaction traces. UI The New Relic user interface. For more information, see Standard page functions. user A user can refer to a specific user role in a New Relic account. For more information, see Users. UTC Universal Time Coordinated (UTC), or Coordinated Universal Time, is a standard timestamp for synchronizing time around the world. value function (metrics) The numeric value obtained from metric timeslice data; for example, an average, minimum, maximum, total, sample size, etc. violation A violation occurs when the entity monitored by an alert condition reports a value that crosses the thresholds defined in that condition. For an explanation of how violations relate to other basic Alerts concepts, see Concepts and workflow. You can view a summary of the violations for a selected incident's page. You can also view the violations for a specific entity from the product's UI. web external Web external is the term applied to the portion of time spent in transactions to external applications from within the code of the application you are monitoring. That time can be a call to a third party company (a payment provider, for example) or it could be a call to another microservice within your own company. Web external demonstrates how performance is impacted by your code executing outside the application you are measuring. web transaction A transaction is defined as one logical unit of work in an application. This term primarily refers to server-side transactions monitored by New Relic APM. Web transactions are initiated with an HTTP request. For most organizations, these represent customer-centric interactions and thus are the most important transactions to monitor. For more information, see New Relic's documentation about web transactions and non-web transactions. WebDriverJS WebDriver is a Selenium component, used to control Synthetics scripted browsers. Specifically, Synthetics uses WebDriverJS, a Node.js-based flavor of Selenium. For more information, see Writing scripted browsers and Scripted browser examples. workload A workload represents a group of entities that work together to provide a digital service. For more information, see Workloads. For more help If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "type": "docs",
      "document_type": "page",
      "breadcrumb": "Contents / Using New Relic / Welcome to New Relic / Get started",
      "info": "This glossary defines common New Relic terminology, and provides links to relevant content to help better understand each subject.",
      "nodeid": 2481,
      "sections": [
        "Welcome to New Relic",
        "Get started",
        "Measure DevOps success",
        "Plan your cloud adoption",
        "Optimize your cloud native environment",
        "New Relic University",
        "Glossary",
        "For more help"
      ],
      "title": "Glossary",
      "translation_ja_url": "https://docs.newrelic.co.jp/docs/using-new-relic/welcome-new-relic/get-started/glossary",
      "popularity": 1,
      "external_id": "b6199b4bb822a19cf31503ffe077d8a13b3632b8",
      "category_1": "Welcome to New Relic",
      "category_2": "Get started",
      "image": "",
      "url": "https://docs.newrelic.com/docs/using-new-relic/welcome-new-relic/get-started/glossary",
      "published_at": "2020-08-11T00:25:29Z",
      "updated_at": "2020-08-11T00:25:29Z",
      "category_0": "Using New Relic",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 0.07193491,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": ". It&#x27;s a specific UI view, represented by a React JavaScript package. For more information, see <em>Nerdpack</em> <em>file</em> <em>structure</em>. <em>Nerdpack</em> A <em>Nerdpack</em> is a component of a New Relic One application. It&#x27;s the package containing all the files needed by that application. For more information, see <em>Nerdpack</em> <em>file</em>"
      },
      "id": "5d0314cd4bb81c77f2eedaea"
    }
  ]
}