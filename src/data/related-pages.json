{
  "/build-apps/add-time-picker-guide": [
    {
      "sections": [
        "Android app UI",
        "Pages",
        "Time range",
        "New Relic Synthetics",
        "Alerts",
        "Mobile apps",
        "For more help"
      ],
      "title": "Android app UI",
      "type": "docs",
      "tags": [
        "Mobile apps",
        "New Relic Mobile apps",
        "Android app"
      ],
      "external_id": "8918a5a2454491a91421c55e26501a0e3f64cd3a",
      "image": "https://docs.newrelic.com/static/fc97ade0bbdbdef58b89495a0d91b734/edd00/deployment-markers_nexus.jpg",
      "url": "https://docs.newrelic.com/docs/mobile-apps/new-relic-mobile-apps/android-app/android-app-ui/",
      "published_at": "2021-03-18T13:21:58Z",
      "updated_at": "2021-03-13T01:23:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The UI for the New Relic Android app provides functionality similar to the standard user interface, with customized details for mobile users. Pages To view details of your New Relic apps, hosts, Synthetics monitors, Alerts, plugins, and key transactions, select a product from the main menu. The New Relic Android app includes: New Relic APM metrics, both real-time and historical data, including health maps. And, select the transaction icon for detailed transaction metrics, or an Overview Charts to view summary charts of your top five transactions. New Relic Infrastructure utilization. New Relic Plugins, including a list of their components or instances, and their charts and current values from the plugin's Summary. New Relic Mobile, including crash reports, network errors, API calls, and active user count. Select the filter icon to filter by labels and categories. Event notifications, including mobile alerts wherever you are, plus deployment notifications and notes. Note: New Relic's Android app does not have the full feature set of the New Relic web interface. For more detailed analysis, sign in to your New Relic account with a web browser. Time range When viewing an application or host, you can change the visible time frame by using the time picker icon in the top right of the page (the 7D in the screenshot). This feature is similar to the standard New Relic time picker. Features include: Scrub the New Relic charts to move back and forth in the timeline. Select the time picker to choose a time range that ends now (from 30 minutes to 90 days ago). New Relic Synthetics You can use the Android app to view your New Relic Synthetics data, including charts of your monitor's availability, load times, and load sizes. Select the caret icon to view more detailed charts. You can mute or disable your monitor, and view details of any recent errors. For scripted monitors, you can view and search the script log. Alerts When you log in to your New Relic account from the Android app, your device is automatically associated with your user channel. Then, you can add your user channel to your target policy to receive alerts. For Android alerts, notifications appear on your lock screen and can be viewed by tapping the alert. You can select any alert to view error details or acknowledge the alert. New Relic also sends a push notification when a colleague acknowledges an open event. Then, New Relic sends a final, closing notification when all Critical events end. Mobile apps If you have a mobile application and have installed New Relic Mobile, you can monitor its performance directly from your Android device. New Relic Mobile monitoring includes network errors, API calls, and number of active users. You can also view detailed individual crash reports for a deeper understanding of a particular crash incident. For more help Additional documentation resources include: New Relic Android app (compatibility, requirements, installation) Android authentication (procedures to add or remove users, and for the users to authenticate with their Android device)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 204.32092,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Android <em>app</em> UI",
        "sections": "Android <em>app</em> UI",
        "tags": "Mobile <em>apps</em>",
        "body": " <em>picker</em> to choose a <em>time</em> range that ends now (from 30 minutes to 90 days ago). New Relic Synthetics You can use the Android <em>app</em> to view your New Relic Synthetics data, including charts of your monitor&#x27;s availability, load times, and load sizes. Select the caret icon to view more detailed charts. You can"
      },
      "id": "6044181d28ccbc9a522c60a5"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Add the NerdGraphQuery component to an application",
        "Add, query, and mutate data using NerdStorage",
        "Add a time picker to your app",
        "Create a \"Hello, World!\" application",
        "Build a custom visualization for dashboards",
        "Add a table to your app",
        "Create a custom map view",
        "Permissions for managing applications",
        "Publish and deploy apps",
        "Set up your development environment"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "Build apps",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "document_type": "page",
      "popularity": 1,
      "body": "You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the NerdGraphQuery component to an application 20 minutes The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a time picker to your app 20 min Add a time picker to a sample application Create a \"Hello, World!\" application 15 min Build a \"Hello, World!\" app and publish it to New Relic One Build a custom visualization for dashboards 15 min Create custom data views Add a table to your app 30 min Add a table to your New Relic One app Create a custom map view 30 min Build an app to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to apps Publish and deploy apps 30 min Start sharing the apps you build Set up your development environment 20 min Prepare to build apps and contribute to this site",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 198.31474,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build <em>apps</em>",
        "sections": "Add a <em>time</em> <em>picker</em> to your <em>app</em>",
        "body": " from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a <em>time</em> <em>picker</em> to your <em>app</em>"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/docs/release-notes/mobile-apps-release-notes/new-relic-ios-release-notes/new-relic-ios-3550/",
      "sections": [
        "Mobile app for iOS v3.55.0",
        "Improvements",
        "Bug fixes"
      ],
      "published_at": "2021-03-18T22:09:54Z",
      "title": "Mobile app for iOS v3.55.0",
      "updated_at": "2021-03-16T18:57:24Z",
      "type": "docs",
      "external_id": "0dce0d058dcda297f29d114ebf1d12736bfb3900",
      "document_type": "release_notes",
      "popularity": 1,
      "body": "Improvements Improved time picker with custom start and end time selection Added time picker to Dashboards Bug fixes Fixed a crash that sometimes occurred in the new Dashboards Fixed a crash that sometimes occurred on the iPad Fixed a crash that occurred sometimes on error charts with no data",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 184.31308,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Mobile <em>app</em> for iOS v3.55.0",
        "sections": "Mobile <em>app</em> for iOS v3.55.0",
        "body": "Improvements Improved <em>time</em> <em>picker</em> with custom start and end <em>time</em> selection Added <em>time</em> <em>picker</em> to Dashboards Bug fixes Fixed a crash that sometimes occurred in the new Dashboards Fixed a crash that sometimes occurred on the iPad Fixed a crash that occurred sometimes on error charts with no data"
      },
      "id": "603e928ce7b9d261282a07c4"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/docs/release-notes/mobile-release-notes/ios-release-notes/ios-agent-590/",
      "sections": [
        "iOS agent v5.9.0",
        "Improvements"
      ],
      "published_at": "2021-03-18T16:50:03Z",
      "title": "iOS agent v5.9.0",
      "updated_at": "2021-03-16T18:11:53Z",
      "type": "docs",
      "external_id": "8efcc5cb0a4c05cf474c8b3f0141be07a1b112f0",
      "document_type": "release_notes",
      "popularity": 1,
      "body": "Improvements Adds helper method +setUserId: to NewRelic.h which sets a session attribute,Â userId, with theÂ passed value. This method is effectively the same as [NewRelic setAttribute:@\"userId\" value:<username>];",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 182.44905,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "Improvements Adds <em>helper</em> <em>method</em> +setUserId: to NewRelic.h which sets a session attribute,Â userId, with theÂ passed value. This <em>method</em> is effectively the same as [NewRelic setAttribute:@&quot;userId&quot; value:&lt;username&gt;];"
      },
      "id": "603f0f0de7b9d2a2762a0823"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/docs/release-notes/mobile-apps-release-notes/new-relic-android-release-notes/new-relic-android-2817-0/",
      "sections": [
        "Mobile app for Android v2.8.17",
        "New features",
        "Fixes"
      ],
      "published_at": "2021-03-18T13:16:41Z",
      "title": "Mobile app for Android v2.8.17",
      "updated_at": "2021-03-16T12:36:54Z",
      "type": "docs",
      "external_id": "2f230c6c870b0f9a0986c4fa75fc33aa6a471ba7",
      "document_type": "release_notes",
      "popularity": 1,
      "body": "New features Dynamic Time Picker (time picker is now populated based on subscription level to avoid 403 errors from data retrieval requests for unsupported time windows) Fixes Crashing bug when users try to logout",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 181.18251,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Mobile <em>app</em> for Android v2.8.17",
        "sections": "Mobile <em>app</em> for Android v2.8.17",
        "body": "New features Dynamic <em>Time</em> <em>Picker</em> (<em>time</em> <em>picker</em> is now populated based on subscription level to avoid 403 errors from data retrieval requests for unsupported <em>time</em> windows) Fixes Crashing bug when users try to logout"
      },
      "id": "603f07b028ccbc0b01eba77d"
    }
  ],
  "/automate-workflows/5-mins-tag-resources": [
    {
      "sections": [
        "NerdGraph tagging API tutorial",
        "Read tags for an entity",
        "Add tags for an entity",
        "Remove a tag from an entity",
        "Delete specific tag values for an entity",
        "Replace all tag values for an entity"
      ],
      "title": "NerdGraph tagging API tutorial",
      "type": "docs-jp",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "f9b98ddbbcf0daca20e12a3dd71bc419ad0e09ce",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial/",
      "published_at": "2021-03-18T06:17:29Z",
      "updated_at": "2021-03-18T06:17:29Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can add tags to your data to help improve data organization and findability. Learn more about tagging at New Relic. This doc explains how to use our NerdGraph API to add and manage tags. For a guide to automating tags using our CLI tool, see our developer site. Read tags for an entity To construct these queries and see responses: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to find the entity and then fetch its tags. Use NerdGraph's tag API to read the existing tags and their values. In this example, our entity is a browser app called Cookie Checkout: { actor { entitySearch (query: \"name like 'Cookie Checkout'\") { results { entities { tags { key values } } } } } } ã³ãã¼ The actual values vary depending on your data. Use the New Relic GraphiQL explorer to experiment with queries. Add tags for an entity To add new tags for an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity you want to tag. Use the taggingAddTagsToEntity mutation to add a tag with a value to the entity. In this example, we have a browser application called Cookie Checkout owned by a UI team. We want to add a team tag with a ui value to this instance. Once the tag is added, we can filter by the tag team:ui and find the Cookie Checkout app in the New Relic One UI. mutation { taggingAddTagsToEntity ( guid: \"ENTITY_GUID\", tags: { key: \"team\", values: [\"ui\"]}) { errors { message } } } ã³ãã¼ Remove a tag from an entity To delete a tag and all of its associated values from an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagFromEntity mutation. The following example mutation removes the team tag from an entity: mutation { taggingDeleteTagFromEntity ( guid: \"ENTITY_GUID\", tagKeys: [\"team\"]) { errors { message } } } ã³ãã¼ Delete specific tag values for an entity Instead of deleting an entire tag and all of its values, you can delete a single tag value. Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagValuesFromEntity mutation. The following example mutation deletes the ui value from the tag key: mutation { taggingDeleteTagValuesFromEntity ( guid: \"ENTITY_GUID\", tagValues : [{key: \"team\" value: \"ui\"}]) { errors { message } } } ã³ãã¼ Because tagValues is an array, you can delete multiple specific values from a single entity in one mutation. Replace all tag values for an entity To replace the entityâs entire set of tags with the provided tag set: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingReplaceTagsOnEntity mutation. In this example, the Cookie Checkout browser application was transferred from the ui team to the cookie-dev team. You can replace the tag values for team with the following mutation: mutation { taggingReplaceTagsOnEntity ( guid: \"ENTITY_GUID\", tags: {key: \"team\" values: [\"cookie-dev\"]}) { errors { message } } } ã³ãã¼ If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 136.83301,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>tagging</em> API tutorial",
        "sections": "NerdGraph <em>tagging</em> API tutorial",
        "body": "You can add <em>tags</em> to your data to help improve data organization and findability. Learn more about tagging at <em>New</em> <em>Relic</em>. This doc explains how to use our NerdGraph API to add and manage <em>tags</em>. For a guide to automating <em>tags</em> using our <em>CLI</em> tool, see our developer site. Read <em>tags</em> for an entity"
      },
      "id": "6052f07928ccbceb18c2fd80"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-16T10:02:07Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know whoâs responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know youâll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entityâs name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the entity explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Entity explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entityâs metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 127.163185,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Use <em>tags</em> to help organize and find your data",
        "sections": "Use <em>tags</em> to help organize and find your data",
        "tags": "<em>New</em> <em>Relic</em> One",
        "body": "In the software industry, a <em>tag</em> typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At <em>New</em> <em>Relic</em>, our <em>tags</em> are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "NerdGraph tagging API tutorial",
        "Read tags for an entity",
        "Add tags for an entity",
        "Remove a tag from an entity",
        "Delete specific tag values for an entity",
        "Replace all tag values for an entity"
      ],
      "title": "NerdGraph tagging API tutorial",
      "type": "docs",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "b62313b6fa10ab235c031feae23d6fe52163b703",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial/",
      "published_at": "2021-03-18T06:17:31Z",
      "updated_at": "2021-03-16T07:06:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can add tags to your data to help improve data organization and findability. Learn more about tagging at New Relic. This doc explains how to use our NerdGraph API to add and manage tags. For a guide to automating tags using our CLI tool, see our developer site. Read tags for an entity To construct these queries and see responses: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to find the entity and then fetch its tags. Use NerdGraph's tag API to read the existing tags and their values. In this example, our entity is a browser app called Cookie Checkout: { actor { entitySearch (query: \"name like 'Cookie Checkout'\") { results { entities { tags { key values } } } } } } Copy The actual values vary depending on your data. Use the New Relic GraphiQL explorer to experiment with queries. Add tags for an entity To add new tags for an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity you want to tag. Use the taggingAddTagsToEntity mutation to add a tag with a value to the entity. In this example, we have a browser application called Cookie Checkout owned by a UI team. We want to add a team tag with a ui value to this instance. Once the tag is added, we can filter by the tag team:ui and find the Cookie Checkout app in the New Relic One UI. mutation { taggingAddTagsToEntity ( guid: \"ENTITY_GUID\", tags: { key: \"team\", values: [\"ui\"]}) { errors { message } } } Copy Remove a tag from an entity To delete a tag and all of its associated values from an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagFromEntity mutation. The following example mutation removes the team tag from an entity: mutation { taggingDeleteTagFromEntity ( guid: \"ENTITY_GUID\", tagKeys: [\"team\"]) { errors { message } } } Copy Delete specific tag values for an entity Instead of deleting an entire tag and all of its values, you can delete a single tag value. Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagValuesFromEntity mutation. The following example mutation deletes the ui value from the tag key: mutation { taggingDeleteTagValuesFromEntity ( guid: \"ENTITY_GUID\", tagValues : [{key: \"team\" value: \"ui\"}]) { errors { message } } } Copy Because tagValues is an array, you can delete multiple specific values from a single entity in one mutation. Replace all tag values for an entity To replace the entityâs entire set of tags with the provided tag set: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingReplaceTagsOnEntity mutation. In this example, the Cookie Checkout browser application was transferred from the ui team to the cookie-dev team. You can replace the tag values for team with the following mutation: mutation { taggingReplaceTagsOnEntity ( guid: \"ENTITY_GUID\", tags: {key: \"team\" values: [\"cookie-dev\"]}) { errors { message } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 121.5701,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>tagging</em> API tutorial",
        "sections": "NerdGraph <em>tagging</em> API tutorial",
        "body": "You can add <em>tags</em> to your data to help improve data organization and findability. Learn more about tagging at <em>New</em> <em>Relic</em>. This doc explains how to use our NerdGraph API to add and manage <em>tags</em>. For a guide to automating <em>tags</em> using our <em>CLI</em> tool, see our developer site. Read <em>tags</em> for an entity"
      },
      "id": "603ec1c6196a67eeada83d9a"
    },
    {
      "sections": [
        "Tag key transactions",
        "Assign tags",
        "Tip",
        "Tag multiple transactions",
        "Filter"
      ],
      "title": "Tag key transactions",
      "type": "docs",
      "tags": [
        "APM",
        "Transactions",
        "Key transactions"
      ],
      "external_id": "760fa0d256c1404a48c8ff06a744c8a0cbd81874",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apm/transactions/key-transactions/tag-key-transactions/",
      "published_at": "2021-03-17T21:58:06Z",
      "updated_at": "2021-03-16T08:22:43Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In APM, you can assign tags to key transactions. Tags are metadata associated with transactions. They're useful for applying to transactions that have things in common. For example, you might apply a checkout tag to all key transactions that are part of the checkout process. Then you can filter by checkout to see all of those transactions in one place. Assign tags To assign a tag to a key transaction: Go to one.newrelic.com > More > Key transactions. From the index page, select the tag icon beside the name of the transaction you want to tag. In the tag name box, type the tag's name. Press space to apply the tag. Tip Use any Unicode characters except commas , , angle brackets < >, parentheses ( ), or square brackets [ ]. Select outside the tag name box to exit tag creation. Tag multiple transactions You can assign a tag to all visible transactions in the index: Go to one.newrelic.com > More > Key transactions. Follow the tag creation instructions in Assign tags. To remove a bulk tag: From the bulk tag dropdown, select a tag name's x symbol. Filter To filter the key transaction index by tags: In the key transaction index search field, select the dropdown icon and select by tags. Type in the tag name.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 118.75093,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Tag</em> key transactions",
        "sections": "Assign <em>tags</em>",
        "body": "In APM, you can assign <em>tags</em> to key transactions. <em>Tags</em> are metadata associated with transactions. They&#x27;re useful for applying to transactions that have things in common. For example, you might apply a checkout <em>tag</em> to all key transactions that are part of the checkout process. Then you can filter"
      },
      "id": "603eb18928ccbc564deba79d"
    },
    {
      "sections": [
        "Get started with the New Relic CLI",
        "Before you begin",
        "Important",
        "Tip",
        "Next steps"
      ],
      "title": "Get started with the New Relic CLI",
      "type": "developer",
      "tags": [
        "api key",
        "New Relic CLI",
        "Tags",
        "Entity",
        "Deployment markers"
      ],
      "external_id": "531f2f3985bf64bb0dc92a642445887095048882",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-new-relic-cli/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2021-01-16T01:50:59Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn the essentials of the New Relic CLI, from install and configuration to basic usage.",
      "body": "Access the New Relic platform from the comfort of your terminal. You can use the New Relic CLI to manage entity tags, define workloads, record deployment markers, and much more. In short, you can use the CLI to automate common tasks in your DevOps workflow. This guide walks you through the essentials of New Relic CLI, from install and configuration to basic usage. Before you begin For this guide you just need: Your New Relic user key. An instrumented application in your New Relic account. Step 1 of 10 Install the New Relic CLI Download the New Relic CLI for your operating system, as described below. You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux Using Snapcraft, run: bash Copy $ sudo snap install newrelic-cli macOS Using Homebrew, run: bash Copy $ brew install newrelic-cli Windows Using Scoop, run: bash Copy $ scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git $ scoop install newrelic-cli Step 2 of 10 Create your New Relic CLI profile. After you install the New Relic CLI, it's time to create your first profile. Profiles contain credentials and settings that you can apply to any CLI command, which is useful when switching between accounts. Run the profiles add command: bash Copy $ # Create the tutorial account for the US region $ newrelic profiles add -n tutorial --apiKey YOUR_NEW_RELIC_USER_KEY -r YOUR_REGION $ # Set the profile as defaults $ newrelic profiles default -n tutorial Important You must set the region of your New Relic account. Use -r to set either us or eu. Step 3 of 10 Get your application details. Now, add tags to the application you've instrumented with New Relic. Tags are key-value pairs that can help you organize and filter your entities. An entity (for example, an application) can have a maximum of 100 key-value pairs tied to it. Before searching for your application using the New Relic CLI, write down or copy your Account ID and the name of your application in New Relic - you need both to find applications in the New Relic platform. Step 4 of 10 Retrieve your application details as a JSON object. To search for your APM application, use the apm application search command: bash Copy $ newrelic apm application search --accountId YOUR_ACCOUNT_ID --name NAME_OF_YOUR_APP Tip If you get an error, check that your account ID and application name are correct. Step 5 of 10 Find the guid value. If the account ID is valid, and the application name exists in your account, apm application search yields data similar to this example: [ { \"accountId\": YOUR_ACCOUNT_ID, \"applicationId\": YOUR_APP_ID, \"domain\": \"APM\", \"entityType\": \"APM_APPLICATION_ENTITY\", \"guid\": \"A_LONG_GUID\", \"name\": \"NAME_OF_YOUR_APP\", \"permalink\": \"https://one.newrelic.com/redirect/entity/A_LONG_GUID\", \"reporting\": true, \"type\": \"APPLICATION\" } ] Copy When you've successfully searched for your application, look for the guid value. It's a unique identifier for your application. You should copy it or write it down. Step 6 of 10 Add a simple tag to your application. Now that you have the GUID, you can point the New Relic CLI directly at your application. Adding a tag is the simplest way to try out the CLI capabilities (don't worry, tags can be deleted by using entity tags delete). Here, you add an environment tag to your application. Add the dev:testing tagâ  (or any other key-value pair) to your application using the entities tags create command: bash Copy $ newrelic entity tags create --guid YOUR_APP_GUID --tag devkit:testing Step 7 of 10 Add tag sets. What if you want to add multiple tags? Tag sets to the rescue! While tags are key-value pairs separated by colons, tag sets are comma separated lists of tags. For example: tag1:value1,tag2:value2 To add multiple tags to your application at once, modify and run this snippet: bash Copy $ newrelic entity tags create --guid YOUR_APP_GUID --tag tag1:test,tag2:test Important Adding tags is an asynchronous operation: this means it could take a while for the tags to get created. Step 8 of 10 Retrieve your application's tags. You've created and added some tags to your application, but to test that they're working, you need to retrieve them. Run the entity tags get command: bash Copy $ newrelic entity tags get --guid YOUR_APP_GUID All tags associated with your application are retrieved as a JSON array: [ { \"Key\": \"tag1\", \"Values\": [\"true\"] }, { \"Key\": \"tag2\", \"Values\": [\"test\"] }, { \"Key\": \"tag3\", \"Values\": [\"testing\"] } // ... ] Copy Step 9 of 10 Bonus step: create a deployment marker. Deployments of applications often go wrong. Deployment markers are labels that, when attached to your application data, help you track deployments and troubleshoot what happened. To create a deployment marker, run the apm deployment create command using the same application ID from your earlier search: bash Copy $ newrelic apm deployment create --applicationId YOUR_APP_ID --revision $(git describe --tags --always) Step 10 of 10 Check the JSON response for the revision and timestamp of the deployment. You can build this workflow into a continuous integration or continuous deployment (CI/CD) system to indicate changes in your application's behavior after deployments. Here's an example: { \"id\": 37075986, \"links\": { \"application\": 204261368 }, \"revision\": \"v1.2.4\", \"timestamp\": \"2020-03-04T15:11:44-08:00\", \"user\": \"Developer Toolkit Test Account\" } Copy Next steps Have a look at all the available commands in the New Relic CLI. For example, you can create a New Relic workflow using workload create If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 116.70543,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "sections": "Get started with the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Learn the essentials of the <em>New</em> <em>Relic</em> <em>CLI</em>, from install and configuration to basic usage.",
        "tags": "<em>New</em> <em>Relic</em> <em>CLI</em>",
        "body": " application. You should copy it or write it down. Step 6 of 10 Add a simple <em>tag</em> to your application. Now that you have the GUID, you can point the <em>New</em> <em>Relic</em> <em>CLI</em> directly at your application. Adding a <em>tag</em> is the simplest way to try out the <em>CLI</em> capabilities (don&#x27;t worry, <em>tags</em> can be deleted by using"
      },
      "id": "5efa999c196a67c4e1766461"
    }
  ],
  "/terms": [
    {
      "sections": [
        "Preview access for New Relic One"
      ],
      "title": "Preview access for New Relic One",
      "type": "docs",
      "tags": [
        "Licenses",
        "Product or service licenses",
        "New Relic One"
      ],
      "external_id": "5a11f3d0ff23ad22ec459a0115a70ddbb2964d1e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/licenses/product-or-service-licenses/new-relic-one/preview-access-new-relic-one/",
      "published_at": "2021-03-18T14:04:38Z",
      "updated_at": "2021-03-16T04:47:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "As a customer with a paid subscription to New Relic products, you are eligible to participate in preview access of the New Relic One platform (e.g. Telemetry Data Platform, Full Stack Observability, and Applied Intelligence products) for the period beginning July 31, 2020 and ending December 31, 2020 (âPreview Accessâ). BY DOWNLOADING, ACCESSING, INDICATING YOUR AGREEMENT TO, OR USING THE PREVIEW ACCESS PRODUCTS, YOU AGREE THAT YOUR PREVIEW ACCESS USAGE IS PURSUANT TO THESE SEPARATE TERMS AND CONDITIONS IN LIEU OF ANY OTHER TERMS. These terms do not have to be signed in order to be binding. If you do not agree to these terms and conditions, your sole remedy is to not participate in Preview Access. New Relic reserves the right to terminate or restrict Preview Access, in whole or in part, at any time. Notwithstanding the foregoing and any other materials provided by New Relic, select customers are ineligible for the Preview Access.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 815.1786,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": ", 2020 (âPreview Accessâ). BY DOWNLOADING, ACCESSING, INDICATING YOUR AGREEMENT TO, OR USING THE PREVIEW ACCESS PRODUCTS, YOU AGREE THAT YOUR PREVIEW ACCESS USAGE IS PURSUANT TO THESE SEPARATE <em>TERMS</em> AND <em>CONDITIONS</em> IN LIEU OF ANY OTHER <em>TERMS</em>. These <em>terms</em> do not have to be signed in order to be binding"
      },
      "id": "603e891464441f2af14e883b"
    },
    {
      "sections": [
        "Developer Program Resources"
      ],
      "title": "Developer Program Resources",
      "type": "docs",
      "tags": [
        "Licenses",
        "Product or service licenses",
        "New Relic Developer edition"
      ],
      "external_id": "8a2f08905c7dcd10e50e975783ca3cf0071324c0",
      "image": "",
      "url": "https://docs.newrelic.com/docs/licenses/product-or-service-licenses/new-relic-developer-edition/developer-program-resources/",
      "published_at": "2021-03-18T01:37:11Z",
      "updated_at": "2021-03-13T03:24:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "As a customer, you are eligible to participate in New Relicâs Developer Program. Additional information and resources are available at New Relicâs Developer Program site. By downloading, accessing, or using the developer resources (including the CLI), you agree that usage of the developer resources is pursuant to the New Relic Developers Terms and Conditions and that you have the authority to bind your organization. Such terms do not have to be signed in order to be binding. If you do not agree to these terms and conditions, your sole remedy is to not use these developer resources. If your use of the New Relic developer resources are covered under a separate agreement, the above does not apply to you.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 714.8411,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " is pursuant to the New Relic Developers <em>Terms</em> and <em>Conditions</em> and that you have the authority to bind your organization. Such <em>terms</em> do not have to be signed in order to be binding. If you do not agree to these <em>terms</em> and <em>conditions</em>, your sole remedy is to not use these developer resources. If your use of the New Relic developer resources are covered under a separate agreement, the above does not apply to you."
      },
      "id": "6044e7bb196a676d20960f4d"
    },
    {
      "image": "https://newrelic.com/sites/default/files/styles/4x5_600w/public/2021-03/FutureStack_FS_2021_ghost_dark_0.png?h=f2247767&itok=Ck7VfZxt",
      "url": "https://newrelic.com/futurestack/speakers/mark-weitzel",
      "sections": [
        "Mark Weitzel",
        "Meet Our Speakers",
        "Aaron Judy",
        "Jonan Scheffler",
        "Natalie Serrino",
        "Lew Cirne",
        "Henry Jewkes",
        "Sergio Rabiela",
        "Vladimir Ulogov",
        "NoÄnica Fee",
        "Samer Rashdan",
        "Naveen Chittoor",
        "Rohit Kaul",
        "Matthew Culmone",
        "{Future}Stack is coming. May 25 - 27, 2021"
      ],
      "published_at": "2021-03-17T17:48:52Z",
      "title": "Mark Weitzel | New Relic",
      "updated_at": "2021-03-17T17:48:52Z",
      "type": "",
      "external_id": "b812fa8bd8cbd0c9824127961fa112be633ded69",
      "popularity": 1,
      "body": "Skip to main content #futurestack Agenda Speakers #FUTURESTACK Connect with us on Twitch Twitter LinkedIn Agenda Speakers Register Main navigation menu, 1 item Mark Weitzel Vice President of Developer Platform and Ecosystem, New Relic on Twitter on LinkedIn Meet Our Speakers Aaron Judy Chief of Innovation and AI Maricopa County Clerk of the Superior Court Learn more Jonan Scheffler Director, Developer Relations New Relic Learn more Natalie Serrino Principal Software Engineer New Relic Learn more Lew Cirne CEO and Founder New Relic Learn more Henry Jewkes Experimentation Advisor Split.io Learn more Sergio Rabiela Vice President of Technology Beyond Finance, Inc Learn more Vladimir Ulogov TechOps consultant New Relic Learn more NoÄnica Fee Developer Advocate New Relic Learn more Samer Rashdan Enabling Customer Success Through Creative Problem Solving Pearson Education Learn more Naveen Chittoor Application Support Engineer Cox Communications Inc Learn more Rohit Kaul Senior Partner Solutions Consultant New Relic Learn more Matthew Culmone Senior Manager, Product Management New Relic Learn more See All Speakers {Future}Stack is coming. May 25 - 27, 2021 Count down to get your Nerd on with learning, sharing, networking and lots of fun surprises. Registration Opens March 1, 2021. #futurestack Add to Google Cal Download ICS Register Connect with us on Twitch Twitter LinkedIn newrelic.com Code of Conduct Terms and Conditions Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 692.94086,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " on with learning, sharing, networking and lots of fun surprises. Registration Opens March 1, 2021. #futurestack Add to Google Cal Download ICS Register Connect with us on Twitch Twitter LinkedIn newrelic.com Code of Conduct <em>Terms</em> and <em>Conditions</em> <em>Terms</em> of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved"
      },
      "id": "6042d19728ccbc8dd92c60a1"
    },
    {
      "image": "https://newrelic.com/sites/default/files/styles/4x5_600w/public/2021-03/FutureStack_FS_2021_Mario_flower_dark.png?h=655eccb1&itok=8oM4fyBm",
      "url": "https://newrelic.com/futurestack/speakers/vidwan-katuri",
      "sections": [
        "Vidwan Katuri",
        "Meet Our Speakers",
        "Sergio Rabiela",
        "Nilson Pontello",
        "Mark Weitzel",
        "Phil Weber",
        "Henry Jewkes",
        "Sandeep Parmar",
        "Lew Cirne",
        "Nicole van der Hoeven",
        "Justin Eveland",
        "Eric Mittelhammer",
        "Tom Doherty",
        "Vladimir Ulogov",
        "{Future}Stack is coming. May 25 - 27, 2021"
      ],
      "published_at": "2021-03-17T17:48:52Z",
      "title": "Vidwan Katuri | New Relic",
      "updated_at": "2021-03-17T17:48:51Z",
      "type": "",
      "external_id": "81d94cae1dc013a2f201b26214a3e420b7d06c54",
      "popularity": 1,
      "body": "Skip to main content #futurestack Agenda Speakers #FUTURESTACK Connect with us on Twitch Twitter LinkedIn Agenda Speakers Register Main navigation menu, 1 item Vidwan Katuri Director, Cloud Infra, 7-11 Meet Our Speakers Sergio Rabiela Vice President of Technology Beyond Finance, Inc Learn more Nilson Pontello Software Architect Banco Inter Learn more Mark Weitzel Vice President of Developer Platform and Ecosystem New Relic Learn more Phil Weber Senior Technical Training Specialist New Relic Learn more Henry Jewkes Experimentation Advisor Split.io Learn more Sandeep Parmar Pre-Sales Solutions Architect New Relic Learn more Lew Cirne CEO and Founder New Relic Learn more Nicole van der Hoeven Developer Advocate k6.io Learn more Justin Eveland Software Engineer New Relic Learn more Eric Mittelhammer Senior TechOps Strategy Consultant New Relic Learn more Tom Doherty Lead Technical Training Program Manager New Relic Learn more Vladimir Ulogov TechOps consultant New Relic Learn more See All Speakers {Future}Stack is coming. May 25 - 27, 2021 Count down to get your Nerd on with learning, sharing, networking and lots of fun surprises. Registration Opens March 1, 2021. #futurestack Add to Google Cal Download ICS Register Connect with us on Twitch Twitter LinkedIn newrelic.com Code of Conduct Terms and Conditions Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 692.94025,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " to Google Cal Download ICS Register Connect with us on Twitch Twitter LinkedIn newrelic.com Code of Conduct <em>Terms</em> and <em>Conditions</em> <em>Terms</em> of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved"
      },
      "id": "6042d1e028ccbc5aeb2c60cc"
    },
    {
      "image": "https://newrelic.com/sites/default/files/styles/4x5_600w/public/2021-03/FutureStack_FS_2021_Mario_flower_dark.png?h=655eccb1&itok=8oM4fyBm",
      "url": "https://newrelic.com/futurestack/speakers/peter-espe",
      "sections": [
        "Peter Espe",
        "Sessions with Peter Espe",
        "Migrating Credit Karma's Telegraf Metrics to New Relic",
        "Meet Our Speakers",
        "Natalie Serrino",
        "Mark Weitzel",
        "Sandeep Parmar",
        "Matthew Culmone",
        "Jemiah Sius",
        "Sergio Rabiela",
        "Samer Rashdan",
        "JD Weiner",
        "Liam Hurrell",
        "Colin MacNaughton",
        "Vidwan Katuri",
        "Henry Jewkes",
        "{Future}Stack is coming. May 25 - 27, 2021"
      ],
      "published_at": "2021-03-17T19:09:37Z",
      "title": "Peter Espe | New Relic",
      "updated_at": "2021-03-17T19:09:36Z",
      "type": "",
      "external_id": "82484358c55bfb03d9b2062265ba7312e293fd51",
      "popularity": 1,
      "body": "Skip to main content #futurestack Agenda Speakers #FUTURESTACK Connect with us on Twitch Twitter LinkedIn Agenda Speakers Register Main navigation menu, 1 item Peter Espe Infrastructure Engineer, Credit Karma Sessions with Peter Espe 10:45 am - 11:45 am PDT | Thursday, May 27 | Hands-on Workshop Migrating Credit Karma's Telegraf Metrics to New Relic Learn how Credit Karma migrated its large, Telegraf-based metrics monitoring solution to New Relic without interrupting existing dependencies to take advantage of New Relicâs scale and Full-Stack Observability platform (Join this session for live chat OR watch on-demand immediately after) Meet Our Speakers Natalie Serrino Principal Software Engineer New Relic Learn more Mark Weitzel Vice President of Developer Platform and Ecosystem New Relic Learn more Sandeep Parmar Pre-Sales Solutions Architect New Relic Learn more Matthew Culmone Senior Manager, Product Management New Relic Learn more Jemiah Sius Senior Product Manager New Relic Learn more Sergio Rabiela Vice President of Technology Beyond Finance, Inc Learn more Samer Rashdan Enabling Customer Success Through Creative Problem Solving Pearson Education Learn more JD Weiner Manager of Operations Forbes Media LLC Learn more Liam Hurrell Senior Technical Training Specialist New Relic Learn more Colin MacNaughton Staff Engineer New Relic Learn more Vidwan Katuri Director, Cloud Infra 7-11 Learn more Henry Jewkes Experimentation Advisor Split.io Learn more See All Speakers {Future}Stack is coming. May 25 - 27, 2021 Count down to get your Nerd on with learning, sharing, networking and lots of fun surprises. Registration Opens March 1, 2021. #futurestack Add to Google Cal Download ICS Register Connect with us on Twitch Twitter LinkedIn newrelic.com Code of Conduct Terms and Conditions Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 647.88257,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "}Stack is coming. May 25 - 27, 2021 Count down to get your Nerd on with learning, sharing, networking and lots of fun surprises. Registration Opens March 1, 2021. #futurestack Add to Google Cal Download ICS Register Connect with us on Twitch Twitter LinkedIn newrelic.com Code of Conduct <em>Terms</em> and <em>Conditions</em> <em>Terms</em> of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved"
      },
      "id": "6042d19764441f1625378ef7"
    }
  ],
  "/collect-data/custom-attributes": [
    {
      "sections": [
        "APM: Report custom events and attributes",
        "Important",
        "Data considerations",
        "Tip",
        "Record custom events and attributes",
        "C SDK",
        "Go",
        "Java",
        ".NET",
        "Node.js",
        "PHP",
        "Python",
        "Ruby",
        "Timestamps",
        "Limits and restricted characters",
        "Reserved words"
      ],
      "title": "APM: Report custom events and attributes",
      "type": "docs",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "9a5edf6068acc3b7187d217bd7932f0478e5467c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/insights/event-data-sources/custom-events/apm-report-custom-events-attributes/",
      "published_at": "2021-03-17T22:07:27Z",
      "updated_at": "2021-03-16T08:36:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important As of March 22, 2021, we are upgrading Insights to an improved web and mobile experience! All of your Insights URLs will be redirected automatically to the corresponding dashboards in New Relic One. For more details about this migration and how you can easily plan for this transition, see our Explorers Hub post. If you have APM, you can report custom event data. You can then query and visualize your data in New Relic. Data considerations New Relic agents send event data to New Relic as part of the normal harvest cycle every five seconds for agent versions supporting real time streaming. Sending a lot of events can increase the memory overhead of the agent. New Relic enforces an upper limit of 833 custom events every 5 seconds. Additionally, posts greater than 1MB (10^6 bytes) in size will not be recorded, regardless of the custom event limit. You can also send custom events using the Event API (without need for APM). However, be aware that custom events sent with the agent APIs are not compatible with high security mode. Tip For more information, check out New Relic Universityâs tutorial Adding custom data with the APM agent API. Or, go directly to the full online course Custom data with APM. Record custom events and attributes You can add your own custom APM events and attributes, which you can then use for querying and charting. This is one of several ways to report custom data. To record a custom event, follow the procedures for your New Relic language agent. To add custom attributes to APM events, you must first enable them for your New Relic APM agent, and then make an API call to record the attribute. Follow the agent-specific custom attribute procedures. When creating your own custom events and attributes, follow data requirements for: Size limits Attribute types Reserved words C SDK To add a custom event to apps monitored by the C SDK, start a transaction and use the newrelic_create_custom_event and newrelic_record_custom_event functions. For more information, see the Guide to using the C SDK API. You can then add custom attributes for your C SDK app. Go To add a custom event to apps monitored by the Go agent, use RecordCustomEvent. You can then add custom attributes for your Go app. Java Custom event collection is enabled by default in Java agent version 3.13.0 or higher. To send custom events, call recordCustomEvent. For example: Map<String, Object> eventAttributes = new HashMap<String, Object>(); NewRelic.getAgent().getInsights().recordCustomEvent(\"MyCustomEvent\", eventAttributes); Copy The first argument defines the name of your event type, and the second argument is a map with the attributes for your custom event. Event attributes must be strings or numbers. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can change the maximum number of events recorded by the Java agent via a configuration parameter in newrelic.yml. Specify the maximum number of events to record per minute as an integer. For example, if you want to send less than the default of 10000 events: custom_insights_events: max_samples_stored: 5000 Copy To disable custom events entirely, add the following to your newrelic.yml: custom_insights_events: enabled: false Copy You can then add custom attributes for your Java app. For Java agent versions prior to 4.1.0, use the following YAML configuration: custom_insights_events.enabled: true custom_insights_events.max_samples_stored: 5000 Copy .NET Custom event collection is enabled by default in .NET agent version 4.6.29.0 or higher. To send custom events, simply call RecordCustomEvent(). For example: var eventAttributes = new Dictionary<String, Object>(); NewRelic.Api.Agent.NewRelic.RecordCustomEvent('MyCustomEvent', eventAttributes); Copy The first argument defines the name of your event type, and the second argument is an IEnumerable with the attributes for your custom event. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can then add custom attributes for your .NET app. You can turn off custom events entirely by setting customEvents.enabled to false in newrelic.config. Node.js Custom event collection is enabled by default in Node.js agent version 1.15.0 or higher. To send custom events, simply call the relevant API. For example: recordCustomEvent(eventType, attributes) Copy Use recordCustomEvent to record an event-based metric, usually associated with a particular duration. The eventType must be an alphanumeric string less than 255 characters. The attributes must be an object of key and value pairs. The keys must be shorter than 255 characters, and the values must be string, number, or boolean. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can then add custom attributes for your Node.js app. To disable custom events entirely, add custom_insights_events.enabled: false to newrelic.js. PHP Custom event collection is enabled by default in PHP agent version 4.18 or higher. To send custom events, simply call the relevant API function. For example: newrelic_record_custom_event(\"WidgetSale\", array(\"color\"=>\"red\", \"weight\"=>12.5)); Copy The first argument defines the name of your event type, and the second argument is an array with the attributes for your custom event. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. By default, the maximum number of custom events recorded per minute is 10,000. This setting cannot be changed. You can then add custom attributes for your PHP app. To disable custom events entirely, add newrelic.custom_insights_events.enabled = false to your newrelic.ini and restart the agent. Python Custom event collection is enabled by default in Python agent version 2.60.0.46 or higher. To send custom events, simply call the relevant API. For example: newrelic.agent. record_custom_event (event_type, params, application=None) Copy The event_type defines the name (or type) of the custom event. Attributes of the custom event should be passed in as a dictionary via the params keyword argument. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For limits and restrictions on event_type and params, see our documentation about limits and restricted characters and reserved words If called outside of the context of a monitored web request or background task, the call will be ignored unless the application keyword argument is provided and an application object corresponding to the application against which the exception should be recorded is provided. A suitable application object can be obtained using the newrelic.agent.application() function. You can then add custom attributes for your Python app. To disable custom events entirely, set custom_insights_events.enabled to False in your newrelic.ini configuration file. Ruby Custom event collection is enabled by default in Ruby agent version 3.9.8.273 or higher. To send custom events, simply call the relevant API. For example: ::NewRelic::Agent.record_custom_event('WidgetSale', color: 'red', weight: 12.5) Copy The first argument defines the name of your event type, and the second argument is a hash with the attributes for your custom event. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can change the maximum number of events recorded by the Ruby agent via a configuration parameter in newrelic.yml: Add custom_insights_events.max_samples_stored: to your configuration file. Specify the maximum number of events to record per minute as an integer. For example, if you want to be able to send up to 5000 events per minute, add: custom_insights_events.max_samples_stored: 5000 Copy You can then add custom attributes for your Ruby app. To disable custom events entirely, add custom_insights_events.enabled: false to newrelic.yml. Timestamps You may not specify a timestamp on events that are collected and recorded via the agent. The agent will automatically assign a timestamp to events based on when they are recorded via the API. Limits and restricted characters See Custom event data requirements for size limits, data types, and naming syntax requirements. Reserved words Before creating custom attributes, review New Relic's list of reserved terms used by NRQL. Otherwise unexpected results may occur.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 171.6578,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM: Report <em>custom</em> events and <em>attributes</em>",
        "sections": "APM: Report <em>custom</em> events and <em>attributes</em>",
        "tags": "<em>Custom</em> events",
        "body": ". For restrictions on event type names, see our documentation about limits and restricted characters and <em>NRQL</em> reserved words. You can then add <em>custom</em> <em>attributes</em> for your .NET app. You can turn off <em>custom</em> events entirely by setting <em>custom</em>Events.enabled to false in newrelic.config. Node.js <em>Custom</em> event"
      },
      "id": "603ecece28ccbcc865eba7a0"
    },
    {
      "sections": [
        "add_custom_parameters (Python agent API)",
        "Syntax",
        "Description",
        "Important",
        "Parameters",
        "Return values",
        "Examples",
        "Adding custom parameters to background task",
        "Using custom parameters to troubleshoot"
      ],
      "title": "add_custom_parameters (Python agent API)",
      "type": "docs",
      "tags": [
        "Agents",
        "Python agent",
        "Python agent API"
      ],
      "external_id": "4c5b0849a74f1a73054e995c30e04ffd730ce511",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/python-agent/python-agent-api/addcustomparameters-python-agent-api/",
      "published_at": "2021-03-17T20:45:23Z",
      "updated_at": "2021-03-16T06:24:15Z",
      "document_type": "api_doc",
      "popularity": 1,
      "body": "Syntax newrelic.agent.add_custom_parameters(items) Copy Adds one or more custom attributes to a transaction. Description This call records one or more custom attributes (a key/value tuple attached to your transaction). The call name is add_custom_parameters because \"custom attributes\" were previously called \"custom parameters\". Attributes may be found in APM if the transaction is associated with an error or if a transaction trace is generated for that transaction. Attributes can also be found and queried in New Relic One. Important Before you create custom attributes, review our list of reserved terms used by NRQL. Parameters Parameter Description items list Required. Each item in the list must be a tuple, with the first element being a key, and the second its value. Each key is a string representing the name of an attribute, and each corresponding value is the value to add to the current transaction for this attribute. Values can be int, float, string, or boolean. Only the first 255 characters are retained for both keys and values. Return values Returns True if all attributes were added successfully. Examples Adding custom parameters to background task An example of adding custom parameters to a background task: @newrelic.agent.background_task() def send_request(): response = requests.get(\"http://example.com\") newrelic.agent.add_custom_parameters( [(\"url_path_status_code\", response.status_code)] ) Copy Using custom parameters to troubleshoot You can also use custom parameters to troubleshoot performance issues. For example, you might see occasional slow response times from a pool of memcache instances, but you don't know what instance is causing the problem. You might add an attribute to the transaction indicating the server, like so: # Set server_ip to be the current server processing the transaction newrelic.agent.add_custom_parameters([ (\"memcache_query_frontend_lookup\", \"server_ip\") ]) Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 167.67395,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Adding <em>custom</em> parameters to background task",
        "body": "Syntax newrelic.agent.add_<em>custom</em>_parameters(items) Copy Adds one or more <em>custom</em> <em>attributes</em> to a transaction. Description This call records one or more <em>custom</em> <em>attributes</em> (a key&#x2F;value tuple attached to your transaction). The call name is add_<em>custom</em>_parameters because &quot;<em>custom</em> <em>attributes</em>&quot; were"
      },
      "id": "603eba6b28ccbca776eba77a"
    },
    {
      "sections": [
        "Collect custom attributes",
        "APM: Record custom attributes",
        "Important",
        "C SDK",
        "Go",
        "Java",
        ".NET",
        "Node.js",
        "PHP",
        "Python",
        "Ruby",
        "Browser monitoring: Record custom attributes",
        "Infrastructure monitoring: Record custom attributes",
        "Mobile monitoring: Record custom attributes",
        "For more help"
      ],
      "title": "Collect custom attributes",
      "type": "docs",
      "tags": [
        "Using New Relic",
        "Cross-product functions",
        "Install and configure"
      ],
      "external_id": "ad362b1a5cf3a5661eb416584fd9c79db064f539",
      "image": "",
      "url": "https://docs.newrelic.com/docs/using-new-relic/data/customize-data/collect-custom-attributes/",
      "published_at": "2021-03-18T19:58:23Z",
      "updated_at": "2021-03-16T15:50:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic allows you to collect custom attributes. For example, you can create a custom attribute to track the user name associated with a slow or failing request. This document contains links to docs on how to do this for APM, infrastructure monitoring, browser monitoring, and mobile monitoring. APM: Record custom attributes Important Review the list of reserved terms used by NRQL. Using reserved terms can cause issues. To enable and use custom attributes for APM, follow the procedure for your APM agent: C SDK To add custom attributes to applications monitored by the C SDK, call one of the attribute functions; for example, newrelic_add_attribute_double(). The key name for your custom attribute depends on what you specify when you call the function. Go Custom attribute collection is enabled by default in the Go agent. However, you can disable custom attribute collection. Java Custom attribute collection is enabled by default in Java. You can collect custom attributes using XML and the Java agent APIs. These two methods can be used in conjunction with each other. Method How to do it Specify attributes in XML XML allows you to specify custom attributes without changing any of your source code. You can have multiple XML files for custom attributes that are grouped by some logical facet. To set custom attributes for your Java app via XML: Review the New Relic Java agent's documentation about XML file format, methods and classes, and examples. From your Extensions directory within the New Relic Java agent, create a single XML file. Define the methods you want New Relic to monitor by editing your XML file directly. Define an XML instrumentation file using the New Relic UI. This may require additional config in the common: block of your newrelic.yml. See Report custom attributes under Instrumentation options for more detail. Call the agent's API Example 1: Adding custom attributes to transactions To collect custom attributes using the agent's API, call the relevant methods: For each method you want to record an attribute for, call NewRelic.addCustomParameter(...). Optional: Include or exclude certain attributes with attributes.include and attributes.exclude. For example, to record a variable named userId, include this code in the parent method: NewRelic.addCustomParameter(\"userId\", userId); Copy Example 2: Adding custom attributes to spans in distributed traces To collect custom attributes using the agent's API, call the relevant methods: For each span (currently executing method) that you want to record an attribute for, call NewRelic.getAgent().getTracedMethod().addCustomAttribute(...). Optional: Include or exclude certain attributes with span_events.attributes.include and span_events.attributes.exclude. For example, to record a variable named userId on the current span, include this code in the associated method: NewRelic.getAgent().getTracedMethod().addCustomAttribute(\"userId\", userId); Copy Collect user attributes The Java agent also includes a built-in mechanism to enable user attributes and collect user information from HttpServletRequest.getUserPrincipal() as custom attributes. .NET Custom attribute collection is enabled by default in .NET. To collect custom attributes, call the relevant API methods: For each method for which you want to record an attribute, call AddCustomAttribute. Optional: Include or exclude attributes with the include and exclude configuration options. For example, to record attributes for a coupon code (string) and an item ID code (number), you could include this code in the parent method: IAgent agent = NewRelic.Api.Agent.NewRelic.GetAgent(); ITransaction transaction = agent.CurrentTransaction; transaction .AddCustomAttribute(\"Discount Code\", \"Summer Super Sale\") .AddCustomAttribute(\"Item Code\", 31456); Copy Node.js Custom attribute collection is enabled by default in Node.js. To collect custom attributes, call the relevant API method: For each attribute you want to record, call newrelic.addCustomAttribute. To record multiple attributes using a single call, use newrelic.addCustomAttributes. For example, to record attributes for a coupon code and an item ID code, you could include this in the parent method: newrelic.addCustomAttributes({ \"Discount Code\": \"Summer Super Sale\", \"Item Code\": 31456 }); Copy PHP Custom attribute collection is enabled by default in PHP. To collect custom attributes, call the relevant API method for each method that you want to record an attribute; newrelic_add_custom_parameter for transaction events and spans newrelic_add_custom_span_parameter for only spans For example, to record a variable named $userId, include this code in the parent method: newrelic_add_custom_parameter ('userID', $userId) Copy Python Custom attribute collection is enabled by default in Python. To collect custom attributes, call add_custom_parameter for each method that you want to record an attribute. For example, to record a variable named user_id, include this code in the parent method: newrelic.agent.add_custom_parameter('user_id', user_id) Copy Ruby Custom attribute collection is enabled by default in Ruby. To collect custom attributes, call the relevant API methods: For Ruby agent version 3.12.0 or higher, use the add_custom_attributes method. For example, to record a variable named @user_id, include this code in the parent method: ::NewRelic::Agent.add_custom_attributes({ user_id: @user.id }) Copy For Ruby agent version 3.11.2 or lower, use the add_custom_parameters method. For example, to record a variable named @user_id, include this code in the parent method: ::NewRelic::Agent.add_custom_parameters({ user_id: @user.id }) Copy Browser monitoring: Record custom attributes The browser agent provides an API to specify extra details associated with a page view or browser interaction, either by forwarding attributes from APM to browser monitoring or by specifying custom attributes through JavaScript. Values forwarded from the APM agent are encoded and injected into browser attributes by our browser agent. Infrastructure monitoring: Record custom attributes Our Infrastructure monitoring lets you create custom attributes that are used to annotate the data from the infrastructure agent. You can use this metadata to build filter sets, group your results, and annotate your data. Mobile monitoring: Record custom attributes Mobile agents include API calls to record custom attributes: For an overview of mobile monitoring custom data, see Insert custom events and attributes Android method: setAttribute iOS method: setAttribute For more help",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 164.02206,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Collect <em>custom</em> <em>attributes</em>",
        "sections": "Collect <em>custom</em> <em>attributes</em>",
        "body": ". APM: Record <em>custom</em> <em>attributes</em> Important Review the list of reserved terms used by <em>NRQL</em>. Using reserved terms can cause issues. To enable and use <em>custom</em> <em>attributes</em> for APM, follow the procedure for your APM agent: C SDK To add <em>custom</em> <em>attributes</em> to applications monitored by the C SDK, call one"
      },
      "id": "603eb9a3196a67a990a83da5"
    },
    {
      "sections": [
        "newrelic_add_custom_span_parameter (PHP agent API)",
        "Syntax",
        "Requirements",
        "Description",
        "Important",
        "Parameters",
        "Return values",
        "Examples",
        "Report a variable as the value"
      ],
      "title": "newrelic_add_custom_span_parameter (PHP agent API)",
      "type": "docs",
      "tags": [
        "Agents",
        "PHP agent",
        "PHP agent API"
      ],
      "external_id": "48cad5c438588b2bd11a248848423ac96751d13d",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/php-agent/php-agent-api/newrelicaddcustomspanparameter-php-agent-api/",
      "published_at": "2021-03-17T17:41:54Z",
      "updated_at": "2021-03-16T14:40:38Z",
      "document_type": "api_doc",
      "popularity": 1,
      "body": "Syntax newrelic_add_custom_span_parameter(string $key, scalar $value) Copy Attaches a custom attribute (key/value pair) to the current span. Requirements Agent version 9.12.0.268 or higher. Description Add a custom attribute (a key and a value data pair) to the current span. (The call name is newrelic_add_custom_span_parameter because \"custom attributes\" were previously called \"custom parameters.\") For example, you can add a customer's full name from your customer database. This attribute appears in any span. You can also query the Span for your custom attributes. Important On spans, attributes added with newrelic_add_custom_span_parameter will take precedence over attributes added with newrelic_add_custom_parameter. Important If you want to use your custom attributes, avoid using any of the reserved terms used by NRQL. Parameters Parameter Description $key string Required. The name of the custom attribute. Only the first 255 characters are retained. $value scalar Required. The value to associate with this custom attribute. If the value given is a float with a value of NaN, Infinity, denorm or negative zero, the behavior of this function is undefined. For other floating point values, the agent may discard 1 or more bits of precision (ULPs) from the given value. Return values Returns true if the parameter was added successfully. Examples Report a variable as the value ... if (extension_loaded('newrelic')) { // Ensure PHP agent is available // Record custom data about this web transaction newrelic_add_custom_span_parameter ('user_email', $user_email); } ... Copy - ->",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.47498,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": ", <em>attributes</em> added with newrelic_add_<em>custom</em>_span_parameter will take precedence over <em>attributes</em> added with newrelic_add_<em>custom</em>_parameter. Important If you want to use your <em>custom</em> <em>attributes</em>, avoid using any of the reserved terms used by <em>NRQL</em>. Parameters Parameter Description $key string Required. The name"
      },
      "id": "603e97c364441f09bb4e8895"
    },
    {
      "sections": [
        "setCustomAttribute (Browser agent API)",
        "Syntax",
        "Requirements",
        "Description",
        "Parameters",
        "Examples",
        "Get JavaScript/jQuery for HTML elements"
      ],
      "title": "setCustomAttribute (Browser agent API)",
      "type": "docs",
      "tags": [
        "Browser",
        "Browser monitoring",
        "Browser agent and SPA API"
      ],
      "external_id": "45236cf5e08fcdc6cc62c2e1807a0ae25b3b1045",
      "image": "",
      "url": "https://docs.newrelic.com/docs/browser/new-relic-browser/browser-agent-spa-api/setcustomattribute-browser-agent-api/",
      "published_at": "2021-03-18T05:51:32Z",
      "updated_at": "2021-03-16T08:25:49Z",
      "document_type": "api_doc",
      "popularity": 1,
      "body": "Syntax newrelic.setCustomAttribute(string $name, string OR number $value) Copy Adds a user-defined attribute name and value to subsequent events on the page. Requirements Agent version nr-593 or higher. Description The Browser API call adds a user-defined attribute name and value to subsequent events on the page. Make this call before the window load event fires (when that data is transmitted) in order for the attributes to be included in the PageView event. Once an attribute is set, New Relic One records it with all PageAction events until the page is reloaded or the attribute is manually unset. If you are using SPA monitoring with a compatible agent version, attributes set with this call will also be included in newrelic.interaction events. However, attributes set using the SPA API will take precedence over these attributes. Errors for custom attributes will be included in events on the JS Errors page. To view or log errors for a custom attribute via API, use the Browser API's noticeError call. Parameters Parameter Description $name string Required. Name of the attribute. Appears as column in the PageView event. It will also appear as a column in the PageAction event if you are using it. Avoid using reserved NRQL words when you name the attribute/value. $value string OR integer Required. Value of the attribute. Appears as the value in the named attribute column in the PageView event. It will appear as a column in the PageAction event if you are using it. Custom attribute values cannot be complex objects, only simple types such as Strings and Integers. Avoid using reserved NRQL words when you name the attribute/value. Examples Get JavaScript/jQuery for HTML elements This example uses JavaScript/jQuery to get the values of the following HTML elements on the Drupal-generated pages for New Relic's Docs site: <link rel=\"shortlink\" href=\"/node/1111\" /> <h1>Using NRQL</h1> New Relic reports them as custom attributes. This is useful to query PageView and PageAction events in New Relic One. var node_id = ''; node_id= jQuery(\"link[rel='shortlink']\").attr(\"href\"); var node_title = ''; node_title= jQuery('h1').text(); if (typeof newrelic == 'object') { newrelic.setCustomAttribute('nodeId', node_id); newrelic.setCustomAttribute('title', node_title); } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 158.85022,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "-generated pages for New Relic&#x27;s Docs site: &lt;link rel=&quot;shortlink&quot; href=&quot;&#x2F;node&#x2F;1111&quot; &#x2F;&gt; &lt;h1&gt;Using <em>NRQL</em>&lt;&#x2F;h1&gt; New Relic reports them as <em>custom</em> <em>attributes</em>. This is useful to query PageView and PageAction events in New Relic One. var node_id = &#x27;&#x27;; node_id= jQuery(&quot;link[rel=&#x27;shortlink&#x27;]&quot;).attr(&quot;href&quot;); var"
      },
      "id": "6043fe01e7b9d28aff5799e0"
    }
  ],
  "/terraform/terraform-modules": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/terraform/",
      "sections": [
        "New Relic and Terraform",
        "Guides to new relic and terraform",
        "Getting started with New Relic and Terraform",
        "Using Terraform modules",
        "Using Terragrunt configurations"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "New Relic and Terraform",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "a0391aa84ef8cdb8d92329efb62a1a6141f44cac",
      "document_type": "page",
      "popularity": 1,
      "body": "Terraform is a popular infrastructure-as-code software tool software tool software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. Guides to new relic and terraform Getting started with New Relic and Terraform 30 min Learn how to provision New Relic resources using Terraform Using Terraform modules 30 min Learn how to use Terraform modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 393.91437,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic and <em>Terraform</em>",
        "sections": "New Relic and <em>Terraform</em>",
        "body": " provision an <em>alert</em> policy, four <em>alert</em> conditions, and a <em>notification</em> <em>channel</em>. Guides to new relic and <em>terraform</em> Getting started with New Relic and <em>Terraform</em> 30 min Learn how to provision New Relic resources using <em>Terraform</em> Using <em>Terraform</em> modules 30 min Learn how to use <em>Terraform</em> modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments"
      },
      "id": "601df6b928ccbc2507013383"
    },
    {
      "sections": [
        "Getting started with New Relic and Terraform",
        "Before you begin",
        "Bootstrap Terraform and the New Relic provider",
        "Configure the New Relic provider",
        "Tip",
        "Create a New Relic alert policy with the golden signal alerts",
        "Provision alert conditions based on the four golden signals",
        "Get notified when an alert triggers",
        "Extra Credit",
        "Conclusion"
      ],
      "title": "Getting started with New Relic and Terraform",
      "type": "developer",
      "tags": [
        "notification channel",
        "alerts",
        "golden signals",
        "terraform"
      ],
      "external_id": "a8e6eb8132628da407bf24eeeca752931f4a09df",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-terraform/",
      "published_at": "2021-03-18T01:52:08Z",
      "updated_at": "2021-03-09T01:49:21Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to provision New Relic resources using [Terraform](https://www.terraform.io/).",
      "body": "Terraform is a popular infrastructure-as-code software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic dashboards and alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. The four alert conditions are based on the four golden signals of monitoring introduced in Googleâs Site Reliability Engineering book: Latency: The amount of time it takes your application to service a request. Traffic: The amount of requests your system receives. Errors: The rate of requests that fail. Saturation: The stress on resources to meet the demands of your application. Before you begin To use this guide, you should have some basic knowledge of both New Relic and Terraform. If you haven't deployed a New Relic open source agent yet, install New Relic for your application. Also, install the Terraform CLI. Step 1 of 5 Bootstrap Terraform and the New Relic provider Start by initializing a working directory and creating a Terraform configuration file: bash Copy $ mkdir terraform-project && cd terraform-project $ touch main.tf Next, instruct Terraform to install and use the New Relic provider, by setting the terraform and required_providers blocks in main.tf: terraform { # Require Terraform version 0.13.x (recommended) required_version = \"~> 0.13.0\" # Require the latest 2.x version of the New Relic provider required_providers { newrelic = { source = \"newrelic/newrelic\" version = \"~> 2.21\" } } } Copy In this code block, you're setting the required version of Terraform to 0.13.x and setting the New Relic provider to the latest 2.x version. Using the right version constraints for your setup will provide better stability with your Terraform runs. Now that you've set your Terraform and New Relic provider versions, you need to configure the New Relic provider. Step 2 of 5 Configure the New Relic provider With terraform all set, configure the New Relic provider with the following items: Your New Relic Account ID. Your New Relic user key. Most user keys begin with the prefix NRAK-. Your New Relic region. Your region is US if your account settings page is located at one.newrelic.com, and EU if your account is located at one.eu.newrelic.com. In main.tf, set those values on the provider: provider \"newrelic\" { account_id = 12345 # Your New Relic account ID api_key = \"NRAK-***\" # Your New Relic user key region = \"US\" # US or EU (defaults to US) } Copy By setting these values on the New Relic provider, you're configuring that provider to make changes on behalf of your account through New Relic APIs. Tip You can also configure the New Relic provider using environment variables. This is a useful way to set default values for your provider configuration. For more information about configuring the New Relic provider, please feel free to check out our official provider documentation. With your New Relic provider configured, initialize Terraform: bash Copy $ terraform init When Terraform finishes installing and registering the New Relic provider, you'll receive a success message and some actionable next steps, such as running terraform plan. Before you can run terraform plan, however, you need to create your resources. Step 3 of 5 Create a New Relic alert policy with the golden signal alerts With the New Relic provider configured and initialized, you can define an alerting strategy for your application. Since you're targeting a specific application, use a newrelic_entity to fetch the application information from New Relic and allow us to reference that data elsewhere in the configuration: data \"newrelic_entity\" \"example_app\" { name = \"Your App Name\" # Must be an exact match to your application name in New Relic domain = \"APM\" # or BROWSER, INFRA, MOBILE, SYNTH, depending on your entity's domain type = \"APPLICATION\" } Copy Next, create a newrelic_alert_policy. Give the policy a dynamic name based on your application's name. This helps specify the scope of the policy: resource \"newrelic_alert_policy\" \"golden_signal_policy\" { name = \"Golden Signals - ${data.newrelic_entity.example_app.name}\" } Copy At this point, you should be able to test your configuration with a dry run: bash Copy $ terraform plan You should see output that displays Terraform's execution plan. The plan contains the actions Terraform performs when your run terraform apply: bash Copy # Example output ------------------------------------------------------------------------ An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # newrelic_alert_policy.golden_signal_policy will be created + resource \"newrelic_alert_policy\" \"golden_signal_policy\" { + account_id = (known after apply) + id = (known after apply) + incident_preference = \"PER_POLICY\" + name = \"Golden Signals - Your App Name\" } Plan: 1 to add, 0 to change, 0 to destroy. ------------------------------------------------------------------------ In this case, the plan shows you that Terraform will create a new alert policy when you run terraform apply. After verifying the details, execute the plan to provision the alert policy resource in your New Relic account: bash Copy $ terraform apply Every time you apply changes, Terraform asks you to confirm the actions you've told it to run. Type \"yes\". While it's running, Terraform sends logs to your console: bash Copy # Example output of `terraform apply` newrelic_alert_policy.golden_signal_policy: Creating... newrelic_alert_policy.golden_signal_policy: Creation complete after 1s [id=111222333] Apply complete! Resources: 1 added, 0 changed, 0 destroyed. Log in to New Relic and navigate to Alert Policies to confirm that Terraform created your new policy. As you move through the next steps of creating alert conditions, you can run terraform apply after configuring each resource. Refresh your alert policy webpage to see the new resources. Step 4 of 5 Provision alert conditions based on the four golden signals Next, add alert conditions for your application based on the four golden signals: latency, traffic, errors, and saturation. Apply these alert conditions to the alert policy you created in the previous step. Latency Most folks want to avoid slow response times. You can create a newrelic_alert_condition that triggers if the overall response time of your application rises above five seconds for five minutes: # Response time resource \"newrelic_alert_condition\" \"response_time_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Response Time (Web) - ${data.newrelic_entity.example_app.name}\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"response_time_web\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" term { duration = 5 operator = \"above\" priority = \"critical\" threshold = \"5\" time_function = \"all\" } } Copy Note that you're linking this alert condition to the previously configured alert policy with policy_id. Traffic Traffic represents how much demand is placed on your system at any given moment. Throughput is a metric that measures how much traffic goes to your application. Create a newrelic_alert_condition that triggers if the overall response rate of your application falls below five requests per minute for five minutes: # Low throughput resource \"newrelic_alert_condition\" \"throughput_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"Low Throughput (Web)\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"throughput_web\" condition_scope = \"application\" # Define a critical alert threshold that will # trigger after 5 minutes below 5 requests per minute. term { priority = \"critical\" duration = 5 operator = \"below\" threshold = \"5\" time_function = \"all\" } } Copy This type of alert is useful when you expect a constant baseline of traffic throughout the day â a drop off in traffic can indicate a problem. Errors If your application's error rate spikes, you need to know about it. Create a newrelic_alert_condition that triggers if your application's error rate rises above 5% for five minutes: # Error percentage resource \"newrelic_alert_condition\" \"error_percentage\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Error Percentage\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"error_percentage\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" # Define a critical alert threshold that will trigger after 5 minutes above a 5% error rate. term { duration = 5 operator = \"above\" threshold = \"5\" time_function = \"all\" } } Copy Saturation Saturation represents how \"full\" your service is and can take many forms, such as CPU time, memory allocation, or queue depth. In this example, assume you already have a New Relic Infrastructure agent installed on the hosts serving your application, and you want to configure an alert for when CPU utilization spikes above a certain threshold: # High CPU usage resource \"newrelic_infra_alert_condition\" \"high_cpu\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High CPU usage\" type = \"infra_metric\" event = \"SystemSample\" select = \"cpuPercent\" comparison = \"above\" runbook_url = \"https://www.example.com\" where = \"(`applicationId` = '${data.newrelic_entity.example_app.application_id}')\" # Define a critical alert threshold that will trigger after 5 minutes above 90% CPU utilization. critical { duration = 5 value = 90 time_function = \"all\" } } Copy For the Infrastructure alert, you created a newrelic_infra_alert_condition that triggers if the aggregate CPU usage on these hosts rises above 90% for five minutes. Step 5 of 5 Get notified when an alert triggers Now that you've configured some important alert conditions, add a notification channel to your alert policy to ensure the proper folks get notified when an alert triggers. To do so, use a newrelic_alert_channel. To begin, create an email notification channel to send alert notifications to your email. Use this when you want to notify a specific person or team when alerts are triggered: resource \"newrelic_alert_channel\" \"team_email\" { name = \"example\" type = \"email\" config { recipients = \"yourawesometeam@example.com\" include_json_attachment = \"1\" } } Copy If you want to specify multiple recipients, use a comma-delimited list of emails. Last, but not least, in order to apply the notification channel to your alert policy, create a newrelic_alert_policy_channel: resource \"newrelic_alert_policy_channel\" \"golden_signals\" { policy_id = newrelic_alert_policy.golden_signal_policy.id channel_ids = [newrelic_alert_channel.team_email.id] } Copy A newrelic_alert_policy_channel links the notification channel you just created to your alert policy. To finalize your golden signal alerts configuration, run terraform apply one last time to make sure all of your configured resources are up to date. Extra Credit new_relic_alert_channel supports several types of notification channels, including email, Slack, and PagerDuty. So, if you want to explore this more, try creating an alert channel for a second channel type, such as Slack: # Slack notification channel resource \"newrelic_alert_channel\" \"slack_notification\" { name = \"slack-example\" type = \"slack\" config { # Use the URL provided in your New Relic Slack integration url = \"https://hooks.slack.com/services/XXXXXXX/XXXXXXX/XXXXXXXXXX\" channel = \"your-slack-channel-for-alerts\" } } Copy Before you apply this change, you need to add the New Relic Slack App to your Slack account and select a Slack channel to send the notification. With this new alert channel, triggered alerts send notifications to the Slack channel of your choice. Conclusion As your team evaluates the alerting system youâve put in place, youâll find that you may need to tweak configuration values, such as the alert threshold and duration. If you manage your Terraform project in a remote repository, you can submit a pull request so your team can review these changes alongside the rest of your code contributions. Tip You may also want to consider automating this process in your CI/CD pipeline. Use Terraform's recommended practices guide to learn more about their recommended workflow and how to evolve your provisioning practices. Congratulations! You're officially practicing observability-as-code. Review the New Relic Terraform provider documentation to learn how you can take your configuration to the next level.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 363.60837,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Getting started with New Relic and <em>Terraform</em>",
        "sections": "Create a New Relic <em>alert</em> policy with the golden signal <em>alerts</em>",
        "info": "Learn how to provision New Relic resources using [<em>Terraform</em>](https:&#x2F;&#x2F;www.terraform.io&#x2F;).",
        "tags": "<em>notification</em> <em>channel</em>",
        "body": " = newrelic_<em>alert</em>_policy.golden_signal_policy.id <em>channel</em>_ids = [newrelic_<em>alert_channel</em>.team_email.id] } Copy A newrelic_<em>alert_policy_channel</em> links the <em>notification</em> <em>channel</em> you just created to your <em>alert</em> policy. To finalize your golden signal <em>alerts</em> configuration, run <em>terraform</em> apply one last time to make sure all"
      },
      "id": "6046d422e7b9d27a66579a0b"
    },
    {
      "sections": [
        "Test alert notification channels",
        "Request the test",
        "Troubleshoot the test results",
        "Tip"
      ],
      "title": "Test alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "c001fca5128a2fb8128ff655c44f9d51b6d5fa2a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/test-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:45:12Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You must save a new notification channel or any changes to an existing notification channel before testing it. Alerts will then send a test message to your chosen destination. Request the test To test a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Follow standard procedures to add a new notification channel or to update an existing notification channel, and save it. Select a notification channel, and then click Send a test notification. Review the test confirmation message, and then click Got it. Troubleshoot the test results A confirmation message will automatically show up in the user interface that indicates where the test was sent (for example, email) and whether it was successful. Also, the test notification message itself includes detailed information, including: The person who requested the test Links to policies for the channel Links to all notification channels and policies for the account Tip When troubleshooting problems, review the test notification message, and verify the setup requirements for the type of notification channel you selected. If necessary, make additional changes to your notification channel, and test it again as needed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 307.10876,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": "You must save a new <em>notification</em> <em>channel</em> or any changes to an existing <em>notification</em> <em>channel</em> before testing it. <em>Alerts</em> will then send a test message to your chosen destination. Request the test To test a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click"
      },
      "id": "603ec9ffe7b9d25b3d2a07a7"
    },
    {
      "sections": [
        "Update alert notification channels",
        "Reference for updating channels",
        "Add or remove policies assigned to a channel",
        "Assign a channel to policies",
        "Change a channel's name",
        "Check for policies assigned to a user",
        "Check how many policies are assigned to a channel",
        "Create more channels",
        "Delete a channel",
        "Test a saved channelView assigned alert policies",
        "Basic process"
      ],
      "title": "Update alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "521bed5aa6fdcea5c1cffd11d01e6dad19bc7c40",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/update-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:21Z",
      "updated_at": "2021-03-16T08:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Depending on the selected channel type, different values appear. Reference for updating channels Here's a quick reference for updating channels which also includes links to more detailed information and procedures. Add or remove policies assigned to a channel To add or remove policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Choose a channel, and then click Alert policies. From the selected policy, use the windows to select, remove, or clear all notification channels. Assign a channel to policies To add a notification channel to one or more policies: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies. Choose a policy, click Notification channels, and then click Add notification channels. Choose a channel, and then click Update policy. Change a channel's name To rename an existing notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details, change the name (maximum 64 characters) based on the channel type if applicable, and then save. Check for policies assigned to a user To check whether an account user has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Optional: Search by \"user\" to browse users or a specific username or email. Choose the user, then click Alert policies. Check how many policies are assigned to a channel To check whether a notification channel has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. The Policy subscriptions column lists how many policies are assigned to the channel. Create more channels To create a new notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Click New notification channel. Delete a channel To delete a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. In the list, click the Delete icon. Test a saved channelView assigned alert policies To view the policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, choose a channel, and then click Alert policies. OR To view the notification channels assigned to a policy: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies, choose a policy, then click Notification channels. Basic process Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details page, make any necessary changes, and then save. The user interface shows a Last modified time stamp for any changes to policies, including their conditions and notification channels.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 295.22522,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " to a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, click <em>Notification</em> channels. Choose a <em>channel</em>, and then click <em>Alert</em> policies. From the selected policy, use the windows to select, remove, or clear all <em>notification</em> channels. Assign a <em>channel</em> to policies To add"
      },
      "id": "603eca45e7b9d2d1d82a0806"
    },
    {
      "sections": [
        "Notification channels: Control where to send alerts",
        "Tip",
        "View notification channels",
        "Add or remove notification channels",
        "Instructions for specific notification channels",
        "User",
        "Email",
        "OpsGenie",
        "PagerDuty",
        "Slack",
        "VictorOps",
        "Webhook",
        "Important",
        "Caution",
        "xMatters",
        "Receive mobile push notifications",
        "Acknowledge alert notifications"
      ],
      "title": "Notification channels: Control where to send alerts",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "8600dc86e59fad5da1e4a2b4170d2b86df78ee2f",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/notification-channels-control-where-send-alerts/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:59:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use alerts to set up notification channels, and attach those channels to policies. Your selected channels provide fast and consistent ways for the right personnel to be notified about incidents. For example, notifications allow you to include charts about the incident to provide context and share them with your team. Alerts offers several notification channels, including webhooks, Slack rooms, email, and more. You'll be notified by your notification channels when incidents are opened, acknowledged, or closed. This document explains the available notification channels and how to set them up. Tip This document is about alerts notifications. For general information about unsubscribing from other New Relic emails, including marketing emails, weekly reports, and announcements, see Unsubscribe from New Relic emails. View notification channels To see all notification channels in your account: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Add or remove notification channels To set up a new notification channel: On the Notification channels, click New notification channel. Select the type of channel and complete other required steps for it. To add or remove a notification policy or channel: Select a specific notification channel, select Alert policies, and add or remove a policy. OR Select a specific policy, select Notification channels, and add or remove a channel. Instructions for specific notification channels These are the available notification channel types. User For your convenience, we automatically load all users and their email addresses for the selected account. If your account has one or more sub-accounts, the notification channel includes only users for the currently selected master or sub-account. Use the User notification channel to select existing account team members and admins. To view the Users list or to add users to alert policies: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. A user channel also sends push notifications to any of the user's registered mobile devices. A device is registered if the user has logged into New Relic using the mobile app on the device. Email We automatically add every individual and their email address on the selected account to the User notification channel and you can select them there. You don't need to add existing New Relic accounts to the Email channel. To add an email channel for other users, follow these guidelines: Field Description Email (required) In general, use the Email notification channel to identify user emails or email aliases that are not already on the selected account. For example, if you have a dev-ops@company.com email alias for your DevOps team, add the email alias to the Email channel. Otherwise, use the User notification channel to select specific users on your DevOps team. For easier maintenance, add a single non-user email address or alias to a single alert notification channel. If you want to use the email channel for more than one email, create an email group or alias outside your account. These email addresses can be the same as or different from email addresses already on your account. Users can unsubscribe from general (non-alerts-related) emails, but they cannot unsubscribe from alerts email notifications. Instead, the account Owner, Admin, or add-on manager must remove users from the policy's email notification channel. Include JSON attachment (optional) To include a JSON attachment with the email notification, select this checkbox. OpsGenie You must have an existing OpsGenie account integrated with New Relic in order to provide the following information: Field Description Channel name (required) A meaningful name for the OpsGenie notification channel (maximum 64 characters). API key (required) The API key generated from your OpsGenie integration used to authenticate API requests. Teams (optional) List of team names that are responsible for the alert. OpsGenie runs team escalation policies to calculate which users will receive notifications. Tags (optional) A comma-separated list of labels attached to the alert. Tip To overwrite the OpsGenie Quiet Hours setting for urgent alerts, add an OverwriteQuietHours tag. Recipients (optional) One or more names of users, groups, on-call schedules, escalation policies, etc., that OpsGenie uses to calculate where to send notifications. PagerDuty You must have an existing PagerDuty account in order to provide the following information: Field Description Service name (required) The name of your service integrating with PagerDuty for notifications. Integration key (required) The unique service identifier used by PagerDuty's Integration API to trigger, acknowledge, and resolve incidents for the service. Slack Before adding Slack notifications, you must create a unique webhook integration using Slack's New Relic integration. If you want web, transaction, server, and mobile alerts to be posted in separate channels, you must set up separate integrations for each one. Field Description Channel name (required) A meaningful name for the Slack notification channel (maximum 64 characters); for example, Network Ops Center. URL (required) Copy and paste the New Relic webhook integration URL that you've set up with Slack. For example: https://hooks.slack.com/services/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 Be sure to include https:// in the URL. Do not use http://. Team channel (optional) If used, include # before the name of the Slack channel where alert notifications are sent; for example, #NOC. VictorOps You must have an existing VictorOps account in order to provide the following required information: Field Description Channel name (required) A meaningful name for this notification channel (maximum 64 characters). For example, if the VictorOps Route key is for your Technical Support team, you could name this channel Tech Support - VictorOps. Key (required) VictorOps generates a unique key for each account. It maps the VictorOps account to its associated integrations. Route key (optional) This key maps the alert or incident to a specific team. Webhook Webhooks are HTTP POST messages containing JSON documents delivered to a destination URL. When an incident is opened, acknowledged, or closed, our webhook feature sends a message to your URL with any relevant information, such as a description of the event and a link back to New Relic. You also have the option to customize the payload in the POST message for further integration into your system. Important If your endpoint does not acknowledge the POST request within 10 seconds, the Alerts UI may indicate a failed notification event for the related incident. Before adding webhook notifications, you must have an endpoint set up to respond with a status code between 200 and 206 after receiving the following required information: Field Description Channel name (required) A meaningful name for the webhook (maximum 64 characters). Base url (required) The endpoint that will receive the POST message and trigger customized behaviors in your system. Caution If you want to include a port number in the webhook URL, make sure the port is available for requests. Otherwise the webhook will not work. Basic auth (optional) To require basic authentication for the webhook, select Add basic auth, and provide the user name and password to authenticate the webhook. Custom headers (optional) To include headers with webhooks, select Add custom headers, and provide the name and value for each header. Use custom payload (optional) To use the default values, leave blank. To view and edit the default values, select Add custom payload. Payload (for custom payloads only) Your customized POST message code. This field includes: A list of variables you can use Syntax highlighting, based on payload type Payload type (for custom payloads only) Specify the message format: JSON (default) or Form. xMatters You must have an existing xMatters account in order to provide the following information: Field Description Channel name (required) Name your channel so you can identify it easily when associating it with a policy. Integration url (required) The unique integration url provided by xMatters pointing to your xMatters account. Receive mobile push notifications Important In order to receive mobile push notifications, your device must be registered and listed in (account) > User preferences. If the device is not listed in User preferences, log out of the app, log back in, and check again to see if it is listed. To receive mobile push notifications: Log in to your New Relic account via the mobile app at least once to ensure the device is registered. Add the user channel to the alert policy. Switch push notifications On for the device. Acknowledge alert notifications Anyone in your account can acknowledge notifications through the user interface or email notification. Acknowledging an incident in New Relic also acknowledges any associated incident in PagerDuty.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 285.49335,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "sections": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " <em>notification</em> <em>channel</em> to select existing account team members and admins. To view the Users list or to add users to <em>alert</em> policies: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click <em>Notification</em> channels. A user <em>channel</em> also sends push notifications to any of the user&#x27;s registered"
      },
      "id": "603ecfbf64441f4ee54e885f"
    }
  ],
  "/automate-workflows/get-started-new-relic-cli": [
    {
      "sections": [
        "NerdGraph tagging API tutorial",
        "Read tags for an entity",
        "Add tags for an entity",
        "Remove a tag from an entity",
        "Delete specific tag values for an entity",
        "Replace all tag values for an entity"
      ],
      "title": "NerdGraph tagging API tutorial",
      "type": "docs-jp",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "f9b98ddbbcf0daca20e12a3dd71bc419ad0e09ce",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial/",
      "published_at": "2021-03-18T06:17:29Z",
      "updated_at": "2021-03-18T06:17:29Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can add tags to your data to help improve data organization and findability. Learn more about tagging at New Relic. This doc explains how to use our NerdGraph API to add and manage tags. For a guide to automating tags using our CLI tool, see our developer site. Read tags for an entity To construct these queries and see responses: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to find the entity and then fetch its tags. Use NerdGraph's tag API to read the existing tags and their values. In this example, our entity is a browser app called Cookie Checkout: { actor { entitySearch (query: \"name like 'Cookie Checkout'\") { results { entities { tags { key values } } } } } } ã³ãã¼ The actual values vary depending on your data. Use the New Relic GraphiQL explorer to experiment with queries. Add tags for an entity To add new tags for an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity you want to tag. Use the taggingAddTagsToEntity mutation to add a tag with a value to the entity. In this example, we have a browser application called Cookie Checkout owned by a UI team. We want to add a team tag with a ui value to this instance. Once the tag is added, we can filter by the tag team:ui and find the Cookie Checkout app in the New Relic One UI. mutation { taggingAddTagsToEntity ( guid: \"ENTITY_GUID\", tags: { key: \"team\", values: [\"ui\"]}) { errors { message } } } ã³ãã¼ Remove a tag from an entity To delete a tag and all of its associated values from an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagFromEntity mutation. The following example mutation removes the team tag from an entity: mutation { taggingDeleteTagFromEntity ( guid: \"ENTITY_GUID\", tagKeys: [\"team\"]) { errors { message } } } ã³ãã¼ Delete specific tag values for an entity Instead of deleting an entire tag and all of its values, you can delete a single tag value. Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagValuesFromEntity mutation. The following example mutation deletes the ui value from the tag key: mutation { taggingDeleteTagValuesFromEntity ( guid: \"ENTITY_GUID\", tagValues : [{key: \"team\" value: \"ui\"}]) { errors { message } } } ã³ãã¼ Because tagValues is an array, you can delete multiple specific values from a single entity in one mutation. Replace all tag values for an entity To replace the entityâs entire set of tags with the provided tag set: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingReplaceTagsOnEntity mutation. In this example, the Cookie Checkout browser application was transferred from the ui team to the cookie-dev team. You can replace the tag values for team with the following mutation: mutation { taggingReplaceTagsOnEntity ( guid: \"ENTITY_GUID\", tags: {key: \"team\" values: [\"cookie-dev\"]}) { errors { message } } } ã³ãã¼ If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 260.6371,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>tagging</em> <em>API</em> tutorial",
        "sections": "Read <em>tags</em> for an <em>entity</em>",
        "tags": "<em>APIs</em>",
        "body": "You can add <em>tags</em> to your data to help improve data organization and findability. Learn more about tagging at <em>New</em> <em>Relic</em>. This doc explains how to use our NerdGraph <em>API</em> to add and manage <em>tags</em>. For a guide to automating <em>tags</em> using our <em>CLI</em> tool, see our developer site. Read <em>tags</em> for an <em>entity</em>"
      },
      "id": "6052f07928ccbceb18c2fd80"
    },
    {
      "sections": [
        "Record and monitor deployments",
        "Options for tracking deployments",
        "Tip",
        "Record deployments with the REST API",
        "Record a deployment with POST",
        "Record a deployment with PowerShell",
        "View a list of deployments with GET",
        "Sample output from GET",
        "Delete a deployment with DELETE",
        "Character limits and JSON parameters",
        "Important",
        "Record deployments using the New Relic agent",
        "Notify your team of deployments",
        "End of life notification: Hipchat, Campfire"
      ],
      "title": "Record and monitor deployments",
      "type": "docs",
      "tags": [
        "APM",
        "New Relic APM",
        "Maintenance"
      ],
      "external_id": "00b24338386fd261daea0733fe03c01639cce083",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apm/new-relic-apm/maintenance/record-monitor-deployments/",
      "published_at": "2021-03-18T03:18:22Z",
      "updated_at": "2021-03-16T07:15:36Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Deploying an app can be a risky eventâwhen your app breaks, a bad deployment is often the cause. New Relic allows you to track deployments so you can correlate deploy to your app's performance. Tracking deployments creates deployment markers that appear in APM charts. Options for tracking deployments You can use the New Relic REST API v2 to record new deployments, retrieve a list of past deployments, and delete past deployments on your APM application. In addition, some APM agents have agent-specific methods to record deployments automatically. You can use your Slack integration with New Relic, or a simple webhook, to notify your team in real time of deployments for applications monitored by APM. Slack provides a webhook URL that allows you to post generic JSON that will appear formatted in a chosen Slack channel. There are a few places where you can view deployments in the New Relic UI after they have been recorded. You can view deployments in the UI: In the activity feed of the APM Summary, New Relic One Service summary, and entity summary pages. On APM performance charts as a chart marker. On the Deployments page for summary performance. Tip Deployment markers are not available for Browser applications, but see Browser releases for a way to tag errors with release versions. Record deployments with the REST API You can use the New Relic REST API v2 to record deployments, get a list of past deployments, and delete deployments. The examples in this document use curl as a command line tool. However, you can use any method to make your REST requests. You can also create, view, and delete deployments with the API Explorer. JSON uses double quotes \" for element names and content. Using single quotes ' will cause errors. Record a deployment with POST To record a new deployment, send a POST request that includes your API key to the deployments endpoint. Attach the payload in JSON format (see Character limits and JSON parameters). All payload parameters are optional except revision. For example: curl -X POST \"https://api.newrelic.com/v2/applications/$APP_ID/deployments.json\" \\ -H \"Api-Key:$API_KEY\" \\ -i \\ -H \"Content-Type: application/json\" \\ -d \\ '{ \"deployment\": { \"revision\": \"REVISION\", \"changelog\": \"Added: /v2/deployments.rb, Removed: None\", \"description\": \"Added a deployments resource to the v2 API\", \"user\": \"datanerd@example.com\", \"timestamp\": \"2019-10-08T00:15:36Z\" } }' Copy Record a deployment with PowerShell To record a deployment with PowerShell, send a POST request that includes your API key to the deployments endpoint. Attach the payload in JSON format (see Character limits and JSON parameters). All payload parameters are optional except revision. This example uses PowerShell version 3 or higher: Invoke-WebRequest -Uri https://api.newrelic.com/v2/applications/YOUR_APP_ID/deployments.json -Method POST -Headers @{'Api-Key'='$API_KEY'} -ContentType 'application/json' -Body '{ \"deployment\": { \"revision\": \"REVISION\", \"changelog\": \"Added: /v2/deployments.rb, Removed: None\", \"description\": \"Added a deployments resource to the v2 API\", \"user\": \"datanerd@example.com\", \"timestamp\": \"2019-10-08T00:15:36Z\" } }' Copy This example uses PowerShell version 2 (requires .NET framework 3.5 or higher): $encoding = [System.Text.Encoding]::GetEncoding(\"ASCII\") $data ='{ \"deployment\": { \"revision\": \"REVISION\", \"changelog\": \"Added: /v2/deployments.rb, Removed: None\", \"description\": \"Added a deployments resource to the v2 API\", \"user\": \"datanerd@example.com\", \"timestamp\": \"2019-10-08T00:15:36Z\" } }' $postData = $encoding.GetBytes($data) $request = [System.Net.WebRequest]::Create('https://api.newrelic.com/v2/applications/$APP_ID/deployments.json') $request.Method = 'POST' $request.Headers.add('Api-Key','$API_KEY') $request.ContentType='application/json' $stream = $request.GetRequestStream() $stream.Write($postData,0,$postData.Length) $request.GetResponse() Copy View a list of deployments with GET To retrieve a list of all past deployments for your app, send a GET request that includes your API key to the deployments endpoint. GET requests do not use a JSON payload. For example: curl -X GET \"https://api.newrelic.com/v2/applications/$APP_ID/deployments.json\" \\ -H \"Api-Key:$API_KEY\" \\ -i Copy Sample output from GET This example requests a list of deployments for app ID 9999999: curl -X GET \"https://api.newrelic.com/v2/applications/9999999/deployments.json\" \\ -H \"Api-Key:ABCDEFGHIJKLMNOPQRSTUVWXabcdefghijklmnopqrstuvwx\" \\ -i Copy The API returns this list of deployments: HTTP/1.1 200 OK ETag: \"ABCDEFGHIJKabcdefghijk0123456789\" Cache-Control: max-age=0, private, must-revalidate Content-Type: application/json { \"deployments\": [ { \"id\": 1234567, \"revision\": \"1234123412341234123412341234123412341234\", \"changelog\": \"Fixed the bugs for real this time\", \"description\": \"Example description two\", \"user\": \"Data Nerd\", \"timestamp\": \"2016-02-24T10:09:27-08:00\", \"links\": { \"application\": 9999999 } }, { \"id\": 2345678, \"revision\": \"7890789078907890789078907890789078907890\", \"changelog\": \"Think I fixed all the bugs\", \"description\": null, \"user\": \"Dren Atad\", \"timestamp\": \"2014-10-22T12:23:47-07:00\", \"links\": { \"application\": 9999999 } } ], \"links\": { \"deployment.agent\": \"/v2/applications/{application_id}\" } } Copy Delete a deployment with DELETE To delete a deployment, send a DELETE request that includes your API key to the deployments endpoint. DELETE requests do not use a JSON payload, but you must specify the ID for the deployment you want to delete. To retrieve the ID for a deployment, use the GET request. For example: curl -X DELETE \"https://api.newrelic.com/v2/applications/$APP_ID/deployments/$EMPLOYMENT_ID.json\" \\ -H \"Api-Key:$API_KEY\" \\ -i Copy Character limits and JSON parameters The JSON payload can include the following parameters. Important UTF-8 4 byte characters, such as Emojis and some non-Latin language glyphs, cannot be used in the deployment text. Parameter Data type Description revision String, 127 character maximum Required. A unique ID for this deployment, visible in the Summary page and on the Deployments page. Can be any string, but is usually a version number or a Git checksum. changelog String, 65535 character maximum Optional. A summary of what changed in this deployment, visible in the Deployments page when you select (selected deployment) > Change log. description String, 65535 character maximum Optional. A high-level description of this deployment, visible in the Summary page and on the Deployments page when you select an individual deployment. user String, 31 character maximum Optional. A username to associate with the deployment, visible in the Summary page and on the Deployments page. timestamp ISO 8601 Optional. When the deployment occurred, down to the second. If not specified, the deployment will be recorded at the time when the API call was received. Timestamp requirements: Must be in UTC time. Must be after the most recent deployment timestamp. Cannot be in the future. Must be in ISO8601 format; for example, \"2019-10-08T00:15:36Z\". Record deployments using the New Relic agent Some agents have additional methods to record deployments: All agents: Use the New Relic REST API v2. C: No SDK-specific methods. Use the REST API. Go: No agent-specific methods. Use the REST API. Java: Call the Java agent jar. .NET: Use PowerShell and the REST API. Node.js: No agent-specific methods. Use the REST API. PHP: Use a PHP script. Python: Use the record-deploy subcommand of the newrelic-admin script. Ruby: Use a Capistrano recipe. Notify your team of deployments After a deployment is recorded using the REST API, you can optionally notify a webhook endpoint of the deployment. The destination of the webhook can be your Slack instance. To use webhooks to set up a deployment notification for a Slack channel: Log in to your Slack account as an admin, then go to App directory > Manage > Apps. Search for your New Relic app, then select Add configuration. From Post to channel, select an existing Slack channel or add a new channel, then Add configuration. From the list of options, copy the webhook URL. Go to one.newrelic.com > (account dropdown) > Account settings > Integrations > Deploy notifications > Webhook. Paste the Slack webhook URL, then save. Optional: Send a test message. Tip You can also use webhooks, Slack channels, and other options for alert notifications with New Relic Alerts. End of life notification: Hipchat, Campfire As of September 9, 2019, integrations with Hipchat and Campfire for APM deployment notifications will no longer be available. Recommendation: If you are still using Hipchat or Campfire, use webhooks with Slack channels instead. For more information, see the New Relic Explorers Hub post.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 242.72142,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Record and monitor <em>deployments</em>",
        "sections": "Record <em>deployments</em> using the <em>New</em> <em>Relic</em> agent",
        "tags": "<em>New</em> <em>Relic</em> APM",
        "body": " after they have been recorded. You can view deployments in the UI: In the activity feed of the APM Summary, <em>New</em> <em>Relic</em> One Service summary, and <em>entity</em> summary pages. On APM performance charts as a chart <em>marker</em>. On the Deployments page for summary performance. Tip <em>Deployment</em> <em>markers</em> are not available"
      },
      "id": "603eb1c364441fd58b4e888b"
    },
    {
      "sections": [
        "Quickly tag a set of resources",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Search for an entity",
        "Add tags and tag lists to your entity",
        "Important",
        "Check that the tags are there",
        "Tip",
        "Next steps"
      ],
      "title": "Quickly tag a set of resources",
      "type": "developer",
      "tags": [
        "tags",
        "new relic CLI"
      ],
      "external_id": "c7c374812f8295e409a9b06d552de51ceefc666b",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/5-mins-tag-resources/",
      "published_at": "2021-03-18T01:52:07Z",
      "updated_at": "2021-01-16T01:52:06Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Add tags to applications you instrument for easier filtering and organization.",
      "body": "Tags help you group, search, filter, and focus the data about your entities, which can be anything from applications to hosts to services. Tagging entities using the New Relic CLI is a good candidate for automation. In this 5-minute guide, you use the New Relic CLI to add multiple tags to one of your entities. Before you begin For this guide you need a New Relic user key: You can view and create them in the API keys UI. Step 1 of 6 Install the New Relic CLI You can download the New Relic CLI for macOS, Windows, and Linux. You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux Install Snapcraft, and then run: bash Copy $ sudo snap install newrelic-cli macOS Install Homebrew, and then run: bash Copy $ brew install newrelic-cli Windows Install Scoop, and then run: bash Copy $ scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git $ scoop install newrelic-cli Step 2 of 6 Create your New Relic CLI profile New Relic CLI profiles contain credentials and settings that you can apply to any CLI command. To create your first CLI profile, run the profiles add command. Don't forget to set the region of your New Relic account: use -r to set either us or eu (this is required). bash Copy $ # Create the tutorial account for the US region $ newrelic profiles add -n tutorial --apiKey API_KEY -r us $ # Set the profile as default $ newrelic profiles default -n tutorial Step 3 of 6 Search for an entity Your New Relic account might have hundreds of entities: Have a quick look by opening the Entity explorer. In the terminal, run entity search to retrieve a list of entities from your account as JSON. In this example, you're searching for all entities with \"test\" in their name. bash Copy $ # Change the `name` to match any of your existing entities $ newrelic entity search --name \"test\" Step 4 of 6 If there are matching entities in your account, the query yields data in JSON format similar to this workload example. Select an entity from the results and look for its guid value; the guid is the unique identifier of the entity. Copy or write it down. { \"accountId\": 123456789, \"domain\": \"NR1\", \"entityType\": \"WORKLOAD_ENTITY\", \"guid\": \"F7B7AE59FDED4204B846FB08423DB18E\", \"name\": \"Test workload\", \"reporting\": true, \"type\": \"WORKLOAD\" }, Copy Step 5 of 6 Add tags and tag lists to your entity Using your entity guid, you can add tags right away. Invoke the entities tags create command. If you want to add multiple tags, use tag sets: While tags are key-value pairs separated by colons, tag sets are comma-separated lists of tags. For example: tag1:value1,tag2:value2 Important Adding tags is an asynchronous operation: it could take a little while for the tags to get created. bash Copy $ # Adding a single tag $ newrelic entity tags create --guid GUID --tag key:value $ # Adding multiple tags $ newrelic entity tags create --guid GUID --tag tag1:test,tag2:test Step 6 of 6 Check that the tags are there To make sure that the tags have been added to your entities, retrieve them using the entity tags get command. All tags associated with your entity are retrieved as a JSON array. newrelic entity tags get --guid GUID Tip Tags can be deleted at any time by invoking the entity tags delete command followed by the same arguments you used to create them. [ { \"Key\": \"tag1\", \"Values\": [\"true\"] }, { \"Key\": \"tag2\", \"Values\": [\"test\"] }, { \"Key\": \"tag3\", \"Values\": [\"testing\"] } // ... ] Copy Next steps Have a look at all the New Relic CLI commands. For example, you could create a New Relic workflow using workload create. If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.54395,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Quickly <em>tag</em> a set of resources",
        "sections": "Install the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "info": "Add <em>tags</em> to applications you instrument for easier filtering and organization.",
        "tags": "<em>new</em> <em>relic</em> <em>CLI</em>",
        "body": " of your entities. Before you begin For this guide you need a <em>New</em> <em>Relic</em> user <em>key</em>: You can view and create them in the <em>API</em> keys UI. Step 1 of 6 Install the <em>New</em> <em>Relic</em> <em>CLI</em> You can download the <em>New</em> <em>Relic</em> <em>CLI</em> for macOS, Windows, and Linux. You can also download pre-built binaries for all platforms, including"
      },
      "id": "5efa999d64441fa74a5f7e2d"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/",
      "sections": [
        "Automate workflows",
        "Guides to automate workflows",
        "Quickly tag resources",
        "Automatically tag a simple \"Hello World\" Demo across the entire stack",
        "Set up New Relic using the Kubernetes operator",
        "Automate common tasks",
        "Getting started with New Relic and Terraform",
        "Set up New Relic using Helm charts",
        "Use New Relic to diagnose problems"
      ],
      "published_at": "2021-03-18T01:50:51Z",
      "title": "Automate workflows",
      "updated_at": "2021-03-11T01:48:25Z",
      "type": "developer",
      "external_id": "d4f408f077ed950dc359ad44829e9cfbd2ca4871",
      "document_type": "page",
      "popularity": 1,
      "body": "When building today's complex systems, you want an easy, predictable way to verify that your configuration is defined as expected. This concept, Observability as Code, is brought to life through a collection of New Relic-supported orchestration tools, including Terraform, AWS CloudFormation, and a command-line interface. These tools enable you to integrate New Relic into your existing workflows, easing adoption, accelerating deployment, and returning focus to your main job â getting stuff done. In addition to our Terraform and CLI guides below, find more automation solutions in our Developer Toolkit. Guides to automate workflows Quickly tag resources 5 min Add tags to apps for easy filtering Automatically tag a simple \"Hello World\" Demo across the entire stack 30 min See how easy it is to leverage automation in your DevOps environment! Set up New Relic using the Kubernetes operator 20 min Learn how to provision New Relic resources using the Kubernetes operator Automate common tasks 20 min Use the New Relic CLI to tag apps and create deployment markers Getting started with New Relic and Terraform 30 min Learn how to provision New Relic resources using Terraform Set up New Relic using Helm charts 20 min Learn how to set up New Relic using Helm charts Use New Relic to diagnose problems 30 min Learn to diagnose problems using New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 236.22781,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Set up <em>New</em> <em>Relic</em> using the Kubernetes operator",
        "body": " min Learn how to provision <em>New</em> <em>Relic</em> resources using the Kubernetes operator Automate common tasks 20 min Use the <em>New</em> <em>Relic</em> <em>CLI</em> to <em>tag</em> apps and create <em>deployment</em> <em>markers</em> Getting started with <em>New</em> <em>Relic</em> and Terraform 30 min Learn how to provision <em>New</em> <em>Relic</em> resources using Terraform Set up <em>New</em> <em>Relic</em>"
      },
      "id": "5efa999c196a67dfb4766445"
    },
    {
      "sections": [
        "NerdGraph tagging API tutorial",
        "Read tags for an entity",
        "Add tags for an entity",
        "Remove a tag from an entity",
        "Delete specific tag values for an entity",
        "Replace all tag values for an entity"
      ],
      "title": "NerdGraph tagging API tutorial",
      "type": "docs",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "b62313b6fa10ab235c031feae23d6fe52163b703",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial/",
      "published_at": "2021-03-18T06:17:31Z",
      "updated_at": "2021-03-16T07:06:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can add tags to your data to help improve data organization and findability. Learn more about tagging at New Relic. This doc explains how to use our NerdGraph API to add and manage tags. For a guide to automating tags using our CLI tool, see our developer site. Read tags for an entity To construct these queries and see responses: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to find the entity and then fetch its tags. Use NerdGraph's tag API to read the existing tags and their values. In this example, our entity is a browser app called Cookie Checkout: { actor { entitySearch (query: \"name like 'Cookie Checkout'\") { results { entities { tags { key values } } } } } } Copy The actual values vary depending on your data. Use the New Relic GraphiQL explorer to experiment with queries. Add tags for an entity To add new tags for an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity you want to tag. Use the taggingAddTagsToEntity mutation to add a tag with a value to the entity. In this example, we have a browser application called Cookie Checkout owned by a UI team. We want to add a team tag with a ui value to this instance. Once the tag is added, we can filter by the tag team:ui and find the Cookie Checkout app in the New Relic One UI. mutation { taggingAddTagsToEntity ( guid: \"ENTITY_GUID\", tags: { key: \"team\", values: [\"ui\"]}) { errors { message } } } Copy Remove a tag from an entity To delete a tag and all of its associated values from an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagFromEntity mutation. The following example mutation removes the team tag from an entity: mutation { taggingDeleteTagFromEntity ( guid: \"ENTITY_GUID\", tagKeys: [\"team\"]) { errors { message } } } Copy Delete specific tag values for an entity Instead of deleting an entire tag and all of its values, you can delete a single tag value. Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagValuesFromEntity mutation. The following example mutation deletes the ui value from the tag key: mutation { taggingDeleteTagValuesFromEntity ( guid: \"ENTITY_GUID\", tagValues : [{key: \"team\" value: \"ui\"}]) { errors { message } } } Copy Because tagValues is an array, you can delete multiple specific values from a single entity in one mutation. Replace all tag values for an entity To replace the entityâs entire set of tags with the provided tag set: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingReplaceTagsOnEntity mutation. In this example, the Cookie Checkout browser application was transferred from the ui team to the cookie-dev team. You can replace the tag values for team with the following mutation: mutation { taggingReplaceTagsOnEntity ( guid: \"ENTITY_GUID\", tags: {key: \"team\" values: [\"cookie-dev\"]}) { errors { message } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 230.30646,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>tagging</em> <em>API</em> tutorial",
        "sections": "Read <em>tags</em> for an <em>entity</em>",
        "tags": "<em>APIs</em>",
        "body": "You can add <em>tags</em> to your data to help improve data organization and findability. Learn more about tagging at <em>New</em> <em>Relic</em>. This doc explains how to use our NerdGraph <em>API</em> to add and manage <em>tags</em>. For a guide to automating <em>tags</em> using our <em>CLI</em> tool, see our developer site. Read <em>tags</em> for an <em>entity</em>"
      },
      "id": "603ec1c6196a67eeada83d9a"
    }
  ],
  "/automate-workflows/automated-tagging": [
    {
      "sections": [
        "NerdGraph tagging API tutorial",
        "Read tags for an entity",
        "Add tags for an entity",
        "Remove a tag from an entity",
        "Delete specific tag values for an entity",
        "Replace all tag values for an entity"
      ],
      "title": "NerdGraph tagging API tutorial",
      "type": "docs-jp",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "f9b98ddbbcf0daca20e12a3dd71bc419ad0e09ce",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial/",
      "published_at": "2021-03-18T06:17:29Z",
      "updated_at": "2021-03-18T06:17:29Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can add tags to your data to help improve data organization and findability. Learn more about tagging at New Relic. This doc explains how to use our NerdGraph API to add and manage tags. For a guide to automating tags using our CLI tool, see our developer site. Read tags for an entity To construct these queries and see responses: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to find the entity and then fetch its tags. Use NerdGraph's tag API to read the existing tags and their values. In this example, our entity is a browser app called Cookie Checkout: { actor { entitySearch (query: \"name like 'Cookie Checkout'\") { results { entities { tags { key values } } } } } } ã³ãã¼ The actual values vary depending on your data. Use the New Relic GraphiQL explorer to experiment with queries. Add tags for an entity To add new tags for an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity you want to tag. Use the taggingAddTagsToEntity mutation to add a tag with a value to the entity. In this example, we have a browser application called Cookie Checkout owned by a UI team. We want to add a team tag with a ui value to this instance. Once the tag is added, we can filter by the tag team:ui and find the Cookie Checkout app in the New Relic One UI. mutation { taggingAddTagsToEntity ( guid: \"ENTITY_GUID\", tags: { key: \"team\", values: [\"ui\"]}) { errors { message } } } ã³ãã¼ Remove a tag from an entity To delete a tag and all of its associated values from an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagFromEntity mutation. The following example mutation removes the team tag from an entity: mutation { taggingDeleteTagFromEntity ( guid: \"ENTITY_GUID\", tagKeys: [\"team\"]) { errors { message } } } ã³ãã¼ Delete specific tag values for an entity Instead of deleting an entire tag and all of its values, you can delete a single tag value. Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagValuesFromEntity mutation. The following example mutation deletes the ui value from the tag key: mutation { taggingDeleteTagValuesFromEntity ( guid: \"ENTITY_GUID\", tagValues : [{key: \"team\" value: \"ui\"}]) { errors { message } } } ã³ãã¼ Because tagValues is an array, you can delete multiple specific values from a single entity in one mutation. Replace all tag values for an entity To replace the entityâs entire set of tags with the provided tag set: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingReplaceTagsOnEntity mutation. In this example, the Cookie Checkout browser application was transferred from the ui team to the cookie-dev team. You can replace the tag values for team with the following mutation: mutation { taggingReplaceTagsOnEntity ( guid: \"ENTITY_GUID\", tags: {key: \"team\" values: [\"cookie-dev\"]}) { errors { message } } } ã³ãã¼ If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 256.23935,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>tagging</em> API tutorial",
        "sections": "NerdGraph <em>tagging</em> API tutorial",
        "body": " the <em>taggingDeleteTag</em>FromEntity mutation. The following example mutation removes the team <em>tag</em> from an entity: mutation { <em>taggingDeleteTag</em>FromEntity ( guid: &quot;ENTITY_GUID&quot;, <em>tag</em>Keys: [&quot;team&quot;]) { errors { message } } } ã³ãã¼ Delete specific <em>tag</em> values for an entity Instead of deleting an <em>entire</em> <em>tag</em> and all of its values, you can"
      },
      "id": "6052f07928ccbceb18c2fd80"
    },
    {
      "sections": [
        "NerdGraph tagging API tutorial",
        "Read tags for an entity",
        "Add tags for an entity",
        "Remove a tag from an entity",
        "Delete specific tag values for an entity",
        "Replace all tag values for an entity"
      ],
      "title": "NerdGraph tagging API tutorial",
      "type": "docs",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "b62313b6fa10ab235c031feae23d6fe52163b703",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial/",
      "published_at": "2021-03-18T06:17:31Z",
      "updated_at": "2021-03-16T07:06:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can add tags to your data to help improve data organization and findability. Learn more about tagging at New Relic. This doc explains how to use our NerdGraph API to add and manage tags. For a guide to automating tags using our CLI tool, see our developer site. Read tags for an entity To construct these queries and see responses: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to find the entity and then fetch its tags. Use NerdGraph's tag API to read the existing tags and their values. In this example, our entity is a browser app called Cookie Checkout: { actor { entitySearch (query: \"name like 'Cookie Checkout'\") { results { entities { tags { key values } } } } } } Copy The actual values vary depending on your data. Use the New Relic GraphiQL explorer to experiment with queries. Add tags for an entity To add new tags for an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity you want to tag. Use the taggingAddTagsToEntity mutation to add a tag with a value to the entity. In this example, we have a browser application called Cookie Checkout owned by a UI team. We want to add a team tag with a ui value to this instance. Once the tag is added, we can filter by the tag team:ui and find the Cookie Checkout app in the New Relic One UI. mutation { taggingAddTagsToEntity ( guid: \"ENTITY_GUID\", tags: { key: \"team\", values: [\"ui\"]}) { errors { message } } } Copy Remove a tag from an entity To delete a tag and all of its associated values from an entity: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagFromEntity mutation. The following example mutation removes the team tag from an entity: mutation { taggingDeleteTagFromEntity ( guid: \"ENTITY_GUID\", tagKeys: [\"team\"]) { errors { message } } } Copy Delete specific tag values for an entity Instead of deleting an entire tag and all of its values, you can delete a single tag value. Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingDeleteTagValuesFromEntity mutation. The following example mutation deletes the ui value from the tag key: mutation { taggingDeleteTagValuesFromEntity ( guid: \"ENTITY_GUID\", tagValues : [{key: \"team\" value: \"ui\"}]) { errors { message } } } Copy Because tagValues is an array, you can delete multiple specific values from a single entity in one mutation. Replace all tag values for an entity To replace the entityâs entire set of tags with the provided tag set: Go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Use entitySearch() to locate the GUID for the entity with the tag you want to remove. Use the taggingReplaceTagsOnEntity mutation. In this example, the Cookie Checkout browser application was transferred from the ui team to the cookie-dev team. You can replace the tag values for team with the following mutation: mutation { taggingReplaceTagsOnEntity ( guid: \"ENTITY_GUID\", tags: {key: \"team\" values: [\"cookie-dev\"]}) { errors { message } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 237.07545,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "NerdGraph <em>tagging</em> API tutorial",
        "sections": "NerdGraph <em>tagging</em> API tutorial",
        "body": " the <em>taggingDeleteTag</em>FromEntity mutation. The following example mutation removes the team <em>tag</em> from an entity: mutation { <em>taggingDeleteTag</em>FromEntity ( guid: &quot;ENTITY_GUID&quot;, <em>tag</em>Keys: [&quot;team&quot;]) { errors { message } } } Copy Delete specific <em>tag</em> values for an entity Instead of deleting an <em>entire</em> <em>tag</em> and all of its values, you can"
      },
      "id": "603ec1c6196a67eeada83d9a"
    },
    {
      "sections": [
        "New Relic Flex: ç¬èªã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ãæ§ç¯ãã",
        "Flexã¨ã¯?",
        "è¦ä»¶",
        "Flexã®åä½ã®ããã¿",
        "è¨­å®ã®ä¾",
        "è©³ç´°æå ±",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic Flex: ç¬èªã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ãæ§ç¯ãã",
      "type": "docs-jp",
      "tags": [
        "Full-Stack Observability",
        "Instrument everything",
        "Develop your own integrations"
      ],
      "external_id": "97d59bd52c8219850d6ea5ae34a226698b84d022",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/integrations/host-integrations/host-integrations-list/flex-integration-tool-build-your-own-integration/",
      "published_at": "2021-03-18T10:50:58Z",
      "updated_at": "2021-03-18T10:50:57Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¯ãå¤ãã®ä¸è¬çãªãµã¼ãã¹ããã¬ã¼ã ã¯ã¼ã¯åãã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ãæä¾ãã¦ãã¾ããNew Relicãä½¿ç¨ãã¦ãããã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®å¯¾è±¡å¤ã®ãµã¼ãã¹ãããã¼ã¿ã®ã¬ãã¼ããè¡ãå ´åãæ¬¡ã®ããã¤ãã®æ¹æ³ã§New Relicã«ããç¬èªã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ãä½æã§ãã¾ãã New Relic Infrastructureãä½¿ç¨ãã¦ãè»½éã®Flexãã¼ã«ï¼ä»¥ä¸ã§æ¨å¥¨ãææ¸åï¼ãä½¿ç¨ã§ãã¾ããå®å¨ãªInfrastructure ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ãæ§ç¯ããã«ã¯ãIntegrations SDKããè¦§ãã ããã ãã¬ã¡ããªã¼ï¼ã¡ããªãã¯ã¹ããã¬ã¼ã¹ï¼ã¢ãã¿ã¼ã½ãªã¥ã¼ã·ã§ã³ï¼å½ç¤¾ã®ãã¬ã¡ããªã¼SDKãä½¿ç¨ãã¾ãã ç¬èªã®JavaScript UIæ©è½ãä½¿ç¨ãããã«ã¹ã¿ã ã®New Relic Oneã¢ããªã±ã¼ã·ã§ã³ãæ§ç¯ãã¾ãã Flexã¨ã¯? New Relic Flexã¯ãã¢ããªã±ã¼ã·ã§ã³ã«ä¾å­ããªããã¹ã¦ãå¼ã­åãããã¼ã«ã§ããã®ãã¼ã«ãä½¿ç¨ãã¦åºç¯ãªãµã¼ãã¹ããã¡ããªãã¯ãã¼ã¿ãåéã§ãã¾ããNew Relic Infrastructureã¨ã¼ã¸ã§ã³ãã¨ãã³ãã«ã§æä¾ããã¾ããæ¨æºå½¢å¼ï¼ä¾ï¼JSONã¾ãã¯ãã¬ã¼ã³ãã­ã¹ãï¼ã§æ¨æºãã­ãã³ã«ï¼HTTPããã¡ã¤ã«ãã·ã§ã«ï¼ã«ã¡ããªãã¯ã¹ãé²åããã¢ããªãã¤ã³ã¹ãã¥ã«ã¡ã³ãã§ãã¾ãï¼YAMLè¨­å®ãã¡ã¤ã«ãä½æããInfrastructureã¨ã¼ã¸ã§ã³ããéå§ãããã¼ã¿ãNew Relicã«ã¬ãã¼ããã¾ãã Flexã¯ãåºç¯ãªã½ã¼ã¹ãããNew Relicã«ã¤ãã³ãã¨ã¡ããªãã¯ãã¼ã¿ãéä¿¡ã§ãã¾ããç°¡åãªYAMLè¨­å®ãã¡ã¤ã«ãä½¿ç¨ãã¦ãHTTP/HTTPSãªã¯ã¨ã¹ããå®è¡ããã·ã§ã«ã³ãã³ããå®è¡ãããã¡ã¤ã«ã³ã³ãã³ãã®ãã¼ã¹ãè¡ãã¾ããã¾ããæ¨æºã®æ­£è¦è¡¨ç¾ãä½¿ç¨ãã¦ããã®å¥åããåéãããã¼ã¿ã®ã«ã¹ã¿ãã¤ãºã¨å¶å¾¡ãè¡ãã¾ããè¨­å®ã®ä¾ããè¦§ãã ããã ãã¼ã¿ã®åéã¨ã¯ãªã¼ã³ã¢ãããè¡ã£ãå¾ãNew Relicã§Flexãã¼ã¿ã®ã¯ã¨ãªãè¡ããã«ã¹ã¿ã ãã£ã¼ããä½æãããã®ãã¼ã¿ãããã·ã¥ãã¼ãã§ä½¿ç¨ã§ãã¾ãã è¦ä»¶ Flexã¯Infrastructureã¨ã¼ã¸ã§ã³ãã¨ãã³ãã«ã§æä¾ããã¾ããFlexãä½¿ç¨ããã«ã¯ãæ¬¡ã®ãã®ãå¿è¦ã§ãã New Relic Infrastructure Pro Linuxã¾ãã¯WindowsãKubernetesã§å®è¡ãã¦ãããInfrastructureã¨ã¼ã¸ã§ã³ããã¼ã¸ã§ã³1.10.7ä»¥ä¸ï¼ã¢ãããã¼ã | ãã§ãã¯ãã¼ã¸ã§ã³ï¼ã Flexã®åä½ã®ããã¿ Flexã¯Infrastructureã¨ã¼ã¸ã§ã³ããä½¿ç¨ãã¦ãã¬ãã¼ããããã¼ã¿ãçæããã³ãã³ããå®è¡ãã¾ãããã¼ã¿ã®ã¬ãã¼ãã§ã®Flexã®ããã¿ã®æ¦è¦ã¯æ¬¡ã®ã¨ããã§ãã Infrastructureã¨ã¼ã¸ã§ã³ãããã±ã¼ã¸ã«ãããYAMLè¨­å®ãã¡ã¤ã«ã§ã¬ãã¼ããããã¼ã¿ãå®ç¾©ãã¾ããè¨­å®ã®ä¾ããè¦§ãã ããï¼ è¨­å®ã®ä¾ Linuxãµã¼ãã¼ã®ã¢ãããã¼ããã¢ãã¿ã¼ããããã®Flexè¨­å®ã®ä¾ã¯æ¬¡ã®ã¨ããã§ãããã®è¨­å®ã¯ãflex-uptime.ymlã¨ããååã®ãã¡ã¤ã«ã«ããã¾ãããã®è¨­å®ã¯ã/etc/newrelic-infra/integrations.d/flex-uptime.ymlã«ãããInfrastructureã¨ã¼ã¸ã§ã³ãã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ã»ã¯ã·ã§ã³ã«ããã¾ãã integrations: - name: nri-flex config: name: linuxUptimeIntegration apis: - name: Uptime commands: - run: 'cat /proc/uptime' split: horizontal split_by: \\s+ set_header: [uptimeSeconds,idletimeSeconds] ã³ãã¼ ãã®è¨­å®ã§è¡ããã¨ã«ã¤ãã¦ã®æ³¨ï¼ runã§ã¯ãå®è¡ããã³ãã³ããå®ç¾©ãã¾ãã åå: ã¢ããã¿ã¤ã ã§ç¤ºãããååã«ã¯ãUptimeSampleã¨å¼ã°ããã¤ãã³ããçæããããã®ãµã³ãã«ãä»ãããã¾ãã split_by: \\s+ã¯ãç©ºç½æå­ã«åºã¥ããã£ã¼ã«ããåå²ãã¾ãã ãã®ã³ãã³ãã¯ãUptimeSampleã¤ãã³ãã«æ·»ä»ãããå±æ§ãçæãã¾ããå±æ§ã®ååã¯uptimeSecondsããã³idletimeSecondsã¨ãªãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãã¯ãç¬èªã®è¨­å®ï¼ããã©ã«ãï¼30ç§ããï¼ã«åºã¥ãé »åº¦ã§Flexãå®è¡ãããã¼ã¿ãNew Relicã«éä¿¡ãã¾ãã ãã®å¾ãã¼ã¿ã®ã¯ã¨ãªãè¡ãããã®ãã¼ã¿ãä½¿ç¨ãã¦ã«ã¹ã¿ã ãã£ã¼ããä½æãããã¼ã¿ãããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãã è©³ç´°æå ± Flexã¤ã³ãã°ã¬ã¼ã·ã§ã³ã¯ãInfrastructureã¨ã¼ã¸ã§ã³ãã¨ãã³ãã«ã§æä¾ããã¾ããè¦ä»¶ã®è©³ç´°ãè¡¨ç¤ºããã è©³ç´°ã«ã¤ãã¦ã¯ãGitHubã®ãã­ã¥ã¡ã³ãï¼ READMEããè¦§ãã ãã ãã¥ã¼ããªã¢ã« ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 194.53381,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "Full-<em>Stack</em> Observability"
      },
      "id": "60533092196a67649e2d166a"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-16T10:02:07Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know whoâs responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know youâll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entityâs name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the entity explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Entity explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entityâs metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 185.26819,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Use <em>tags</em> to help organize and find <em>your</em> data",
        "sections": "Use <em>tags</em> to help organize and find <em>your</em> data",
        "body": " reports that identify entities that are non-compliant with <em>your</em> <em>tagging</em> standards. <em>Tag</em> examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "image": "https://newrelic.com/dam/new-relic/opengraph/newrelic_og_image.png",
      "url": "https://newrelic.com/resources/articles/aws-monitoring-tips",
      "sections": [
        "Here are five best practices that can help you boost end-user experiences, simplify performance management, and optimize your AWS environment to suit your applications.",
        "Links",
        "1. Right-size your AWS instances",
        "2. Monitor all the (AWS) things",
        "3. Set up auto-scaling alerts and dashboards",
        "4. Automate your setup",
        "5. Keep an eye on the entire stack",
        "Performance monitoring for AWS",
        "COMPANY",
        "CONNECT",
        "international"
      ],
      "published_at": "2021-03-17T17:47:46Z",
      "title": "Tips and Tricks for Monitoring AWS with New Relic",
      "updated_at": "2021-03-16T04:01:33Z",
      "type": "storefront",
      "external_id": "acb339bf22ae7152efd7d58a16b9edc2e274cdc5",
      "popularity": 1,
      "body": "logo-newrelic Search Products Pricing Solutions Help Center About New Relic for iOS or Android Â Â  New Relic Insights App for iOS Search icon Sign Up Log In Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience Tool Consolidation Open Source By Industry E-commerce and Retail Media Public Sector By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore open source projects Training Get help Community forum Global technical support Expert services About Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Social Impact Â  Investor Relations Newsroom Partner Program Contact Us logo-newrelic Want to use our logo? There's a page for that, including instructions and different styles and formats. Sorry about grabbing your right-click. Just trying to be helpful. You can also go home. Back to top icon Article Tips and Tricks for Monitoring AWS with New Relic Here are five best practices that can help you boost end-user experiences, simplify performance management, and optimize your AWS environment to suit your applications. Links Download PDF Whether youâre a seasoned New Relic user or are just starting to understand how the New Relic platform works, thereâs always a new tip or trick you can use to improve the performance of your cloud-hosted applications. Here are five best practices that can help you boost end-user experiences, simplify performance management, and optimize your AWS environment to suit your applications: 1. Right-size your AWS instances The transient nature of EC2 instances can make it difficult to get an accurate view of your AWS ecosystem. Your company may have many different individuals or groups who are spinning up EC2 instances for various purposes. Because of this, a complete view of the current state of your AWS environment is essential. A decommissioned host is not a âdeadâ server; rather, it has merely served its purpose. Using New Relic Infrastructure, you instantly get an accurate snapshot of your EC2 instances, which allows you to then dissect them by the AWS tags you already use. Ultimately, this 360-degree view of your infrastructure allows you to optimize (or right-size) your AWS instances for maximum ROI. 2. Monitor all the (AWS) things While EC2 powers most AWS workloads, itâs by no means the only AWS service used to power modern applications. To fully understand how your AWS ecosystem is performing, you need to monitor the other services you use. New Relic Infrastructure Professional allows you to monitor the performance health of many popular AWS services, such as CloudFront, DynamoDB, EBS, ElastiCache, Elastic Load Balancing (ELB), IAM, Kinesis, RDS, SNS, SQS, and VPC, to name just a few of the services New Relic can monitor. To use these services effectively, you need context. For example, AWS ELB automatically distributes incoming application traffic across multiple Amazon EC2 instances, which you donât always have visibility into. But by tracking ELB requests per second as well as write and read volume in New Relic Insights, you can understand exactly how that load is being balanced to make sure youâre using the service as effectively as possible. 3. Set up auto-scaling alerts and dashboards Ops teams depend on critical alerts and custom dashboards to tell the whole story about infrastructure performance. Thatâs why New Relic makes it easy for you to set thresholds for alerts on various metrics relating to your applications, servers, and key transactions. As EC2 instances come and go, your alerts and dashboards need to auto-scale with them. You can manage alerts by creating specified user groups and by leveraging New Relicâs integrated alert channels, including OpsGenie, PagerDuty, Slack, VictorOps, and Campfire. If youâre using a different alerting solution, use our Webhook feature to send a JSON Object anywhere you choose. New Relic also gives you the option to create customized dashboards for a curated view of what you care about most when running your applications in an AWS ecosystem. 4. Automate your setup When youâre operating in a dynamic AWS environment, your underlying infrastructure is constantly shifting. While AWS CloudFormation takes care of provisioning the resources, it raises the obvious question of how your application software is deployed, configured, and executed on your Amazon EC2 instances. Thatâs why you should consider using an automation solution like Chef or Puppet, which can automatically configure your systems and apps that sit on top of your infrastructure. Both tools make life easier by allowing you to automate your entire deployment and management process. When these config management tools are combined with New Relic Infrastructure, you get an instant view of your EC2 metrics, as well as the change events associated with their configuration. 5. Keep an eye on the entire stack The great thing about using New Relic to monitor your AWS applications is that it doesnât just give you visibility into a certain portion of your application stack, but lets you see the entire thingâeven if youâre running in a hybrid cloud, on-premise, or both. If you spot a performance problem in New Relic APM, for example, you can easily correlate to issues with your infrastructure using New Relic Infrastructure. You can test your application from outside the firewall using New Relic Synthetics, see whatâs going on at the interaction level using New Relic Browser, and also organize, query, and visualize all this data using New Relic Insights to answer key questions about application and customer experienceâall in real time. Performance monitoring for AWS Build, migrate, and deploy your applications and infrastructure faster with AWS monitoring from New Relic. Get Started COMPANY Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal CONNECT Contact Us Request Demo Events international newrelic.co.jp (æ¥æ¬èª) newrelic.fr (FranÃ§ais) newrelic.de (Deutsch) newrelic.co.kr (íêµ­ì´) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 149.08774,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "4. <em>Automate</em> <em>your</em> setup",
        "body": " should consider using an automation solution like Chef or Puppet, which can automatically configure <em>your</em> systems and apps that sit on top of <em>your</em> infrastructure. Both tools make life easier by allowing you to <em>automate</em> <em>your</em> <em>entire</em> deployment and management process. When these config management tools"
      },
      "id": "5ece930ee7b9d2bb5cc7071a"
    }
  ],
  "/collect-data/collect-data-from-any-source": [
    {
      "sections": [
        "Telemetry SDKs: Report custom telemetry data",
        "ãã³ã",
        "Requirements and compatibility",
        "Available libraries",
        "Write your own Telemetry SDK or contribute to an existing one",
        "Integrations built with the Telemetry SDKs"
      ],
      "title": "Telemetry SDKs: Report custom telemetry data",
      "type": "docs-jp",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Ingest APIs"
      ],
      "external_id": "09f60611cc8cfe8a89fa6821df8a47bbd6d69c9f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/telemetry-data-platform/ingest-manage-data/ingest-apis/telemetry-sdks-report-custom-telemetry-data/",
      "published_at": "2021-03-18T19:32:06Z",
      "updated_at": "2021-03-18T19:32:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Telemetry SDKs are an open source set of API client libraries that send data to the New Relic platform. Under the hood, these SDKs rely on our core data ingest APIs: the Metric API, Trace API, Log API, and Event API. We offer open-source integrations for telemetry tools like Prometheus, Istio, and OpenCensus that were created using our Telemetry SDKs. If those solutions (or our other integrations) don't meet your needs, you can use the Telemetry SDKs to create your own telemetry data solutions. ãã³ã To use our Telemetry SDKs and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Requirements and compatibility To build with the Telemetry SDKs, you will need an Insights insert key. ãã³ã New Relic has contributed the Telemetry SDK to the open source community under an Apache 2.0 license. Available libraries The Telemetry SDKs are open source software on GitHub. Use the language-specific GitHub links below to get library details, coding examples, and procedures for how to use the SDKs. We currently support the following libraries, with more to be created in the future: Language Library Supported New Relic data types Java Java library on GitHub Metrics Events Logs Traces Node/TypeScript NodeJS library on GitHub Metrics Traces Python Python library on GitHub Metrics Events Logs Traces Go Go library on Github Metrics Traces .NET .NET library on GitHub .NET package in NuGet Metrics Traces C C library on Github Traces Rust Rust library on Github Traces Ruby Ruby library on Github Gem on Rubygems Traces For more on the supported data types, see: An overview of New Relic data types Metrics: see the Metric API Logs: see the Log API Traces: see the Trace API Events: see the Event API Write your own Telemetry SDK or contribute to an existing one If you need a Telemetry SDK in a language that does not currently exist or want to contribute to an existing library, please see the Telemetry SDK specifications. Integrations built with the Telemetry SDKs To see the integrations built using our Telemetry SDKs, see Open source telemetry integrations. For all monitoring solutions, see our integrations page. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 417.1735,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Telemetry</em> <em>SDKs</em>: Report custom <em>telemetry</em> data",
        "sections": "<em>Telemetry</em> <em>SDKs</em>: Report custom <em>telemetry</em> data",
        "tags": "<em>Telemetry</em> Data Platform",
        "body": "Our <em>Telemetry</em> SDKs are an open source set of <em>API</em> client libraries that send data to the New Relic platform. Under the hood, these SDKs rely on our core data ingest APIs: the <em>Metric</em> <em>API</em>, <em>Trace</em> <em>API</em>, Log <em>API</em>, and <em>Event</em> <em>API</em>. We offer open-source integrations for <em>telemetry</em> tools like Prometheus, Istio"
      },
      "id": "6053aab6196a6717662d1616"
    },
    {
      "sections": [
        "Telemetry SDKs: Report custom telemetry data",
        "Tip",
        "Requirements and compatibility",
        "Available libraries",
        "Write your own Telemetry SDK or contribute to an existing one",
        "Integrations built with the Telemetry SDKs"
      ],
      "title": "Telemetry SDKs: Report custom telemetry data",
      "type": "docs",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Ingest APIs"
      ],
      "external_id": "4cc9878a6fd53a3602eedd978303457aab82ac4e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/ingest-manage-data/ingest-apis/telemetry-sdks-report-custom-telemetry-data/",
      "published_at": "2021-03-18T19:32:06Z",
      "updated_at": "2021-03-16T15:37:38Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Telemetry SDKs are an open source set of API client libraries that send data to the New Relic platform. Under the hood, these SDKs rely on our core data ingest APIs: the Metric API, Trace API, Log API, and Event API. We offer open-source integrations for telemetry tools like Prometheus, Istio, and OpenCensus that were created using our Telemetry SDKs. If those solutions (or our other integrations) don't meet your needs, you can use the Telemetry SDKs to create your own telemetry data solutions. Tip To use our Telemetry SDKs and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Requirements and compatibility To build with the Telemetry SDKs, you will need an Insights insert key. Tip New Relic has contributed the Telemetry SDK to the open source community under an Apache 2.0 license. Available libraries The Telemetry SDKs are open source software on GitHub. Use the language-specific GitHub links below to get library details, coding examples, and procedures for how to use the SDKs. We currently support the following libraries, with more to be created in the future: Language Library Supported New Relic data types Java Java library on GitHub Metrics Events Logs Traces Node/TypeScript NodeJS library on GitHub Metrics Traces Python Python library on GitHub Metrics Events Logs Traces Go Go library on Github Metrics Traces .NET .NET library on GitHub .NET package in NuGet Metrics Traces C C library on Github Traces Rust Rust library on Github Traces Ruby Ruby library on Github Gem on Rubygems Traces For more on the supported data types, see: An overview of New Relic data types Metrics: see the Metric API Logs: see the Log API Traces: see the Trace API Events: see the Event API Write your own Telemetry SDK or contribute to an existing one If you need a Telemetry SDK in a language that does not currently exist or want to contribute to an existing library, please see the Telemetry SDK specifications. Integrations built with the Telemetry SDKs To see the integrations built using our Telemetry SDKs, see Open source telemetry integrations. For all monitoring solutions, see our integrations page.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 376.9735,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Telemetry</em> <em>SDKs</em>: Report custom <em>telemetry</em> data",
        "sections": "<em>Telemetry</em> <em>SDKs</em>: Report custom <em>telemetry</em> data",
        "tags": "<em>Telemetry</em> Data Platform",
        "body": "Our <em>Telemetry</em> SDKs are an open source set of <em>API</em> client libraries that send data to the New Relic platform. Under the hood, these SDKs rely on our core data ingest APIs: the <em>Metric</em> <em>API</em>, <em>Trace</em> <em>API</em>, Log <em>API</em>, and <em>Event</em> <em>API</em>. We offer open-source integrations for <em>telemetry</em> tools like Prometheus, Istio"
      },
      "id": "603ea196196a670192a83d83"
    },
    {
      "sections": [
        "Get data into New Relic",
        "New Relic-built agents and integrations",
        "Agent APIs",
        "Telemetry SDKs",
        "APIs for sending metrics, traces, logs, and events",
        "New Relic One applications"
      ],
      "title": "Get data into New Relic",
      "type": "docs",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Get started"
      ],
      "external_id": "3fa26c40c4e8304f45c465d5565f6b428ba085da",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/get-data-new-relic/getting-started/introduction-new-relic-data-ingest-apis-sdks/",
      "published_at": "2021-03-18T23:04:45Z",
      "updated_at": "2021-03-16T18:25:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "There are many ways to get data into your New Relic account. Any New Relic user can use any of our data ingest methods to report data to our Telemetry Data Platform. New Relic-built agents and integrations When you enable New Relic solutions like APM, browser monitoring, mobile monitoring, infrastructure monitoring, or any of our wide array of integrations, by default you'll receive data from your monitored applications, hosts, services, or other entities. To browse all New Relic-built tools and solutions, see New Relic integrations. Agent APIs Some of our monitoring solutions come with APIs and/or SDKs that allow you to customize the data reported and how it reports. For more information, see the relevant product: APM agent APIs Browser API Mobile API Infrastructure monitoring: the Flex integration tool Telemetry SDKs If our more curated solutions don't work for you, our open source Telemetry SDKs let you build your own solution. These SDKs are language wrappers for our data-ingest APIs (below) that let you send telemetry data to New Relic without requiring install of an agent. APIs for sending metrics, traces, logs, and events If our more curated solutions don't work for you, we also have data-ingest APIs: Trace API Event API Metric API Log API To learn about the differences between these data types, see Data types. New Relic One applications You can build entirely custom applications that reside in New Relic One and make use of any data you want. You can use existing open source New Relic One apps, or share your own with the open source community. For details, see New Relic One applications.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 287.2953,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>APIs</em> for sending <em>metrics</em>, <em>traces</em>, logs, and <em>events</em>",
        "tags": "<em>Telemetry</em> Data Platform",
        "body": " also have data-ingest APIs: <em>Trace</em> <em>API</em> <em>Event</em> <em>API</em> <em>Metric</em> <em>API</em> Log <em>API</em> To learn about the differences between these data types, see Data types. New Relic One applications You can build entirely custom applications that reside in New Relic One and make use of any data you want. You can use existing open source New Relic One apps, or share your own with the open source community. For details, see New Relic One applications."
      },
      "id": "603eae7b196a671ea3a83dc7"
    },
    {
      "sections": [
        "Report custom event data",
        "Important",
        "Value from custom events and attributes",
        "Avoid rate limits",
        "Send custom events and attributes",
        "Extend data retention"
      ],
      "title": "Report custom event data",
      "type": "docs",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "9c787cb83d5d7d1722bcbec25f4eb8698f5be6e9",
      "image": "",
      "url": "https://docs.newrelic.com/docs/insights/event-data-sources/custom-events/report-custom-event-data/",
      "published_at": "2021-03-17T22:08:50Z",
      "updated_at": "2021-03-13T01:09:54Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important As of March 22, 2021, we are upgrading Insights to an improved web and mobile experience! All of your Insights URLs will be redirected automatically to the corresponding dashboards in New Relic One. For more details about this migration and how you can easily plan for this transition, see our Explorers Hub post. New Relic products report a variety of default event data to your account. This document explains how to report your own custom events and attributes. Value from custom events and attributes Event data is one of the fundamental New Relic data types. Events are reported by most New Relic products, and we give you several options for reporting your own custom events. By reporting custom events, you can create more useful and customized queries and charts of your data. This is a key part of optimizing how New Relic works for you. Avoid rate limits Reporting a large number of custom events and/or attributes can cause degraded query performance. It may also result in approaching or passing data collection rate limits. For optimal performance, first think about what data you want to analyze, and then create only the events and/or attributes necessary to meet these specific goals. Be aware of the following data and subscription requirements for inserting and accessing custom data: Ensure you follow limits and requirements around event/attribute data types, naming syntax, and size. The amount of data you have access to over time depends on your data retention policy. Send custom events and attributes Methods for sending custom events and attributes include: Source How to send custom data APM agent Use APM agent APIs to report custom events and custom attributes. Browser monitoring agent Add custom attributes to the PageView event via the Browser API call addCustomAttribute. Send PageAction event and attributes via Browser API. Forward APM agent custom attributes to PageView event. Event API To report custom events not associated with other New Relic products, use the Event API. Infrastructure monitoring agent Add custom attributes to default Infrastructure events. Use the Flex integration tool to report your own custom event data. Mobile monitoring agent Use the mobile agent API to send custom events and attributes. Synthetic monitoring Add custom attributes to the SyntheticCheck event via the $util.insights tools. For ways to report other types of custom data, see: Metric API Logs Trace API Extend data retention To learn how to extend how long events are retained in your account, see our documentation about event data retention.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 233.17657,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Report custom <em>event</em> data",
        "sections": "Report custom <em>event</em> data",
        "tags": "<em>Event</em> data sources",
        "body": " of custom data, see: <em>Metric</em> <em>API</em> Logs <em>Trace</em> <em>API</em> Extend data retention To learn how to extend how long events are retained in your account, see our documentation about <em>event</em> data retention."
      },
      "id": "6043f0b1196a67451d960f86"
    },
    {
      "sections": [
        "OpenTelemetry: Advanced configuration",
        "Change endpoints",
        "EU region",
        "ãã³ã",
        "Infinite Tracing"
      ],
      "title": "OpenTelemetry: Advanced configuration",
      "type": "docs-jp",
      "tags": [
        "Integrations",
        "Open source telemetry integrations",
        "OpenTelemetry"
      ],
      "external_id": "043565930b252f264f8ebdf2f54cb97a94a74dcd",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/integrations/open-source-telemetry-integrations/opentelemetry/opentelemetry-advanced-configuration/",
      "published_at": "2021-03-18T09:50:54Z",
      "updated_at": "2021-03-18T09:50:54Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In some cases, you may need to change the default settings related to OpenTelemetry. Here are some advanced configurations that are available. Change endpoints You can change the New Relic endpoints where you send your data. By default, New Relic OpenTelemetry exporters send data to these US data centers: Spans: https://trace-api.newrelic.com/trace/v1 Metrics: https://metric-api.newrelic.com/metric/v1 You may need to override these default endpoints to send data to the EU region or to use Infinite Tracing. EU region To send telemetry data to New Relicâs endpoints in the EU region, use the following: ãã³ã These URLs don't apply to Infinite Tracing Spans: https://trace-api.eu.newrelic.com/trace/v1 Metrics: https://metric-api.eu.newrelic.com/trace/v1 Infinite Tracing If you are setting up Infinite Tracing, you need to override the default span endpoint and send telemetry data to the New Relic trace observer: Follow the steps in Set up the trace observer to get the value for YOUR_TRACE_OBSERVER_URL. Use the value of YOUR_TRACE_OBSERVER_URL to configure your integration. Since you want New Relic to analyze all your traces, make sure to verify that your OpenTelemetry integrations use the AlwaysOn sampler. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 230.475,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Infinite <em>Tracing</em>",
        "tags": "Open source <em>telemetry</em> integrations",
        "body": " centers: Spans: https:&#x2F;&#x2F;<em>trace</em>-<em>api</em>.newrelic.com&#x2F;<em>trace</em>&#x2F;v1 Metrics: https:&#x2F;&#x2F;<em>metric</em>-<em>api</em>.newrelic.com&#x2F;<em>metric</em>&#x2F;v1 You may need to override these default endpoints to send data to the EU region or to use Infinite Tracing. EU region To send <em>telemetry</em> data to New Relicâs endpoints in the EU region, use"
      },
      "id": "6053227ee7b9d2760aa307d6"
    }
  ],
  "/build-apps/publish-deploy": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Add the NerdGraphQuery component to an application",
        "Add, query, and mutate data using NerdStorage",
        "Add a time picker to your app",
        "Create a \"Hello, World!\" application",
        "Build a custom visualization for dashboards",
        "Add a table to your app",
        "Create a custom map view",
        "Permissions for managing applications",
        "Publish and deploy apps",
        "Set up your development environment"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "Build apps",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "document_type": "page",
      "popularity": 1,
      "body": "You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the NerdGraphQuery component to an application 20 minutes The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a time picker to your app 20 min Add a time picker to a sample application Create a \"Hello, World!\" application 15 min Build a \"Hello, World!\" app and publish it to New Relic One Build a custom visualization for dashboards 15 min Create custom data views Add a table to your app 30 min Add a table to your New Relic One app Create a custom map view 30 min Build an app to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to apps Publish and deploy apps 30 min Start sharing the apps you build Set up your development environment 20 min Prepare to build apps and contribute to this site",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 221.55418,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build <em>apps</em>",
        "sections": "<em>Publish</em> and <em>deploy</em> <em>apps</em>",
        "body": " Create a custom map view 30 min Build an <em>app</em> to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to <em>apps</em> <em>Publish</em> and <em>deploy</em> <em>apps</em> 30 min Start sharing the <em>apps</em> you build Set up your development environment 20 min Prepare to build <em>apps</em> and contribute to this site"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "sections": [
        "Install New Relic Node.js agent in GAE flexible environment",
        "Use native deploy",
        "Build a custom runtime",
        "1. Set up the GAE project and install dependencies",
        "2. Configure your app.yaml",
        "3. Configure and deploy",
        "Optional: Disable health checks",
        "Get New Relic agent troubleshooting logs from GAE"
      ],
      "title": "Install New Relic Node.js agent in GAE flexible environment",
      "type": "docs",
      "tags": [
        "Agents",
        "Nodejs agent",
        "Hosting services"
      ],
      "external_id": "28df1194ff848b2c26e5c966843d2bf5f0adbf9e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/nodejs-agent/hosting-services/install-new-relic-nodejs-agent-gae-flexible-environment/",
      "published_at": "2021-03-18T18:38:29Z",
      "updated_at": "2021-03-11T07:59:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With New Relic's Node.js agent, you can monitor applications that reside in the Google App Engine (GAE) flexible environment. Adding New Relic to your GAE flex app gives you insight into the health and performance of your app and extends GAE with metrics you can view in APM and browser monitoring. This document explains how to add New Relic to your GAE flex app using either of these methods: Google App Engine's \"native mode\" installation with a standard GAE runtime Docker installation using a custom runtime Use native deploy To use Google App Engine's \"native mode\" installation with your Node.js app: Follow standard procedures to install New Relic's Node.js agent, including your license key. Be sure to save the newrelic module to the package.json file. Follow Google App Engine procedures for Node.js to create a new Cloud Platform project, create an App Engine application, and complete other prerequisites for the Google Cloud SDK. Optional: Set environment variables to configure the Node.js agent's GAE app.yaml file. Use the Google Cloud SDK's gcloud command line tool to deploy GAE apps. To deploy your Node.js app to your initialized GAE flexible environment, run the following command: gcloud --project new-relic-apm-nodejs app deploy Copy Google App Engine automatically includes your Node.js app's newrelic.js configuration file in the deployed package. Wait until the deployment completes, then view your GAE flex app data in the APM Summary page. Build a custom runtime See Google's documentation for building custom runtimes. This example describes how to add New Relic to your GAE flex app by building a custom runtime for Docker. You can deploy the app without any special configuration. For more information about deploying and configuring your Node.js app in the GAE flexible environment, see: Google App Engine's documentation for Node.js Google App Engine's tutorial to deploy a Node.js app 1. Set up the GAE project and install dependencies Follow standard procedures to install New Relic's Node.js agent, including your license key. Be sure to save the newrelic module to the package.json file. Follow Google App Engine procedures for Node.js to create a new Cloud Platform project, create an App Engine application, and complete other prerequisites for the Google Cloud SDK. The Google Cloud SDK provides the gcloud command line tool to manage and deploy GAE apps. 2. Configure your app.yaml The app.yaml configuration file is required for a GAE flexible environment app with a custom runtime. At a minimum, make sure it contains: runtime: custom env: flex Copy Optional: Set environment variables. 3. Configure and deploy The Dockerfile defines the Docker image to be built and is required for a GAE flexible environment app. To create the Dockerfile, build the container, and deploy your app, follow the GAE procedures for Node.js. Wait until the deployment completes. To view your GAE flex app data in New Relic, go to the APM Summary page. Optional: Disable health checks Google App Engine sends periodic health check requests to confirm that an instance has been successfully deployed, and to check that a running instance maintains a healthy status. A health check is an HTTP request to the URL /_ah/health. If you create a custom runtime, your app must be able to handle a large number of health check requests. Otherwise, your app data may not display correctly in New Relic APM. If you notice performance issues, disable GAE health checks. In your app.yaml, add: health_check: enable_health_check: False Copy Get New Relic agent troubleshooting logs from GAE Use these resources to troubleshoot your GAE flex environment app: To connect to the GAE instance and start a shell in the Docker container running your code, see Debugging an instance. To redirect New Relic Node.js agent logs to Stackdriver in the Cloud Platform Console, change the newrelic.js configuration file to: log_file_name: STDOUT Copy To view the logs, use the Cloud Platform Console's Log Viewer.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 54.03671,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use native <em>deploy</em>",
        "body": ". This document explains how to <em>add</em> New Relic to your GAE flex <em>app</em> using either of these methods: Google <em>App</em> Engine&#x27;s &quot;native mode&quot; installation with a standard GAE runtime Docker installation using a custom runtime Use native <em>deploy</em> To use Google <em>App</em> Engine&#x27;s &quot;native mode&quot; installation with your"
      },
      "id": "6043d8da28ccbc08242c60a6"
    },
    {
      "sections": [
        "Permissions for managing applications",
        "New Relic One pricing plan",
        "Original product-based pricing"
      ],
      "title": "Permissions for managing applications",
      "type": "developer",
      "tags": [
        "nerdpack manager",
        "permissions",
        "managing apps"
      ],
      "external_id": "c7f4c7fbd9d093d303c7f8268f8560ff9f435230",
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/permission-manage-apps/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2020-12-04T01:59:58Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn about permissions for subscribing to apps",
      "body": "When you create an app, you'll likely want to share it. From New Relic One's Apps page, you can subscribe to apps you create, publish, and deploy, and to other publicly available apps. You must have the Nerdpack manager role to subcribe accounts to apps. Read on to learn about permissions and versions. Permissions for managing applications The Nerdpack manager role is a New Relic add-on role. When you create a Nerdpack, you have the Nerdpack manager role for handling that Nerdpack. New Relic account administrators have the Nerdpack manager role automatically, and can subscribe their accounts to available Nerdpacks. User permissions vary depending on which pricing plan you are on. New Relic One pricing plan For accounts with New Relic One pricing, there are permissions differences for basic users and full users: Full users have the Nerdpack manager role and have full capabilities for creating and managing New Relic One applications, as well as accessing all types of applications in the New Relic One catalog. A basic user can develop and view their own local New Relic One apps, but they cannot: Subscribe other users to apps theyâve created. Access or manage apps in the New Relic One catalog. Access apps in the entity explorer sidebar. Original product-based pricing For accounts on our original product-based pricing, here are access details: Subscribe to publicly available applications To subscribe to publicly available applications, you must have the Nerdpack manager role. Nerdpack manager permissions are automatically assigned to New Relic account owners and admins and can be assigned to individual users. If you arenât an owner or admin, you can request Nerdpack manager permission, or ask your New Relic admin or owner to subscribe the apps to your account for you. You can add any of the publicly available applications to master accounts or separate sub-accounts on which you have the Nerdpack manager role, or to separate sub-accounts under a master account you own or administer. If you add the application to a master account, the access flows to all of its sub-accounts as well. Subscribe to applications that you create You also must have the Nerdpack manager role to subscribe the applications you create to accounts. Applications that you publish and deploy can only be subscribed to the master account that was used to publish them, or to its sub-accounts. This means you might want a New Relic admin to deploy your applications for you if they need to be available across the organization.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 50.557343,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Permissions for managing <em>applications</em>",
        "sections": "Permissions for managing <em>applications</em>",
        "info": "Learn about permissions for <em>subscribing</em> to <em>apps</em>",
        "tags": "managing <em>apps</em>",
        "body": "When you create an <em>app</em>, you&#x27;ll likely want to share it. From New Relic One&#x27;s <em>Apps</em> page, you can <em>subscribe</em> to <em>apps</em> you create, <em>publish</em>, and <em>deploy</em>, and to other publicly available <em>apps</em>. You must have the Nerdpack manager role to subcribe accounts to <em>apps</em>. Read on to learn about permissions"
      },
      "id": "5f45bf2864441ffb4dfdcdbb"
    },
    {
      "sections": [
        "Install the Python agent in GAE flexible environment",
        "Deploy using GAE's native support",
        "Build a custom runtime using Docker",
        "1. Set up the GAE project and install dependencies",
        "2. Configure your app.yaml",
        "3. Configure a Dockerfile",
        "4. Deploy Docker image to initialized GAE flexible environment",
        "Recommendation: Disable health checks",
        "Get agent troubleshooting logs from GAE"
      ],
      "title": "Install the Python agent in GAE flexible environment",
      "type": "docs",
      "tags": [
        "Agents",
        "Python agent",
        "Hosting services"
      ],
      "external_id": "263d4c02b1f69a2acfd5949eb949045802324be4",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/python-agent/hosting-services/install-python-agent-gae-flexible-environment/",
      "published_at": "2021-03-17T18:57:14Z",
      "updated_at": "2021-03-16T05:26:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With the Python agent, you can monitor applications that reside in the Google App Engine (GAE) flexible environment. Adding agent data to your GAE flex app gives you insight into the health and performance of your app and extends GAE with metrics you can view in New Relic One. This document explains how to add agent data to your GAE flex app using either of these methods: Google App Engine's \"native mode\" installation with a standard GAE runtime Docker installation using a custom runtime Deploy using GAE's native support When using Google App Engine \"native mode\" installation, you provide your app code and an app.yaml file. Google App Engine then deploys to a standard prebuilt Docker image. For example, to deploy with native support for a Flask/Django app: Follow standard procedures to install the Python agent, including your license key. Set the NEW_RELIC_CONFIG_FILE as an environment variable pointing to newrelic.ini. Once the agent and configuration file have been installed, the Python agent can automatically monitor applications that reside in the GAE flexible environment. Wait until the deployment completes, then view your GAE flex app data in the APM Summary page. Build a custom runtime using Docker See Google's documentation for building custom runtimes. This example describes how to add agent data to your GAE flex app by building a custom runtime for Docker. For more information about deploying and configuring your Node.js app in the GAE flexible environment, see: Our GAE flex examples on Github for Python Google App Engine's documentation for Python Google App Engine's tutorials to deploy a Python app 1. Set up the GAE project and install dependencies When building a custom runtime using Docker, set the NEW_RELIC_CONFIG_FILE as an environment variable pointing to the Dockerfile instead of to your Python app's newrelic.ini. Follow standard procedures to install the Python agent, including your license key. Follow Google App Engine procedures Python to create a Google Cloud Platform project, create an App Engine application, and complete other prerequisites for the Google Cloud SDK. The Google Cloud SDK also provides the gcloud command line tool to manage and deploy GAE apps. 2. Configure your app.yaml The app.yaml configuration file is required for a GAE flexible environment app with a custom runtime. At a minimum, make sure it contains: env: flex runtime: custom Copy 3. Configure a Dockerfile The Dockerfile defines the Docker image to be built and is required for a GAE flexible environment app. The following Dockerfile example shows the Python agent installed for an application served with gunicorn. These procedures are similar to the Python quick start guide. The Dockerfile will contain customer-specific code, including Python version, installation requirements, etc). # [START dockerfile] FROM gcr.io/google_appengine/python # Install the fortunes binary from the debian repositories. RUN apt-get update && apt-get install -y fortunes # Optional: Change the -p argument to use Python 2.7. RUN virtualenv /env -p python3.5 # Set virtualenv environment variables. This is equivalent to running # source /env/bin/activate. ENV VIRTUAL_ENV /env ENV PATH /env/bin:$PATH ADD requirements.txt /app/ RUN pip install -r requirements.txt ADD . /app/ CMD NEW_RELIC_CONFIG_FILE=newrelic.ini newrelic-admin run-program gunicorn -b :$PORT main:app # [END dockerfile] Copy 4. Deploy Docker image to initialized GAE flexible environment To deploy your Docker image to your initialized GAE flexible environment, run the following command: gcloud app deploy Copy Wait until the deployment completes. To open the app in the browser, run the following command: gcloud app browse Copy To view your GAE flex app data, go to the APM Summary page. Recommendation: Disable health checks Google App Engine sends periodic health check requests to confirm that an instance has been successfully deployed, and to check that a running instance maintains a healthy status. A health check is an HTTP request to the URL /_ah/health. If you create a custom runtime, your app must be able to handle a large number of health check requests. Otherwise, your app data may not display correctly in APM. Recommendation: Configure your app.yaml to disable health checks by adding: health_check: enable_health_check: False Copy Get agent troubleshooting logs from GAE Use these resources to troubleshoot your GAE flex environment app: To connect to the GAE instance and start a shell in the Docker container running your code, see Debugging an instance. To redirect Python agent logs to Stackdriver in the Cloud Platform Console, add the following statement to the newrelic.ini configuration: log_file = stderr Copy To view the logs, use the Cloud Platform Console's Log Viewer.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 42.095295,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Deploy</em> using GAE&#x27;s native support",
        "body": " explains how to <em>add</em> agent data to your GAE flex <em>app</em> using either of these methods: Google <em>App</em> Engine&#x27;s &quot;native mode&quot; installation with a standard GAE runtime Docker installation using a custom runtime <em>Deploy</em> using GAE&#x27;s native support When using Google <em>App</em> Engine &quot;native mode&quot; installation, you provide"
      },
      "id": "603e8457196a675796a83dcc"
    },
    {
      "sections": [
        "Install the Go agent in GAE flexible environment",
        "Important",
        "Build a custom runtime using Docker",
        "1. Set up the GAE project and install dependencies",
        "2. Configure your app.yaml",
        "3. Configure a Dockerfile",
        "4. Build a Docker image",
        "5. Deploy Docker image to initialized GAE flexible environment",
        "Recommendation: Disable health checks",
        "Get agent troubleshooting logs from GAE"
      ],
      "title": "Install the Go agent in GAE flexible environment",
      "type": "docs",
      "tags": [
        "Agents",
        "Go agent",
        "Installation"
      ],
      "external_id": "9d2ddffb83697c6191c0b6abaed8839516b3aa54",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/go-agent/installation/install-go-agent-gae-flexible-environment/",
      "published_at": "2021-03-18T05:27:10Z",
      "updated_at": "2021-03-11T07:58:24Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With our Go agent, you can monitor applications that reside in the Google App Engine (GAE) flexible environment. Adding New Relic to your GAE flex app gives you insight into the health and performance of your app and extends GAE with metrics you can view in APM and browser monitoring. Here we explain how to add New Relic to your GAE flex app by configuring a custom runtime, and give an example of deploying a Go app with Docker. Important The Go agent can run in a GAE flexible environment using a custom runtime. Due to limitations of other environments, do not use the GAE standard environment or Google App Engine's \"native mode\" installation. Build a custom runtime using Docker See Google's documentation for building custom runtimes. This example describes how to add New Relic to your GAE flex app by installing the Go agent, building a custom Go runtime for Docker, and deploying a golang application. For more information about deploying and configuring your Go app in the GAE flexible environment, see: Google App Engine's documentation for Go Google App Engine's tutorials to deploy a Go app 1. Set up the GAE project and install dependencies Follow standard procedures to install the Go agent for your specific app server, including your license key. Follow Google App Engine procedures for Go to create a new Cloud Platform project, create an App Engine application, download and install git, and complete other prerequisites for the Google Cloud SDK. The Google Cloud SDK provides the gcloud command line tool to manage and deploy GAE apps. 2. Configure your app.yaml The app.yaml configuration file is required for a GAE flexible environment app with a custom runtime. At a minimum, make sure it contains: runtime: custom env: flex Copy 3. Configure a Dockerfile The Dockerfile defines the Docker image to be built and is required for a GAE flexible environment app. The following Dockerfile example code defines the golang version used. FROM golang:1.8-onbuild CMD go run main.go Copy 4. Build a Docker image To build the Docker image, run the following command. Be sure to include the period at the end of the code, to indicate the current directory contains the build files. docker build --rm -t Docker-image-name . Copy 5. Deploy Docker image to initialized GAE flexible environment To deploy your Docker image to your initialized GAE flexible environment, run the following command: gcloud --project go-app-name app deploy Copy Wait until the deployment completes. To view your GAE flex app data in New Relic, go to the APM Summary page. Recommendation: Disable health checks Google App Engine sends periodic health check requests to confirm that an instance has been successfully deployed, and to check that a running instance maintains a healthy status. A health check is an HTTP request to the URL /_ah/health. If you create a custom runtime, your app must be able to handle a large number of health check requests. Otherwise, your app data may not display correctly in APM. Recommendation: Configure your app.yaml to disable health checks by adding: health_check: enable_health_check: False Copy Get agent troubleshooting logs from GAE Use these resources to troubleshoot your GAE flex environment app: To connect to the GAE instance and start a shell in the Docker container running your code, see GAE's documentation for debugging an instance. To redirect New Relic Go agent logs to Stackdriver in the Cloud Platform Console, change the newrelic.yml file to: log_file_name: STDOUT Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 41.30327,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "2. Configure your <em>app.yaml</em>",
        "body": " the gcloud command line tool to manage and <em>deploy</em> GAE <em>apps</em>. 2. Configure your <em>app</em>.yaml The <em>app</em>.yaml configuration file is required for a GAE flexible environment <em>app</em> with a custom runtime. At a minimum, make sure it contains: runtime: custom env: flex Copy 3. Configure a Dockerfile The Dockerfile"
      },
      "id": "6043cd7164441fc312378efe"
    }
  ],
  "/collect-data/custom-events": [
    {
      "sections": [
        "APM: Report custom events and attributes",
        "Important",
        "Data considerations",
        "Tip",
        "Record custom events and attributes",
        "C SDK",
        "Go",
        "Java",
        ".NET",
        "Node.js",
        "PHP",
        "Python",
        "Ruby",
        "Timestamps",
        "Limits and restricted characters",
        "Reserved words"
      ],
      "title": "APM: Report custom events and attributes",
      "type": "docs",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "9a5edf6068acc3b7187d217bd7932f0478e5467c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/insights/event-data-sources/custom-events/apm-report-custom-events-attributes/",
      "published_at": "2021-03-17T22:07:27Z",
      "updated_at": "2021-03-16T08:36:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important As of March 22, 2021, we are upgrading Insights to an improved web and mobile experience! All of your Insights URLs will be redirected automatically to the corresponding dashboards in New Relic One. For more details about this migration and how you can easily plan for this transition, see our Explorers Hub post. If you have APM, you can report custom event data. You can then query and visualize your data in New Relic. Data considerations New Relic agents send event data to New Relic as part of the normal harvest cycle every five seconds for agent versions supporting real time streaming. Sending a lot of events can increase the memory overhead of the agent. New Relic enforces an upper limit of 833 custom events every 5 seconds. Additionally, posts greater than 1MB (10^6 bytes) in size will not be recorded, regardless of the custom event limit. You can also send custom events using the Event API (without need for APM). However, be aware that custom events sent with the agent APIs are not compatible with high security mode. Tip For more information, check out New Relic Universityâs tutorial Adding custom data with the APM agent API. Or, go directly to the full online course Custom data with APM. Record custom events and attributes You can add your own custom APM events and attributes, which you can then use for querying and charting. This is one of several ways to report custom data. To record a custom event, follow the procedures for your New Relic language agent. To add custom attributes to APM events, you must first enable them for your New Relic APM agent, and then make an API call to record the attribute. Follow the agent-specific custom attribute procedures. When creating your own custom events and attributes, follow data requirements for: Size limits Attribute types Reserved words C SDK To add a custom event to apps monitored by the C SDK, start a transaction and use the newrelic_create_custom_event and newrelic_record_custom_event functions. For more information, see the Guide to using the C SDK API. You can then add custom attributes for your C SDK app. Go To add a custom event to apps monitored by the Go agent, use RecordCustomEvent. You can then add custom attributes for your Go app. Java Custom event collection is enabled by default in Java agent version 3.13.0 or higher. To send custom events, call recordCustomEvent. For example: Map<String, Object> eventAttributes = new HashMap<String, Object>(); NewRelic.getAgent().getInsights().recordCustomEvent(\"MyCustomEvent\", eventAttributes); Copy The first argument defines the name of your event type, and the second argument is a map with the attributes for your custom event. Event attributes must be strings or numbers. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can change the maximum number of events recorded by the Java agent via a configuration parameter in newrelic.yml. Specify the maximum number of events to record per minute as an integer. For example, if you want to send less than the default of 10000 events: custom_insights_events: max_samples_stored: 5000 Copy To disable custom events entirely, add the following to your newrelic.yml: custom_insights_events: enabled: false Copy You can then add custom attributes for your Java app. For Java agent versions prior to 4.1.0, use the following YAML configuration: custom_insights_events.enabled: true custom_insights_events.max_samples_stored: 5000 Copy .NET Custom event collection is enabled by default in .NET agent version 4.6.29.0 or higher. To send custom events, simply call RecordCustomEvent(). For example: var eventAttributes = new Dictionary<String, Object>(); NewRelic.Api.Agent.NewRelic.RecordCustomEvent('MyCustomEvent', eventAttributes); Copy The first argument defines the name of your event type, and the second argument is an IEnumerable with the attributes for your custom event. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can then add custom attributes for your .NET app. You can turn off custom events entirely by setting customEvents.enabled to false in newrelic.config. Node.js Custom event collection is enabled by default in Node.js agent version 1.15.0 or higher. To send custom events, simply call the relevant API. For example: recordCustomEvent(eventType, attributes) Copy Use recordCustomEvent to record an event-based metric, usually associated with a particular duration. The eventType must be an alphanumeric string less than 255 characters. The attributes must be an object of key and value pairs. The keys must be shorter than 255 characters, and the values must be string, number, or boolean. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can then add custom attributes for your Node.js app. To disable custom events entirely, add custom_insights_events.enabled: false to newrelic.js. PHP Custom event collection is enabled by default in PHP agent version 4.18 or higher. To send custom events, simply call the relevant API function. For example: newrelic_record_custom_event(\"WidgetSale\", array(\"color\"=>\"red\", \"weight\"=>12.5)); Copy The first argument defines the name of your event type, and the second argument is an array with the attributes for your custom event. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. By default, the maximum number of custom events recorded per minute is 10,000. This setting cannot be changed. You can then add custom attributes for your PHP app. To disable custom events entirely, add newrelic.custom_insights_events.enabled = false to your newrelic.ini and restart the agent. Python Custom event collection is enabled by default in Python agent version 2.60.0.46 or higher. To send custom events, simply call the relevant API. For example: newrelic.agent. record_custom_event (event_type, params, application=None) Copy The event_type defines the name (or type) of the custom event. Attributes of the custom event should be passed in as a dictionary via the params keyword argument. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For limits and restrictions on event_type and params, see our documentation about limits and restricted characters and reserved words If called outside of the context of a monitored web request or background task, the call will be ignored unless the application keyword argument is provided and an application object corresponding to the application against which the exception should be recorded is provided. A suitable application object can be obtained using the newrelic.agent.application() function. You can then add custom attributes for your Python app. To disable custom events entirely, set custom_insights_events.enabled to False in your newrelic.ini configuration file. Ruby Custom event collection is enabled by default in Ruby agent version 3.9.8.273 or higher. To send custom events, simply call the relevant API. For example: ::NewRelic::Agent.record_custom_event('WidgetSale', color: 'red', weight: 12.5) Copy The first argument defines the name of your event type, and the second argument is a hash with the attributes for your custom event. Ensure you limit the number of unique event type names that you create, and do not generate these names dynamically. For restrictions on event type names, see our documentation about limits and restricted characters and NRQL reserved words. You can change the maximum number of events recorded by the Ruby agent via a configuration parameter in newrelic.yml: Add custom_insights_events.max_samples_stored: to your configuration file. Specify the maximum number of events to record per minute as an integer. For example, if you want to be able to send up to 5000 events per minute, add: custom_insights_events.max_samples_stored: 5000 Copy You can then add custom attributes for your Ruby app. To disable custom events entirely, add custom_insights_events.enabled: false to newrelic.yml. Timestamps You may not specify a timestamp on events that are collected and recorded via the agent. The agent will automatically assign a timestamp to events based on when they are recorded via the API. Limits and restricted characters See Custom event data requirements for size limits, data types, and naming syntax requirements. Reserved words Before creating custom attributes, review New Relic's list of reserved terms used by NRQL. Otherwise unexpected results may occur.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 317.6142,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM: Report <em>custom</em> <em>events</em> and attributes",
        "sections": "APM: Report <em>custom</em> <em>events</em> and attributes",
        "tags": "<em>Custom</em> <em>events</em>",
        "body": " using the <em>Event</em> <em>API</em> (without need for APM). However, be aware that <em>custom</em> <em>events</em> sent with the <em>agent</em> <em>APIs</em> are not compatible with high security mode. Tip For more information, check out New Relic Universityâs tutorial Adding <em>custom</em> data with the APM <em>agent</em> <em>API</em>. Or, go directly to the full online course"
      },
      "id": "603ecece28ccbcc865eba7a0"
    },
    {
      "sections": [
        "APMï¼ã«ã¹ã¿ã ã¤ãã³ãã¨å±æ§ãã¬ãã¼ããã",
        "éè¦",
        "ãã¼ã¿ã«é¢ããæ¤è¨äºé ",
        "ãã³ã",
        "ã«ã¹ã¿ã ã¤ãã³ãã¨å±æ§ãè¨é²ãã",
        "C SDK",
        "Go",
        "Java",
        ".NET",
        "Node.js",
        "PHP",
        "Python",
        "Ruby",
        "ã¿ã¤ã ã¹ã¿ã³ã",
        "ä¸éå¤ããã³æå­ã®å¶é",
        "äºç´èª",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "APMï¼ã«ã¹ã¿ã ã¤ãã³ãã¨å±æ§ãã¬ãã¼ããã",
      "type": "docs-jp",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "6257c97cf8b40ece6798731e1ac10d57ec461176",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/insights/event-data-sources/custom-events/apm-report-custom-events-attributes/",
      "published_at": "2021-03-17T22:08:50Z",
      "updated_at": "2021-03-17T22:08:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "éè¦ 2021å¹´03æ22æ¥ã®æç¹ã§ãInsightsãã¢ããã°ã¬ã¼ããã¦ã¦ã§ãã¨ã¢ãã¤ã«ã®ä½é¨ãåä¸ãã¦ãã¾ããInsightsã®ãã¹ã¦ã®URLã¯ãNew Relic Oneã®å¯¾å¿ããããã·ã¥ãã¼ãã«èªåçã«ãªãã¤ã¬ã¯ãããã¾ãããã®ç§»è¡ã«ã¤ãã¦ãããã³ãã®ç§»è¡ãå®¹æã«è¨ç»ãããã¨ã®è©³ç´°ã«ã¤ãã¦ã¯ãExplorers Hubã®æç¨¿ããè¦§ãã ããã APMãä½¿ç¨ãã¦ããå ´åã¯ãã«ã¹ã¿ã ã¤ãã³ããã¼ã¿ãã¬ãã¼ãã§ãã¾ãããã®å¾ã«ãNew Relicã§ãã¼ã¿ã®ã¯ã¨ãªã¨å¯è¦åãå®è¡ã§ãã¾ãã ãã¼ã¿ã«é¢ããæ¤è¨äºé  New Relicã¨ã¼ã¸ã§ã³ãã¯ãéå¸¸ã®åéãµã¤ã¯ã«ã®ä¸ç°ã¨ãã¦ããªã¢ã«ã¿ã¤ã ã¹ããªã¼ãã³ã°ããµãã¼ãããã¨ã¼ã¸ã§ã³ããã¼ã¸ã§ã³ã«å¯¾ãã¦ã5ç§ããã«ã¤ãã³ããã¼ã¿ãNew Relicã«éä¿¡ãã¾ãã æ²¢å±±ã®ã¤ãã³ããéä¿¡ããã¨ãã¨ã¼ã¸ã§ã³ãã®ã¡ã¢ãªãªã¼ãã¼ããããå¢å ãããã¨ãããã¾ããNew Relicã¯ã5ç§ãã¨ã«833ä»¶ã®ã«ã¹ã¿ã ã¤ãã³ãã®ä¸éãå¼·å¶å®è¡ãã¾ããã¾ãããµã¤ãºã1MBï¼10^6ãã¤ãï¼ä»¥ä¸ã®æç¨¿ã¯ãã«ã¹ã¿ã ã¤ãã³ãã®å¶éã«é¢ãããè¨é²ããã¾ããã ã¤ãã³ãAPIãä½¿ç¨ãã¦ã«ã¹ã¿ã ã¤ãã³ããéä¿¡ãããã¨ãã§ãã¾ãï¼APMã¯ä¸è¦ï¼ããã ããã¨ã¼ã¸ã§ã³ãAPIã«ãã£ã¦éä¿¡ãããã«ã¹ã¿ã ã¤ãã³ãã¯ãé«ã»ã­ã¥ãªãã£ã¢ã¼ãã¨äºææ§ããªããã¨ã«æ³¨æãã¦ãã ããã ãã³ã è©³ããã¯ãNew Relic Universityã®Adding Custom Attributes with the Ruby Agent APIãã¥ã¼ããªã¢ã«ãåç§ãã¦ãã ãããã¾ãã¯ãå®å¨ãªãªã³ã©ã¤ã³ã³ã¼ã¹ã®APMã«ããã«ã¹ã¿ã ãã¼ã¿ã«ç´æ¥ã¢ã¯ã»ã¹ãã¦ãã ããã ã«ã¹ã¿ã ã¤ãã³ãã¨å±æ§ãè¨é²ãã APMã®ã«ã¹ã¿ã ã¤ãã³ãã¨å±æ§ã¯ç¬èªã«è¿½å ã§ãã¾ãããããã¯ãã¯ã¨ãªã¨ãã£ã¼ãä½æã«ä½¿ç¨ã§ãã¾ããããã¯ãã«ã¹ã¿ã ãã¼ã¿ãã¬ãã¼ãããããã¤ãã®æ¹æ³ã®ãã¡ã®1ã¤ã§ãã ã«ã¹ã¿ã ã¤ãã³ããè¨é²ããã«ã¯ããå©ç¨ã®New Relicè¨èªã¨ã¼ã¸ã§ã³ãã®æé ã«å¾ã£ã¦ãã ãããAPMã¤ãã³ãã«ã«ã¹ã¿ã å±æ§ãè¿½å ããã«ã¯ãã¾ãNew Relic APMã¨ã¼ã¸ã§ã³ãã«å¯¾ãã¦ããããæå¹ã«ãã¦ãããAPIãå¼ã³åºãã¦å±æ§ãè¨é²ããå¿è¦ãããã¾ããããããã®ã¨ã¼ã¸ã§ã³ãã®ã«ã¹ã¿ã å±æ§ã®æé ã«å¾ãã¾ãã ç¬èªã®ã«ã¹ã¿ã ã¤ãã³ãã¨å±æ§ãä½æããéã«ã¯ãä»¥ä¸ã®ãã¼ã¿è¦ä»¶ã«å¾ãã¾ãã ãµã¤ãºå¶é å±æ§ã¿ã¤ã äºç´èª C SDK C SDKã«ãã£ã¦ã¢ãã¿ã¼ãããã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã ã¤ãã³ããè¿½å ããã«ã¯ããã©ã³ã¶ã¯ã·ã§ã³ãéå§ããnewrelic_create_custom_eventããã³newrelic_record_custom_eventæ©è½ãä½¿ç¨ãã¾ããè©³ç´°ã«ã¤ãã¦ã¯ãC SDK APIä½¿ç¨ã¬ã¤ããåç§ãã¦ãã ããããã®å¾ã«ãC SDKã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã Go Goã¨ã¼ã¸ã§ã³ãã«ãã£ã¦ã¢ãã¿ã¼ãããã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã ã¤ãã³ããè¿½å ããã«ã¯ãRecordCustomEventãä½¿ç¨ãã¾ãããã®å¾ã«ãGoã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã Java ã«ã¹ã¿ã ã¤ãã³ãåéã¯ãJavaã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³3.13.0ä»¥ä¸ã§ã¯ããã©ã«ãã§æå¹ã«ãªã£ã¦ãã¾ããã«ã¹ã¿ã ã¤ãã³ããéä¿¡ããã«ã¯ãRecordCustomEventãå¼ã³åºãã¾ããä¾ãã°ï¼ Map<String, Object> eventAttributes = new HashMap<String, Object>(); NewRelic.getAgent().getInsights().recordCustomEvent(\"MyCustomEvent\", eventAttributes); ã³ãã¼ æåã®å¼æ°ã¯ã¤ãã³ãã¿ã¤ãã®ååãå®ç¾©ãã¦ããã2ã¤ç®ã®å¼æ°ã¯ã«ã¹ã¿ã ã¤ãã³ãã®å±æ§ãä¼´ããããã§ããã¤ãã³ãå±æ§ã¯æå­åã¾ãã¯æ°å¤ã«ããå¿è¦ãããã¾ããå¿ããä½æããä¸æã®ã¤ãã³ãã¿ã¤ãåã®æ°ãå¶éãã¦ãããããååãåçã«ä½æããªãããæ³¨æãã¦ãã ãããã¤ãã³ãã¿ã¤ãåã«å¯¾ããå¶éã«ã¤ãã¦ã¯ãå¶éããã³ç¦æ­¢æå­ã¨NRQLã®äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã Javaã¨ã¼ã¸ã§ã³ãã«ãã£ã¦è¨é²ãããã¤ãã³ãã®æå¤§æ°ã¯ãnewrelic.ymlã®è¨­å®ãã©ã¡ã¼ã¿ã¼ã§å¤æ´ã§ãã¾ãã 1åãããã«è¨é²ããã¤ãã³ãã®æå¤§æ°ãæ´æ°ã§æå®ãã¦ãã ããããã¨ãã°ãããã©ã«ãæ°ã§ãã10000ã¤ãã³ããããå°ãªãæ°ãéä¿¡ããå ´åã¯: custom_insights_events: max_samples_stored: 5000 ã³ãã¼ ã«ã¹ã¿ã ã¤ãã³ããå®å¨ã«ç¡å¹ã«ããã«ã¯ãnewrelic.ymlã«ä»¥ä¸ãè¿½å ãã¾ãã custom_insights_events: enabled: false ã³ãã¼ ãã®å¾ã«ãJavaã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã Javaã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³ã4.1.0ããå¤ããã®ã«é¢ãã¦ã¯ãä»¥ä¸ã®YAMLè¨­å®ãä½¿ç¨ãã¦ãã ãã: custom_insights_events.enabled: true custom_insights_events.max_samples_stored: 5000 ã³ãã¼ .NET ã«ã¹ã¿ã ã¤ãã³ãåéã¯ãNETã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³4.6.29.0ä»¥ä¸ã«ããã¦ããã©ã«ãã§æå¹ã«ãªã£ã¦ãã¾ããã«ã¹ã¿ã ã¤ãã³ããéä¿¡ããã«ã¯ãåã«RecordCustomEvent()ãå¼ã³åºãã¾ããä¾ãã°ï¼ var eventAttributes = new Dictionary<String, Object>(); NewRelic.Api.Agent.NewRelic.RecordCustomEvent('MyCustomEvent', eventAttributes); ã³ãã¼ æåã®å¼æ°ã¯ã¤ãã³ãã¿ã¤ãã®ååãå®ç¾©ãã¦ããã2ã¤ç®ã®å¼æ°ã¯ãå©ç¨ã®ã«ã¹ã¿ã ã¤ãã³ãã®å±æ§ãä¼´ãIEnumerableã§ããå¿ããä½æããä¸æã®ã¤ãã³ãã¿ã¤ãåã®æ°ãå¶éãã¦ãããããååãåçã«ä½æããªãããæ³¨æãã¦ãã ãããã¤ãã³ãã¿ã¤ãåã«å¯¾ããå¶éã«ã¤ãã¦ã¯ãå¶éããã³ç¦æ­¢æå­ã¨NRQLã®äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã ãã®å¾ã«ã.NETã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã ã«ã¹ã¿ã ã¤ãã³ãã¯ãnewrelic.configã§customEvents.enabledãfalseã«è¨­å®ãããã¨ã«ãã£ã¦å®å¨ã«ãªãã«ã§ãã¾ãã Node.js ã«ã¹ã¿ã ã¤ãã³ãåéã¯ãNode.jsã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³1.15.0ä»¥ä¸ã§ã¯ããã©ã«ãã§æå¹ã«ãªã£ã¦ãã¾ããã«ã¹ã¿ã ã¤ãã³ããéä¿¡ããã«ã¯ãé¢é£ã®APIãå¼ã³åºãã ãã§ããä¾ãã°ï¼ recordCustomEvent(eventType, attributes) ã³ãã¼ recordCustomEventãä½¿ç¨ãã¦ãã¤ãã³ããã¼ã¹ã®ã¡ããªãã¯ãè¨é²ãã¾ããéå¸¸ãããã¯ç¹å®ã®æéã¨é¢é£ãã¦ãã¾ããeventTypeã¯ã255æå­æªæºã®è±æ°æå­åã§ãªãã¦ã¯ããã¾ãããå±æ§ã¯ãã­ã¼/å¤ãã¢ã®ãªãã¸ã§ã¯ãã§ãªãã¦ã¯ããã¾ãããã­ã¼ã¯255æå­æªæºã§ãªãã¦ã¯ãªããªãã»ããå¤ã¯æå­åãæ°å­ããããã¯ãã¼ã«å¤ã§ãªãã¦ã¯ããã¾ãããã¤ãã³ãã¿ã¤ãåã«å¯¾ããå¶éã«ã¤ãã¦ã¯ãå¶éããã³ç¦æ­¢æå­ã¨NRQLã®äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã ãã®å¾ã«ãNode.jsã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã ã«ã¹ã¿ã ã¤ãã³ããå®å¨ã«ç¡å¹åããã«ã¯ãcustom_insights_events.enabled: falseãnewrelic.jsã«è¿½å ãã¾ãã PHP ã«ã¹ã¿ã ã¤ãã³ãåéã¯ãPHPã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³4.18ä»¥ä¸ã§ã¯ããã©ã«ãã§æå¹ã«ãªã£ã¦ãã¾ããã«ã¹ã¿ã ã¤ãã³ããéä¿¡ããã«ã¯ãé¢é£ã®APIé¢æ°ãå¼ã³åºãã ãã§ããä¾ãã°ï¼ newrelic_record_custom_event(\"WidgetSale\", array(\"color\"=>\"red\", \"weight\"=>12.5)); ã³ãã¼ æåã®å¼æ°ã¯ã¤ãã³ãã¿ã¤ãã®ååãå®ç¾©ãã¦ããã2ã¤ç®ã®å¼æ°ã¯ãå©ç¨ã®ã«ã¹ã¿ã ã¤ãã³ãã®å±æ§ãä¼´ãéåã§ããå¿ããä½æããä¸æã®ã¤ãã³ãã¿ã¤ãåã®æ°ãå¶éãã¦ãããããååãåçã«ä½æããªãããæ³¨æãã¦ãã ãããã¤ãã³ãã¿ã¤ãåã«å¯¾ããå¶éã«ã¤ãã¦ã¯ãå¶éããã³ç¦æ­¢æå­ã¨NRQLã®äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã ããã©ã«ãã§ã¯ã1åãããã«è¨é²ãããã«ã¹ã¿ã ã¤ãã³ãã®æ°ã¯10,000ã§ãããã®è¨­å®ã¯å¤æ´ã§ãã¾ããã ãã®å¾ã«ãPHPã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã ã«ã¹ã¿ã ã¤ãã³ããå®å¨ã«ç¡å¹åããã«ã¯ãnewrelic.custom_insights_events.enabled = falseãnewrelic.iniã«è¿½å ããã¨ã¼ã¸ã§ã³ããåèµ·åãã¾ãã Python ã«ã¹ã¿ã ã¤ãã³ãåéã¯ãPythonã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³2.60.0.46ä»¥ä¸ã§ã¯ããã©ã«ãã§æå¹ã«ãªã£ã¦ãã¾ããã«ã¹ã¿ã ã¤ãã³ããéä¿¡ããã«ã¯ãé¢é£ã®APIãå¼ã³åºãã ãã§ããä¾ãã°ï¼ newrelic.agent. record_custom_event (event_type, params, application=None) ã³ãã¼ event_typeã¯ãã«ã¹ã¿ã ã¤ãã³ãã®ååï¼ã¾ãã¯ã¿ã¤ãï¼ãå®ç¾©ãã¾ããã«ã¹ã¿ã ã¤ãã³ãã®å±æ§ã¯ãparamsã­ã¼ã¯ã¼ãå¼æ°ãéãã¦ãã£ã¯ã·ã§ããªã¨ãã¦æ¸¡ãããå¿è¦ãããã¾ããå¿ããä½æããä¸æã®ã¤ãã³ãã¿ã¤ãåã®æ°ãå¶éãã¦ãããããååãåçã«ä½æããªãããæ³¨æãã¦ãã ãããevent_typeã¨paramsã«å¯¾ããå¶éã¨å¶ç´ã«ã¤ãã¦ã¯ãå¶éã¨ç¦æ­¢æå­ã¨äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã ã³ã¼ã«ãç£è¦å¯¾è±¡Webãªã¯ã¨ã¹ããã¾ãã¯ããã¯ã°ã©ã¦ã³ãã¿ã¹ã¯ã¨ã¯é¢ä¿ãªãå¼ã³åºãããå ´åããã®ã³ã¼ã«ã¯ç¡è¦ããã¾ãããapplicationã­ã¼ã¯ã¼ãå¼æ°ãæä¾ããã¦ããããã¤ä¾å¤ãè¨é²ãããã¹ãã¢ããªã±ã¼ã·ã§ã³ã«å¯¾å¿ããã¢ããªã±ã¼ã·ã§ã³ãªãã¸ã§ã¯ããæä¾ããã¦ããå ´åãé¤ãã¾ããé©åãªã¢ããªã±ã¼ã·ã§ã³ãªãã¸ã§ã¯ãã¯ãnewrelic.agent.application()é¢æ°ãä½¿ç¨ãã¦åå¾ã§ãã¾ãã ãã®å¾ã«ãPythonã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã ã«ã¹ã¿ã ã¤ãã³ããå®å¨ã«ç¡å¹åããã«ã¯ãnewrelic.iniè¨­å®ãã¡ã¤ã«åã§custom_insights_events.enabledãFalseã«è¨­å®ãã¾ãã Ruby ã«ã¹ã¿ã ã¤ãã³ãåéã¯ãRubyã¨ã¼ã¸ã§ã³ãã®ãã¼ã¸ã§ã³3.9.8.273ä»¥ä¸ã§ã¯ããã©ã«ãã§æå¹ã«ãªã£ã¦ãã¾ããã«ã¹ã¿ã ã¤ãã³ããéä¿¡ããã«ã¯ãé¢é£ã®APIãå¼ã³åºãã ãã§ããä¾ãã°ï¼ ::NewRelic::Agent.record_custom_event('WidgetSale', color: 'red', weight: 12.5) ã³ãã¼ æåã®å¼æ°ã¯ã¤ãã³ãã¿ã¤ãã®ååãå®ç¾©ãã¦ããã2ã¤ç®ã®å¼æ°ã¯ãå©ç¨ã®ã«ã¹ã¿ã ã¤ãã³ãã®å±æ§ãä¼´ãããã·ã¥ã§ããå¿ããä½æããä¸æã®ã¤ãã³ãã¿ã¤ãåã®æ°ãå¶éãã¦ãããããååãåçã«ä½æããªãããæ³¨æãã¦ãã ãããã¤ãã³ãã¿ã¤ãåã«å¯¾ããå¶éã«ã¤ãã¦ã¯ãå¶éããã³ç¦æ­¢æå­ã¨NRQLã®äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã Javaã¨ã¼ã¸ã§ã³ãã«ãã£ã¦è¨é²ãããã¤ãã³ãã®æå¤§æ°ã¯ãnewrelic.ymlã®è¨­å®ãã©ã¡ã¼ã¿ã¼ã§å¤æ´ã§ãã¾ãï¼ custom_insights_events.max_samples_stored:ãè¿½å ãã¾ããè¨­å®ãã¡ã¤ã«ã«è¿½å ãã¾ãã 1åãããã«è¨é²ããã¤ãã³ãã®æå¤§æ°ãæ´æ°ã§æå®ãã¦ãã ãããä¾ãã°ã1åãããã«æå¤§ã§5000ã®ã¤ãã³ããéä¿¡ã§ããããã«ããã«ã¯ãä»¥ä¸ãè¿½å ãã¦ãã ãã: custom_insights_events.max_samples_stored: 5000 ã³ãã¼ ãã®å¾ã«ãRubyã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ãã ã«ã¹ã¿ã ã¤ãã³ããå®å¨ã«ç¡å¹åããã«ã¯ãcustom_insights_events.enabled: falseãnewrelic.ymlã«è¿½å ãã¾ãã ã¿ã¤ã ã¹ã¿ã³ã ã¨ã¼ã¸ã§ã³ããä»ãã¦åéããã³è¨é²ãããã¤ãã³ãã«ã¯ãã¿ã¤ã ã¹ã¿ã³ããæå®ãããã¨ãã§ãã¾ãããã¨ã¼ã¸ã§ã³ãã¯ãã¤ãã³ããAPIãä»ãã¦è¨é²ãããæéãåºã«ãèªåçã«ã¿ã¤ã ã¹ã¿ã³ããå²ãå½ã¦ã¾ãã ä¸éå¤ããã³æå­ã®å¶é ãµã¤ãºå¶éããã¼ã¿ã¿ã¤ããããã¦æ§ææ¡ä»¶ã®å½åã«é¢ãã¦ã¯ã ã«ã¹ã¿ã ã¤ãã³ãã®ãã¼ã¿è¦ä»¶ ãåç§ãã¦ãã ããã äºç´èª ã«ã¹ã¿ã å±æ§ãä½æããåã«ãNew Relicã®NRQLãä½¿ç¨ããäºç´èªã®ãªã¹ãããç¢ºèªãã ãããç¢ºèªãè¡ããªãå ´åãäºæããªãçµæãçºçããå¯è½æ§ãããã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 312.62842,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Custom</em> <em>events</em>",
        "body": ", Object&gt;(); NewRelic.<em>Api.Agent.NewRelic.RecordCustomEvent</em>(&#x27;My<em>CustomEvent</em>&#x27;, <em>event</em>Attributes); ã³ãã¼ æåã®å¼æ°ã¯ã¤ãã³ãã¿ã¤ãã®ååãå®ç¾©ãã¦ããã2ã¤ç®ã®å¼æ°ã¯ãå©ç¨ã®ã«ã¹ã¿ã ã¤ãã³ãã®å±æ§ãä¼´ãIEnumerableã§ããå¿ããä½æããä¸æã®ã¤ãã³ãã¿ã¤ãåã®æ°ãå¶éãã¦ãããããååãåçã«ä½æããªãããæ³¨æãã¦ãã ãããã¤ãã³ãã¿ã¤ãåã«å¯¾ããå¶éã«ã¤ãã¦ã¯ãå¶éããã³ç¦æ­¢æå­ã¨NRQLã®äºç´èªã«é¢ãããã­ã¥ã¡ã³ãããè¦§ãã ããã ãã®å¾ã«ã.NETã¢ããªã±ã¼ã·ã§ã³ã«ã«ã¹ã¿ã å±æ§ãè¿½å ã§ãã¾ã"
      },
      "id": "60527df2e7b9d28682a3079f"
    },
    {
      "sections": [
        "ãã¼ã¿è¦ä»¶ã¨ã«ã¹ã¿ã ã¤ãã³ããã¼ã¿ã®å¶é",
        "éè¦",
        "åºæ¬è¦ä»¶",
        "äºç´èª",
        "ã¤ãã³ãã¿ã¤ãã®ä¸é",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ãã¼ã¿è¦ä»¶ã¨ã«ã¹ã¿ã ã¤ãã³ããã¼ã¿ã®å¶é",
      "type": "docs-jp",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "6ff2608d2e4ac33c3b0a279637a1320dbd270905",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/insights/event-data-sources/custom-events/data-requirements-limits-custom-event-data/",
      "published_at": "2021-03-17T22:07:26Z",
      "updated_at": "2021-03-17T22:07:26Z",
      "document_type": "page",
      "popularity": 1,
      "body": "éè¦ 2021å¹´03æ22æ¥ã®æç¹ã§ãInsightsãã¢ããã°ã¬ã¼ããã¦ã¦ã§ãã¨ã¢ãã¤ã«ã®ä½é¨ãåä¸ãã¦ãã¾ããInsightsã®ãã¹ã¦ã®URLã¯ãNew Relic Oneã®å¯¾å¿ããããã·ã¥ãã¼ãã«èªåçã«ãªãã¤ã¬ã¯ãããã¾ãããã®ç§»è¡ã«ã¤ãã¦ãããã³ãã®ç§»è¡ãå®¹æã«è¨ç»ãããã¨ã®è©³ç´°ã«ã¤ãã¦ã¯ãExplorers Hubã®æç¨¿ããè¦§ãã ããã ãã®ãã­ã¥ã¡ã³ãã«ã¯ãã«ã¹ã¿ã ã¤ãã³ãããã³é¢é£ããå±æ§ãæ¿å¥ãã¦ä½¿ç¨ããããã®ä¸è¬çãªè¦ä»¶ã¨ã«ã¼ã«ãå«ã¾ãã¾ããä½¿ç¨ããã¡ã½ããã«åºã¥ãã¦ãè¿½å ã®è¦ä»¶ãé©ç¨ãããå ´åãããã¾ãã ã«ã¹ã¿ã ã¤ãã³ãã¯ãä»¥ä¸ã®æ¹æ³ãä½¿ç¨ãã¦New Relicã«ã¬ãã¼ãã§ãã¾ãã APMã¨ã¼ã¸ã§ã³ãã®API Event APIï¼Event APIãä½¿ç¨ããå ´åã¯ãè¿½å ã®è¦ä»¶ãããã¾ãï¼ ãã©ã¦ã¶ç£è¦ã¨ã¼ã¸ã§ã³ãã®APIï¼ã«ã¹ã¿ã PageActionã¤ãã³ãã«ã¯ãè¿½å ã®è¦ä»¶ãããã¾ãï¼ ã¢ãã¤ã«ç£è¦SDK åºæ¬è¦ä»¶ ã«ã¹ã¿ã ã¤ãã³ãããã³å±æ§ãã¬ãã¼ãããéã¯ãå¯¾å¿ãããã¼ã¿åãå½åæ§æããµã¤ãºã«é¢ããä»¥ä¸ã®åºæ¬è¦ä»¶ã«å¾ã£ã¦ãã ããï¼ è¦ä»¶ èª¬æ ãã¤ã­ã¼ã æå¤§ãµã¤ãºã¾ãã¯é·ãï¼POSTãããæå¤§ã§ 1MBï¼10^6ãã¤ãï¼ãå§ç¸®ã®ä½¿ç¨ãå¼·ãæ¨å¥¨ãã¾ãã ãã¤ã­ã¼ãã¯ UTF-8 ã¨ãã¦ã¨ã³ã³ã¼ãããå¿è¦ãããã¾ãã ã¤ãã³ãAPIã«ãã¾ããHTTPã®ã¬ã¼ãå¶éãããã¾ãã å±æ§ã®ãã¼ã¿ã¿ã¤ã å±æ§å¤ã¯ãæå­åããããã¯æ´æ°åããã­ã¼ãã®ã©ããã«ãªãã¾ãã å±æ§å¤ã«æ¥ä»æå ±ãå«ã¾ãã¦ããå ´åãInsightsã®ãã¼ã¿ãã©ã¼ããã¿ã¼ãä»ãã¦ãããæªãã©ã¼ãããã®Unixã¿ã¤ã ã¹ã¿ã³ãã¨ãã¦å®ç¾©ãã¾ãï¼ç§ãããã¯ããªç§ï¼ã å±æ§ãµã¤ãº æå¤§nameãµã¤ãºï¼255ãã¤ãã æå¤§å±æ§valueãµã¤ãºï¼ ã¨ã¼ã¸ã§ã³ããä»ãã¦éä¿¡ãããã«ã¹ã¿ã å±æ§ï¼255ãã¤ã ã¤ãã³ãAPIãä»ãã¦éä¿¡ãããã«ã¹ã¿ã ã¤ãã³ãã«æ·»ä»ãããå±æ§ï¼4096æå­ ã¤ãã³ããããã®æå¤§åè¨å±æ§æ°ï¼254ãä¾å¤: APMã¨ã¼ã¸ã§ã³ãAPIãä½¿ç¨ããå ´åãæå¤§æ°ã¯64ã«ãªãã¾ãã ã¤ãã³ãã¿ã¤ããããã®æå¤§åè¨å±æ§æ°ï¼48,000. éè¦ ãã£ã¼ãã¯ãå±æ§å¤ã®æåã®255æå­ã®ã¿ãè¡¨ç¤ºãã¾ããå®å¨ãªå±æ§å¤ã«ã¤ãã¦ã¯ãJSONãã£ã¼ãã¿ã¤ããããã¯ã¯ã¨ãªAPIãä½¿ç¨ããã¾ãã å½åæ§æ å±æ§åã«ã¯ãè±æ°å­ãã³ã­ã³ï¼:ï¼ãããªãªãï¼.ï¼ãã¢ã³ãã¼ã¹ã³ã¢ï¼_ï¼ã®çµã¿åãããä½¿ç¨ã§ãã¾ãã ã¤ãã³ãã¿ã¤ãã«ã¯ï¼eventTypeå±æ§ãä½¿ç¨ï¼ãè±æ°å­ãã³ã­ã³ï¼:ï¼ãã¢ã³ãã¼ã¹ã³ã¢ï¼_ï¼ã®çµã¿åãããä½¿ç¨ã§ãã¾ãã NRQLç¨ã®äºç´èªã¯ä½¿ç¨ããªãã§ãã ããã Nullå¤ ãã¼ã¿ãã¼ã¹ã¯ãnullå¤ã®ãã¼ã¿ãä¸åä¿å­ãã¾ããã äºç´èª ã¤ãã³ãããã³å±æ§ã®ååã«ã¯ãä»¥ä¸ã®äºç´å¾ãä½¿ç¨ããªãã§ãã ããããããä½¿ç¨ããã¨ãäºæããªãçµæãä¼´ãå¯è½æ§ãããã¾ãã éè¦ ããã¯åæ¬çãªãªã¹ãã§ã¯ããã¾ãããä¸è¬ã«ãä»å¾ã®New Relicã®æ©è½ã¨ã®è¡çªãçºçããªãããã«ãMySQLã®äºç´èªã®ä½¿ç¨ã¯é¿ãã¦ãã ããã ã­ã¼ã¯ã¼ã èª¬æ accountId äºç´æ¸ã¿ã®å±æ§åã§ãããã®ååãå«ã¾ãã¦ããå ´åã¯ãåãè¾¼ã¿ä¸­ã«ç ´æ£ããã¾ãã appId å¤ã¯æ´æ°ã§ãªãã¦ã¯ããã¾ãããæ´æ°ã§ã¯ãªãå ´åãå±æ§åã¨å¤ã¯åãè¾¼ã¿ä¸­ã«ç ´æ£ããã¾ãã eventType New Relicã«ãã£ã¦ä¿ç®¡ããã¦ããã¤ãã³ãã¿ã¤ããéå¸¸ãNew Relicã¨ã¼ã¸ã§ã³ãããã³ã¹ã¯ãªããã¯ããããeventTypeã¨ãã¦ã¬ãã¼ããã¾ããè±æ°å­ãã³ã­ã³ï¼:ï¼ãã¢ã³ãã¼ã¹ã³ã¢ï¼_ï¼ã®çµã¿åãããä½¿ç¨ã§ãã¾ããå¿ããç¦æ­¢ãããeventTypeå¤ã¨eventTypeå¶éã«ã¤ãã¦ç¢ºèªãã¦ãã ããã ç¦æ­¢ãããeventTypeå¤ eventTypeã®å¤ã«ã¯ãä»¥ä¸ãä½¿ç¨ããªãã§ãã ããï¼ MetricãMetricRawãMetric[0-9]ã®ããªãã£ãã¯ã¹ã®ä»ããæå­åï¼Metric2ã¾ãã¯Metric1Minuteãªã©ï¼ãä½¿ç¨ããªãã§ãã ããã Public_ ããã³ Public_ ã®ããªãã£ãã¯ã¹ã®ä»ããæå­åã ããããã¤ãã³ãã¿ã¤ãã¯ãNew Relicã«ããä½¿ç¨åãã«äºç´æ¸ã¿ã¨ãªã£ã¦ãã¾ãããã®eventTypeå¤ã§æ¸¡ãããã¤ãã³ãã¯æ¾æ£ããã¾ãã timestamp Unixã¨ããã¯ã®ã¿ã¤ã ã¹ã¿ã³ãã§ãªããã°ãªãã¾ãããã¿ã¤ã ã¹ã¿ã³ãã¯ãç§æ°ãããªç§æ°ã§å®ç¾©ã§ãã¾ãããµã¼ãã¼ã®ç¾å¨æå»ããåå¾1æ¥ä»¥åï¼24æéä»¥åï¼ã§ãªãã¦ã¯ããã¾ããã ã­ã°è»¢éè¦å æ¬¡ã®ã­ã¼ã¯ãInfrastructureã¨ã¼ã¸ã§ã³ãã®ã­ã°è»¢éæ©è½ã«ããäºç´ããã¾ããentity.guidãã­ã°ããã¹ãåãplugin.typeãfb.inputãä½¿ç¨ããã¨ãåãè¾¼ã¿ä¸­ã«ç ´æ£ãããã­ã°ã«è­¦åãè¿½å ããã¾ãã NRQLæ§æè¦å ãããä»ãå±æ§ãå«ãå±æ§åã«ãNRQLæ§æè¦åãä½¿ç¨ããå¿è¦ãããå ´åã¯ãããã¯ã¯ã©ã¼ãã§å²ãå¿è¦ãããã¾ããä¾ï¼`LIMIT`ã`consumer.offset`ããããè¡ããªãå ´åã¯ãããããäºç´èªã®ä½¿ç¨ãé¿ãã¦ãã ããï¼ agoãandãasãautoã beginãbegintimeã compareã dayãdaysã endãendtimeãexplainã facetãfromã hourãhoursã inãisã likeãlimitã minuteãminutesãmonthãmonthsã notãnullã offsetãorã rawã secondãsecondsãselectãsinceã timeseriesã untilã weekãweeksãwhereãwith ã¤ãã³ãã¿ã¤ãã®ä¸é ç¾å¨ã®åè¨eventTypeå¤ã®ä¸éã¯ãæä¸ã®24æéä»¥åã®ãµãã¢ã«ã¦ã³ãããã250ã¨ãªã£ã¦ãã¾ããã¦ã¼ã¶ã¼ãä¸éãè¶ããå ´åãNew Relicã¯ãã¼ã¿ããã£ã«ã¿ãªã³ã°ãããã¯æ¾æ£ããå¯è½æ§ãããã¾ããã¤ãã³ãã¿ã¤ãã«ã¯ãä»¥ä¸ãå«ã¾ãã¾ãï¼ New Relicã¨ã¼ã¸ã§ã³ãã®ããã©ã«ãã¤ãã³ã New Relicã¨ã¼ã¸ã§ã³ãã®ã«ã¹ã¿ã ã¤ãã³ã Insightsã®ã«ã¹ã¿ã ã¤ãã³ãã¤ã³ãµã¼ã¿ã¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 312.6046,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Custom</em> <em>events</em>",
        "body": "ã¬ãã¼ãã§ãã¾ãã APMã¨ã¼ã¸ã§ã³ãã®<em>API</em> <em>Event</em> <em>API</em>ï¼<em>Event</em> <em>API</em>ãä½¿ç¨ããå ´åã¯ãè¿½å ã®è¦ä»¶ãããã¾ãï¼ ãã©ã¦ã¶ç£è¦ã¨ã¼ã¸ã§ã³ãã®<em>API</em>ï¼ã«ã¹ã¿ã PageActionã¤ãã³ãã«ã¯ãè¿½å ã®è¦ä»¶ãããã¾ãï¼ ã¢ãã¤ã«ç£è¦SDK åºæ¬è¦ä»¶ ã«ã¹ã¿ã ã¤ãã³ãããã³å±æ§ãã¬ãã¼ãããéã¯ãå¯¾å¿ãããã¼ã¿åãå½åæ§æããµã¤ãºã«é¢ããä»¥ä¸ã®åºæ¬è¦ä»¶ã«å¾ã£ã¦ãã ããï¼ è¦ä»¶ èª¬æ ãã¤ã­ã¼ã æå¤§ãµã¤ãºã¾ãã¯é·ãï¼POSTãããæå¤§ã§ 1MBï¼10^6ãã¤ãï¼ãå§ç¸®ã®ä½¿ç¨ãå¼·ãæ¨å¥¨ãã¾ãã ãã¤ã­ã¼ãã¯ UTF-8 ã¨ãã¦ã¨ã³ã³ã¼ãããå¿è¦ãããã¾ãã ã¤ãã³ã<em>API</em>ã«ãã¾ããHTTPã®"
      },
      "id": "60527d9e64441f8e7c5321bb"
    },
    {
      "sections": [
        "Data requirements and limits for custom event data",
        "Important",
        "General requirements",
        "Reserved words",
        "Event type limits"
      ],
      "title": "Data requirements and limits for custom event data",
      "type": "docs",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "ee49e0ca9bf17447e8349123bfb470ff9964c4fe",
      "image": "",
      "url": "https://docs.newrelic.com/docs/insights/event-data-sources/custom-events/data-requirements-limits-custom-event-data/",
      "published_at": "2021-03-17T22:07:27Z",
      "updated_at": "2021-03-13T05:49:36Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important As of March 22, 2021, we are upgrading Insights to an improved web and mobile experience! All of your Insights URLs will be redirected automatically to the corresponding dashboards in New Relic One. For more details about this migration and how you can easily plan for this transition, see our Explorers Hub post. This document contains general requirements and rules for inserting and using custom events and their associated attributes. Additional requirements may apply based on the method you use. You can report custom events to New Relic in several ways, including: APM agent APIs Event API (There are additional requirements when using the Event API.) Browser monitoring agent APIs (There are additional requirements with the custom PageAction event.) Mobile monitoring SDK General requirements When reporting custom events and attributes, follow these general requirements for supported data types, naming syntax, and size: Requirement Description Payload Total maximum size or length: 1MB (10^6 bytes) maximum per POST. We highly recommend using compression. The payload must be encoded as UTF-8. The Event API has additional HTTP rate limits. Attribute data types Attribute values can be either a string or a numeric integer or float. If your attribute values contain date information, define it as an unformatted Unix timestamp (in seconds or milliseconds) by using the Insights data formatter. Attribute size Maximum name size: 255 bytes. Maximum attribute value size: Custom attributes sent by the agent: 255 bytes Attributes attached to custom events sent using the Event API: 4096 characters Maximum total attributes per event: 254. Exception: If you use an APM agent API, the max is 64. Maximum total attributes per event type: 48,000. Important Charts may only display the first 255 characters of attribute values. For complete attribute values, use the JSON chart type or Query API. Naming syntax Attribute names can be a combination of alphanumeric characters, colons (:), periods (.), and underscores (_). Event types (using the eventType attribute) can be a combination of alphanumeric characters, colons (:), and underscores (_). Do not use words reserved for use by NRQL. Null values The database does not store any data with a null value. Reserved words Avoid using the following reserved words as names for events and attributes. Otherwise, unexpected results may occur. Important This is not a complete list. In general, avoid using MySQL-reserved words to avoid collision with future New Relic functionality. Keyword Description accountId This is a reserved attribute name. If it's included, it will be dropped during ingest. appId Value must be an integer. If it is not an integer, the attribute name and value will be dropped during ingest. eventType The event type as stored in New Relic. New Relic agents and scripts normally report this as eventType. Can be a combination of alphanumeric characters, colons (:), and underscores (_). Be sure to review the prohibited eventType values and eventType limits. Prohibited eventType values For your eventType value, avoid using: Metric, MetricRaw, and strings prefixed with Metric[0-9] (such as Metric2 or Metric1Minute). Public_ and strings prefixed with Public_. These event types are reserved for use by New Relic. Events passed in with these eventType values will be dropped. timestamp Must be a Unix epoch timestamp. You can define timestamps either in seconds or in milliseconds. It must be +/-1 day (24 hours) of the current time on the server. Log forwarding terms The following keys are reserved by the Infrastructure agent's log forwarding feature: entity.guid, log, hostname, plugin.type, fb.input. If used, they are dropped during ingest and a warning is added to the logs. NRQL syntax terms If you need to use NRQL syntax terms as attribute names, including dotted attributes, they must be enclosed in backticks; for example, `LIMIT` or `consumer.offset`. Otherwise, avoid using these reserved words: ago, and, as, auto, begin, begintime, compare, day, days, end, endtime, explain, facet, from, hour, hours, in, is, like, limit, minute, minutes, month, months, not, null, offset, or, raw, second, seconds, select, since, timeseries, until, week, weeks, where, with Event type limits The current limit for total number of eventType values is 250 per sub-account in a given 24-hour time period. If a user exceeds this limit, New Relic may filter or drop data. Event types include: Default events from New Relic agents Custom events from New Relic agents Custom events from Insights custom event inserter",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 307.88843,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Data requirements and limits for <em>custom</em> <em>event</em> data",
        "sections": "Data requirements and limits for <em>custom</em> <em>event</em> data",
        "tags": "<em>Custom</em> <em>events</em>",
        "body": " <em>Event</em> <em>API</em> (There are additional requirements when using the <em>Event</em> <em>API</em>.) Browser monitoring <em>agent</em> <em>APIs</em> (There are additional requirements with the <em>custom</em> PageAction <em>event</em>.) Mobile monitoring SDK General requirements When reporting <em>custom</em> <em>events</em> and attributes, follow these general requirements"
      },
      "id": "6043ef69e7b9d2da1f5799f8"
    },
    {
      "sections": [
        "Report custom event data",
        "Important",
        "Value from custom events and attributes",
        "Avoid rate limits",
        "Send custom events and attributes",
        "Extend data retention"
      ],
      "title": "Report custom event data",
      "type": "docs",
      "tags": [
        "Insights",
        "Event data sources",
        "Custom events"
      ],
      "external_id": "9c787cb83d5d7d1722bcbec25f4eb8698f5be6e9",
      "image": "",
      "url": "https://docs.newrelic.com/docs/insights/event-data-sources/custom-events/report-custom-event-data/",
      "published_at": "2021-03-17T22:08:50Z",
      "updated_at": "2021-03-13T01:09:54Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important As of March 22, 2021, we are upgrading Insights to an improved web and mobile experience! All of your Insights URLs will be redirected automatically to the corresponding dashboards in New Relic One. For more details about this migration and how you can easily plan for this transition, see our Explorers Hub post. New Relic products report a variety of default event data to your account. This document explains how to report your own custom events and attributes. Value from custom events and attributes Event data is one of the fundamental New Relic data types. Events are reported by most New Relic products, and we give you several options for reporting your own custom events. By reporting custom events, you can create more useful and customized queries and charts of your data. This is a key part of optimizing how New Relic works for you. Avoid rate limits Reporting a large number of custom events and/or attributes can cause degraded query performance. It may also result in approaching or passing data collection rate limits. For optimal performance, first think about what data you want to analyze, and then create only the events and/or attributes necessary to meet these specific goals. Be aware of the following data and subscription requirements for inserting and accessing custom data: Ensure you follow limits and requirements around event/attribute data types, naming syntax, and size. The amount of data you have access to over time depends on your data retention policy. Send custom events and attributes Methods for sending custom events and attributes include: Source How to send custom data APM agent Use APM agent APIs to report custom events and custom attributes. Browser monitoring agent Add custom attributes to the PageView event via the Browser API call addCustomAttribute. Send PageAction event and attributes via Browser API. Forward APM agent custom attributes to PageView event. Event API To report custom events not associated with other New Relic products, use the Event API. Infrastructure monitoring agent Add custom attributes to default Infrastructure events. Use the Flex integration tool to report your own custom event data. Mobile monitoring agent Use the mobile agent API to send custom events and attributes. Synthetic monitoring Add custom attributes to the SyntheticCheck event via the $util.insights tools. For ways to report other types of custom data, see: Metric API Logs Trace API Extend data retention To learn how to extend how long events are retained in your account, see our documentation about event data retention.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 299.64185,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Report <em>custom</em> <em>event</em> data",
        "sections": "Value from <em>custom</em> <em>events</em> and attributes",
        "tags": "<em>Custom</em> <em>events</em>",
        "body": " policy. Send <em>custom</em> <em>events</em> and attributes Methods for sending <em>custom</em> <em>events</em> and attributes include: Source How to send <em>custom</em> data APM <em>agent</em> Use APM <em>agent</em> <em>APIs</em> to report <em>custom</em> <em>events</em> and <em>custom</em> attributes. Browser monitoring <em>agent</em> Add <em>custom</em> attributes to the PageView <em>event</em> via the Browser <em>API</em> call"
      },
      "id": "6043f0b1196a67451d960f86"
    }
  ],
  "/try-our-apis": [
    {
      "sections": [
        "Introduction to querying New Relic data",
        "ãã³ã",
        "Query data in the UI",
        "Use NRQL or PromQL-style queries in the UI",
        "Query using simple UI interfaces",
        "Query data via API"
      ],
      "title": "Introduction to querying New Relic data",
      "type": "docs-jp",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Understand data"
      ],
      "external_id": "28f2132bc38a81ad0abe070d508f85436b819add",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/telemetry-data-platform/ingest-manage-data/understand-data/introduction-querying-new-relic-data/",
      "published_at": "2021-03-18T19:35:33Z",
      "updated_at": "2021-03-18T19:35:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can query New Relic data in several ways, including in the UI or via API. ãã³ã To understand your New Relic-stored data better, see Data types. Query data in the UI Reasons to query your data from the New Relic UI: To answer a specific question To create a custom chart or dashboard To access and navigate your data in a quick, visual way There are two ways to query data in the New Relic UI: using query languages (New Relic query language or our PromQL-style query language), or using simpler query interfaces that don't require knowledge of how to write a query. Use NRQL or PromQL-style queries in the UI There are two ways to write your own queries to retrieve data and build charts: Query builder - NRQL mode: query using New Relic query language (NRQL), the same language we use to build most of our UI experiences. Query builder - PromQL-style mode: write basic queries using a PromQL-style query. Query using simple UI interfaces New Relic One offers several experiences that don't require knowledge of NRQL: Data explorer: an intuitive data navigator to create visualizations for events and metrics. Query builder (basic mode): a simple, query-less, chart-building experience. Distributed tracing query: a specialized UI for querying traces. Logs query: a specialized UI for querying New Relic Logs data. Query data via API There are several APIs for retrieving and querying New Relic data. You can run NRQL (our query language) queries with NerdGraph (our GraphQL API). For more on New Relic APIs, see Intro to New Relic APIs. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 870.067,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to querying <em>New</em> <em>Relic</em> data",
        "sections": "Introduction to querying <em>New</em> <em>Relic</em> data",
        "tags": "<em>Telemetry</em> Data <em>Platform</em>",
        "body": ". Distributed tracing query: a specialized UI for querying traces. Logs query: a specialized UI for querying <em>New</em> <em>Relic</em> Logs data. Query data via <em>API</em> There are several <em>APIs</em> for retrieving and querying <em>New</em> <em>Relic</em> data. You can run NRQL (our query language) queries with <em>NerdGraph</em> (our <em>GraphQL</em> <em>API</em>). For more on <em>New</em>"
      },
      "id": "6053ab85196a67352a2d1668"
    },
    {
      "sections": [
        "New Relic NerdGraphã®æ¦è¦",
        "ãã³ã",
        "è¦ä»¶ã¨ã¨ã³ããã¤ã³ã",
        "NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨",
        "NerdGraphã®ãã¥ã¼ããªã¢ã«ã¨ä¾",
        "NerdGraphãã¯ãã­ã¸ã¼",
        "ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ã¯ã¨ãªãè¡ã",
        "New Relicã¦ã¼ã¶ã¼ãã¢ã¯ã»ã¹ã§ããã¢ã«ã¦ã³ãã®ã¯ã¨ãªãè¡ã",
        "ã¦ã¼ã¶ã¼ã¨ã¢ã«ã¦ã³ããNRQLã1ã¤ã®NerdGraph GraphiQLãªã¯ã¨ã¹ãã§ã¯ã¨ãª",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic NerdGraphã®æ¦è¦",
      "type": "docs-jp",
      "tags": [
        "APIs",
        "NerdGraph",
        "Get started"
      ],
      "external_id": "a15c99229ab5f6ec3e8c6fc34707b04f4f20df39",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/apis/nerdgraph/get-started/introduction-new-relic-nerdgraph/",
      "published_at": "2021-03-18T06:18:19Z",
      "updated_at": "2021-03-18T06:18:19Z",
      "document_type": "page",
      "popularity": 1,
      "body": "NerdGraphã¯ãNew Relicã®GraphQLãã©ã¼ãããAPIã§ããNerdGraphã¯ãå¹ççã§æè»ãªã¯ã¨ãªè¨èªã§ããã§ããã®éä¸è¶³ãªãã«ãå¿è¦ãªãã¼ã¿ã®ã¿ããªã¯ã¨ã¹ãã§ãã¾ããä¸è¬çãªREST APIã§ããã°è¤æ°ã®URLããã­ã¼ãããå¿è¦ããããã®ã®ãNerdGraphã³ã¼ã«ã¯åä¸ã®ãªã¯ã¨ã¹ãã§ãã¹ã¦ã®ãã¼ã¿ãåå¾ã§ãã¾ããã¾ããNerdGraphã¯ãAPIãçµæçã«é²åããã¦ãå¼·åãªéçºèãã¼ã«ã¨ãªãã¾ãã ãã³ã NerdGraphã¨APIãããã³ãã®ä»ã®ãªãã¶ã¼ãããªãã£ ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ãNew Relicãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã è¦ä»¶ã¨ã¨ã³ããã¤ã³ã NerdGraphãä½¿ç¨ããã«ã¯ãNew Relicã¦ã¼ã¶ã¼ã­ã¼ãå¿è¦ã§ãã NerdGraphã¨ã³ããã¤ã³ãï¼ ä¸»è¦ãªã¨ã³ããã¤ã³ãï¼https://api.newrelic.com/graphql EUã¨ã³ããã¤ã³ãï¼EUãã¼ã¿ã»ã³ã¿ã¼ã«ãã¼ã¿ã®ããã¢ã«ã¦ã³ãã®å ´åã¯ãhttps://api.eu.newrelic.com/graphiqlãä½¿ç¨ãã¾ãã ã¨ã³ããã¤ã³ãã«ã¢ã¯ã»ã¹ããã«ã¯ãæ¬¡ã®cURLã³ãã³ããä½¿ç¨ãã¾ãï¼ curl -X POST https://api.newrelic.com/graphql \\ -H 'Content-Type: application/json' \\ -H 'API-Key: YOUR_NEW_RELIC_USER_KEY' \\ -d '{ \"query\": \"{ requestContext { userId apiKey } }\" } ' ã³ãã¼ NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ ã¹ã­ã¼ããèª¿æ»ããå®ç¾©ãè¦ã¤ããå¼ã³åºããå½¢æã§ããGraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã¾ããã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã«ã¯ï¼ New Relicã¦ã¼ã¶ã¼ã­ã¼ãå¿è¦ã§ãã api.newrelic.com/graphiql ã«ã¢ã¯ã»ã¹ãã¾ãï¼EUã«New Relicãã¼ã¿ãããå ´åã¯ãapi.eu.newrelic.com/graphiqlãä½¿ç¨ãã¦ãã ããï¼ NerdGraphã®ãã¥ã¼ããªã¢ã«ã¨ä¾ NerdGraphãä½¿ç¨ãã¦ãæ¬¡ã®ãã¨ãè¡ãã¾ã: æ©è½æ§ ãã¥ã¼ããªã¢ã« ã¢ã«ã¦ã³ãã«é¢é£ãããã¹ã¦ã®ã¨ã³ãã£ãã£ãã¯ã¨ãªããã ã¨ã³ãã£ãã£ãã¥ã¼ããªã¢ã«ãåç§ãã¦ãã ããã å¾¡ç¤¾ã®ã¢ã«ã¦ã³ãã«é¢é£ããã¯ã¼ã¯ã­ã¼ãã®ã¯ã¨ãªãä½æãããã³æ´æ°ãè¡ãã¾ãã ã¯ã¼ã¯ã­ã¼ãã®ãã¥ã¼ããªã¢ã«ããè¦§ãã ããã ã¿ã°ãä½æãç®¡çããã¨ã³ãã£ãã£ã«è¿½å ããã è©³ç´°ã¨ä¾ã«ã¤ãã¦ã¯ã¿ã°ä½æãã¥ã¼ããªã¢ã«ãåç§ãã¦ãã ããã ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãã¼ã¿ã®ã¯ã¨ãªãè¡ãã ãã¬ã¼ã¹ãã¼ã¿ã®ãã¥ã¼ããªã¢ã«ãåç§ãã¦ãã ããã New Relic Oneã¢ããªãæ§ç¯ããéã«ãã¼ã¿ããã§ããããã New Relic Oneã¢ããªã®ãã¼ã¿ã¯ã¨ãªããã³ãã¥ã¼ãã¼ã·ã§ã³ãåç§ãã¦ãã ããã ãµã¼ãã¹ã¨ã®ã¢ããã¹ããªã¼ã ã¨ãã¦ã³ã¹ããªã¼ã ã®é¢ä¿ãçè§£ããã é¢ä¿ãã¥ã¼ããªã¢ã«ãåç§ãã¦ãã ããã New Relicã¯ã©ã¦ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ãè¨­å®ãã¾ãã ã¯ã©ã¦ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ä¾ãåç§ãã¦ãã ããã NRQLãä½¿ç¨ãã¦ã¤ãã³ããã¼ã¿ãã¯ã¨ãªãã¾ãã NRQLãã¥ã¼ããªã¢ã«ãåç§ãã¦ãã ããã NerdGraphã«ã¤ãã¦ã®ãããªãã¥ã¼ããªã¢ã«ãè¦ãã New Relic University ãã¥ã¼ããªã¢ã« New Relic NerdGraphã®èª¬æã«ã¢ã¯ã»ã¹ãã¾ããã¾ãã¯ãå®å¨ãªãªã³ã©ã¤ã³ã³ã¼ã¹ã®New Relic APIã«ã¢ã¯ã»ã¹ãã¦ãã ããã NerdGraphãã¯ãã­ã¸ã¼ New Relic GraphQLãµã¼ãã¼ã¯ãNerdGraphã®ã°ã©ãæ§é ãæç¤ºçã«å®ç¾©ãã¾ããæ¬¡ã®ã­ã¼ã¯ã¼ãã¯ããã¹ã¦ã®GraphQLãµã¼ãã¼ã«å±éãã¦ãã¾ãããã®ã­ã¼ã¯ã¼ããä½¿ç¨ãã¦ãç¬èªã®ã¯ã¨ãªãæ§ç¯ãçè§£ã«å½¹ç«ã¦ã¦ãã ãããããã«ãä»¥ä¸ã®æé ã«å¾ãã¾ãã New Relicã§ç£è¦ãããã¹ã¦ã®ãã®ã«NerdGraphãã©ã®ããã«ä¸åçã«ã¢ã¯ã»ã¹ããããçè§£ããã«ã¯ãNerdGraphã¨ã³ãã£ãã£ãåç§ãã¦ãã ããã ã¹ã­ã¼ãå®ç¾©ãçè§£ããã«ã¯ï¼NerdGraph GraphiQL ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããDocsãé¸æãã¾ãã ç¨èª å®ç¾© ã¯ã¨ãª ã¯ã¨ãªã¨ã¯ãè¿½å ã®ã¢ã¯ã·ã§ã³ãªãã«ãã¼ã¿ã®ã¿ããã§ããããããã®ãåºæ¬çãªãªã¯ã¨ã¹ãã§ããNerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã®ã¯ã¨ãªã¯éçã§ã¯ããã¾ãããã¤ã¾ãããã¼ãºã«å¿ãã¦ãæ±ãããã¼ã¿ã®éãå æ¸ãããã¨ãã§ãã¾ããåã¯ã¨ãªã«ã¤ãã¦ãã¹ã­ã¼ãã§ãµãã¼ãããã¦ããéããã©ã®ãã¼ã¿ãåå¾ããããå³å¯ã«æå®ã§ãã¾ãã ãã¥ã¼ãã¼ã·ã§ã³ ãã¥ã¼ãã¼ã·ã§ã³ã¨ã¯ããã¼ã¿ã®ä½æããµã¼ãã¼ã§ã®ãã¼ã¿æ´æ°ãªã©ãã¢ã¯ã·ã§ã³ãè¿½å ããããã®ãªã¯ã¨ã¹ãã§ãããã¥ã¼ãã¼ã·ã§ã³ã§ã¯ãã­ã¼ã¯ã¼ãmutationã¨ããã¥ã¼ãã¼ã·ã§ã³ã®nameãå¿è¦ã§ãã ç¨®é¡ Data in GraphQLã¯ã¿ã¤ãã«ã¾ã¨ãããã¾ããã¿ã¤ãã¯ãã¹ã«ã©ã¼ï¼æå­åãæ°å­ãbooleanãªã©ï¼ã¾ãã¯ãªãã¸ã§ã¯ãã¿ã¤ãã¨ãªãã¾ãã ãªãã¸ã§ã¯ãã¿ã¤ãã¯ãä¸é£ã®ãã£ã¼ã«ãã§æ§æãããã«ã¹ã¿ã ã¿ã¤ãã§ãããã¨ãã°ãUserã¨å¼ã°ãããªãã¸ã§ã¯ãã¿ã¤ãã¯ãã·ã¹ãã ã®ã¦ã¼ã¶ã¼ãè¡¨ãã¾ãã ãã£ã¼ã«ã ãã£ã¼ã«ãã¯ãã¯ã¨ãªãè¡ãããªãã¸ã§ã¯ãã¿ã¤ãã«ã¤ãã¦ã®ä¸çã®æå ±ãè¡¨ãã¾ãããã£ã¼ã«ãã¨ãã¦ã¯ãã¹ã«ã©ã¼ããªã¹ãããªãã¸ã§ã¯ããããã¾ãããã¨ãã°ãUserãªãã¸ã§ã¯ãã¯ãnameã¨å¼ã°ããæå­åãã£ã¼ã«ããæãããã¨ãã§ãã¾ãã ã¤ã³ã¿ãã§ã¼ã¹ ã¤ã³ã¿ãã§ã¼ã¹ã¨ã¯ããã®ä»ã®ãªãã¸ã§ã¯ãã¿ã¤ããimplementå¯è½ãªä¸é£ã®ä¸è¬çãªãã£ã¼ã«ããè¡¨ãæ½è±¡åã§ãã ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ã¯ã¨ãªãè¡ã NerdGraph GraphiQL ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãã¯ã¨ãªãè¡ããã¨ãã§ãã¾ããã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãèªåå®äºããã³ã¯ã¨ãªæ¤è¨¼ãå«ããçµã¿è¾¼ã¿åã®ã¹ã­ã¼ãå®ç¾©ã¨æ©è½ãåãã¦ãã¾ãã GraphQLã§ãNew Relicã®ãã¼ã¿ã®ã°ã©ãæ§æã§ç¹å®ã®æå ±ãå°ã­ã¾ããã°ã©ãã®ãã¼ãã«å¾ããå¸æãããã¼ã¿ãã®ãã®ã®ã¯ã¨ãªãè¡ãã¾ãã æ°è¦ãã£ã¼ã«ããã·ã¼ã ã¬ã¹ã«è¿½å ãããå¤ããã£ã¼ã«ãã«ã¯éæ¨å¥¨ã¨ãã¦å°ãä»ãããããã­ã¥ã¡ã³ãããåé¤ãããæçµçã«ã¯ãã®ãã£ã¼ã«ããåæºã«ã·ã£ãããã¦ã³ã§ãã¾ãã New Relicã¦ã¼ã¶ã¼ãã¢ã¯ã»ã¹ã§ããã¢ã«ã¦ã³ãã®ã¯ã¨ãªãè¡ã actorï¼New Relicã®æ­£è¦ã¦ã¼ã¶ã¼ï¼ãã¢ã¯ã»ã¹ã§ããã¢ã«ã¦ã³ãåã®ã¯ã¨ãªãè¡ãã¾ãï¼ query { actor { account(id: YOUR_ACCOUNT_ID) { name } } } ã³ãã¼ åç­ã§ã¯ããªã¯ã¨ã¹ãã§å®ç¾©ããã¯ã¨ãªæ§æãåæ ããããæã¿ã®ç¹å®ã®ãã¼ã¿ãç°¡åã«æ±ãããã¾ãã { \"data\": { \"actor\": { \"account\": { \"name\": \"Data Nerd\" } } } } ã³ãã¼ ã¦ã¼ã¶ã¼ã¨ã¢ã«ã¦ã³ããNRQLã1ã¤ã®NerdGraph GraphiQLãªã¯ã¨ã¹ãã§ã¯ã¨ãª ã°ã©ãæ§æã«ã¯ãã¯ã¨ãªãè¤éã«ãªã£ãå ´åã®æ©è½ãç¤ºããã¦ãã¾ãããã¨ãã°ãã¦ã¼ã¶ã¼æå ±ãã¢ã«ã¦ã³ãæå ±ã®ã¯ã¨ãªãè¡ããNRQLã¯ã¨ãªã1åã®ãªã¯ã¨ã¹ãã§è¡ãã¾ããREST APIãä½¿ç¨ããã¨ã3ã¤ã®ç°ãªããªã¯ã¨ã¹ããã3ã¤ã®ç°ãªãã¨ã³ããã¤ã³ãã¨ãªãã¾ãã query { actor { account(id: YOUR_ACCOUNT_ID) { name nrql(query: \"SELECT * FROM Transaction\") { results } } user { name id } } } ã³ãã¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 817.8646,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>NerdGraph</em>ã®æ¦è¦",
        "sections": "<em>New</em> <em>Relic</em> <em>NerdGraph</em>ã®æ¦è¦",
        "tags": "<em>APIs</em>",
        "body": "<em>NerdGraph</em>ã¯ã<em>New</em> <em>Relic</em>ã®<em>GraphQL</em>ãã©ã¼ããã<em>API</em>ã§ãã<em>NerdGraph</em>ã¯ãå¹ççã§æè»ãªã¯ã¨ãªè¨èªã§ããã§ããã®éä¸è¶³ãªãã«ãå¿è¦ãªãã¼ã¿ã®ã¿ããªã¯ã¨ã¹ãã§ãã¾ããä¸è¬çãªREST <em>API</em>ã§ããã°è¤æ°ã®URLããã­ã¼ãããå¿è¦ããããã®ã®ã<em>NerdGraph</em>ã³ã¼ã«ã¯åä¸ã®ãªã¯ã¨ã¹ãã§ãã¹ã¦ã®ãã¼ã¿ãåå¾ã§ãã¾ããã¾ãã<em>NerdGraph</em>ã¯ã<em>API</em>ãçµæçã«é²åããã¦ãå¼·åãªéçºèãã¼ã«ã¨ãªãã¾ãã ãã³ã <em>NerdGraph</em>ã¨<em>API</em>ãããã³ãã®ä»ã®ãªãã¶ã¼ãããªãã£ ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ã<em>New</em> <em>Relic</em>ãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦"
      },
      "id": "6052f0ab28ccbcb2bbc2fd57"
    },
    {
      "sections": [
        "Introduction to querying New Relic data",
        "Tip",
        "Query data in the UI",
        "Use NRQL or PromQL-style queries in the UI",
        "Query using simple UI interfaces",
        "Query data via API"
      ],
      "title": "Introduction to querying New Relic data",
      "type": "docs",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Understand data"
      ],
      "external_id": "63bb9d3d5a00225f4c03e3757baa167192398751",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/ingest-manage-data/understand-data/introduction-querying-new-relic-data/",
      "published_at": "2021-03-18T19:34:02Z",
      "updated_at": "2021-03-16T15:38:26Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can query New Relic data in several ways, including in the UI or via API. Tip To understand your New Relic-stored data better, see Data types. Query data in the UI Reasons to query your data from the New Relic UI: To answer a specific question To create a custom chart or dashboard To access and navigate your data in a quick, visual way There are two ways to query data in the New Relic UI: using query languages (New Relic query language or our PromQL-style query language), or using simpler query interfaces that don't require knowledge of how to write a query. Tip Access your data easily on one.newrelic.com: Click the Browse data dropdown menu and select the data type (metrics, events, logs, and traces) you want to explore. Use NRQL or PromQL-style queries in the UI There are two ways to write your own queries to retrieve data and build charts: Query builder - NRQL mode: query using New Relic query language (NRQL), the same language we use to build most of our UI experiences. Query builder - PromQL-style mode: write basic queries using a PromQL-style query. Query using simple UI interfaces New Relic One offers several experiences that don't require knowledge of NRQL: Data explorer: an intuitive data navigator to create visualizations for events and metrics. Query builder (basic mode): a simple, query-less, chart-building experience. Distributed tracing query: a specialized UI for querying traces. Logs query: a specialized UI for querying New Relic Logs data. Query data via API There are several APIs for retrieving and querying New Relic data. You can run NRQL (our query language) queries with NerdGraph (our GraphQL API). For more on New Relic APIs, see Intro to New Relic APIs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 757.6727,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to querying <em>New</em> <em>Relic</em> data",
        "sections": "Introduction to querying <em>New</em> <em>Relic</em> data",
        "tags": "<em>Telemetry</em> Data <em>Platform</em>",
        "body": " <em>API</em> There are several <em>APIs</em> for retrieving and querying <em>New</em> <em>Relic</em> data. You can run NRQL (our query language) queries with <em>NerdGraph</em> (our <em>GraphQL</em> <em>API</em>). For more on <em>New</em> <em>Relic</em> <em>APIs</em>, see Intro to <em>New</em> <em>Relic</em> <em>APIs</em>."
      },
      "id": "603ea41928ccbc26caeba79a"
    },
    {
      "sections": [
        "New Relic APIã®æ¦è¦",
        "ãã³ã",
        "NerdGraphï¼GraphQLï¼",
        "æ©è½å¥ã®REST API",
        "Alert",
        "APM",
        "ãã©ã¦ã¶ãã¢ãã¿ã¼",
        "ã¤ã³ãã©ã¹ãã©ã¯ãã£ã®ã¢ãã¿ãªã³ã°",
        "ã¢ãã¤ã«ã¢ãã¿ãªã³ã°",
        "åæã¢ãã¿ãªã³ã°",
        "ã³ã¢ãã¼ã¿ã¿ã¤ãã®ãã¬ã¡ããªAPI",
        "ã¢ã«ã¦ã³ãããã¸ã¡ã³ããã¢ããã³ãä½¿ç¨ç¶æ³ã®API",
        "éè¦",
        "ãã®ä»ã®API",
        "Insights",
        "ãã©ã°ã¤ã³",
        "APIã®æ©è½ãç¢ºããã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic APIã®æ¦è¦",
      "type": "docs-jp",
      "tags": [
        "APIs",
        "Get started",
        "Intro to APIs"
      ],
      "external_id": "e60973fcfb705d3e7f579746a797eea38a1e176d",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/apis/get-started/intro-apis/introduction-new-relic-apis/",
      "published_at": "2021-03-18T06:14:13Z",
      "updated_at": "2021-03-18T06:14:13Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¯ãä»¥ä¸ã®é ç®ãè¡ãããã®å¤æ§ãªAPI ï¼ã¢ããªã±ã¼ã·ã§ã³ãã­ã°ã©ãã³ã°ã¤ã³ã¿ãã§ã¼ã¹ï¼ã¨SDKãç¨æãã¦ãã¾ãã New Relicãããã¼ã¿ãåå¾ãã New Relicã¸ã®ãã¼ã¿éä¿¡ è¨­å®ãèª¿æ´ããã ãã®ãã­ã¥ã¡ã³ãã«ã¯ãAPIã¨ã³ããã¤ã³ãã®ä¾ã¨åèæå ±ãè¨è¼ããã¦ãã¾ããéçºèã®è¦ç¹ããè¦ãNew Relicã®ä½¿ç¨ããã³ã«ã¹ã¿ãã¤ãºæ¹æ³ã«é¢ãã¦ã¯developer.newrelic.comãåç§ãã¦ãã ããã ãã³ã APIã¨SDKãããã³ãã®ä»ã®ãªãã¶ã¼ãããªãã£ ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ãNew Relicãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã NerdGraphï¼GraphQLï¼ NerdGraphã¯New Relicã®GraphQL APIã§ãããå¹ççã§æè»ãªã¯ã¨ãªè¨èªã§ããã§ããã®éä¸è¶³ãªãã«ãå¿è¦ãªãã¼ã¿ã ãããªã¯ã¨ã¹ãã§ãã¾ããä¸è¬çãªREST APIã§ããã°è¤æ°ã®URLããã­ã¼ãããå¿è¦ããããã®ã®ãNerdGraphã³ã¼ã«ã¯åä¸ã®ãªã¯ã¨ã¹ãã§ãã¹ã¦ã®ãã¼ã¿ãåå¾ã§ãã¾ããã¾ããNerdGraphã¯ãAPIãçµæçã«é²åããã¦ãå¼·åãªéçºèãã¼ã«ã¨ãªãã¾ãã New Relicã¯ãçµã¿è¾¼ã¿ã¹ã­ã¼ãå®ç¾©ãä¼´ãAPIãè¿½æ±ã§ãããããå¼·åãªGraphiQLãã¼ã«ãä½¿ç¨ãã¦ãã¾ããéå§ããã«ã¯api.newrelic.com/graphiqlã¸ã¢ã¯ã»ã¹ãã¦ãã ããã ãã³ã ãµã³ãã«ã¯ã¨ãªã¨ãã¥ã¼ãã¼ã·ã§ã³ã«ã¤ãã¦ã¯å½ç¤¾ã®NerdGraph tutorialsãä½¿ç¨ãã¦ãã ããã æ©è½å¥ã®REST API APMã®ãããªNew Relicæ©è½ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ã¼ãã¢ã©ã¼ãã¯å¤ãã®å ´åä¸ç·ã«ä½¿ç¨ãããæ©è½ãéè¤ããå ´åãããã¾ããåè£½åã«è¤æ°ã®APIãè©²å½ããå ´åãããã®ã¯ãã®ããã§ããAPIã®æ©è½ã¯ãæ©è½ããã¼ã¿ã¸ã®ã¢ã¯ã»ã¹ã«ããç°ãªãã¾ãã ãã³ã ãã¾ãã¾ãªAPIã­ã¼ã®ç¨®é¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic APIã­ã¼ã«ã¤ãã¦çè§£ããããè¦§ãã ããã Alert ä»¥ä¸ã®é ç®ãè¡ãã«ã¯ãalertsç¨ã®REST APIã¨APIã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¾ãã ããªã·ã¼ãæ¡ä»¶ãéç¥ãã£ãã«ãä½æãç®¡çãã¾ãã NRQLã¯ã¨ãªãåºã«ãã¦ã¢ã©ã¼ãæ¡ä»¶ãä½æãã¾ãã ä»ã®New Relicã®æ©è½ããã®ãã¼ã¿ãåºã«ãã¦ã¢ã©ã¼ãæ¡ä»¶ãä½æãã¾ãã APM ã¢ããªã±ã¼ã·ã§ã³ã¢ãã¿ãªã³ã°ç¨ã®APIãªã½ã¼ã¹ã«ã¯ãæ¬¡ã®ãã®ãå«ã¾ãã¾ãï¼ ãªã½ã¼ã¹ è©³ç´° REST API REST APIã®æ©è½ã«ã¯ãä»¥ä¸ãå«ã¾ãã¾ãã ã¡ããªãã¯ãApdexãã¨ã©ã¼çããã¹ããã¼ã¿ãå«ããAPMãã¼ã¿ã®åå¾ã ããã­ã¤ã¡ã³ãã®ã¬ãã¼ãã UIåã®ã¢ããªåã®å¤æ´ã ã¨ã¼ã¸ã§ã³ãAPI APMã®è¨èªã¨ã¼ã¸ã§ã³ãã¯ãããããã«ã¹ã¿ã ãã¼ã¿ã®å ±åãå«ããã¨ã¼ã¸ã§ã³ãã®ããã©ã«ãåä½ãã«ã¹ã¿ãã¤ãºã§ããAPIãåãã¦ãã¾ããAPMã¨ã¼ã¸ã§ã³ãAPIã«ã¯ä»¥ä¸ãå«ã¾ãã¾ãã C SDK API Goã¨ã¼ã¸ã§ã³ãAPI Javaã¨ã¼ã¸ã§ã³ãAPI .NETã¨ã¼ã¸ã§ã³ãAPI Node.jsã¨ã¼ã¸ã§ã³ãAPI PHPã¨ã¼ã¸ã§ã³ãAPI Pythonã¨ã¼ã¸ã§ã³ãAPI Rubyã¨ã¼ã¸ã§ã³ãAPI ã¯ã¨ãªAPI APMãã¼ã¿ãç§ä¼ããã«ã¯ãã¯ã¨ãªAPIãä½¿ç¨ãã¾ãã ã¢ã«ã¦ã³ãããã¸ã¡ã³ãAPI ã¢ã«ã¦ã³ãããµãã¹ã¯ãªãã·ã§ã³ä½¿ç¨åãã®APIã«ã¤ãã¦ã¯ãã¢ã«ã¦ã³ãé¢é£ã®APIããè¦§ãã ããã ãã©ã¦ã¶ãã¢ãã¿ã¼ Browser APIãªã½ã¼ã¹ã«ã¯ãæ¬¡ã®ãã®ãå«ã¾ãã¾ãï¼ ãªã½ã¼ã¹ è©³ç´° Browserã¨ã¼ã¸ã§ã³ãAPI Browserã¨ã¼ã¸ã§ã³ãAPIã¯ãä»¥ä¸ãå«ãã¿ã¹ã¯ã«ä½¿ç¨ãã¾ãã ãã©ã¦ã¶ã¢ãã¿ãªã³ã°ã«ã«ã¹ã¿ã ã¨ã³ãã¦ã¼ã¶ã¼ãã¼ã¿ãå ±åããã SPA APIã³ã¼ã«ãä½¿ã£ã¦ãã©ã¦ã¶ã®éåæã¢ã¯ãã£ããã£ãç£è¦ããã ã«ã¹ã¿ã ãã¼ã¿ãNew Relicããã·ã¥ãã¼ãã«æ¿å¥ããã ã½ã¼ã¹ããããç®¡çããã REST API REST APIã§ã¯ãä»¥ä¸ãå®è¡ã§ãã¾ãã ãã¼ã¸ã­ã¼ãã¿ã¤ãã³ã°ã®ãã¼ã¿ã¨ã¹ã«ã¼ããããåå¾ããã ãã©ã¦ã¶ã¢ãã¿ãªã³ã°ã«ããã¢ãã¿ã¼ãããã¢ããªãè¿½å ã¾ãã¯ãªã¹ãããã ãã©ã¦ã¶ãã¼ã¿ã«å¯¾ãã¦ã¢ã©ã¼ãæ¡ä»¶ãç®¡çããã ã¯ã¨ãªAPI ãã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¼ã¿ãåå¾ããã«ã¯ãã¯ã¨ãªAPIãä½¿ç¨ãã¾ãã ã¢ã«ã¦ã³ãããã¸ã¡ã³ãAPI ã¢ã«ã¦ã³ãããµãã¹ã¯ãªãã·ã§ã³ä½¿ç¨åãã®APIã«ã¤ãã¦ã¯ãã¢ã«ã¦ã³ãé¢é£ã®APIããè¦§ãã ããã ã¤ã³ãã©ã¹ãã©ã¯ãã£ã®ã¢ãã¿ãªã³ã° Infrastructure APIã®ãªã½ã¼ã¹ã¯ä»¥ä¸ã®ã¨ããã§ãã ãªã½ã¼ã¹ è©³ç´° ã¯ã¨ãªAPI Infrastructureãã¼ã¿ãåå¾ããã«ã¯ãã¯ã¨ãªAPIãä½¿ç¨ãã¾ãããã®APIã¯ããµãã¹ã¯ãªãã·ã§ã³ã®ä½¿ç¨ç¶æ³ãã¼ã¿ã®åå¾ã«ãä½¿ç¨ããã¾ãã Infrastructureã¢ã©ã¼ãAPI Infrastructureã¢ã©ã¼ããç®¡çããã«ã¯ãInfrastructureã¢ã©ã¼ãAPIãä½¿ç¨ãã¾ãã Integrations SDK Infrastructureã«ãã¼ã¿ãã¬ãã¼ããããããç¬èªã®ã«ã¹ã¿ã ã¤ã³ãã°ã¬ã¼ã·ã§ã³ãä½æããã«ã¯ãIntegrations SDKãä½¿ç¨ãã¾ãã NerdGraph NerdGraphï¼å½ç¤¾ã®GraphQL APIï¼ãä½¿ç¨ãã¦ãã¯ã©ã¦ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ãã¼ã¿ãã¯ã¨ãªããã¨ã¨ãã«ãã¯ã©ã¦ãã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãå¤æ´ã§ãã¾ãã ã¢ãã¤ã«ã¢ãã¿ãªã³ã° Mobile APIãªã½ã¼ã¹ã¯ä»¥ä¸ã®ã¨ããã§ãã ãªã½ã¼ã¹ è©³ç´° Mobileã¨ã¼ã¸ã§ã³ãAPI Mobile APIã§ã¯ãç¬èªã³ã¼ãã®ã«ã¹ã¿ã ã¤ã³ã¹ãã¥ã«ã¡ã³ãã¼ã·ã§ã³ããNew Relicã¸ã®ã¤ãã³ãéä¿¡ãè¡ããã¨ãã§ãã¾ãããã©ãããã©ã¼ã åºæã®ãã­ã¥ã¡ã³ãããè¦§ãã ããã iOS Android Unity REST API REST APIã¯ãä»¥ä¸ãå«ãã¿ã¹ã¯ã«ä½¿ç¨ãã¾ãã ç£è¦å¯¾è±¡ã¢ããªã®ãªã¹ããåå¾ããã ãµãã¹ã¯ãªãã·ã§ã³ã®ä½¿ç¨ç¶æ³ãã¼ã¿ãåå¾ããã ã¡ããªãã¯ã®ååã¨ãã¼ã¿ãåå¾ããã ã¯ã©ãã·ã¥æ°ã¨ã¯ã©ãã·ã¥çã®ãã¼ã¿ãåå¾ããã ã¢ãã¤ã«ã¢ããªã«å¯¾ããNew Relic Alertsæ¡ä»¶ãç®¡çããã ã¯ã¨ãªAPI New RelicããMobileãã¼ã¿ãåå¾ããã«ã¯ãã¯ã¨ãªAPIãä½¿ç¨ãã¾ãã ã¢ã«ã¦ã³ãããã¸ã¡ã³ãAPI ã¢ã«ã¦ã³ãé¢é£ã®APIã«ã¤ãã¦ã¯ãã¢ã«ã¦ã³ãAPIããè¦§ãã ããã åæã¢ãã¿ãªã³ã° Synthetics APIã®ãªã½ã¼ã¹ã¯æ¬¡ã®ã¨ããã§ãã ãªã½ã¼ã¹ è©³ç´° Synthetics REST API Synthetics REST APIã®æ©è½ã«ã¯ãä»¥ä¸ãå«ã¾ãã¾ãã Syntheticsã¢ãã¿ã¼ãä½æãç®¡çããã Syntheticsã®ã¢ã©ã¼ãéç¥ãç®¡çããã ã¢ãã¿ã¼ã«ã©ãã«ãè¿½å ããç¹å®ã®ã©ãã«ãæã¤ã¢ãã¿ã¼ãåå¾ããã ã¯ã¨ãªAPI Syntheticsã¤ãã³ããã¼ã¿ãåå¾ããã«ã¯ãã¯ã¨ãªAPIãä½¿ç¨ãã¾ãã Alerts API Syntheticsã¢ãã¿ã¼ãã¿ã¼ã²ããã¨ããã¢ã©ã¼ãæ¡ä»¶ãä½æãç®¡çããã«ã¯ãã¢ã©ã¼ãAPIãä½¿ç¨ãã¾ãã ã³ã¢ãã¼ã¿ã¿ã¤ãã®ãã¬ã¡ããªAPI å½ç¤¾ã¯ãã¤ã³ã¹ãã¼ã«ãããã¨ã¼ã¸ã§ã³ããä½¿ç¨ãããã¨ãªããNew Relicã«éä¿¡ãããå½ç¤¾ã®ã³ã¢ãã¼ã¿ã¿ã¤ãï¼ã¡ããªãã¯ã¹ãã­ã°ããã¬ã¼ã¹ãã¤ãã³ãï¼ãå¥æã§ããããã«ããããã¤ã®APIãæä¾ãã¦ãã¾ãã ãã¼ã¿ã¿ã¤ã èª¬æ Trace API ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãã¼ã¿ãNew Relicã«éä¿¡ãã¦ãã ããã ã¤ãã³ãã®API ã¤ãã³ããã¼ã¿ãNew Relicã«éä¿¡ãã¦ãã ããã ã¡ããªãã¯ã®API ï¼ãã®ä»ã®ãã¬ã¡ããªã¢ãã¿ãªã³ã°ãµã¼ãã¹ãå«ãï¼ä»»æã®ã½ã¼ã¹ããã¡ããªãã¯ã¹ãNew Relicã¸éä¿¡ãã¦ãã ãã ã­ã°ã®API ãå®¢æ§ã®ã­ã°ãã¼ã¿ãNew Relicã«éä¿¡ãã¦ãã ããã ã¢ã«ã¦ã³ãããã¸ã¡ã³ããã¢ããã³ãä½¿ç¨ç¶æ³ã®API ãã®ä»ã®New Relicè£½åã¾ãã¯ãµã¼ãã¹ã¨åæ§ããå®¢æ§ã®APIã«ãã£ã¦ãå®¢æ§ã¨é¡§å®¢ã®ãã¼ã¿ãã©ã¤ãã·ã¼ãä¿è­·ããã¦ãããã¨ãç¢ºä¿¡ããªããã°ãªãã¾ãããNew Relicã®ã¢ã«ã¦ã³ãç®¡çã¨ä½¿ç¨ç¶æ³ã«é¢é£ããAPIãªã½ã¼ã¹ã¯ä»¥ä¸ã®éãã§ãã APIæ©è½ã«é¢ããè©³ç´°ã«ã¤ãã¦ã¯ãè©²å½ããNew Relic APIããè¦§ãã ãããNew Relicã®ã»ã­ã¥ãªãã£å¯¾ç­ã®è©³ç´°ã«ã¤ãã¦ã¯ãå½ç¤¾ã®ã»ã­ã¥ãªãã£ã¨ãã©ã¤ãã·ã¼ã®ãã­ã¥ã¡ã³ããåç§ããããNew Relicã®ã»ã­ã¥ãªãã£ã¦ã§ããµã¤ãããè¦§ãã ããã ãªã½ã¼ã¹ è©³ç´° REST API REST APIã®æ©è½ã«ã¯ãä»¥ä¸ãå«ã¾ãã¾ãã REST APIãä½¿ãã®ã«å¿è¦ãªAPIã­ã¼ãã¢ã«ã¦ã³ãIDããã®ä»ã®æå ±ãæ¤ç´¢ããã ã¢ã«ã¦ã³ãã¦ã¼ã¶ã¼ã®ãªã¹ããè¿ãã¾ãï¼å½åã®ã¦ã¼ã¶ã¼ã¢ãã«ã®ã¿ï¼ã ãã©ã¦ã¶ããã³ã¢ããªã±ã¼ã·ã§ã³ã¢ãã¿ãªã³ã°ã®SLAã¬ãã¼ããã¼ã¿ãåå¾ãã¾ãã ãµãã¹ã¯ãªãã·ã§ã³ã®ä½¿ç¨ç¶æ³ Query APIãä½¿ç¨ãã¦ããµãã¹ã¯ãªãã·ã§ã³ã®ä½¿ç¨ç¶æ³ãã¼ã¿ãåå¾ã§ãã¾ãããã®ãã¼ã¿ã¯ãç¾å¨ã®ãµãã¹ã¯ãªãã·ã§ã³ã¬ãã«ã«å¯¾ããä½¿ç¨ç¶æ³ã®æ¯è¼ããé¨éå¥ã®ãã£ã¼ã¸ããã¯ãè¡ãã®ã«å½¹ç«ã¡ã¾ãã éè¦ ãµãã¹ã¯ãªãã·ã§ã³ä½¿ç¨ç¶æ³ãã¼ã¿ã®ã¯ã¨ãªã®ããã®REST APIã2018å¹´07æ10æ¥ä»¥åã«å®è£ããå ´åããããã®ä½¿ç¨ç¶æ³é¢é£ã®REST APIã¯ç¾å¨å»æ­¢ããã¦ãã¾ããAPIã­ã¼ã®ä½æãå¿è¦ã¨ãªãã¯ã¨ãªAPIãä½¿ç¨ããããã«ãã¦ãã ãããæ°ããAPIãã©ã¼ãããã¸ã®åãæ¿ãã«é¢ããè©³ç´°ã«ã¤ãã¦ã¯ãç§»è¡ã¬ã¤ããåç§ãã¦ãã ããã Partner API New Relicãã¼ããã¼ã¢ã«ã¦ã³ãããµãã¢ã«ã¦ã³ããããã³ã¦ã¼ã¶ã¼ã«ã¤ãã¦æå ±ãåå¾ããã«ã¯ããã¼ããã¼APIãä½¿ç¨ãã¾ãã ãã®ä»ã®API Insights Insightã®APIãªã½ã¼ã¹ã¯æ¬¡ã®ã¨ããã§ãã ãªã½ã¼ã¹ è©³ç´° æ¿å¥ã¤ãã³ãAPI ã«ã¹ã¿ã ãã¼ã¿ãã¬ãã¼ãããã«ã¯ãã¤ãã³ãæ¿å¥APIãä½¿ç¨ãã¾ãã ã¯ã¨ãªAPI NRQLå½¢å¼ã®ã¯ã¨ãªãä½¿ç¨ãã¦Insightsãã¼ã¿ãç§ä¼ããã«ã¯ãã¯ã¨ãªAPIãä½¿ç¨ãã¾ãããã®APIã¯ããµãã¹ã¯ãªãã·ã§ã³ã®ä½¿ç¨ç¶æ³ãã¼ã¿ã®åå¾ã«ãä½¿ç¨ããã¾ãã ããã·ã¥ãã¼ãAPI Insightsããã·ã¥ãã¼ãã®ä½æãèª­ã¿åºããæ´æ°ãåé¤ã«ã¯ãããã·ã¥ãã¼ãAPIãä½¿ç¨ãã¾ãã ä»ã®New Relicè£½åAPI ä»ã®New Relicæ©è½ããã«ã¹ã¿ã ãã¼ã¿ãã¬ãã¼ããããã¨ãã§ãã¾ããè©³ããã¯ãä»ã®è£½åã«å¯¾ããAPIã»ã¯ã·ã§ã³ããè¦§ãã ããã NerdGraph NRQLãç¨ãã¦ãã¼ã¿ã¯ã¨ãªããããã«NerdGraphï¼å½ç¤¾ã®GraphQL APIï¼ãä½¿ç¨ã§ãã¾ãã ãã©ã°ã¤ã³ ä»¥ä¸ã®é ç®ãå®è¡ããã«ã¯ãNew Relicãã©ã°ã¤ã³ç¨ã®REST APIã¨APIã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¾ãã ååãIDãGUIDãå«ãããã©ã°ã¤ã³ã®ãªã¹ããå¥æããã 1ã¤ã¾ãã¯è¤æ°ã®ãã©ã°ã¤ã³ã³ã³ãã¼ãã³ããåºåãããã³ã¡ããªãã¯ã¿ã¤ã ã¹ã©ã¤ã¹ã®ãã¼ã¿ããªã¹ãããã éçºèã¨New Relicã®ãã¼ããã¼ã¯ãNew Relicã®Plugin APIãä½¿ç¨ãã¦ããã©ã°ã¤ã³ç¨ã®APIã¨ç´æ¥é£æºããã¨ã¼ã¸ã§ã³ããä»»æã®è¨èªã§ä½æãããã¨ãã§ãã¾ããããã«ããããã©ã°ã¤ã³ã«ç¬èªã®ã¡ããªãã¯ãã¼ã¿ãéä¿¡ããNew Relicã§APIããåãåã£ããã¼ã¿ãè¡¨ç¤ºã§ãã¾ãã APIã®æ©è½ãç¢ºããã New Relic ãä½¿ç¨ãã¦åé¡ãè§£æ±ºããéçºèã¨ãã¦ã®è½åãé«ããæ¹æ³ã®è©³ç´°ã«ã¤ãã¦ã¯ãdeveloper.newrelic.comãåç§ãã¦ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 757.5053,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> <em>API</em>ã®æ¦è¦",
        "sections": "<em>NerdGraph</em>ï¼<em>GraphQL</em>ï¼",
        "tags": "<em>APIs</em>",
        "body": "ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã <em>NerdGraph</em>ï¼<em>GraphQL</em>ï¼ <em>NerdGraph</em>ã¯<em>New</em> <em>Relic</em>ã®<em>GraphQL</em> <em>API</em>ã§ãããå¹ççã§æè»ãªã¯ã¨ãªè¨èªã§ããã§ããã®éä¸è¶³ãªãã«ãå¿è¦ãªãã¼ã¿ã ãããªã¯ã¨ã¹ãã§ãã¾ããä¸è¬çãªREST <em>API</em>ã§ããã°è¤æ°ã®URLããã­ã¼ãããå¿è¦ããããã®ã®ã<em>NerdGraph</em>ã³ã¼ã«ã¯åä¸ã®ãªã¯ã¨ã¹ãã§ãã¹ã¦ã®ãã¼ã¿ãåå¾ã§ãã¾ããã¾ãã<em>NerdGraph</em>ã¯ã<em>API</em>ãçµæçã«é²åããã¦ãå¼·åãªéçºèãã¼ã«ã¨ãªãã¾ãã <em>New</em> <em>Relic</em>ã¯ãçµã¿è¾¼ã¿ã¹ã­ã¼ãå®ç¾©ãä¼´"
      },
      "id": "6052efb528ccbc4a15c2fd36"
    },
    {
      "sections": [
        "Introduction to the Trace API",
        "ãã³ã",
        "What is the Trace API?",
        "Requirements",
        "Sampling considerations",
        "Start reporting data",
        "Find data",
        "Next steps"
      ],
      "title": "Introduction to the Trace API",
      "type": "docs-jp",
      "tags": [
        "Understand dependencies",
        "Distributed tracing",
        "Trace API"
      ],
      "external_id": "9254cc3588e15868cb1db7f8cb4b8d3db71883ed",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/understand-dependencies/distributed-tracing/trace-api/introduction-trace-api/",
      "published_at": "2021-03-18T19:43:09Z",
      "updated_at": "2021-03-18T19:43:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Trace API is used to send distributed tracing data to New Relic: either in our own generic format or the Zipkin data format. This API is also how trace data from some of our integrations and exporters is reported to New Relic. To skip some introductory content and get started quickly, go to Start reporting data. ãã³ã To use APIs and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. What is the Trace API? The Trace API is one way that New Relic collects distributed tracing data. We have some tracing tools that report data via this API (Infinite Tracing, our open source integrations, and our Telemetry SDKs), or you can use the API directly to create your own tracing implementation. Reasons to use the Trace API: You have your own custom distributed tracing tool and want to see that data in New Relic without changing your instrumentation. You have a tool that emits tracing data but that requires a backend for trace storage. You want to report distributed tracing data to New Relic without the use of our installed solutions. You use Zipkin and want to see that trace data in New Relic without changing your instrumentation. Want to understand how trace data relates to other New Relic data? Read about our data types. Requirements For details about what data you can send and how it is handled, see Rules and limits. Sampling considerations When using the Trace API, you have the option to enable Infinite Tracing. Whether you use Infinite Tracing has implications for how you configure sampling: Use your own sampling (no Infinite Tracing): If you don't use Infinite Tracing, it's assumed you want to use your own sampling implementation to sample traces before they're sent to us. (If your trace data exceeds our data limits, we do enact sampling.) Use Infinite Tracing: If you want to use Infinite Tracing, a typical approach is to send us 100% of your trace data and rely on Infinite Tracing sampling. (When you go through the Start reporting data instructions, below, you'll have an option for enabling Infinite Tracing.) Start reporting data The Trace API accepts trace data in these two JSON formats: zipkin: the Zipkin JSON v2 trace data format (learn what Zipkin is). Get started sending Zipkin data. newrelic: our general format. If you don't have Zipkin-format data, use this. Get started sending New Relic-format data. Having problems getting data to report? See Troubleshooting. Find data You can find data sent via the Trace API, or from integrations that use this API, in these locations: In our distributed tracing UI. By querying: For details about how to query and create custom charts, see Query distributed tracing data. Next steps Here are some additional steps to consider: Learn more about how distributed tracing works and the data structure. Decorate span data with custom attributes. Use our GraphQL-based NerdGraph API to programmatically query your trace data. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 706.8087,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to the Trace <em>API</em>",
        "sections": "Introduction to the Trace <em>API</em>",
        "tags": "Trace <em>API</em>",
        "body": ": For details about how to query and create custom charts, see Query distributed tracing data. Next steps Here are some additional steps to consider: Learn more about how distributed tracing works and the data structure. Decorate span data with custom attributes. Use our <em>GraphQL</em>-based <em>NerdGraph</em> <em>API</em>"
      },
      "id": "6053ad4d196a6782572d161c"
    }
  ],
  "/explore-docs/newrelic-cli": [
    {
      "sections": [
        "Secrets management",
        "Define secrets",
        "Important",
        "Tip",
        "Using environment variables",
        "Secrets variables",
        "AWS KMS secrets",
        "Vault secrets",
        "tls_config properties",
        "CyberArk command line interface",
        "CyberArk REST API",
        "New Relic CLI Obfuscation"
      ],
      "title": "Secrets management",
      "type": "docs",
      "tags": [
        "Integrations",
        "On-host integrations",
        "Installation"
      ],
      "external_id": "8e05204a80a9475aee87d85a4be07cff710faa31",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/host-integrations/installation/secrets-management/",
      "published_at": "2021-03-18T00:48:35Z",
      "updated_at": "2021-03-16T06:02:57Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With secrets management, you can configure the agent and on-host integrations to use sensitive data (such as passwords) without having to write them as plain text into the configuration files. Currently, Hashicorp Vault, AWS KMS, CyberArk and New Relic CLI obfuscation are supported. Define secrets To use secrets in a configuration YAML file: Define a variables section, where each entry is a name for a secret object. In each entry, include the source of the secret and the proper configuration to retrieve those secrets. In the general configuration section, set ${variable.property} placeholders that will be automatically replaced by the properties of the secret object. The secret object can be defined as a simple string or json object. Important If the secrets retrieval fails, the integration won't be executed, as the infrastructure agent does not have all the data it requires to execute. For example, the following configuration will retrieve an object named creds from Vault (you can define the object's name for the secret.) Let's assume that the stored object is a valid JSON with a property named user and another property named password. We want to use them to set the basic HTTP credentials of the status_url property from an Nginx on-host integration: integration_name: com.newrelic.nginx variables: creds: vault: http: url: http://my.vault.host/v1/newengine/data/secret headers: X-Vault-Token: my-vault-token instances: - name: nginx-server-metrics command: metrics arguments: status_url: http://${creds.user}:${creds.password}@example.com/status status_module: discover remote_monitoring: true labels: env: production role: load_balancer Copy Tip Both simple strings and valid JSON objects can be retrieved from variables. When using JSON objects make sure both keys and values are enclosed with double-quotes. Using environment variables Environment variables can be used into the variables section with the {{MY_ENV_VAR}} notation. When doing so, environment variables are expanded and their value is replaced at runtime. Use this method to avoid having sensitive values such as tokens or obfuscation keys included in the configuration file. When using environment variables in on-host integration configuration files the passthrough_environment setting must be defined. Secrets variables Define secrets in each configuration under a variables section. Each entry is a user-defined secret name that will store the properties of the retrieved secrets. Each variable can contain the following properties: YAML key Description ttl Type: String Amount of time before a secret is refreshed. This can be a number followed by a time unit (s, m or h). Examples: 30s, 10m, 1h Default: 1h aws-kms AWS KMS secret retrieval configuration vault Vault secret retrieval configuration cyberark-cli CyberArk command line interface configuration cyberark-api CyberArk REST API configuration obfuscated New Relic CLI obfuscation AWS KMS secrets To retrieve your secrets from Amazon KMS, you can set the following properties in your aws-kms section. Not all fields are required. For example, you will need either data, file, or http to provide the encoded KMS string. YAML key Description data Type: String Base64 encoded KMS string to decrypt file Type: String Path to file containing Base64 encoded KMS string to decrypt http Type: YAML properties HTTP configuration to use to request Base64 encoded KMS string to decrypt. For more information, see Vault http. credential_file Type: String Path to AWS credentials file config_file Type: String Path to AWS config file region Type: String AWS KMS region type Type: String (plain, equal, or json) Secret value format: plain: a raw string to be stored directly into the destination variable. equal: a key=property one-line string to be stored as object properties into the destination variable. json: a JSON object to be stored as properties into the destination variable. Secrets of type plain or json use dot notation; for example, ${mysecret.nestedkey}. The following example will allow retrieving a plain password string from AWS KMS. It must be decrypted from the provided data encoded string. variables: myPassword: aws-kms: data: T0hBSStGTEVY region: ap-southeast-2 credential_file: \"./my-aws-credentials-file\" config_file: \"./my-aws-config-file\" type: plain Copy Vault secrets Vault must enable an http field containing the HTTP configuration used to connect to Vault. The http entry can contain the following entries: YAML key Description url Type: String URL to request data from tls_config Type: YAML properties Use the TLS configuration properties headers Type: YAML map Request headers tls_config properties Important Secrets must use dot notation, for example, ${mysecret.nestedkey}. YAML key Description enable Type: Boolean Enable TLS Default: false insecure_skip_verify Type: Boolean Skip verifying serverâs certificate chain and host Default: false min_version Type: UInt16 The minimum SSL/TLS version that is acceptable Default: 0 (which uses TLS version 1.0) max_version Type: UInt16 The maximum SSL/TLS version that is acceptable Default: 0 (which uses TLS version 1.3) ca Type: String TLS certificate \"\" The following example will retrieve a secret using a Vault token from a secured server, and skip the server certificates verification: variables: mydata: vault: http: url: https://my.vault.host/v1/newengine/data/secret headers: X-Vault-Token: my-vault-token tls_config: insecure_skip_verify: true Copy CyberArk command line interface To retrieve secrets from the CyberArk command line interface (CLI) use the following configuration, all keys are required YAML Key Description cli Type: string Full path to the CyberArk CLI executable Default: \"\" app-id Type: string Application id of the secret holder Default: \"\" safe Type: string Safe containing the secret Default: \"\" folder Type: string Folder containing the secret Default: \"\" object Type: string The object the secret is associated with Default: \"\" The following example will retrieve a CyberArk secret using the command line interface: variables: credentials: cyberark-cli: cli: /full/path/to/clipasswordsdk app-id: my-appid safe: my-safe folder: my-folder object: my-object Copy CyberArk REST API To retrieve secrets using the CyberArk REST API there must be a http key containing the HTTP configuration. The http key contains these sub-keys, only url is required: YAML key Description url Type: String URL to request data from, this key is required Default: none tls_config Type: YAML properties Use the TLS configuration properties headers Type: YAML map Request headers The following example will retrieve a secret using the CyberArk REST API, skipping server certificate verification: variables: credentials: cyberark-api: http: url: https://hostname/AIMWebService/api/Accounts?AppID=myAppID&Query=Safe=mySafe;Object=myObject tls_config: insecure_skip_verify: true Copy New Relic CLI Obfuscation Important We recommend using any of the supported secrets providers instead of the simple obfuscation when possible. See our guidelines below to define environment variables to avoid having the obfuscation key in configuration files. Tip Infrastructure Agent 1.14.0 or above is required You can use the New Relic CLI obfuscate command to obscure sensitive information in the infrastructure agent or any on-host integration configuration file. Steps: Install the New Relic CLI on any host (it can be your development host). Run the CLI obfuscate command in order to generate the obfuscated value: newrelic agent config obfuscate --value '<plain_text_config_value>' --key '<obfuscation_key>' Copy Copy the result of the cli command into the text argument in the obfuscated section as shown in the examples below. YAML key Description key Type: String The string used when obfuscating the clear-text value using New Relic CLI Default: none secret Type: String The output of the newrelic-cli command Default: none Integrations configuration example The following example will allow retrieving the Nginx user and password that has been obfuscated using the New Relic CLI: integration_name: com.newrelic.nginx variables: creds: obfuscated: key: 'random_key_used_in_cli' secret: 'obscured_output_from_cli' instances: - name: nginx-server-metrics command: metrics arguments: status_url: http://${creds.user}:${creds.password}@example.com/status status_module: discover remote_monitoring: true Copy It's recommended to use environment variables for the obfuscation arguments as shown in the example below: integration_name: com.newrelic.nginx variables: creds: obfuscated: key: {{OBFUSCATION_KEY}} secret: {{OBFUSCATION_TEXT}} instances: - name: nginx-server-metrics command: metrics arguments: status_url: http://${creds.user}:${creds.password}@example.com/status status_module: discover remote_monitoring: true Copy Agent configuration example This example allows retrieving a string that contains the proxy details (user, password and host): variables: obfuscated_proxy: obfuscated: key: 'random_key_used_in_cli' secret: 'obscured_output_from_cli' proxy: ${obfuscated_proxy} Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 948.78064,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em> <em>CLI</em> Obfuscation",
        "body": "With secrets management, you can configure the agent and on-host integrations to use sensitive data (such as passwords) without having to write them as plain text into the configuration files. Currently, Hashicorp Vault, AWS KMS, CyberArk and <em>New</em> <em>Relic</em> <em>CLI</em> obfuscation are supported. Define secrets"
      },
      "id": "603eaeeae7b9d28cdf2a07dd"
    },
    {
      "image": "https://newrelic.com/content/dam/new-relic/opengraph/NROG_Image.png",
      "url": "https://newrelic.com/resources/webinars/Build-nerdlet-New-Relic-One-programmability-EMEA-200520?video=past-webinar",
      "sections": [
        "During the webinar you will learn:",
        "COMPANY",
        "CONNECT",
        "international"
      ],
      "published_at": "2021-03-17T17:54:42Z",
      "title": "Build a Nerdlet with New Relic One Programmability",
      "updated_at": "2021-03-16T05:04:39Z",
      "type": "storefront",
      "external_id": "8e6acf295e0921c9d6ddbb015cf6a7ab1829c8cf",
      "popularity": 1,
      "body": "logo-newrelic Search Products Pricing Solutions Help Center About New Relic for iOS or Android Â Â  New Relic Insights App for iOS Search icon Sign Up Log In Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience Tool Consolidation Open Source By Industry E-commerce and Retail Media Public Sector By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore open source projects Training Get help Community forum Global technical support Expert services About Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Social Impact Â  Investor Relations Newsroom Partner Program Contact Us logo-newrelic Want to use our logo? There's a page for that, including instructions and different styles and formats. Sorry about grabbing your right-click. Just trying to be helpful. You can also go home. Back to top icon Build a nerdlet with New Relic One programmability Webinar Build a nerdlet with New Relic One programmability Â  Learn how to build an application using data available in New Relic. Watch this exclusive 60 minute session to get an introduction to the fundamentals of New Relic One programmability and walk through the key concepts of developing New Relic applications. Training is delivered by a New Relic facilitator, who will guide you through the creation of an app from scratch. Â  Technical exercises include exposure to the following technical topics: Installing the New Relic command-line interface (CLI) on local workstation Setting New Relic API developer access credentials Executing New Relic CLI commands Making GraphQL and web service requests. During the webinar you will learn: Installation of New Relic CLI and environment setup Familiarisation with New Relic One application component model and lifecycle Advanced UI construction and data processing Individual self paced experimentation and Open Source example deployment. Request a demo COMPANY Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal CONNECT Contact Us Request Demo Events international newrelic.co.jp (æ¥æ¬èª) newrelic.fr (FranÃ§ais) newrelic.de (Deutsch) newrelic.co.kr (íêµ­ì´) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 873.16406,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a Nerdlet with <em>New</em> <em>Relic</em> One Programmability",
        "body": " to the following technical topics: Installing the <em>New</em> <em>Relic</em> command-line interface (<em>CLI</em>) on local workstation Setting <em>New</em> <em>Relic</em> API developer access credentials Executing <em>New</em> <em>Relic</em> <em>CLI</em> commands Making GraphQL and web service requests. During the webinar you will learn: Installation of <em>New</em> <em>Relic</em> <em>CLI</em>"
      },
      "id": "5ed2fe08e7b9d263f7c70718"
    },
    {
      "sections": [
        "Partial or missing logs for RDS, VPC, AWS Lambda",
        "Problem",
        "Solution"
      ],
      "title": "Partial or missing logs for RDS, VPC, AWS Lambda",
      "type": "docs",
      "tags": [
        "Integrations",
        "Amazon integrations",
        "Troubleshooting"
      ],
      "external_id": "66a81a2fa3b8b27bf6172c9bb2c3ecf28bbe13e9",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/amazon-integrations/troubleshooting/partial-or-missing-logs-rds-vpc-aws-lambda/",
      "published_at": "2021-03-18T09:41:45Z",
      "updated_at": "2021-03-13T01:15:24Z",
      "document_type": "troubleshooting_doc",
      "popularity": 1,
      "body": "Problem You are using NewRelic-log-ingestion, the lambda function for pushing logs from AWS to our RDS Enhanced Monitoring, VPC Flow Logs integrations, or early versions (alpha and beta) of monitoring for AWS Lambda. It is not working or it is sending partial data. Solution The NewRelic-log-ingestion lambda versions prior to 2.1 are being deprecated. Update to the latest lambdas published in the AWS Serverless Repository. You can either use the New Relic CLI or update manually. Recommended: The main way to update the log ingestion lambda function is to follow standard procedures to update the function using the New Relic CLI. You can also update the function manually: Avoid false positives in alerting: Follow UI procedures or API procedures to disable all alert conditions associated with monitoring integrations with AWS Lambda, RDS Enhanced Monitoring, and VPC Flow Logs. Remove the outdated lambda version of the lambda: Go to your AWS Lambda Console, and remove newrelic-log-ingestion. Be aware that this stops the RDS Enhanced Monitoring and the VPC Flow Logs integration until the next step is completed. Re-enable the service: Follow the instructions in RDS Enhanced Monitoring or VPC Flow Logs, or follow the step to configure CloudWatch logs to stream to New Relic Lambda. Check that your data is flowing through the new lambda.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 869.9835,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "-ingestion lambda versions prior to 2.1 are being deprecated. Update to the latest lambdas published in the AWS Serverless Repository. You can either use the <em>New</em> <em>Relic</em> <em>CLI</em> or update manually. Recommended: The main way to update the log ingestion lambda function is to follow standard procedures to update"
      },
      "id": "60450c97196a672ffa960f57"
    },
    {
      "sections": [
        "Quickly tag a set of resources",
        "Before you begin",
        "Install the New Relic CLI",
        "Linux",
        "macOS",
        "Windows",
        "Create your New Relic CLI profile",
        "Search for an entity",
        "Add tags and tag lists to your entity",
        "Important",
        "Check that the tags are there",
        "Tip",
        "Next steps"
      ],
      "title": "Quickly tag a set of resources",
      "type": "developer",
      "tags": [
        "tags",
        "new relic CLI"
      ],
      "external_id": "c7c374812f8295e409a9b06d552de51ceefc666b",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/5-mins-tag-resources/",
      "published_at": "2021-03-18T01:52:07Z",
      "updated_at": "2021-01-16T01:52:06Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Add tags to applications you instrument for easier filtering and organization.",
      "body": "Tags help you group, search, filter, and focus the data about your entities, which can be anything from applications to hosts to services. Tagging entities using the New Relic CLI is a good candidate for automation. In this 5-minute guide, you use the New Relic CLI to add multiple tags to one of your entities. Before you begin For this guide you need a New Relic user key: You can view and create them in the API keys UI. Step 1 of 6 Install the New Relic CLI You can download the New Relic CLI for macOS, Windows, and Linux. You can also download pre-built binaries for all platforms, including .deb and .rpm packages, and our Windows x64 .msi installer. Linux Install Snapcraft, and then run: bash Copy $ sudo snap install newrelic-cli macOS Install Homebrew, and then run: bash Copy $ brew install newrelic-cli Windows Install Scoop, and then run: bash Copy $ scoop bucket add newrelic-cli https://github.com/newrelic/newrelic-cli.git $ scoop install newrelic-cli Step 2 of 6 Create your New Relic CLI profile New Relic CLI profiles contain credentials and settings that you can apply to any CLI command. To create your first CLI profile, run the profiles add command. Don't forget to set the region of your New Relic account: use -r to set either us or eu (this is required). bash Copy $ # Create the tutorial account for the US region $ newrelic profiles add -n tutorial --apiKey API_KEY -r us $ # Set the profile as default $ newrelic profiles default -n tutorial Step 3 of 6 Search for an entity Your New Relic account might have hundreds of entities: Have a quick look by opening the Entity explorer. In the terminal, run entity search to retrieve a list of entities from your account as JSON. In this example, you're searching for all entities with \"test\" in their name. bash Copy $ # Change the `name` to match any of your existing entities $ newrelic entity search --name \"test\" Step 4 of 6 If there are matching entities in your account, the query yields data in JSON format similar to this workload example. Select an entity from the results and look for its guid value; the guid is the unique identifier of the entity. Copy or write it down. { \"accountId\": 123456789, \"domain\": \"NR1\", \"entityType\": \"WORKLOAD_ENTITY\", \"guid\": \"F7B7AE59FDED4204B846FB08423DB18E\", \"name\": \"Test workload\", \"reporting\": true, \"type\": \"WORKLOAD\" }, Copy Step 5 of 6 Add tags and tag lists to your entity Using your entity guid, you can add tags right away. Invoke the entities tags create command. If you want to add multiple tags, use tag sets: While tags are key-value pairs separated by colons, tag sets are comma-separated lists of tags. For example: tag1:value1,tag2:value2 Important Adding tags is an asynchronous operation: it could take a little while for the tags to get created. bash Copy $ # Adding a single tag $ newrelic entity tags create --guid GUID --tag key:value $ # Adding multiple tags $ newrelic entity tags create --guid GUID --tag tag1:test,tag2:test Step 6 of 6 Check that the tags are there To make sure that the tags have been added to your entities, retrieve them using the entity tags get command. All tags associated with your entity are retrieved as a JSON array. newrelic entity tags get --guid GUID Tip Tags can be deleted at any time by invoking the entity tags delete command followed by the same arguments you used to create them. [ { \"Key\": \"tag1\", \"Values\": [\"true\"] }, { \"Key\": \"tag2\", \"Values\": [\"test\"] }, { \"Key\": \"tag3\", \"Values\": [\"testing\"] } // ... ] Copy Next steps Have a look at all the New Relic CLI commands. For example, you could create a New Relic workflow using workload create. If you'd like to engage with other community members, visit our New Relic Explorers Hub page. We welcome feature requests or bug reports on GitHub.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 852.2665,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Install the <em>New</em> <em>Relic</em> <em>CLI</em>",
        "tags": "<em>new</em> <em>relic</em> <em>CLI</em>",
        "body": "Tags help you group, search, filter, and focus the data about your entities, which can be anything from applications to hosts to services. Tagging entities using the <em>New</em> <em>Relic</em> <em>CLI</em> is a good candidate for automation. In this 5-minute guide, you use the <em>New</em> <em>Relic</em> <em>CLI</em> to add multiple tags to one"
      },
      "id": "5efa999d64441fa74a5f7e2d"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-03-17T23:31:12Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errorsâand more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 830.52246,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "2. Take advantage of <em>CLI</em> tools",
        "tags": "<em>New</em> <em>Relic</em> solutions",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of <em>CLI</em> tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/terraform/terragrunt-configuration": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/terraform/",
      "sections": [
        "New Relic and Terraform",
        "Guides to new relic and terraform",
        "Getting started with New Relic and Terraform",
        "Using Terraform modules",
        "Using Terragrunt configurations"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "New Relic and Terraform",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "a0391aa84ef8cdb8d92329efb62a1a6141f44cac",
      "document_type": "page",
      "popularity": 1,
      "body": "Terraform is a popular infrastructure-as-code software tool software tool software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. Guides to new relic and terraform Getting started with New Relic and Terraform 30 min Learn how to provision New Relic resources using Terraform Using Terraform modules 30 min Learn how to use Terraform modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 393.91437,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic and <em>Terraform</em>",
        "sections": "New Relic and <em>Terraform</em>",
        "body": " provision an <em>alert</em> policy, four <em>alert</em> conditions, and a <em>notification</em> <em>channel</em>. Guides to new relic and <em>terraform</em> Getting started with New Relic and <em>Terraform</em> 30 min Learn how to provision New Relic resources using <em>Terraform</em> Using <em>Terraform</em> modules 30 min Learn how to use <em>Terraform</em> modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments"
      },
      "id": "601df6b928ccbc2507013383"
    },
    {
      "sections": [
        "Getting started with New Relic and Terraform",
        "Before you begin",
        "Bootstrap Terraform and the New Relic provider",
        "Configure the New Relic provider",
        "Tip",
        "Create a New Relic alert policy with the golden signal alerts",
        "Provision alert conditions based on the four golden signals",
        "Get notified when an alert triggers",
        "Extra Credit",
        "Conclusion"
      ],
      "title": "Getting started with New Relic and Terraform",
      "type": "developer",
      "tags": [
        "notification channel",
        "alerts",
        "golden signals",
        "terraform"
      ],
      "external_id": "a8e6eb8132628da407bf24eeeca752931f4a09df",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-terraform/",
      "published_at": "2021-03-18T01:52:08Z",
      "updated_at": "2021-03-09T01:49:21Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to provision New Relic resources using [Terraform](https://www.terraform.io/).",
      "body": "Terraform is a popular infrastructure-as-code software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic dashboards and alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. The four alert conditions are based on the four golden signals of monitoring introduced in Googleâs Site Reliability Engineering book: Latency: The amount of time it takes your application to service a request. Traffic: The amount of requests your system receives. Errors: The rate of requests that fail. Saturation: The stress on resources to meet the demands of your application. Before you begin To use this guide, you should have some basic knowledge of both New Relic and Terraform. If you haven't deployed a New Relic open source agent yet, install New Relic for your application. Also, install the Terraform CLI. Step 1 of 5 Bootstrap Terraform and the New Relic provider Start by initializing a working directory and creating a Terraform configuration file: bash Copy $ mkdir terraform-project && cd terraform-project $ touch main.tf Next, instruct Terraform to install and use the New Relic provider, by setting the terraform and required_providers blocks in main.tf: terraform { # Require Terraform version 0.13.x (recommended) required_version = \"~> 0.13.0\" # Require the latest 2.x version of the New Relic provider required_providers { newrelic = { source = \"newrelic/newrelic\" version = \"~> 2.21\" } } } Copy In this code block, you're setting the required version of Terraform to 0.13.x and setting the New Relic provider to the latest 2.x version. Using the right version constraints for your setup will provide better stability with your Terraform runs. Now that you've set your Terraform and New Relic provider versions, you need to configure the New Relic provider. Step 2 of 5 Configure the New Relic provider With terraform all set, configure the New Relic provider with the following items: Your New Relic Account ID. Your New Relic user key. Most user keys begin with the prefix NRAK-. Your New Relic region. Your region is US if your account settings page is located at one.newrelic.com, and EU if your account is located at one.eu.newrelic.com. In main.tf, set those values on the provider: provider \"newrelic\" { account_id = 12345 # Your New Relic account ID api_key = \"NRAK-***\" # Your New Relic user key region = \"US\" # US or EU (defaults to US) } Copy By setting these values on the New Relic provider, you're configuring that provider to make changes on behalf of your account through New Relic APIs. Tip You can also configure the New Relic provider using environment variables. This is a useful way to set default values for your provider configuration. For more information about configuring the New Relic provider, please feel free to check out our official provider documentation. With your New Relic provider configured, initialize Terraform: bash Copy $ terraform init When Terraform finishes installing and registering the New Relic provider, you'll receive a success message and some actionable next steps, such as running terraform plan. Before you can run terraform plan, however, you need to create your resources. Step 3 of 5 Create a New Relic alert policy with the golden signal alerts With the New Relic provider configured and initialized, you can define an alerting strategy for your application. Since you're targeting a specific application, use a newrelic_entity to fetch the application information from New Relic and allow us to reference that data elsewhere in the configuration: data \"newrelic_entity\" \"example_app\" { name = \"Your App Name\" # Must be an exact match to your application name in New Relic domain = \"APM\" # or BROWSER, INFRA, MOBILE, SYNTH, depending on your entity's domain type = \"APPLICATION\" } Copy Next, create a newrelic_alert_policy. Give the policy a dynamic name based on your application's name. This helps specify the scope of the policy: resource \"newrelic_alert_policy\" \"golden_signal_policy\" { name = \"Golden Signals - ${data.newrelic_entity.example_app.name}\" } Copy At this point, you should be able to test your configuration with a dry run: bash Copy $ terraform plan You should see output that displays Terraform's execution plan. The plan contains the actions Terraform performs when your run terraform apply: bash Copy # Example output ------------------------------------------------------------------------ An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # newrelic_alert_policy.golden_signal_policy will be created + resource \"newrelic_alert_policy\" \"golden_signal_policy\" { + account_id = (known after apply) + id = (known after apply) + incident_preference = \"PER_POLICY\" + name = \"Golden Signals - Your App Name\" } Plan: 1 to add, 0 to change, 0 to destroy. ------------------------------------------------------------------------ In this case, the plan shows you that Terraform will create a new alert policy when you run terraform apply. After verifying the details, execute the plan to provision the alert policy resource in your New Relic account: bash Copy $ terraform apply Every time you apply changes, Terraform asks you to confirm the actions you've told it to run. Type \"yes\". While it's running, Terraform sends logs to your console: bash Copy # Example output of `terraform apply` newrelic_alert_policy.golden_signal_policy: Creating... newrelic_alert_policy.golden_signal_policy: Creation complete after 1s [id=111222333] Apply complete! Resources: 1 added, 0 changed, 0 destroyed. Log in to New Relic and navigate to Alert Policies to confirm that Terraform created your new policy. As you move through the next steps of creating alert conditions, you can run terraform apply after configuring each resource. Refresh your alert policy webpage to see the new resources. Step 4 of 5 Provision alert conditions based on the four golden signals Next, add alert conditions for your application based on the four golden signals: latency, traffic, errors, and saturation. Apply these alert conditions to the alert policy you created in the previous step. Latency Most folks want to avoid slow response times. You can create a newrelic_alert_condition that triggers if the overall response time of your application rises above five seconds for five minutes: # Response time resource \"newrelic_alert_condition\" \"response_time_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Response Time (Web) - ${data.newrelic_entity.example_app.name}\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"response_time_web\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" term { duration = 5 operator = \"above\" priority = \"critical\" threshold = \"5\" time_function = \"all\" } } Copy Note that you're linking this alert condition to the previously configured alert policy with policy_id. Traffic Traffic represents how much demand is placed on your system at any given moment. Throughput is a metric that measures how much traffic goes to your application. Create a newrelic_alert_condition that triggers if the overall response rate of your application falls below five requests per minute for five minutes: # Low throughput resource \"newrelic_alert_condition\" \"throughput_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"Low Throughput (Web)\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"throughput_web\" condition_scope = \"application\" # Define a critical alert threshold that will # trigger after 5 minutes below 5 requests per minute. term { priority = \"critical\" duration = 5 operator = \"below\" threshold = \"5\" time_function = \"all\" } } Copy This type of alert is useful when you expect a constant baseline of traffic throughout the day â a drop off in traffic can indicate a problem. Errors If your application's error rate spikes, you need to know about it. Create a newrelic_alert_condition that triggers if your application's error rate rises above 5% for five minutes: # Error percentage resource \"newrelic_alert_condition\" \"error_percentage\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Error Percentage\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"error_percentage\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" # Define a critical alert threshold that will trigger after 5 minutes above a 5% error rate. term { duration = 5 operator = \"above\" threshold = \"5\" time_function = \"all\" } } Copy Saturation Saturation represents how \"full\" your service is and can take many forms, such as CPU time, memory allocation, or queue depth. In this example, assume you already have a New Relic Infrastructure agent installed on the hosts serving your application, and you want to configure an alert for when CPU utilization spikes above a certain threshold: # High CPU usage resource \"newrelic_infra_alert_condition\" \"high_cpu\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High CPU usage\" type = \"infra_metric\" event = \"SystemSample\" select = \"cpuPercent\" comparison = \"above\" runbook_url = \"https://www.example.com\" where = \"(`applicationId` = '${data.newrelic_entity.example_app.application_id}')\" # Define a critical alert threshold that will trigger after 5 minutes above 90% CPU utilization. critical { duration = 5 value = 90 time_function = \"all\" } } Copy For the Infrastructure alert, you created a newrelic_infra_alert_condition that triggers if the aggregate CPU usage on these hosts rises above 90% for five minutes. Step 5 of 5 Get notified when an alert triggers Now that you've configured some important alert conditions, add a notification channel to your alert policy to ensure the proper folks get notified when an alert triggers. To do so, use a newrelic_alert_channel. To begin, create an email notification channel to send alert notifications to your email. Use this when you want to notify a specific person or team when alerts are triggered: resource \"newrelic_alert_channel\" \"team_email\" { name = \"example\" type = \"email\" config { recipients = \"yourawesometeam@example.com\" include_json_attachment = \"1\" } } Copy If you want to specify multiple recipients, use a comma-delimited list of emails. Last, but not least, in order to apply the notification channel to your alert policy, create a newrelic_alert_policy_channel: resource \"newrelic_alert_policy_channel\" \"golden_signals\" { policy_id = newrelic_alert_policy.golden_signal_policy.id channel_ids = [newrelic_alert_channel.team_email.id] } Copy A newrelic_alert_policy_channel links the notification channel you just created to your alert policy. To finalize your golden signal alerts configuration, run terraform apply one last time to make sure all of your configured resources are up to date. Extra Credit new_relic_alert_channel supports several types of notification channels, including email, Slack, and PagerDuty. So, if you want to explore this more, try creating an alert channel for a second channel type, such as Slack: # Slack notification channel resource \"newrelic_alert_channel\" \"slack_notification\" { name = \"slack-example\" type = \"slack\" config { # Use the URL provided in your New Relic Slack integration url = \"https://hooks.slack.com/services/XXXXXXX/XXXXXXX/XXXXXXXXXX\" channel = \"your-slack-channel-for-alerts\" } } Copy Before you apply this change, you need to add the New Relic Slack App to your Slack account and select a Slack channel to send the notification. With this new alert channel, triggered alerts send notifications to the Slack channel of your choice. Conclusion As your team evaluates the alerting system youâve put in place, youâll find that you may need to tweak configuration values, such as the alert threshold and duration. If you manage your Terraform project in a remote repository, you can submit a pull request so your team can review these changes alongside the rest of your code contributions. Tip You may also want to consider automating this process in your CI/CD pipeline. Use Terraform's recommended practices guide to learn more about their recommended workflow and how to evolve your provisioning practices. Congratulations! You're officially practicing observability-as-code. Review the New Relic Terraform provider documentation to learn how you can take your configuration to the next level.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 363.60837,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Getting started with New Relic and <em>Terraform</em>",
        "sections": "Create a New Relic <em>alert</em> policy with the golden signal <em>alerts</em>",
        "info": "Learn how to provision New Relic resources using [<em>Terraform</em>](https:&#x2F;&#x2F;www.terraform.io&#x2F;).",
        "tags": "<em>notification</em> <em>channel</em>",
        "body": " = newrelic_<em>alert</em>_policy.golden_signal_policy.id <em>channel</em>_ids = [newrelic_<em>alert_channel</em>.team_email.id] } Copy A newrelic_<em>alert_policy_channel</em> links the <em>notification</em> <em>channel</em> you just created to your <em>alert</em> policy. To finalize your golden signal <em>alerts</em> configuration, run <em>terraform</em> apply one last time to make sure all"
      },
      "id": "6046d422e7b9d27a66579a0b"
    },
    {
      "sections": [
        "Test alert notification channels",
        "Request the test",
        "Troubleshoot the test results",
        "Tip"
      ],
      "title": "Test alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "c001fca5128a2fb8128ff655c44f9d51b6d5fa2a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/test-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:45:12Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You must save a new notification channel or any changes to an existing notification channel before testing it. Alerts will then send a test message to your chosen destination. Request the test To test a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Follow standard procedures to add a new notification channel or to update an existing notification channel, and save it. Select a notification channel, and then click Send a test notification. Review the test confirmation message, and then click Got it. Troubleshoot the test results A confirmation message will automatically show up in the user interface that indicates where the test was sent (for example, email) and whether it was successful. Also, the test notification message itself includes detailed information, including: The person who requested the test Links to policies for the channel Links to all notification channels and policies for the account Tip When troubleshooting problems, review the test notification message, and verify the setup requirements for the type of notification channel you selected. If necessary, make additional changes to your notification channel, and test it again as needed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 307.10876,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": "You must save a new <em>notification</em> <em>channel</em> or any changes to an existing <em>notification</em> <em>channel</em> before testing it. <em>Alerts</em> will then send a test message to your chosen destination. Request the test To test a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click"
      },
      "id": "603ec9ffe7b9d25b3d2a07a7"
    },
    {
      "sections": [
        "Update alert notification channels",
        "Reference for updating channels",
        "Add or remove policies assigned to a channel",
        "Assign a channel to policies",
        "Change a channel's name",
        "Check for policies assigned to a user",
        "Check how many policies are assigned to a channel",
        "Create more channels",
        "Delete a channel",
        "Test a saved channelView assigned alert policies",
        "Basic process"
      ],
      "title": "Update alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "521bed5aa6fdcea5c1cffd11d01e6dad19bc7c40",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/update-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:21Z",
      "updated_at": "2021-03-16T08:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Depending on the selected channel type, different values appear. Reference for updating channels Here's a quick reference for updating channels which also includes links to more detailed information and procedures. Add or remove policies assigned to a channel To add or remove policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Choose a channel, and then click Alert policies. From the selected policy, use the windows to select, remove, or clear all notification channels. Assign a channel to policies To add a notification channel to one or more policies: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies. Choose a policy, click Notification channels, and then click Add notification channels. Choose a channel, and then click Update policy. Change a channel's name To rename an existing notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details, change the name (maximum 64 characters) based on the channel type if applicable, and then save. Check for policies assigned to a user To check whether an account user has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Optional: Search by \"user\" to browse users or a specific username or email. Choose the user, then click Alert policies. Check how many policies are assigned to a channel To check whether a notification channel has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. The Policy subscriptions column lists how many policies are assigned to the channel. Create more channels To create a new notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Click New notification channel. Delete a channel To delete a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. In the list, click the Delete icon. Test a saved channelView assigned alert policies To view the policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, choose a channel, and then click Alert policies. OR To view the notification channels assigned to a policy: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies, choose a policy, then click Notification channels. Basic process Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details page, make any necessary changes, and then save. The user interface shows a Last modified time stamp for any changes to policies, including their conditions and notification channels.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 295.22522,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " to a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, click <em>Notification</em> channels. Choose a <em>channel</em>, and then click <em>Alert</em> policies. From the selected policy, use the windows to select, remove, or clear all <em>notification</em> channels. Assign a <em>channel</em> to policies To add"
      },
      "id": "603eca45e7b9d2d1d82a0806"
    },
    {
      "sections": [
        "Notification channels: Control where to send alerts",
        "Tip",
        "View notification channels",
        "Add or remove notification channels",
        "Instructions for specific notification channels",
        "User",
        "Email",
        "OpsGenie",
        "PagerDuty",
        "Slack",
        "VictorOps",
        "Webhook",
        "Important",
        "Caution",
        "xMatters",
        "Receive mobile push notifications",
        "Acknowledge alert notifications"
      ],
      "title": "Notification channels: Control where to send alerts",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "8600dc86e59fad5da1e4a2b4170d2b86df78ee2f",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/notification-channels-control-where-send-alerts/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:59:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use alerts to set up notification channels, and attach those channels to policies. Your selected channels provide fast and consistent ways for the right personnel to be notified about incidents. For example, notifications allow you to include charts about the incident to provide context and share them with your team. Alerts offers several notification channels, including webhooks, Slack rooms, email, and more. You'll be notified by your notification channels when incidents are opened, acknowledged, or closed. This document explains the available notification channels and how to set them up. Tip This document is about alerts notifications. For general information about unsubscribing from other New Relic emails, including marketing emails, weekly reports, and announcements, see Unsubscribe from New Relic emails. View notification channels To see all notification channels in your account: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Add or remove notification channels To set up a new notification channel: On the Notification channels, click New notification channel. Select the type of channel and complete other required steps for it. To add or remove a notification policy or channel: Select a specific notification channel, select Alert policies, and add or remove a policy. OR Select a specific policy, select Notification channels, and add or remove a channel. Instructions for specific notification channels These are the available notification channel types. User For your convenience, we automatically load all users and their email addresses for the selected account. If your account has one or more sub-accounts, the notification channel includes only users for the currently selected master or sub-account. Use the User notification channel to select existing account team members and admins. To view the Users list or to add users to alert policies: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. A user channel also sends push notifications to any of the user's registered mobile devices. A device is registered if the user has logged into New Relic using the mobile app on the device. Email We automatically add every individual and their email address on the selected account to the User notification channel and you can select them there. You don't need to add existing New Relic accounts to the Email channel. To add an email channel for other users, follow these guidelines: Field Description Email (required) In general, use the Email notification channel to identify user emails or email aliases that are not already on the selected account. For example, if you have a dev-ops@company.com email alias for your DevOps team, add the email alias to the Email channel. Otherwise, use the User notification channel to select specific users on your DevOps team. For easier maintenance, add a single non-user email address or alias to a single alert notification channel. If you want to use the email channel for more than one email, create an email group or alias outside your account. These email addresses can be the same as or different from email addresses already on your account. Users can unsubscribe from general (non-alerts-related) emails, but they cannot unsubscribe from alerts email notifications. Instead, the account Owner, Admin, or add-on manager must remove users from the policy's email notification channel. Include JSON attachment (optional) To include a JSON attachment with the email notification, select this checkbox. OpsGenie You must have an existing OpsGenie account integrated with New Relic in order to provide the following information: Field Description Channel name (required) A meaningful name for the OpsGenie notification channel (maximum 64 characters). API key (required) The API key generated from your OpsGenie integration used to authenticate API requests. Teams (optional) List of team names that are responsible for the alert. OpsGenie runs team escalation policies to calculate which users will receive notifications. Tags (optional) A comma-separated list of labels attached to the alert. Tip To overwrite the OpsGenie Quiet Hours setting for urgent alerts, add an OverwriteQuietHours tag. Recipients (optional) One or more names of users, groups, on-call schedules, escalation policies, etc., that OpsGenie uses to calculate where to send notifications. PagerDuty You must have an existing PagerDuty account in order to provide the following information: Field Description Service name (required) The name of your service integrating with PagerDuty for notifications. Integration key (required) The unique service identifier used by PagerDuty's Integration API to trigger, acknowledge, and resolve incidents for the service. Slack Before adding Slack notifications, you must create a unique webhook integration using Slack's New Relic integration. If you want web, transaction, server, and mobile alerts to be posted in separate channels, you must set up separate integrations for each one. Field Description Channel name (required) A meaningful name for the Slack notification channel (maximum 64 characters); for example, Network Ops Center. URL (required) Copy and paste the New Relic webhook integration URL that you've set up with Slack. For example: https://hooks.slack.com/services/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 Be sure to include https:// in the URL. Do not use http://. Team channel (optional) If used, include # before the name of the Slack channel where alert notifications are sent; for example, #NOC. VictorOps You must have an existing VictorOps account in order to provide the following required information: Field Description Channel name (required) A meaningful name for this notification channel (maximum 64 characters). For example, if the VictorOps Route key is for your Technical Support team, you could name this channel Tech Support - VictorOps. Key (required) VictorOps generates a unique key for each account. It maps the VictorOps account to its associated integrations. Route key (optional) This key maps the alert or incident to a specific team. Webhook Webhooks are HTTP POST messages containing JSON documents delivered to a destination URL. When an incident is opened, acknowledged, or closed, our webhook feature sends a message to your URL with any relevant information, such as a description of the event and a link back to New Relic. You also have the option to customize the payload in the POST message for further integration into your system. Important If your endpoint does not acknowledge the POST request within 10 seconds, the Alerts UI may indicate a failed notification event for the related incident. Before adding webhook notifications, you must have an endpoint set up to respond with a status code between 200 and 206 after receiving the following required information: Field Description Channel name (required) A meaningful name for the webhook (maximum 64 characters). Base url (required) The endpoint that will receive the POST message and trigger customized behaviors in your system. Caution If you want to include a port number in the webhook URL, make sure the port is available for requests. Otherwise the webhook will not work. Basic auth (optional) To require basic authentication for the webhook, select Add basic auth, and provide the user name and password to authenticate the webhook. Custom headers (optional) To include headers with webhooks, select Add custom headers, and provide the name and value for each header. Use custom payload (optional) To use the default values, leave blank. To view and edit the default values, select Add custom payload. Payload (for custom payloads only) Your customized POST message code. This field includes: A list of variables you can use Syntax highlighting, based on payload type Payload type (for custom payloads only) Specify the message format: JSON (default) or Form. xMatters You must have an existing xMatters account in order to provide the following information: Field Description Channel name (required) Name your channel so you can identify it easily when associating it with a policy. Integration url (required) The unique integration url provided by xMatters pointing to your xMatters account. Receive mobile push notifications Important In order to receive mobile push notifications, your device must be registered and listed in (account) > User preferences. If the device is not listed in User preferences, log out of the app, log back in, and check again to see if it is listed. To receive mobile push notifications: Log in to your New Relic account via the mobile app at least once to ensure the device is registered. Add the user channel to the alert policy. Switch push notifications On for the device. Acknowledge alert notifications Anyone in your account can acknowledge notifications through the user interface or email notification. Acknowledging an incident in New Relic also acknowledges any associated incident in PagerDuty.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 285.49335,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "sections": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " <em>notification</em> <em>channel</em> to select existing account team members and admins. To view the Users list or to add users to <em>alert</em> policies: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click <em>Notification</em> channels. A user <em>channel</em> also sends push notifications to any of the user&#x27;s registered"
      },
      "id": "603ecfbf64441f4ee54e885f"
    }
  ],
  "/build-apps/howto-use-nrone-table-components": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/components/sparkline-table-row-cell/",
      "sections": [
        "SparklineTableRowCell",
        "Usage",
        "Examples",
        "Example 1",
        "Example 2",
        "Props",
        "shape",
        "Methods",
        "SparklineTableRowCell.render"
      ],
      "published_at": "2021-03-18T01:54:17Z",
      "title": "SparklineTableRowCell",
      "updated_at": "2021-03-18T01:54:17Z",
      "type": "developer",
      "external_id": "8a9151a59bd3d13851ec9b97e44f7ff073946e60",
      "document_type": "page",
      "popularity": 1,
      "body": "Renders a table row cell showing a sparkline. Sparklines can either come from a NRQL query (thus providing accountId and query), or from a predefined data passed in the chart format. In either case, all props are 1:1 compatible with the <NrqlQuery> format type CHART. A common case to render one row per NRQL facet, is to perform the query outside of the table, then pass the result as items (returned data from a <NrqlQuery> is an array, that can be directly used as the input items of a table). Once rendering the sparkline, you need to re-wrap the data in an array, in order to build, from a series, a new entire set of data. Usage import { SparklineTableRowCell } from 'nr1' Copy Examples Example 1 1 function render() { 2 const items = [ 3 { 4 accountId: 1, 5 query: 6 \"SELECT count(*) FROM Transaction WHERE entityGuid = 'â¦' TIMESERIES\", 7 }, 8 ]; 9 10 return ( 11 <Table> 12 <TableHeader> 13 <TableHeaderCell>Sparkline</TableHeaderCell> 14 </TableHeader> 15 16 {({ item }) => ( 17 <TableRow> 18 <SparklineTableRowCell 19 accountId={item.accountId} 20 query={item.query} 21 /> 22 </TableRow> 23 )} 24 </Table> 25 ); 26 } Copy Example 2 1 <NrqlQuery 2 accountId={1} 3 query=\"SELECT count(*) FROM Transaction FACET entityGuid TIMESERIES UNTIL 5 MINUTES AGO\" 4 > 5 {({ loading, error, data }) => { 6 if (loading || error) { 7 return null; 8 } 9 10 return ( 11 <Table items={data}> 12 <TableHeader> 13 <TableHeaderCell>Entity GUID</TableHeaderCell> 14 <TableHeaderCell>Transactions</TableHeaderCell> 15 </TableHeader> 16 17 {({ item }) => ( 18 <TableRow> 19 <TableRowCell>{item.metadata.name}</TableRowCell> 20 <SparklineTableRowCell data={[item]} /> 21 </TableRow> 22 )} 23 </Table> 24 ); 25 }} 26 </NrqlQuery>; Copy Props accountIdnumber Sets the account ID to perform the query. classNamestring Appends class names to the component. Should be used only for positioning and spacing purposes. dataobject[] Data is an array of objects where each object represents a series to be drawn. Each series comprises visualization metadata and an array of data points. Example 1 1 const data = [ 2 { 3 metadata: { 4 id: 'series-1', 5 name: 'Serie 1', 6 color: '#a35ebf', 7 viz: 'main', 8 units_data: { 9 x: 'TIMESTAMP', 10 y: 'BYTES', 11 }, 12 }, 13 data: [ 14 { 15 x: 1616011390209, 16 y: 21400, 17 }, 18 { 19 x: 1616014990209, 20 y: 12200, 21 }, 22 { 23 x: 1616018590209, 24 y: 9300, 25 }, 26 { 27 x: 1616022190209, 28 y: 14500, 29 }, 30 { 31 x: 1616025790209, 32 y: 27500, 33 }, 34 { 35 x: 1616029390209, 36 y: 24700, 37 }, 38 ], 39 }, 40 { 41 metadata: { 42 id: 'series-2', 43 name: 'Serie 2', 44 color: '#85c956', 45 viz: 'main', 46 units_data: { 47 x: 'TIMESTAMP', 48 y: 'BYTES', 49 }, 50 }, 51 data: [ 52 { 53 x: 1616011390209, 54 y: 8800, 55 }, 56 { 57 x: 1616014990209, 58 y: 1400, 59 }, 60 { 61 x: 1616018590209, 62 y: 4600, 63 }, 64 { 65 x: 1616022190209, 66 y: 5200, 67 }, 68 { 69 x: 1616025790209, 70 y: 14100, 71 }, 72 { 73 x: 1616029390209, 74 y: 19300, 75 }, 76 ], 77 }, 78 { 79 metadata: { 80 id: 'events', 81 name: 'Events', 82 color: 'red', 83 viz: 'event', 84 }, 85 data: [ 86 { 87 x0: 1616014990209, 88 x1: 1616018590209, 89 }, 90 { 91 x0: 1616025790209, 92 x1: 1616025790209, 93 }, 94 ], 95 }, 96 ]; Copy onClickfunction Callback fired any time the user clicks on the table cell. function ( event : Event ) => undefined querystring NRQL query used for fetching data. The query is performed against the provided accountId. styleobject Inline style for custom styling. Should be used only for positioning and spacing purposes. testIdstring Adds a data-test-id. Used to target the component in unit and e2e testing. toshape|string Location object or url string to link to. shape pathnamerequiredstring searchstring hashstring Methods SparklineTableRowCell.render function () => undefined",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1975.3055,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " &lt;<em>TableHeaderCell</em>&gt;Sparkline&lt;&#x2F;<em>TableHeaderCell</em>&gt; 14 &lt;&#x2F;<em>TableHeader</em>&gt; 15 16 {({ item }) =&gt; ( 17 &lt;<em>TableRow</em>&gt; 18 &lt;Sparkline<em>TableRowCell</em> 19 accountId={item.accountId} 20 query={item.query} 21 &#x2F;&gt; 22 &lt;&#x2F;<em>TableRow</em>&gt; 23 )} 24 &lt;&#x2F;<em>Table</em>&gt; 25 ); 26 } Copy Example 2 1 &lt;NrqlQuery 2 accountId={1} 3 query=&quot;SELECT count"
      },
      "id": "5efa9906196a67b8837663fa"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/components/user-table-row-cell/",
      "sections": [
        "UserTableRowCell",
        "Usage",
        "Examples",
        "Example 1",
        "Props",
        "shape",
        "Methods",
        "UserTableRowCell.render"
      ],
      "published_at": "2021-03-18T01:55:32Z",
      "title": "UserTableRowCell",
      "updated_at": "2021-01-29T01:59:32Z",
      "type": "developer",
      "external_id": "765e8c8ba01ca8ae96c8e45e2223941812e17294",
      "document_type": "page",
      "popularity": 1,
      "body": "Renders a row table cell showing a particular user. This cell takes the user object as its children, which is in turn compatible with the NerdGraph user object (needing, at the very least, the name and gravatar fields). Usage import { UserTableRowCell } from 'nr1' Copy Examples Example 1 function render() { const items = [ { name: 'John Doe', gravatar: 'https://secure.gravatar.com/avatar/79988df068cb4d952284a3395412dc4f', }, ]; return ( <Table items={items}> <TableHeader> <TableHeaderCell>User</TableHeaderCell> </TableHeader> {({ item }) => ( <TableRow> <UserTableRowCell value={item} /> </TableRow> )} </Table> ); } 1 function render() { 2 const items = [ 3 { 4 name: 'John Doe', 5 gravatar: 6 'https://secure.gravatar.com/avatar/79988df068cb4d952284a3395412dc4f', 7 }, 8 ]; 9 10 return ( 11 <Table items={items}> 12 <TableHeader> 13 <TableHeaderCell>User</TableHeaderCell> 14 </TableHeader> 15 16 {({ item }) => ( 17 <TableRow> 18 <UserTableRowCell value={item} /> 19 </TableRow> 20 )} 21 </Table> 22 ); 23 } Copy Props classNamestring Appends class names to the component. Should be used only for positioning and spacing purposes. onClickfunction Callback fired any time the user clicks on the table cell. function ( event : Event ) => undefined styleobject Inline style for custom styling. Should be used only for positioning and spacing purposes. testIdstring Adds a data-test-id. Used to target the component in unit and e2e testing. toshape|string Location object or url string to link to. shape pathnamerequiredstring searchstring hashstring valuerequiredshape User object, that requires (at least), the name and gravatar fields. This object matches with the user structure obtained from NerdGraph. shape namerequiredstring gravatarrequiredstring Methods UserTableRowCell.render function () => undefined",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 915.0323,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " render() { const items = [ { name: &#x27;John Doe&#x27;, gravatar: &#x27;https:&#x2F;&#x2F;secure.gravatar.com&#x2F;avatar&#x2F;79988df068cb4d952284a3395412dc4f&#x27;, }, ]; return ( &lt;<em>Table</em> items={items}&gt; &lt;<em>TableHeader</em>&gt; &lt;<em>TableHeaderCell</em>&gt;User&lt;&#x2F;<em>TableHeaderCell</em>&gt; &lt;&#x2F;<em>TableHeader</em>&gt; {({ item }) =&gt; ( &lt;<em>TableRow</em>&gt; &lt;User<em>TableRowCell</em> value={item"
      },
      "id": "5efa98d464441f3b815f7e72"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/components/entity-title-table-row-cell/",
      "sections": [
        "EntityTitleTableRowCell",
        "Usage",
        "Examples",
        "Example 1",
        "Props",
        "shape",
        "Methods",
        "EntityTitleTableRowCell.render"
      ],
      "published_at": "2021-03-18T01:48:31Z",
      "title": "EntityTitleTableRowCell",
      "updated_at": "2021-01-29T01:56:48Z",
      "type": "developer",
      "external_id": "624657ff4b10659dfcb70e034f47ec8d28609706",
      "document_type": "page",
      "popularity": 1,
      "body": "Renders a row table cell showing the title of a particular entity. This cell takes the entity object as its children, which is in turn compatible with the NerdGraph entity object (needing, at the very least, the name and reporting fields). If alertable, you should also query for alertSeverity. Usage import { EntityTitleTableRowCell } from 'nr1' Copy Examples Example 1 function render() { const items = [ { name: 'Login service', alertSeverity: 'CRITICAL', reporting: true, }, ]; return ( <Table items={items}> <TableHeader> <TableHeaderCell>User</TableHeaderCell> </TableHeader> {({ item }) => ( <TableRow> <EntityTitleTableRowCell value={item} /> </TableRow> )} </Table> ); } 1 function render() { 2 const items = [ 3 { 4 name: 'Login service', 5 alertSeverity: 'CRITICAL', 6 reporting: true, 7 }, 8 ]; 9 10 return ( 11 <Table items={items}> 12 <TableHeader> 13 <TableHeaderCell>User</TableHeaderCell> 14 </TableHeader> 15 16 {({ item }) => ( 17 <TableRow> 18 <EntityTitleTableRowCell value={item} /> 19 </TableRow> 20 )} 21 </Table> 22 ); 23 } Copy Props classNamestring Appends class names to the component. Should be used only for positioning and spacing purposes. onClickfunction Callback fired any time the user clicks on the cell. function ( event : Event ) => undefined styleobject Inline style for custom styling. Should be used only for positioning and spacing purposes. testIdstring Adds a data-test-id. Used to target the component in unit and e2e testing. toshape|string Location object or url string to link to. shape pathnamerequiredstring searchstring hashstring valuerequiredshape Entity object, that requires (at least), the name and reporting fields. This object matches with the user structure obtained from NerdGraph. shape namerequiredstring alertSeveritystring reportingrequiredboolean Methods EntityTitleTableRowCell.render function () => undefined",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 914.74744,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "&lt;&#x2F;<em>TableHeaderCell</em>&gt; 14 &lt;&#x2F;<em>TableHeader</em>&gt; 15 16 {({ item }) =&gt; ( 17 &lt;<em>TableRow</em>&gt; 18 &lt;EntityTitle<em>TableRowCell</em> value={item} &#x2F;&gt; 19 &lt;&#x2F;<em>TableRow</em>&gt; 20 )} 21 &lt;&#x2F;<em>Table</em>&gt; 22 ); 23 } Copy Props classNamestring Appends class names to the <em>component</em>. Should be used only for positioning and spacing purposes. onClickfunction Callback"
      },
      "id": "5efa98d4196a67923f766450"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/components/table/",
      "sections": [
        "Table",
        "Usage",
        "Examples",
        "Basic",
        "Sorting",
        "Query with Table",
        "Props",
        "Methods",
        "Table.render"
      ],
      "published_at": "2021-03-18T01:55:33Z",
      "title": "Table",
      "updated_at": "2021-01-29T01:59:31Z",
      "type": "developer",
      "external_id": "878b3ab08dbd0a7df42558a970648013adde957f",
      "document_type": "page",
      "popularity": 1,
      "body": "Renders a table with a fixed header and rows. The table implements the following features: Flexible layout: table headers accept a variety of sizes to enable fluid and fixed layouts. You can find more information on how to customize your columns checking TableHeaderCell. Sorting: items passed can be internally sorted by the table according to the current sorting state of the table. You can find more information about sorting by checking TableHeaderCell. Row selection: rows can be selected through checkboxes on the right hand side. You can find more information in the selected prop. Row actions: contextual actions can be triggered per row, enabling users to achieve functionality over them. You can find more information on how to add them in TableRow. Custom pre-defined cells: some very common patterns for cells (entity title, metrics, etc.) are already provided by the platform, so that you only need to return it as part of your row. Virtualization: cells are only rendered if they are shown on screen. This enables the table to work with a large dataset with almost no performance penalty. Usage import { Table } from 'nr1' Copy Examples Basic class Example extends React.Component { _getActions() { return [ { label: 'Action 1', disabled: true, onClick: (evt, { item, index }) => { alert(`Action 1:\\nItem: ${index}\\n${JSON.stringify(item, null, 2)}`); }, }, { label: 'Action 2', onClick: (evt, { item, index }) => { alert(`Action 2:\\nItem: ${index}\\n${JSON.stringify(item, null, 2)}`); }, }, ]; } _getItems() { return [ { name: 'Melton Garcia', gender: 'Male', company: 'Comtest', phone: '+1 (867) 477-3284', selected: true, }, { name: 'Finley Mendez', gender: 'Male', company: 'Anarco', phone: '+1 (817) 438-3205', selected: false, }, { name: 'Coleen Salinas', gender: 'Female', company: 'Macronaut', phone: '+1 (962) 419-3856', selected: true, }, ]; } render() { return ( <Table items={this._getItems()} selected={({ item }) => item.selected} onSelect={(evt, { item }) => (item.selected = evt.target.checked)} > <TableHeader> <TableHeaderCell value={({ item }) => item.name} width=\"50%\"> Name </TableHeaderCell> <TableHeaderCell value={({ item }) => item.gender}> Gender </TableHeaderCell> <TableHeaderCell value={({ item }) => item.company}> Company </TableHeaderCell> <TableHeaderCell value={({ item }) => item.phone} width=\"fit-content\" alignmentType={TableRowCell.ALIGNMENT_TYPE.RIGHT} > Phone </TableHeaderCell> </TableHeader> {({ item }) => ( <TableRow actions={this._getActions()}> <TableRowCell>{item.name}</TableRowCell> <TableRowCell>{item.gender}</TableRowCell> <TableRowCell>{item.company}</TableRowCell> <TableRowCell>{item.phone}</TableRowCell> </TableRow> )} </Table> ); } } 1 class Example extends React.Component { 2 _getActions() { 3 return [ 4 { 5 label: 'Action 1', 6 disabled: true, 7 onClick: (evt, { item, index }) => { 8 alert(`Action 1:\\nItem: ${index}\\n${JSON.stringify(item, null, 2)}`); 9 }, 10 }, 11 { 12 label: 'Action 2', 13 onClick: (evt, { item, index }) => { 14 alert(`Action 2:\\nItem: ${index}\\n${JSON.stringify(item, null, 2)}`); 15 }, 16 }, 17 ]; 18 } 19 20 _getItems() { 21 return [ 22 { 23 name: 'Melton Garcia', 24 gender: 'Male', 25 company: 'Comtest', 26 phone: '+1 (867) 477-3284', 27 selected: true, 28 }, 29 { 30 name: 'Finley Mendez', 31 gender: 'Male', 32 company: 'Anarco', 33 phone: '+1 (817) 438-3205', 34 selected: false, 35 }, 36 { 37 name: 'Coleen Salinas', 38 gender: 'Female', 39 company: 'Macronaut', 40 phone: '+1 (962) 419-3856', 41 selected: true, 42 }, 43 ]; 44 } 45 46 render() { 47 return ( 48 <Table 49 items={this._getItems()} 50 selected={({ item }) => item.selected} 51 onSelect={(evt, { item }) => (item.selected = evt.target.checked)} 52 > 53 <TableHeader> 54 <TableHeaderCell value={({ item }) => item.name} width=\"50%\"> 55 Name 56 </TableHeaderCell> 57 <TableHeaderCell value={({ item }) => item.gender}> 58 Gender 59 </TableHeaderCell> 60 <TableHeaderCell value={({ item }) => item.company}> 61 Company 62 </TableHeaderCell> 63 <TableHeaderCell 64 value={({ item }) => item.phone} 65 width=\"fit-content\" 66 alignmentType={TableRowCell.ALIGNMENT_TYPE.RIGHT} 67 > 68 Phone 69 </TableHeaderCell> 70 </TableHeader> 71 72 {({ item }) => ( 73 <TableRow actions={this._getActions()}> 74 <TableRowCell>{item.name}</TableRowCell> 75 <TableRowCell>{item.gender}</TableRowCell> 76 <TableRowCell>{item.company}</TableRowCell> 77 <TableRowCell>{item.phone}</TableRowCell> 78 </TableRow> 79 )} 80 </Table> 81 ); 82 } 83 } Copy Sorting class Example extends React.Component { constructor() { super(...arguments); this.state = { column_0: TableHeaderCell.SORTING_TYPE.ASCENDING, }; } _getItems() { return [ { name: 'Melton Garcia', gender: 'Male', company: 'Comtest', phone: '+1 (867) 477-3284', selected: true, }, { name: 'Finley Mendez', gender: 'Male', company: 'Anarco', phone: '+1 (817) 438-3205', selected: false, }, { name: 'Coleen Salinas', gender: 'Female', company: 'Macronaut', phone: '+1 (962) 419-3856', selected: true, }, ]; } _onClickTableHeaderCell(key, event, sortingData) { this.setState({ [key]: sortingData.nextSortingType }); } render() { return ( <Table items={this._getItems()} selected={({ item }) => item.selected} onSelect={(evt, { item }) => (item.selected = evt.target.checked)} > <TableHeader> <TableHeaderCell value={({ item }) => item.name} sortable sortingType={this.state.column_0} sortingOrder={1} onClick={this._onClickTableHeaderCell.bind(this, 'column_0')} > Name </TableHeaderCell> <TableHeaderCell value={({ item }) => item.gender} sortable sortingType={this.state.column_1} sortingOrder={0} onClick={this._onClickTableHeaderCell.bind(this, 'column_1')} > Gender </TableHeaderCell> <TableHeaderCell value={({ item }) => item.company} sortable sortingType={this.state.column_2} sortingOrder={2} onClick={this._onClickTableHeaderCell.bind(this, 'column_2')} > Company </TableHeaderCell> <TableHeaderCell value={({ item }) => item.phone}> Phone </TableHeaderCell> </TableHeader> {({ item }) => ( <TableRow> <TableRowCell>{item.name}</TableRowCell> <TableRowCell>{item.gender}</TableRowCell> <TableRowCell>{item.company}</TableRowCell> <TableRowCell>{item.phone}</TableRowCell> </TableRow> )} </Table> ); } } 1 class Example extends React.Component { 2 constructor() { 3 super(...arguments); 4 5 this.state = { 6 column_0: TableHeaderCell.SORTING_TYPE.ASCENDING, 7 }; 8 } 9 10 _getItems() { 11 return [ 12 { 13 name: 'Melton Garcia', 14 gender: 'Male', 15 company: 'Comtest', 16 phone: '+1 (867) 477-3284', 17 selected: true, 18 }, 19 { 20 name: 'Finley Mendez', 21 gender: 'Male', 22 company: 'Anarco', 23 phone: '+1 (817) 438-3205', 24 selected: false, 25 }, 26 { 27 name: 'Coleen Salinas', 28 gender: 'Female', 29 company: 'Macronaut', 30 phone: '+1 (962) 419-3856', 31 selected: true, 32 }, 33 ]; 34 } 35 36 _onClickTableHeaderCell(key, event, sortingData) { 37 this.setState({ [key]: sortingData.nextSortingType }); 38 } 39 40 render() { 41 return ( 42 <Table 43 items={this._getItems()} 44 selected={({ item }) => item.selected} 45 onSelect={(evt, { item }) => (item.selected = evt.target.checked)} 46 > 47 <TableHeader> 48 <TableHeaderCell 49 value={({ item }) => item.name} 50 sortable 51 sortingType={this.state.column_0} 52 sortingOrder={1} 53 onClick={this._onClickTableHeaderCell.bind(this, 'column_0')} 54 > 55 Name 56 </TableHeaderCell> 57 <TableHeaderCell 58 value={({ item }) => item.gender} 59 sortable 60 sortingType={this.state.column_1} 61 sortingOrder={0} 62 onClick={this._onClickTableHeaderCell.bind(this, 'column_1')} 63 > 64 Gender 65 </TableHeaderCell> 66 <TableHeaderCell 67 value={({ item }) => item.company} 68 sortable 69 sortingType={this.state.column_2} 70 sortingOrder={2} 71 onClick={this._onClickTableHeaderCell.bind(this, 'column_2')} 72 > 73 Company 74 </TableHeaderCell> 75 <TableHeaderCell value={({ item }) => item.phone}> 76 Phone 77 </TableHeaderCell> 78 </TableHeader> 79 80 {({ item }) => ( 81 <TableRow> 82 <TableRowCell>{item.name}</TableRowCell> 83 <TableRowCell>{item.gender}</TableRowCell> 84 <TableRowCell>{item.company}</TableRowCell> 85 <TableRowCell>{item.phone}</TableRowCell> 86 </TableRow> 87 )} 88 </Table> 89 ); 90 } 91 } Copy Query with Table 1 <EntitiesByDomainTypeQuery entityDomain=\"APM\" entityType=\"APPLICATION\"> 2 {({ error, data, fetchMore }) => { 3 if (!data.entities.length && error) { 4 return 'Error!'; 5 } 6 return ( 7 <Table items={data.entities} rowCount={data.count} onLoadMore={fetchMore}> 8 <TableHeader> 9 <TableHeaderCell value={({ item }) => item.name}> 10 name 11 </TableHeaderCell> 12 <TableHeaderCell value={({ item }) => item.id}> 13 entityGuid 14 </TableHeaderCell> 15 <TableHeaderCell value={({ item }) => item.accountId}> 16 accountId 17 </TableHeaderCell> 18 </TableHeader> 19 {({ item }) => ( 20 <TableRow> 21 <EntityTitleTableRowCell value={item} /> 22 <TableRowCell>{item.guid}</TableRowCell> 23 <TableRowCell>{item.accountId}</TableRowCell> 24 </TableRow> 25 )} 26 </Table> 27 ); 28 }} 29 </EntitiesByDomainTypeQuery>; Copy Props children(node|function)[] Contents of the table. Table can only contain as children <TableHeader> and a function returning <TableRow>s. function () => undefined classNamestring Appends class names to the component. Should be used only for positioning and spacing purposes. compactboolean DEFAULT false Establishes whether the table should render in compact mode (compact mode has narrower rows). In general, use the standard mode, since compact is reserved for data representation, e.g. in a dashboard. itemsany[] DEFAULT [] The items to be used when rendering. They are required when rendering items with a render callback. Each item can have any structure and type possible, and will the corresponding one will be provided when rendering each element list. mainColumnnumber DEFAULT 0 Column containing the main data identifying the row. Often the first column (index 0) is the relevant one, but actions (like favorites) could be placed before it. onLoadMorefunction Callback fired when more items must be loaded. This happens when you're lazy loading the items and the items that are about to render cannot be found in the items array. This callback should be used to fetch/load the missing items from the backend or other sources. The returned Promise should be resolved once item data has finished loading. It will be used to determine when to refresh the list with the newly-loaded data. This callback may be called multiple times in reaction to a single scroll event. function ( cursor : {Object // Items to load. ) => undefined onSelectfunction Function called when the user clicks over a row checkbox. It is called with the event of the checkbox, as well as with an object containing the item representing the row, its index in the items array passed to the table, and the items themselves. When the user selects or unselects the header checkbox (select / unselect all), the callback will be called once for every item, representing individual clicks over each row. The header checkbox state is automatically controlled by the table. function () => undefined rowCountnumber Number of rows. By default it's equal to length of array passed in the items prop. You should specify the rowCount when you know the total number of items but you want to lazy load them while scrolling. selectedfunction Function that returns whether a row is selected. It needs to return a boolean representing the state of the row. It is called with an object containing the item representing the row, its index in the items array passed to the table, and the items themselves. function ( args : {Object ) => undefined spacingTypeenum[] Spacing property. Spacing is defined as a tuple of zero to four values, which follow the same conventions as CSS properties like margin or padding. To omit a value, use SPACING_TYPE.OMIT. <Array of <One of Table.SPACING_TYPE.EXTRA_LARGE , Table.SPACING_TYPE.LARGE , Table.SPACING_TYPE.MEDIUM , Table.SPACING_TYPE.NONE , Table.SPACING_TYPE.OMIT , Table.SPACING_TYPE.SMALL , > > styleobject Inline style for custom styling. Should be used only for positioning and spacing purposes. testIdstring Adds a data-test-id. Used to target the component in unit and e2e testing. Methods Table.render function () => undefined",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 903.64026,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Table</em>",
        "sections": "<em>Table</em>",
        "body": "={<em>TableRowCell</em>.ALIGNMENT_TYPE.RIGHT} &gt; Phone &lt;&#x2F;<em>TableHeaderCell</em>&gt; &lt;&#x2F;<em>TableHeader</em>&gt; {({ item }) =&gt; ( &lt;<em>TableRow</em> actions={this._getActions()}&gt; &lt;<em>TableRowCell</em>&gt;{item.name}&lt;&#x2F;<em>TableRowCell</em>&gt; &lt;<em>TableRowCell</em>&gt;{item.gender}&lt;&#x2F;<em>TableRowCell</em>&gt; &lt;<em>TableRowCell</em>&gt;{item.company}&lt;&#x2F;<em>TableRowCell</em>&gt; &lt;<em>TableRowCell</em>&gt;{item.phone}&lt;&#x2F;<em>TableRowCell</em>&gt; &lt;&#x2F;<em>TableRow</em>&gt; )} &lt;&#x2F;<em>Table</em>"
      },
      "id": "5efa98d428ccbcebbd307dfb"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/components/metric-table-row-cell/",
      "sections": [
        "MetricTableRowCell",
        "Usage",
        "Examples",
        "Example 1",
        "Props",
        "shape",
        "Methods",
        "MetricTableRowCell.render"
      ],
      "published_at": "2021-03-18T01:58:15Z",
      "title": "MetricTableRowCell",
      "updated_at": "2021-01-29T01:58:05Z",
      "type": "developer",
      "external_id": "b3f3bb23254c69af9c2c0f5350018bae35f5506c",
      "document_type": "page",
      "popularity": 1,
      "body": "Renders a row table cell showing a particular metric. The metric is formatted according to the unit passed. Units are 1:1 compatible with the ones supported by <NrqlQuery> format type CHART. Unit and prefix formatting is automatically picked for you so that it is consistent with the rest of the platform. Metrics are automatically aligned to the left, and ellipsified from the right, which is the standard way for presenting them. Usage import { MetricTableRowCell } from 'nr1' Copy Examples Example 1 function render() { const items = [ { value: 123456789, }, ]; return ( <Table items={items}> <TableHeader> <TableHeaderCell>User</TableHeaderCell> </TableHeader> {({ item }) => ( <TableRow> <MetricTableRowCell type={MetricTableRowCell.TYPE.BITS} value={item.value} /> </TableRow> )} </Table> ); } 1 function render() { 2 const items = [ 3 { 4 value: 123456789, 5 }, 6 ]; 7 8 return ( 9 <Table items={items}> 10 <TableHeader> 11 <TableHeaderCell>User</TableHeaderCell> 12 </TableHeader> 13 14 {({ item }) => ( 15 <TableRow> 16 <MetricTableRowCell 17 type={MetricTableRowCell.TYPE.BITS} 18 value={item.value} 19 /> 20 </TableRow> 21 )} 22 </Table> 23 ); 24 } Copy Props classNamestring Appends class names to the component. Should be used only for positioning and spacing purposes. onClickfunction Callback fired any time the user clicks on the table cell. function ( event : Event ) => undefined styleobject Inline style for custom styling. Should be used only for positioning and spacing purposes. testIdstring Adds a data-test-id. Used to target the component in unit and e2e testing. toshape|string Location object or url string to link to. shape pathnamerequiredstring searchstring hashstring typeenum DEFAULT MetricTableRowCell . TYPE . UNKNOWN Unit of the provided metric. Will be used for auto-formatting the numerical value. <One of MetricTableRowCell.TYPE.APDEX , MetricTableRowCell.TYPE.BITS , MetricTableRowCell.TYPE.BITS_PER_MS , MetricTableRowCell.TYPE.BITS_PER_SECOND , MetricTableRowCell.TYPE.BYTES , MetricTableRowCell.TYPE.BYTES_PER_MS , MetricTableRowCell.TYPE.BYTES_PER_SECOND , MetricTableRowCell.TYPE.COUNT , MetricTableRowCell.TYPE.HERTZ , MetricTableRowCell.TYPE.MS , MetricTableRowCell.TYPE.PAGES_PER_SECOND , MetricTableRowCell.TYPE.PERCENTAGE , MetricTableRowCell.TYPE.REQUESTS_PER_SECOND , MetricTableRowCell.TYPE.SECONDS , MetricTableRowCell.TYPE.TIMESTAMP , MetricTableRowCell.TYPE.UNKNOWN , > valuerequirednumber Metric value, always in the shape of a number. Methods MetricTableRowCell.render function () => undefined",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 884.4205,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "}&gt; &lt;<em>TableHeader</em>&gt; &lt;<em>TableHeaderCell</em>&gt;User&lt;&#x2F;<em>TableHeaderCell</em>&gt; &lt;&#x2F;<em>TableHeader</em>&gt; {({ item }) =&gt; ( &lt;<em>TableRow</em>&gt; &lt;Metric<em>TableRowCell</em> type={Metric<em>TableRowCell</em>.TYPE.BITS} value={item.value} &#x2F;&gt; &lt;&#x2F;<em>TableRow</em>&gt; )} &lt;&#x2F;<em>Table</em>&gt; ); } 1 function render() { 2 const items = [ 3 { 4 value: 123456789, 5 }, 6 ]; 7 8 return ( 9 &lt;<em>Table</em>"
      },
      "id": "5efa98d5e7b9d2c0397bab3c"
    }
  ],
  "/automate-workflows/kubernetes-helm-deployment": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/",
      "sections": [
        "Automate workflows",
        "Guides to automate workflows",
        "Quickly tag resources",
        "Automatically tag a simple \"Hello World\" Demo across the entire stack",
        "Set up New Relic using the Kubernetes operator",
        "Automate common tasks",
        "Getting started with New Relic and Terraform",
        "Set up New Relic using Helm charts",
        "Use New Relic to diagnose problems"
      ],
      "published_at": "2021-03-18T01:50:51Z",
      "title": "Automate workflows",
      "updated_at": "2021-03-11T01:48:25Z",
      "type": "developer",
      "external_id": "d4f408f077ed950dc359ad44829e9cfbd2ca4871",
      "document_type": "page",
      "popularity": 1,
      "body": "When building today's complex systems, you want an easy, predictable way to verify that your configuration is defined as expected. This concept, Observability as Code, is brought to life through a collection of New Relic-supported orchestration tools, including Terraform, AWS CloudFormation, and a command-line interface. These tools enable you to integrate New Relic into your existing workflows, easing adoption, accelerating deployment, and returning focus to your main job â getting stuff done. In addition to our Terraform and CLI guides below, find more automation solutions in our Developer Toolkit. Guides to automate workflows Quickly tag resources 5 min Add tags to apps for easy filtering Automatically tag a simple \"Hello World\" Demo across the entire stack 30 min See how easy it is to leverage automation in your DevOps environment! Set up New Relic using the Kubernetes operator 20 min Learn how to provision New Relic resources using the Kubernetes operator Automate common tasks 20 min Use the New Relic CLI to tag apps and create deployment markers Getting started with New Relic and Terraform 30 min Learn how to provision New Relic resources using Terraform Set up New Relic using Helm charts 20 min Learn how to set up New Relic using Helm charts Use New Relic to diagnose problems 30 min Learn to diagnose problems using New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 4994.552,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> <em>Helm</em> <em>charts</em>",
        "body": " <em>using</em> <em>Helm</em> <em>charts</em> 20 min Learn how to <em>set</em> <em>up</em> <em>New</em> <em>Relic</em> <em>using</em> <em>Helm</em> <em>charts</em> <em>Use</em> <em>New</em> <em>Relic</em> to diagnose problems 30 min Learn to diagnose problems <em>using</em> <em>New</em> <em>Relic</em>."
      },
      "id": "5efa999c196a67dfb4766445"
    },
    {
      "sections": [
        "Install containerized private minions (CPMs)",
        "ãã³ã",
        "General private minion features",
        "Kubernetes-specific features",
        "System requirements and compatibility",
        "æ³¨æ",
        "Docker container system environment requirements",
        "Kubernetes container orchestration system environment requirements (CPM v3.0.0 or higher)",
        "Private location key",
        "Sandboxing and Docker dependencies",
        "Docker dependencies",
        "Install and update CPM versions",
        "Start the CPM",
        "Docker start procedure",
        "Kubernetes start procedure",
        "Stop or delete the CPM",
        "Docker stop procedure",
        "Kubernetes delete procedure",
        "Show help and examples",
        "Show license information",
        "Configure CPM",
        "Networks",
        "Security, sandboxing, and running as non-root",
        "Run as non-root user for Docker",
        "Docker image repository",
        "Additional considerations for CPM connection"
      ],
      "title": "Install containerized private minions (CPMs)",
      "type": "docs-jp",
      "tags": [
        "Synthetics",
        "Synthetic monitoring",
        "Private locations"
      ],
      "external_id": "525a08cd73d5fa232a468b1dbea185f06e2de718",
      "image": "https://docs.newrelic.com/static/img-integration-k8-ed6795cfdb010c5eabb1cfe9c83a82a9.png",
      "url": "https://docs.newrelic.com/jp/docs/synthetics/synthetic-monitoring/private-locations/install-containerized-private-minions-cpms/",
      "published_at": "2021-03-18T21:29:12Z",
      "updated_at": "2021-03-18T21:29:12Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use New Relic's containerized private minions (CPM). These are Docker container-based private minions that accept and execute synthetic monitors against your private locations. The CPM can operate in a Docker container system environment or a Kubernetes container orchestration system environment. The CPM will auto-detect its environment to select the appropriate operating mode. ãã³ã To use CPMs and synthetic monitoring, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. General private minion features Because the CPM operates as a container instead of a virtual machine, it delivers many features: Easy to install, start, and update Runs on: Linux macOS Windows Enhanced security and support for non-root user execution Ability to leverage a Docker container as a sandbox environment Customizable monitor check timeout Custom provided modules for scripted monitor types Kubernetes-specific features Also, the CPM delivers the following features in a Kubernetes environment: Integrates with the Kubernetes API to delegate runtime lifecycle management to Kubernetes Does not require privileged access to the Docker socket Supports hosted and on-premise Kubernetes clusters Supports various container engines such as Docker and Containerd Deployable via Helm charts as well as configuration YAMLs Allows job (ping vs. non-ping checks) based resource allocation for optimum resource management Observability offered via the New Relic One Kubernetes cluster explorer System requirements and compatibility To host CPMs, your system must meet the minimum requirements for the chosen system environment. æ³¨æ Do not modify any CPM files. New Relic is not liable for any modifications you make. For more information, contact your account representative or a New Relic technical sales rep. Docker container system environment requirements Compatibility for Requirements Operating system Linux kernel: 3.10 or higher macOS: 10.11 or higher Windows: Windows 10 64-bit or higher Processor A modern, multi-core CPU Memory 2.5 GB of RAM per CPU core (dedicated) Disk space A minimum of 10 GB per host Docker version Docker 17.12.1-ce or higher Private location key You must have a private location key Kubernetes container orchestration system environment requirements (CPM v3.0.0 or higher) Compatibility for Requirements Operating system Linux kernel: 3.10 or higher macOS: 10.11 or higher Windows: Windows 10 64-bit or higher Processor A modern, multi-core CPU Minion pod CPU (vCPU/Core): 0.5 up to 0.75 Memory: 800 Mi up to 1.6 Gi Resources allocated to a Minion pod are user configurable. Runner pod CPU (vCPU/Core): 0.5 up to 1 Memory: 1.25 Gi up to 3 Gi For a Scripted API check, 1.25 Gi will be requested with a limit of 2.5 Gi. For a Simple Browser or Scripted Browser check, 2 Gi will be requested with a limit of 3 Gi. Additional considerations: Resources allocated to a Runner pod are not user configurable. The maximum limit-request resource ratio for both CPU and Memory is 2. Disk space Persistent volume (PV) of at least 10 Gi in size Note that if a ReadWriteOnce (RWO) PV is provided to the minion, an implicit node affinity will be established to ensure the minion and the runner containers are scheduled on the same node. This is required to allow the minion and the associated runners access to the PV, as an RWO PV can be accessed only by a single node in the cluster. Kubernetes version We recommend that your Kubernetes cluster supports Kubernetes v1.15. Private location key You must have a private location key Helm Follow installation instructions for Helm v3 for your OS. Kubectl Follow installation instructions for Kubectl for your OS. To view versions, dependencies, default values for how many runner pods start with each minion, the Persistent volume access mode, and more, please see Show help and examples below. Private location key Before launching CPMs, you must have a private location key. Your CPM uses the key to authenticate against New Relic and run monitors associated with that private location. To find the key for existing private location: Go to one.newrelic.com > Synthetics > Private locations. In the Private locations index, locate the private location you want your CPM to be assigned to. Note the key associated with the private location with the key icon. Sandboxing and Docker dependencies Sandboxing and Docker dependencies are applicable to the CPM in a Docker container system environment. Docker dependencies The CPM runs in Docker and is able to leverage Docker as a sandboxing technology. This ensures complete isolation of the monitor execution, which improves security, reliability, and repeatability. Every time a scripted or browser monitor is executed, the CPM creates a brand new Docker container to run it in called a runner. The minion container needs to be configured to communicate with the Docker engine in order to spawn additional runner containers. Each spawned container is then dedicated to run a check associated with the synthetic monitor running on the private location the minion container is associated with. There are two crucial dependencies at launch. To enable sandboxing, ensure that: Your writable and executable directory is mounted at /tmp. The writable directory can be any directory you want the CPM to write into, but New Relic recommends the system's own /tmp to make things easy. Your writable Docker UNIX socket is mounted at /var/run/docker.sock or DOCKER_HOST environment variable. For more information, see Docker's Daemon socket option. æ³¨æ Core count on the host determines how many runner containers the CPM can run concurrently on the host. Since memory requirements are scaled to the expected count of runner containers, we recommend not running multiple CPMs on the same host to avoid resource contention. For additional information on sandboxing and running as a root or non-root user, see Security, sandboxing, and running as non-root. Install and update CPM versions Both installing and updating the CPM use the same command to pull the latest Docker image from the Quay.io repository where the CPM Docker image is hosted. Go to quay.io/repository/newrelic/synthetics-minion for a list of all the releases. CPM images are also hosted on Docker Hub. Go to hub.docker.com/r/newrelic/synthetics-minion/tags for a list of all the releases. Start the CPM To start the CPM, follow the applicable Docker or Kubernetes instructions. Docker start procedure Locate your private location key. Ensure you've enabled Docker dependencies for sandboxing and installed CPM on your system. Run the appropriate script for your system. Tailor the common defaults for /tmp and /var/run/docker.sock in the following examples to match your system. Linux/macOS: docker run \\ --name YOUR_CONTAINER_NAME \\ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" \\ -v /tmp:/tmp:rw \\ -v /var/run/docker.sock:/var/run/docker.sock:rw \\ -d \\ --restart unless-stopped \\ quay.io/newrelic/synthetics-minion:latest ã³ãã¼ Windows: docker run ^ --name YOUR_CONTAINER_NAME ^ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" ^ -v /tmp:/tmp:rw ^ -v /var/run/docker.sock:/var/run/docker.sock:rw ^ -d ^ --restart unless-stopped ^ quay.io/newrelic/synthetics-minion:latest ã³ãã¼ View the logs for your minion container: docker logs --follow YOUR_CONTAINER_NAME ã³ãã¼ When a message similar to Synthetics Minion is ready and servicing location YOUR_PRIVATE_LOCATION_LABEL appears, your CPM is up and ready to run monitors assigned to that location. Kubernetes start procedure Locate your private location key. Set up the a namespace for the CPM in your Kubernetes cluster: kubectl create namespace YOUR_NAMESPACE ã³ãã¼ Copy the Helm charts from the New Relic Helm repo. If you are copying the charts for the first time: helm repo add YOUR_REPO_NAME https://helm-charts.newrelic.com/charts ã³ãã¼ If you previously copied the Helm charts from the New Relic Helm repo, then get the latest: helm repo update ã³ãã¼ Install the CPM with the following Helm command: For a fresh installation of the CPM: helm install YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY ã³ãã¼ To update an existing CPM installation: helm upgrade YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY ã³ãã¼ Check if the minion pod is up and running: kubectl get -n YOUR_NAMESPACE pods ã³ãã¼ Once the status attribute of each pod is shown as running, your CPM is up and ready to run monitors assigned to your private location. Stop or delete the CPM On a Docker container system environment, use the Docker stop procedure to stop the CPM from running. On a Kubernetes container orchestration system environment, use the Kubernetes delete procedure to stop the CPM from running. Docker stop procedure You can stop a Docker container either by the container name, or the container ID. Container name stop for Linux, macOS, and Windows: docker stop YOUR_CONTAINER_NAME docker rm YOUR_CONTAINER_NAME ã³ãã¼ Container ID stop for Linux/macOS: In the examples the container is stopped and removed. To only stop the container, omit docker rm $CONTAINER_ID. CONTAINER_ID=$(docker ps -aqf name=YOUR_CONTAINER_NAME) docker stop $CONTAINER_ID docker rm $CONTAINER_ID ã³ãã¼ Container ID stop for Windows: In the examples the container is stopped and removed. To only stop the container, omit docker rm $CONTAINER_ID. FOR /F \"tokens=*\" %%CID IN ('docker ps -aqf name=YOUR_CONTAINER_NAME') do (SET CONTAINER_ID=%%CID) docker stop %CONTAINER_ID% docker rm %CONTAINER_ID% ã³ãã¼ Kubernetes delete procedure Get the MINION_POD_INSTALLATION_NAME of the minion pod you want to delete: helm list -n YOUR_NAMESPACE ã³ãã¼ Delete the minion pod: helm uninstall -n YOUR_NAMESPACE MINION_POD_INSTALLATION_NAME ã³ãã¼ Delete the namespace set up for the CPM in your Kubernetes cluster: kubectl delete namespace YOUR_NAMESPACE ã³ãã¼ Show help and examples Use these options as applicable: To get a list of the most commonly used run options directly in the command line interface, run the show help command. To show CPM usage examples as well as the list of all the available run options, run this command: docker run quay.io/newrelic/synthetics-minion:latest help ã³ãã¼ To keep track of Docker logs and verify the health of your monitors, see Containerized private minion (CPM) maintenance and monitoring. For a CPM in the Kubernetes container orchestration system environment, the following Helm show commands can be used to view the chart.yaml and the values.yaml, respectively: helm show chart YOUR_REPO_NAME/synthetics-minion ã³ãã¼ helm show values YOUR_REPO_NAME/synthetics-minion ã³ãã¼ Show license information To show the licensing information for the open source software that we use in the CPM, run the LICENSE command. Run this command to view license information for CPM versions 2.2.27 or higher: docker run quay.io/newrelic/synthetics-minion:latest LICENSE ã³ãã¼ Some of our open-source software is listed under multiple software licenses, and in that case we have listed the license we've chosen to use. Our license information is also available in the our licenses documentation. Configure CPM You can configure the containerized private minion with custom npm modules, preserve data between launches, use environment variables, and more. For more information, see CPM configuration. Networks For both Docker and Kubernetes, the CPM and its runner containers will inherit network settings from the host. For an example of this on a Docker container system environment, see the Docker site. A new bridge network is created for each runner container. This means networking command options like --network and --dns passed to the CPM container at launch (such as through Docker run commands on a Docker container system environment) are not inherited or used by the runner containers. When these networks are created, they pull from the default IP address pool configured for daemon. For an example of this on a Docker container system environment, see the Docker site. Typically, the runner network is removed after the check is completed. However, if a CPM exits while a check is still running, or exits in another unexpected circumstance, these networks may get orphaned. This can potentially use up IP address space that is available to the Docker daemon. If this happens, you may see INTERNAL ENGINE ERROR code: 31 entries in your CPM logging when trying to create a new runner container. To clean these up in Docker container system environments only, run docker network prune. Security, sandboxing, and running as non-root By default, the software running inside a CPM is executed with root user privileges. This is suitable for most scenarios, as the execution is sandboxed. In a Docker container system environment: To change the default AppArmor profile used by containers that CPM spawns to run monitors, see the environment variable MINION_RUNNER_APPARMOR (CPM version 3.0.3 or higher) or MINION_DOCKER_RUNNER_APPARMOR (CPM version up to v3.0.2). To run the CPM as a non-root user, additional steps are required: Run as non-root user for Docker For more information, see Docker's official documentation about security and AppArmor security profiles. If your environment requires you to run the CPM as a non-root user, follow this procedure. In the following example, the non-root user is my_user. Ensure that my_user can use the Docker engine on the host: Verify that my_user belongs to the \"docker\" system group. OR Enable the Docker TCP socket option, and pass the DOCKER_HOST environment variable to CPM. Verify that my_user has read/write permissions to all the directories and volumes passed to CPM. To set these permission, use the chmod command. Get the uid of my_user for use in the run command: id -u my_user. Once these conditions are met, use the option \"-u <uid>:<gid>\" when launching CPM: docker run ... -u 1002 ... ã³ãã¼ OR docker run ... -u 1002 -e DOCKER_HOST=http://localhost:2375 ... ã³ãã¼ Docker image repository A single CPM Docker image serves both the Docker container system environment and Kubernetes container orchestration system environment. The Docker image is hosted on quay.io. To make sure your Docker image is up-to-date, see the quay.io newrelic/synthetics-minion repository. Additional considerations for CPM connection Connection Description CPMs without Internet access A CPM can operate without access to the internet, but with some exceptions. The public internet health check can be disabled using the environment variables named MINION_NETWORK_HEALTHCHECK_DISABLED for a Docker container system environment or synthetics.minionNetworkHealthCheckDisabled for a Kubernetes container orchestration system environment. The CPM needs to be able to contact the \"synthetics-horde.nr-data.net\" domain. This is necessary for it to report data to New Relic and to receive monitors to execute. Ask your network administration if this is a problem and how to set up exceptions. Communicate with Synthetics via a proxy To set up communication with New Relic by proxy, use the environment variables named MINION_API_PROXY*. Arguments passed at launch This applies to a Docker container environment only. Arguments passed to the CPM container at launch do not get passed on to the containers spawned by the CPM. Docker has no concept of \"inheritance\" or a \"hierarchy\" of containers, and we don't copy the configuration that is passed from CPM to the monitor-running containers. The only shared configuration between them is the one set at the Docker daemon level. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 313.10367,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Install and <em>update</em> CPM versions",
        "body": " the &quot;synthetics-horde.nr-data.net&quot; domain. This is necessary for it to report data to <em>New</em> <em>Relic</em> and to receive monitors to execute. Ask your network administration if this is a problem and how to <em>set</em> <em>up</em> exceptions. Communicate with Synthetics via a proxy To <em>set</em> <em>up</em> communication with <em>New</em> <em>Relic</em> by proxy, <em>use</em>"
      },
      "id": "6053c62828ccbc3feac2fd16"
    },
    {
      "sections": [
        "Introduction to the Kubernetes integration",
        "Get started: Install the Kubernetes integration",
        "ãã³ã",
        "Why it matters",
        "Navigate all your Kubernetes events",
        "Bring your cluster logs to New Relic",
        "Check the source code"
      ],
      "title": "Introduction to the Kubernetes integration",
      "type": "docs-jp",
      "tags": [
        "Integrations",
        "Kubernetes integration",
        "Get started"
      ],
      "external_id": "c543aeb2f6a5cccaea2c0aaf41260f5d3379f1d6",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/integrations/kubernetes-integration/get-started/introduction-kubernetes-integration/",
      "published_at": "2021-03-18T09:47:20Z",
      "updated_at": "2021-03-18T09:47:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Kubernetes integration gives you full observability into the health and performance of your environment, no matter whether you run Kubernetes on-premises or in the cloud. With our cluster explorer, you can cut through layers of complexity to see how your cluster is performing, from the heights of the control plane down to applications running on a single pod. one.newrelic.com > Kubernetes cluster explorer: The cluster explorer is our powerful, fully visual answer to the challenges associated with running Kubernetes at a large scale. You can see the power of the Kubernetes integration in the cluster explorer, where the full picture of a cluster is made available on a single screen: nodes and pods are visualized according to their health and performance, with pending and alerting nodes in the innermost circles. Predefined alert conditions help you troubleshoot issues right from the start. Clicking each node reveals its status and how each app is performing. Get started: Install the Kubernetes integration We have an automated installer to help you with many types of installations: servers, virtual machines, and unprivileged environments. It can also help you with installations in managed services or platforms, but you'll need to review a few preliminary notes before getting started. Here's what the automated installer does: Asks for the cluster name and namespace of the integration. Asks for additional setup options, such as Kube state metrics. Asks for the installation method: manifest file or Helm. Generates either the manifest or Helm chart. Read the install docs Start the installer ãã³ã If your New Relic account is in the EU region, access the automated installer from one.eu.newrelic.com. Why it matters Governing the complexity of Kubernetes can be challenging; there's so much going on at any given moment, with containers being created and deleted in a matter of minutes, applications crashing, and resources being consumed unexpectedly. Our integration helps you navigate Kubernetes abstractions across on-premises, cloud, and hybrid deployments. In New Relic, you can build your own charts and query all your Kubernetes data, which our integration collects by instrumenting the container orchestration layer. This gives you additional insight into nodes, namespaces, deployments, replica sets, pods, and containers. one.newrelic.com > Dashboards: Using the chart builder you can turn any query on Kubernetes data to clear visuals. With the Kubernetes integration you can also: Link your APM data to Kubernetes to measure the performance of your web and mobile applications, with metrics such as request rate, throughput, error rate, and availability. Monitor services running on Kubernetes, such as Apache, NGINX, Cassandra, and many more (see our tutorial for monitoring Redis on Kubernetes). Create new alert policies and alert conditions based on your Kubernetes data, or extend the predefined alert conditions. These features are in addition to the data New Relic already reports for containerized processes running on instrumented hosts. Navigate all your Kubernetes events The Kubernetes events integration, which is installed separately, watches for events happening in your Kubernetes clusters and sends those events to New Relic. Events data is then visualized in the cluster explorer. To set it up, check the Kubernetes events box in step 3 of our install wizard, or follow the instructions. one.newrelic.com > Kubernetes cluster explorer > Events: Browse and filter all your Kubernetes events, and dig into application logs and infrastructure data. Bring your cluster logs to New Relic Our Kubernetes plugin for log monitoring can collect all your cluster's logs and send them to our platform, so that you can set up new alerts and charts. To set it up, check the Log data box in step 3 of our install wizard, or follow the instructions. Check the source code This integration is open source software. That means you can browse its source code and send improvements, or you can create your own fork and build it. For more information, see the README. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 267.41782,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Bring your cluster logs to <em>New</em> <em>Relic</em>",
        "body": " data. Bring your cluster logs to <em>New</em> <em>Relic</em> Our Kubernetes plugin for log monitoring can collect all your cluster&#x27;s logs and send them to our platform, so that you can <em>set</em> <em>up</em> <em>new</em> alerts and <em>charts</em>. To <em>set</em> it <em>up</em>, check the Log data box in step 3 of our install wizard, or follow the instructions"
      },
      "id": "605321a8e7b9d2ee21a30787"
    },
    {
      "sections": [
        "Install containerized private minions (CPMs)",
        "Tip",
        "General private minion features",
        "Kubernetes-specific features",
        "System requirements and compatibility",
        "Caution",
        "Docker container system environment requirements",
        "Kubernetes container orchestration system environment requirements (CPM v3.0.0 or higher)",
        "Private location key",
        "Sandboxing and Docker dependencies",
        "Docker dependencies",
        "Install and update CPM versions",
        "Start the CPM",
        "Docker start procedure",
        "Kubernetes start procedure",
        "Stop or delete the CPM",
        "Docker stop procedure",
        "Kubernetes delete procedure",
        "Show help and examples",
        "Show license information",
        "Configure CPM",
        "Networks",
        "Security, sandboxing, and running as non-root",
        "Run as non-root user for Docker",
        "Docker image repository",
        "Additional considerations for CPM connection"
      ],
      "title": "Install containerized private minions (CPMs)",
      "type": "docs",
      "tags": [
        "Synthetics",
        "Synthetic monitoring",
        "Private locations"
      ],
      "external_id": "c3d19e2e7c99b15e05add0810342d1464e68b2f1",
      "image": "https://docs.newrelic.com/static/img-integration-k8-ed6795cfdb010c5eabb1cfe9c83a82a9.png",
      "url": "https://docs.newrelic.com/docs/synthetics/synthetic-monitoring/private-locations/install-containerized-private-minions-cpms/",
      "published_at": "2021-03-18T16:16:39Z",
      "updated_at": "2021-03-16T17:42:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use New Relic's containerized private minions (CPM). These are Docker container-based private minions that accept and execute synthetic monitors against your private locations. The CPM can operate in a Docker container system environment or a Kubernetes container orchestration system environment. The CPM will auto-detect its environment to select the appropriate operating mode. Tip To use CPMs and synthetic monitoring, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. General private minion features Because the CPM operates as a container instead of a virtual machine, it delivers many features: Easy to install, start, and update Runs on: Linux macOS Windows Enhanced security and support for non-root user execution Ability to leverage a Docker container as a sandbox environment Customizable monitor check timeout Custom provided modules for scripted monitor types Kubernetes-specific features Also, the CPM delivers the following features in a Kubernetes environment: Integrates with the Kubernetes API to delegate runtime lifecycle management to Kubernetes Does not require privileged access to the Docker socket Supports hosted and on-premise Kubernetes clusters Supports various container engines such as Docker and Containerd Deployable via Helm charts as well as configuration YAMLs Allows job (ping vs. non-ping checks) based resource allocation for optimum resource management Observability offered via the New Relic One Kubernetes cluster explorer System requirements and compatibility To host CPMs, your system must meet the minimum requirements for the chosen system environment. Caution Do not modify any CPM files. New Relic is not liable for any modifications you make. For more information, contact your account representative or a New Relic technical sales rep. Docker container system environment requirements Compatibility for Requirements Operating system Linux kernel: 3.10 or higher macOS: 10.11 or higher Windows: Windows 10 64-bit or higher Processor A modern, multi-core CPU Memory 2.5 GB of RAM per CPU core (dedicated) Disk space A minimum of 10 GB per host Docker version Docker 17.12.1-ce or higher Private location key You must have a private location key Kubernetes container orchestration system environment requirements (CPM v3.0.0 or higher) Compatibility for Requirements Operating system Linux kernel: 3.10 or higher macOS: 10.11 or higher Windows: Windows 10 64-bit or higher Processor A modern, multi-core CPU Minion pod CPU (vCPU/Core): 0.5 up to 0.75 Memory: 800 Mi up to 1.6 Gi Resources allocated to a Minion pod are user configurable. Runner pod CPU (vCPU/Core): 0.5 up to 1 Memory: 1.25 Gi up to 3 Gi For a Scripted API check, 1.25 Gi will be requested with a limit of 2.5 Gi. For a Simple Browser or Scripted Browser check, 2 Gi will be requested with a limit of 3 Gi. Additional considerations: Resources allocated to a Runner pod are not user configurable. The maximum limit-request resource ratio for both CPU and Memory is 2. Disk space Persistent volume (PV) of at least 10 Gi in size Note that if a ReadWriteOnce (RWO) PV is provided to the minion, an implicit node affinity will be established to ensure the minion and the runner containers are scheduled on the same node. This is required to allow the minion and the associated runners access to the PV, as an RWO PV can be accessed only by a single node in the cluster. Kubernetes version We recommend that your Kubernetes cluster supports Kubernetes v1.15. Private location key You must have a private location key Helm Follow installation instructions for Helm v3 for your OS. Kubectl Follow installation instructions for Kubectl for your OS. To view versions, dependencies, default values for how many runner pods start with each minion, the Persistent volume access mode, and more, please see Show help and examples below. Private location key Before launching CPMs, you must have a private location key. Your CPM uses the key to authenticate against New Relic and run monitors associated with that private location. To find the key for existing private location: Go to one.newrelic.com > Synthetics > Private locations. In the Private locations index, locate the private location you want your CPM to be assigned to. Note the key associated with the private location with the key icon. Sandboxing and Docker dependencies Sandboxing and Docker dependencies are applicable to the CPM in a Docker container system environment. Docker dependencies The CPM runs in Docker and is able to leverage Docker as a sandboxing technology. This ensures complete isolation of the monitor execution, which improves security, reliability, and repeatability. Every time a scripted or browser monitor is executed, the CPM creates a brand new Docker container to run it in called a runner. The minion container needs to be configured to communicate with the Docker engine in order to spawn additional runner containers. Each spawned container is then dedicated to run a check associated with the synthetic monitor running on the private location the minion container is associated with. There are two crucial dependencies at launch. To enable sandboxing, ensure that: Your writable and executable directory is mounted at /tmp. The writable directory can be any directory you want the CPM to write into, but New Relic recommends the system's own /tmp to make things easy. Your writable Docker UNIX socket is mounted at /var/run/docker.sock or DOCKER_HOST environment variable. For more information, see Docker's Daemon socket option. Caution Core count on the host determines how many runner containers the CPM can run concurrently on the host. Since memory requirements are scaled to the expected count of runner containers, we recommend not running multiple CPMs on the same host to avoid resource contention. For additional information on sandboxing and running as a root or non-root user, see Security, sandboxing, and running as non-root. Install and update CPM versions Both installing and updating the CPM use the same command to pull the latest Docker image from the Quay.io repository where the CPM Docker image is hosted. Go to quay.io/repository/newrelic/synthetics-minion for a list of all the releases. CPM images are also hosted on Docker Hub. Go to hub.docker.com/r/newrelic/synthetics-minion/tags for a list of all the releases. Start the CPM To start the CPM, follow the applicable Docker or Kubernetes instructions. Docker start procedure Locate your private location key. Ensure you've enabled Docker dependencies for sandboxing and installed CPM on your system. Run the appropriate script for your system. Tailor the common defaults for /tmp and /var/run/docker.sock in the following examples to match your system. Linux/macOS: docker run \\ --name YOUR_CONTAINER_NAME \\ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" \\ -v /tmp:/tmp:rw \\ -v /var/run/docker.sock:/var/run/docker.sock:rw \\ -d \\ --restart unless-stopped \\ quay.io/newrelic/synthetics-minion:latest Copy Windows: docker run ^ --name YOUR_CONTAINER_NAME ^ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" ^ -v /tmp:/tmp:rw ^ -v /var/run/docker.sock:/var/run/docker.sock:rw ^ -d ^ --restart unless-stopped ^ quay.io/newrelic/synthetics-minion:latest Copy View the logs for your minion container: docker logs --follow YOUR_CONTAINER_NAME Copy When a message similar to Synthetics Minion is ready and servicing location YOUR_PRIVATE_LOCATION_LABEL appears, your CPM is up and ready to run monitors assigned to that location. Kubernetes start procedure Locate your private location key. Set up the a namespace for the CPM in your Kubernetes cluster: kubectl create namespace YOUR_NAMESPACE Copy Copy the Helm charts from the New Relic Helm repo. If you are copying the charts for the first time: helm repo add YOUR_REPO_NAME https://helm-charts.newrelic.com/charts Copy If you previously copied the Helm charts from the New Relic Helm repo, then get the latest: helm repo update Copy Install the CPM with the following Helm command: For a fresh installation of the CPM: helm install YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY Copy To update an existing CPM installation: helm upgrade YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY Copy Check if the minion pod is up and running: kubectl get -n YOUR_NAMESPACE pods Copy Once the status attribute of each pod is shown as running, your CPM is up and ready to run monitors assigned to your private location. Stop or delete the CPM On a Docker container system environment, use the Docker stop procedure to stop the CPM from running. On a Kubernetes container orchestration system environment, use the Kubernetes delete procedure to stop the CPM from running. Docker stop procedure You can stop a Docker container either by the container name, or the container ID. Container name stop for Linux, macOS, and Windows: docker stop YOUR_CONTAINER_NAME docker rm YOUR_CONTAINER_NAME Copy Container ID stop for Linux/macOS: In the examples the container is stopped and removed. To only stop the container, omit docker rm $CONTAINER_ID. CONTAINER_ID=$(docker ps -aqf name=YOUR_CONTAINER_NAME) docker stop $CONTAINER_ID docker rm $CONTAINER_ID Copy Container ID stop for Windows: In the examples the container is stopped and removed. To only stop the container, omit docker rm $CONTAINER_ID. FOR /F \"tokens=*\" %%CID IN ('docker ps -aqf name=YOUR_CONTAINER_NAME') do (SET CONTAINER_ID=%%CID) docker stop %CONTAINER_ID% docker rm %CONTAINER_ID% Copy Kubernetes delete procedure Get the MINION_POD_INSTALLATION_NAME of the minion pod you want to delete: helm list -n YOUR_NAMESPACE Copy Delete the minion pod: helm uninstall -n YOUR_NAMESPACE MINION_POD_INSTALLATION_NAME Copy Delete the namespace set up for the CPM in your Kubernetes cluster: kubectl delete namespace YOUR_NAMESPACE Copy Show help and examples Use these options as applicable: To get a list of the most commonly used run options directly in the command line interface, run the show help command. To show CPM usage examples as well as the list of all the available run options, run this command: docker run quay.io/newrelic/synthetics-minion:latest help Copy To keep track of Docker logs and verify the health of your monitors, see Containerized private minion (CPM) maintenance and monitoring. For a CPM in the Kubernetes container orchestration system environment, the following Helm show commands can be used to view the chart.yaml and the values.yaml, respectively: helm show chart YOUR_REPO_NAME/synthetics-minion Copy helm show values YOUR_REPO_NAME/synthetics-minion Copy Show license information To show the licensing information for the open source software that we use in the CPM, run the LICENSE command. Run this command to view license information for CPM versions 2.2.27 or higher: docker run quay.io/newrelic/synthetics-minion:latest LICENSE Copy Some of our open-source software is listed under multiple software licenses, and in that case we have listed the license we've chosen to use. Our license information is also available in the our licenses documentation. Configure CPM You can configure the containerized private minion with custom npm modules, preserve data between launches, use environment variables, and more. For more information, see CPM configuration. Networks For both Docker and Kubernetes, the CPM and its runner containers will inherit network settings from the host. For an example of this on a Docker container system environment, see the Docker site. A new bridge network is created for each runner container. This means networking command options like --network and --dns passed to the CPM container at launch (such as through Docker run commands on a Docker container system environment) are not inherited or used by the runner containers. When these networks are created, they pull from the default IP address pool configured for daemon. For an example of this on a Docker container system environment, see the Docker site. Typically, the runner network is removed after the check is completed. However, if a CPM exits while a check is still running, or exits in another unexpected circumstance, these networks may get orphaned. This can potentially use up IP address space that is available to the Docker daemon. If this happens, you may see INTERNAL ENGINE ERROR code: 31 entries in your CPM logging when trying to create a new runner container. To clean these up in Docker container system environments only, run docker network prune. Security, sandboxing, and running as non-root By default, the software running inside a CPM is executed with root user privileges. This is suitable for most scenarios, as the execution is sandboxed. In a Docker container system environment: To change the default AppArmor profile used by containers that CPM spawns to run monitors, see the environment variable MINION_RUNNER_APPARMOR (CPM version 3.0.3 or higher) or MINION_DOCKER_RUNNER_APPARMOR (CPM version up to v3.0.2). To run the CPM as a non-root user, additional steps are required: Run as non-root user for Docker For more information, see Docker's official documentation about security and AppArmor security profiles. If your environment requires you to run the CPM as a non-root user, follow this procedure. In the following example, the non-root user is my_user. Ensure that my_user can use the Docker engine on the host: Verify that my_user belongs to the \"docker\" system group. OR Enable the Docker TCP socket option, and pass the DOCKER_HOST environment variable to CPM. Verify that my_user has read/write permissions to all the directories and volumes passed to CPM. To set these permission, use the chmod command. Get the uid of my_user for use in the run command: id -u my_user. Once these conditions are met, use the option \"-u <uid>:<gid>\" when launching CPM: docker run ... -u 1002 ... Copy OR docker run ... -u 1002 -e DOCKER_HOST=http://localhost:2375 ... Copy Docker image repository A single CPM Docker image serves both the Docker container system environment and Kubernetes container orchestration system environment. The Docker image is hosted on quay.io. To make sure your Docker image is up-to-date, see the quay.io newrelic/synthetics-minion repository. Additional considerations for CPM connection Connection Description CPMs without Internet access A CPM can operate without access to the internet, but with some exceptions. The public internet health check can be disabled using the environment variables named MINION_NETWORK_HEALTHCHECK_DISABLED for a Docker container system environment or synthetics.minionNetworkHealthCheckDisabled for a Kubernetes container orchestration system environment. The CPM needs to be able to contact the \"synthetics-horde.nr-data.net\" domain. This is necessary for it to report data to New Relic and to receive monitors to execute. Ask your network administration if this is a problem and how to set up exceptions. Communicate with Synthetics via a proxy To set up communication with New Relic by proxy, use the environment variables named MINION_API_PROXY*. Arguments passed at launch This applies to a Docker container environment only. Arguments passed to the CPM container at launch do not get passed on to the containers spawned by the CPM. Docker has no concept of \"inheritance\" or a \"hierarchy\" of containers, and we don't copy the configuration that is passed from CPM to the monitor-running containers. The only shared configuration between them is the one set at the Docker daemon level.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 264.76508,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Install and <em>update</em> CPM versions",
        "body": " environment. The CPM will auto-detect its environment to select the appropriate operating mode. Tip To <em>use</em> CPMs and synthetic monitoring, as well as the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign <em>up</em> to create your free account in only a few seconds. Then ingest <em>up</em> to 100GB of data"
      },
      "id": "603ea47f28ccbcf987eba775"
    },
    {
      "sections": [
        "Verified script execution for private locations",
        "Passphrase security",
        "Enable verified script execution",
        "Change your passphrase",
        "Disable verified script execution",
        "Other (legacy)"
      ],
      "title": "Verified script execution for private locations",
      "type": "docs-jp",
      "tags": [
        "Synthetics",
        "Synthetic monitoring",
        "Private locations"
      ],
      "external_id": "ce6f8471c39086629df33b59898dd19d5322c215",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/synthetics/synthetic-monitoring/private-locations/verified-script-execution-private-locations/",
      "published_at": "2021-03-18T23:07:32Z",
      "updated_at": "2021-03-18T23:07:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "To prevent others from using your private minions to assign scripted browsers or API tests, add verified script execution. Then, any changes to your minions will require a passphrase that is known only to you. The private locations list in New Relic's UI includes a VSE column. A lock icon indicates that verified script execution has been set up for that location. Passphrase security Be sure to safeguard your private minion's passphrase. No other users on your account can view it, and it is never stored in New Relic's collector. This restriction includes New Relic support personnel. Because our collector never stores your passphrase, our support team cannot recover or reset your passphrase for you. If you forget your passphrase, you will need to change it in the minion Overview page, and then update each monitor assigned to that private location. Enable verified script execution To enable verified script execution for containerized private minions, do the following. Be sure to record your passphrase in a secure place. Go to one.newrelic.com > Synthetics > Private locations > (select a private location). Select the private location's ellipses icon, and click Edit. Enable verified script execution, then save. Set the passphrase in your Docker or Kubernetes environment: Docker: Add the MINION_VSE_PASSWORD environment variable to the Docker run command used to start your private minion: docker run \\ --name YOUR_CONTAINER_NAME \\ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" \\ -e \"MINION_VSE_PASSWORD=YOUR_PASSPHRASE\" -v /tmp:/tmp:rw \\ -v /var/run/docker.sock:/var/run/docker.sock:rw \\ -d \\ --restart unless-stopped \\ quay.io/newrelic/synthetics-minion:latest ã³ãã¼ Kubernetes: Set the synthetics.minionVsePassphrase value in the Helm install or upgrade command: helm install YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion \\ -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY \\ --set synthetics.minionVsePassphrase=YOUR_PASSPHRASE ã³ãã¼ From the Synthetics UI, select a monitor assigned to that location. Then select Settings > General. From the list of private locations, select your location, type your passphrase, and save. Be sure to record your passphrase in a secure place. Repeat steps 3 and 4 for each monitor you want to assign to your location. Change your passphrase To change your passphrase, do the following. Be sure to record your passphrase in a secure place. Update the passphrase in your Docker or Kubernetes environment: Docker: Stop your current minion. Then use the Docker run command to start a new minion with your updated MINION_VSE_PASSWORD environment variable: docker run \\ --name YOUR_CONTAINER_NAME \\ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" \\ -e \"MINION_VSE_PASSWORD=YOUR_PASSPHRASE\" -v /tmp:/tmp:rw \\ -v /var/run/docker.sock:/var/run/docker.sock:rw \\ -d \\ --restart unless-stopped \\ quay.io/newrelic/synthetics-minion:latest ã³ãã¼ Kubernetes: Use the Helm upgrade command to set your updated synthetics.minionVsePassphrase value: helm upgrade YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion \\ -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY \\ --set synthetics.minionVsePassphrase=YOUR_PASSPHRASE ã³ãã¼ Go to one.newrelic.com > Synthetics > (assigned monitor) > Settings > General. From the list of private locations, select your location, type your new passphrase, and save. Repeat steps 2 and 3 for each monitor assigned to your location. Disable verified script execution To disable verified script execution for containerized private minions: Remove the passphrase in your Docker or Kubernetes environment: Docker: Stop your current minion container. Then use the Docker run command to start a new minion without the MINION_VSE_PASSWORD environment variable: docker run \\ --name YOUR_CONTAINER_NAME \\ -e \"MINION_PRIVATE_LOCATION_KEY=YOUR_PRIVATE_LOCATION_KEY\" \\ -v /tmp:/tmp:rw \\ -v /var/run/docker.sock:/var/run/docker.sock:rw \\ -d \\ --restart unless-stopped \\ quay.io/newrelic/synthetics-minion:latest ã³ãã¼ Kubernetes: Use the Helm upgrade command without the --set synthetics.minionVsePassphrase value: helm upgrade YOUR_CPM_NAME YOUR_REPO_NAME/synthetics-minion \\ -n YOUR_NAMESPACE --set synthetics.privateLocationKey=YOUR_PRIVATE_LOCATION_KEY \\ ã³ãã¼ Go to one.newrelic.com > Synthetics > Private locations > (select a private location). Clear the Enable verified script execution checkbox, then save. Other (legacy) If you are not using containerized private minions, do the following to enable verified script execution. Be sure to record your passphrase in a secure place. In your web browser, navigate to the minion Overview page at https://MINION_IP_ADDRESS (for example, https://1.2.3.4). Select the pencil icon, then select Advanced settings (optional). Select the Verified script execution checkbox. Type a passphrase, then save. Record your passphrase in a secure place. Go to one.newrelic.com > Synthetics > Private locations > (select a private location). Select the private location's ellipses icon, and click Edit. Enable verified script execution, then save. From the Synthetics UI, select a monitor assigned to that location. Then select Settings > General. From the list of private locations, select your location, type your passphrase, and save. Repeat steps 4 through 6 for each monitor you want to assign to your location. To change your passphrase or disable verified script execution, follow the same basic process to go to your minion's IP address and update its Advanced settings. Then go to one.newrelic.com to complete the process. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 244.4742,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " that verified script execution has been <em>set</em> <em>up</em> for that location. Passphrase security Be sure to safeguard your private minion&#x27;s passphrase. No other users on your account can view it, and it is never stored in <em>New</em> <em>Relic</em>&#x27;s collector. This restriction includes <em>New</em> <em>Relic</em> support personnel. Because"
      },
      "id": "6053dd34e7b9d2a9bfa307e5"
    }
  ],
  "/terraform/get-started-terraform": [
    {
      "sections": [
        "Getting started with New Relic and Terraform",
        "Before you begin",
        "Bootstrap Terraform and the New Relic provider",
        "Configure the New Relic provider",
        "Tip",
        "Create a New Relic alert policy with the golden signal alerts",
        "Provision alert conditions based on the four golden signals",
        "Get notified when an alert triggers",
        "Extra Credit",
        "Conclusion"
      ],
      "title": "Getting started with New Relic and Terraform",
      "type": "developer",
      "tags": [
        "notification channel",
        "alerts",
        "golden signals",
        "terraform"
      ],
      "external_id": "a8e6eb8132628da407bf24eeeca752931f4a09df",
      "image": "",
      "url": "https://developer.newrelic.com/automate-workflows/get-started-terraform/",
      "published_at": "2021-03-18T01:52:08Z",
      "updated_at": "2021-03-09T01:49:21Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to provision New Relic resources using [Terraform](https://www.terraform.io/).",
      "body": "Terraform is a popular infrastructure-as-code software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic dashboards and alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. The four alert conditions are based on the four golden signals of monitoring introduced in Googleâs Site Reliability Engineering book: Latency: The amount of time it takes your application to service a request. Traffic: The amount of requests your system receives. Errors: The rate of requests that fail. Saturation: The stress on resources to meet the demands of your application. Before you begin To use this guide, you should have some basic knowledge of both New Relic and Terraform. If you haven't deployed a New Relic open source agent yet, install New Relic for your application. Also, install the Terraform CLI. Step 1 of 5 Bootstrap Terraform and the New Relic provider Start by initializing a working directory and creating a Terraform configuration file: bash Copy $ mkdir terraform-project && cd terraform-project $ touch main.tf Next, instruct Terraform to install and use the New Relic provider, by setting the terraform and required_providers blocks in main.tf: terraform { # Require Terraform version 0.13.x (recommended) required_version = \"~> 0.13.0\" # Require the latest 2.x version of the New Relic provider required_providers { newrelic = { source = \"newrelic/newrelic\" version = \"~> 2.21\" } } } Copy In this code block, you're setting the required version of Terraform to 0.13.x and setting the New Relic provider to the latest 2.x version. Using the right version constraints for your setup will provide better stability with your Terraform runs. Now that you've set your Terraform and New Relic provider versions, you need to configure the New Relic provider. Step 2 of 5 Configure the New Relic provider With terraform all set, configure the New Relic provider with the following items: Your New Relic Account ID. Your New Relic user key. Most user keys begin with the prefix NRAK-. Your New Relic region. Your region is US if your account settings page is located at one.newrelic.com, and EU if your account is located at one.eu.newrelic.com. In main.tf, set those values on the provider: provider \"newrelic\" { account_id = 12345 # Your New Relic account ID api_key = \"NRAK-***\" # Your New Relic user key region = \"US\" # US or EU (defaults to US) } Copy By setting these values on the New Relic provider, you're configuring that provider to make changes on behalf of your account through New Relic APIs. Tip You can also configure the New Relic provider using environment variables. This is a useful way to set default values for your provider configuration. For more information about configuring the New Relic provider, please feel free to check out our official provider documentation. With your New Relic provider configured, initialize Terraform: bash Copy $ terraform init When Terraform finishes installing and registering the New Relic provider, you'll receive a success message and some actionable next steps, such as running terraform plan. Before you can run terraform plan, however, you need to create your resources. Step 3 of 5 Create a New Relic alert policy with the golden signal alerts With the New Relic provider configured and initialized, you can define an alerting strategy for your application. Since you're targeting a specific application, use a newrelic_entity to fetch the application information from New Relic and allow us to reference that data elsewhere in the configuration: data \"newrelic_entity\" \"example_app\" { name = \"Your App Name\" # Must be an exact match to your application name in New Relic domain = \"APM\" # or BROWSER, INFRA, MOBILE, SYNTH, depending on your entity's domain type = \"APPLICATION\" } Copy Next, create a newrelic_alert_policy. Give the policy a dynamic name based on your application's name. This helps specify the scope of the policy: resource \"newrelic_alert_policy\" \"golden_signal_policy\" { name = \"Golden Signals - ${data.newrelic_entity.example_app.name}\" } Copy At this point, you should be able to test your configuration with a dry run: bash Copy $ terraform plan You should see output that displays Terraform's execution plan. The plan contains the actions Terraform performs when your run terraform apply: bash Copy # Example output ------------------------------------------------------------------------ An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # newrelic_alert_policy.golden_signal_policy will be created + resource \"newrelic_alert_policy\" \"golden_signal_policy\" { + account_id = (known after apply) + id = (known after apply) + incident_preference = \"PER_POLICY\" + name = \"Golden Signals - Your App Name\" } Plan: 1 to add, 0 to change, 0 to destroy. ------------------------------------------------------------------------ In this case, the plan shows you that Terraform will create a new alert policy when you run terraform apply. After verifying the details, execute the plan to provision the alert policy resource in your New Relic account: bash Copy $ terraform apply Every time you apply changes, Terraform asks you to confirm the actions you've told it to run. Type \"yes\". While it's running, Terraform sends logs to your console: bash Copy # Example output of `terraform apply` newrelic_alert_policy.golden_signal_policy: Creating... newrelic_alert_policy.golden_signal_policy: Creation complete after 1s [id=111222333] Apply complete! Resources: 1 added, 0 changed, 0 destroyed. Log in to New Relic and navigate to Alert Policies to confirm that Terraform created your new policy. As you move through the next steps of creating alert conditions, you can run terraform apply after configuring each resource. Refresh your alert policy webpage to see the new resources. Step 4 of 5 Provision alert conditions based on the four golden signals Next, add alert conditions for your application based on the four golden signals: latency, traffic, errors, and saturation. Apply these alert conditions to the alert policy you created in the previous step. Latency Most folks want to avoid slow response times. You can create a newrelic_alert_condition that triggers if the overall response time of your application rises above five seconds for five minutes: # Response time resource \"newrelic_alert_condition\" \"response_time_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Response Time (Web) - ${data.newrelic_entity.example_app.name}\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"response_time_web\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" term { duration = 5 operator = \"above\" priority = \"critical\" threshold = \"5\" time_function = \"all\" } } Copy Note that you're linking this alert condition to the previously configured alert policy with policy_id. Traffic Traffic represents how much demand is placed on your system at any given moment. Throughput is a metric that measures how much traffic goes to your application. Create a newrelic_alert_condition that triggers if the overall response rate of your application falls below five requests per minute for five minutes: # Low throughput resource \"newrelic_alert_condition\" \"throughput_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"Low Throughput (Web)\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"throughput_web\" condition_scope = \"application\" # Define a critical alert threshold that will # trigger after 5 minutes below 5 requests per minute. term { priority = \"critical\" duration = 5 operator = \"below\" threshold = \"5\" time_function = \"all\" } } Copy This type of alert is useful when you expect a constant baseline of traffic throughout the day â a drop off in traffic can indicate a problem. Errors If your application's error rate spikes, you need to know about it. Create a newrelic_alert_condition that triggers if your application's error rate rises above 5% for five minutes: # Error percentage resource \"newrelic_alert_condition\" \"error_percentage\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Error Percentage\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"error_percentage\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" # Define a critical alert threshold that will trigger after 5 minutes above a 5% error rate. term { duration = 5 operator = \"above\" threshold = \"5\" time_function = \"all\" } } Copy Saturation Saturation represents how \"full\" your service is and can take many forms, such as CPU time, memory allocation, or queue depth. In this example, assume you already have a New Relic Infrastructure agent installed on the hosts serving your application, and you want to configure an alert for when CPU utilization spikes above a certain threshold: # High CPU usage resource \"newrelic_infra_alert_condition\" \"high_cpu\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High CPU usage\" type = \"infra_metric\" event = \"SystemSample\" select = \"cpuPercent\" comparison = \"above\" runbook_url = \"https://www.example.com\" where = \"(`applicationId` = '${data.newrelic_entity.example_app.application_id}')\" # Define a critical alert threshold that will trigger after 5 minutes above 90% CPU utilization. critical { duration = 5 value = 90 time_function = \"all\" } } Copy For the Infrastructure alert, you created a newrelic_infra_alert_condition that triggers if the aggregate CPU usage on these hosts rises above 90% for five minutes. Step 5 of 5 Get notified when an alert triggers Now that you've configured some important alert conditions, add a notification channel to your alert policy to ensure the proper folks get notified when an alert triggers. To do so, use a newrelic_alert_channel. To begin, create an email notification channel to send alert notifications to your email. Use this when you want to notify a specific person or team when alerts are triggered: resource \"newrelic_alert_channel\" \"team_email\" { name = \"example\" type = \"email\" config { recipients = \"yourawesometeam@example.com\" include_json_attachment = \"1\" } } Copy If you want to specify multiple recipients, use a comma-delimited list of emails. Last, but not least, in order to apply the notification channel to your alert policy, create a newrelic_alert_policy_channel: resource \"newrelic_alert_policy_channel\" \"golden_signals\" { policy_id = newrelic_alert_policy.golden_signal_policy.id channel_ids = [newrelic_alert_channel.team_email.id] } Copy A newrelic_alert_policy_channel links the notification channel you just created to your alert policy. To finalize your golden signal alerts configuration, run terraform apply one last time to make sure all of your configured resources are up to date. Extra Credit new_relic_alert_channel supports several types of notification channels, including email, Slack, and PagerDuty. So, if you want to explore this more, try creating an alert channel for a second channel type, such as Slack: # Slack notification channel resource \"newrelic_alert_channel\" \"slack_notification\" { name = \"slack-example\" type = \"slack\" config { # Use the URL provided in your New Relic Slack integration url = \"https://hooks.slack.com/services/XXXXXXX/XXXXXXX/XXXXXXXXXX\" channel = \"your-slack-channel-for-alerts\" } } Copy Before you apply this change, you need to add the New Relic Slack App to your Slack account and select a Slack channel to send the notification. With this new alert channel, triggered alerts send notifications to the Slack channel of your choice. Conclusion As your team evaluates the alerting system youâve put in place, youâll find that you may need to tweak configuration values, such as the alert threshold and duration. If you manage your Terraform project in a remote repository, you can submit a pull request so your team can review these changes alongside the rest of your code contributions. Tip You may also want to consider automating this process in your CI/CD pipeline. Use Terraform's recommended practices guide to learn more about their recommended workflow and how to evolve your provisioning practices. Congratulations! You're officially practicing observability-as-code. Review the New Relic Terraform provider documentation to learn how you can take your configuration to the next level.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 557.9983,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Getting started with New Relic and <em>Terraform</em>",
        "sections": "Create a New Relic <em>alert</em> policy with the <em>golden</em> <em>signal</em> <em>alerts</em>",
        "info": "Learn how to provision New Relic resources using [<em>Terraform</em>](https:&#x2F;&#x2F;www.terraform.io&#x2F;).",
        "tags": "<em>notification</em> <em>channel</em>",
        "body": " = newrelic_<em>alert_policy.golden_signal</em>_policy.id <em>channel</em>_ids = [newrelic_<em>alert_channel</em>.team_email.id] } Copy A newrelic_<em>alert_policy_channel</em> links the <em>notification</em> <em>channel</em> you just created to your <em>alert</em> policy. To finalize your <em>golden</em> <em>signal</em> <em>alerts</em> configuration, run <em>terraform</em> apply one last time to make sure all"
      },
      "id": "6046d422e7b9d27a66579a0b"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/terraform/",
      "sections": [
        "New Relic and Terraform",
        "Guides to new relic and terraform",
        "Getting started with New Relic and Terraform",
        "Using Terraform modules",
        "Using Terragrunt configurations"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "New Relic and Terraform",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "a0391aa84ef8cdb8d92329efb62a1a6141f44cac",
      "document_type": "page",
      "popularity": 1,
      "body": "Terraform is a popular infrastructure-as-code software tool software tool software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. Guides to new relic and terraform Getting started with New Relic and Terraform 30 min Learn how to provision New Relic resources using Terraform Using Terraform modules 30 min Learn how to use Terraform modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 393.91437,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic and <em>Terraform</em>",
        "sections": "New Relic and <em>Terraform</em>",
        "body": " provision an <em>alert</em> policy, four <em>alert</em> conditions, and a <em>notification</em> <em>channel</em>. Guides to new relic and <em>terraform</em> Getting started with New Relic and <em>Terraform</em> 30 min Learn how to provision New Relic resources using <em>Terraform</em> Using <em>Terraform</em> modules 30 min Learn how to use <em>Terraform</em> modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments"
      },
      "id": "601df6b928ccbc2507013383"
    },
    {
      "sections": [
        "Test alert notification channels",
        "Request the test",
        "Troubleshoot the test results",
        "Tip"
      ],
      "title": "Test alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "c001fca5128a2fb8128ff655c44f9d51b6d5fa2a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/test-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:45:12Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You must save a new notification channel or any changes to an existing notification channel before testing it. Alerts will then send a test message to your chosen destination. Request the test To test a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Follow standard procedures to add a new notification channel or to update an existing notification channel, and save it. Select a notification channel, and then click Send a test notification. Review the test confirmation message, and then click Got it. Troubleshoot the test results A confirmation message will automatically show up in the user interface that indicates where the test was sent (for example, email) and whether it was successful. Also, the test notification message itself includes detailed information, including: The person who requested the test Links to policies for the channel Links to all notification channels and policies for the account Tip When troubleshooting problems, review the test notification message, and verify the setup requirements for the type of notification channel you selected. If necessary, make additional changes to your notification channel, and test it again as needed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 307.10876,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": "You must save a new <em>notification</em> <em>channel</em> or any changes to an existing <em>notification</em> <em>channel</em> before testing it. <em>Alerts</em> will then send a test message to your chosen destination. Request the test To test a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click"
      },
      "id": "603ec9ffe7b9d25b3d2a07a7"
    },
    {
      "sections": [
        "Update alert notification channels",
        "Reference for updating channels",
        "Add or remove policies assigned to a channel",
        "Assign a channel to policies",
        "Change a channel's name",
        "Check for policies assigned to a user",
        "Check how many policies are assigned to a channel",
        "Create more channels",
        "Delete a channel",
        "Test a saved channelView assigned alert policies",
        "Basic process"
      ],
      "title": "Update alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "521bed5aa6fdcea5c1cffd11d01e6dad19bc7c40",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/update-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:21Z",
      "updated_at": "2021-03-16T08:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Depending on the selected channel type, different values appear. Reference for updating channels Here's a quick reference for updating channels which also includes links to more detailed information and procedures. Add or remove policies assigned to a channel To add or remove policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Choose a channel, and then click Alert policies. From the selected policy, use the windows to select, remove, or clear all notification channels. Assign a channel to policies To add a notification channel to one or more policies: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies. Choose a policy, click Notification channels, and then click Add notification channels. Choose a channel, and then click Update policy. Change a channel's name To rename an existing notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details, change the name (maximum 64 characters) based on the channel type if applicable, and then save. Check for policies assigned to a user To check whether an account user has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Optional: Search by \"user\" to browse users or a specific username or email. Choose the user, then click Alert policies. Check how many policies are assigned to a channel To check whether a notification channel has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. The Policy subscriptions column lists how many policies are assigned to the channel. Create more channels To create a new notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Click New notification channel. Delete a channel To delete a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. In the list, click the Delete icon. Test a saved channelView assigned alert policies To view the policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, choose a channel, and then click Alert policies. OR To view the notification channels assigned to a policy: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies, choose a policy, then click Notification channels. Basic process Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details page, make any necessary changes, and then save. The user interface shows a Last modified time stamp for any changes to policies, including their conditions and notification channels.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 295.22522,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " to a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, click <em>Notification</em> channels. Choose a <em>channel</em>, and then click <em>Alert</em> policies. From the selected policy, use the windows to select, remove, or clear all <em>notification</em> channels. Assign a <em>channel</em> to policies To add"
      },
      "id": "603eca45e7b9d2d1d82a0806"
    },
    {
      "sections": [
        "Notification channels: Control where to send alerts",
        "Tip",
        "View notification channels",
        "Add or remove notification channels",
        "Instructions for specific notification channels",
        "User",
        "Email",
        "OpsGenie",
        "PagerDuty",
        "Slack",
        "VictorOps",
        "Webhook",
        "Important",
        "Caution",
        "xMatters",
        "Receive mobile push notifications",
        "Acknowledge alert notifications"
      ],
      "title": "Notification channels: Control where to send alerts",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "8600dc86e59fad5da1e4a2b4170d2b86df78ee2f",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/notification-channels-control-where-send-alerts/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:59:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use alerts to set up notification channels, and attach those channels to policies. Your selected channels provide fast and consistent ways for the right personnel to be notified about incidents. For example, notifications allow you to include charts about the incident to provide context and share them with your team. Alerts offers several notification channels, including webhooks, Slack rooms, email, and more. You'll be notified by your notification channels when incidents are opened, acknowledged, or closed. This document explains the available notification channels and how to set them up. Tip This document is about alerts notifications. For general information about unsubscribing from other New Relic emails, including marketing emails, weekly reports, and announcements, see Unsubscribe from New Relic emails. View notification channels To see all notification channels in your account: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Add or remove notification channels To set up a new notification channel: On the Notification channels, click New notification channel. Select the type of channel and complete other required steps for it. To add or remove a notification policy or channel: Select a specific notification channel, select Alert policies, and add or remove a policy. OR Select a specific policy, select Notification channels, and add or remove a channel. Instructions for specific notification channels These are the available notification channel types. User For your convenience, we automatically load all users and their email addresses for the selected account. If your account has one or more sub-accounts, the notification channel includes only users for the currently selected master or sub-account. Use the User notification channel to select existing account team members and admins. To view the Users list or to add users to alert policies: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. A user channel also sends push notifications to any of the user's registered mobile devices. A device is registered if the user has logged into New Relic using the mobile app on the device. Email We automatically add every individual and their email address on the selected account to the User notification channel and you can select them there. You don't need to add existing New Relic accounts to the Email channel. To add an email channel for other users, follow these guidelines: Field Description Email (required) In general, use the Email notification channel to identify user emails or email aliases that are not already on the selected account. For example, if you have a dev-ops@company.com email alias for your DevOps team, add the email alias to the Email channel. Otherwise, use the User notification channel to select specific users on your DevOps team. For easier maintenance, add a single non-user email address or alias to a single alert notification channel. If you want to use the email channel for more than one email, create an email group or alias outside your account. These email addresses can be the same as or different from email addresses already on your account. Users can unsubscribe from general (non-alerts-related) emails, but they cannot unsubscribe from alerts email notifications. Instead, the account Owner, Admin, or add-on manager must remove users from the policy's email notification channel. Include JSON attachment (optional) To include a JSON attachment with the email notification, select this checkbox. OpsGenie You must have an existing OpsGenie account integrated with New Relic in order to provide the following information: Field Description Channel name (required) A meaningful name for the OpsGenie notification channel (maximum 64 characters). API key (required) The API key generated from your OpsGenie integration used to authenticate API requests. Teams (optional) List of team names that are responsible for the alert. OpsGenie runs team escalation policies to calculate which users will receive notifications. Tags (optional) A comma-separated list of labels attached to the alert. Tip To overwrite the OpsGenie Quiet Hours setting for urgent alerts, add an OverwriteQuietHours tag. Recipients (optional) One or more names of users, groups, on-call schedules, escalation policies, etc., that OpsGenie uses to calculate where to send notifications. PagerDuty You must have an existing PagerDuty account in order to provide the following information: Field Description Service name (required) The name of your service integrating with PagerDuty for notifications. Integration key (required) The unique service identifier used by PagerDuty's Integration API to trigger, acknowledge, and resolve incidents for the service. Slack Before adding Slack notifications, you must create a unique webhook integration using Slack's New Relic integration. If you want web, transaction, server, and mobile alerts to be posted in separate channels, you must set up separate integrations for each one. Field Description Channel name (required) A meaningful name for the Slack notification channel (maximum 64 characters); for example, Network Ops Center. URL (required) Copy and paste the New Relic webhook integration URL that you've set up with Slack. For example: https://hooks.slack.com/services/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 Be sure to include https:// in the URL. Do not use http://. Team channel (optional) If used, include # before the name of the Slack channel where alert notifications are sent; for example, #NOC. VictorOps You must have an existing VictorOps account in order to provide the following required information: Field Description Channel name (required) A meaningful name for this notification channel (maximum 64 characters). For example, if the VictorOps Route key is for your Technical Support team, you could name this channel Tech Support - VictorOps. Key (required) VictorOps generates a unique key for each account. It maps the VictorOps account to its associated integrations. Route key (optional) This key maps the alert or incident to a specific team. Webhook Webhooks are HTTP POST messages containing JSON documents delivered to a destination URL. When an incident is opened, acknowledged, or closed, our webhook feature sends a message to your URL with any relevant information, such as a description of the event and a link back to New Relic. You also have the option to customize the payload in the POST message for further integration into your system. Important If your endpoint does not acknowledge the POST request within 10 seconds, the Alerts UI may indicate a failed notification event for the related incident. Before adding webhook notifications, you must have an endpoint set up to respond with a status code between 200 and 206 after receiving the following required information: Field Description Channel name (required) A meaningful name for the webhook (maximum 64 characters). Base url (required) The endpoint that will receive the POST message and trigger customized behaviors in your system. Caution If you want to include a port number in the webhook URL, make sure the port is available for requests. Otherwise the webhook will not work. Basic auth (optional) To require basic authentication for the webhook, select Add basic auth, and provide the user name and password to authenticate the webhook. Custom headers (optional) To include headers with webhooks, select Add custom headers, and provide the name and value for each header. Use custom payload (optional) To use the default values, leave blank. To view and edit the default values, select Add custom payload. Payload (for custom payloads only) Your customized POST message code. This field includes: A list of variables you can use Syntax highlighting, based on payload type Payload type (for custom payloads only) Specify the message format: JSON (default) or Form. xMatters You must have an existing xMatters account in order to provide the following information: Field Description Channel name (required) Name your channel so you can identify it easily when associating it with a policy. Integration url (required) The unique integration url provided by xMatters pointing to your xMatters account. Receive mobile push notifications Important In order to receive mobile push notifications, your device must be registered and listed in (account) > User preferences. If the device is not listed in User preferences, log out of the app, log back in, and check again to see if it is listed. To receive mobile push notifications: Log in to your New Relic account via the mobile app at least once to ensure the device is registered. Add the user channel to the alert policy. Switch push notifications On for the device. Acknowledge alert notifications Anyone in your account can acknowledge notifications through the user interface or email notification. Acknowledging an incident in New Relic also acknowledges any associated incident in PagerDuty.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 285.49335,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "sections": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " <em>notification</em> <em>channel</em> to select existing account team members and admins. To view the Users list or to add users to <em>alert</em> policies: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click <em>Notification</em> channels. A user <em>channel</em> also sends push notifications to any of the user&#x27;s registered"
      },
      "id": "603ecfbf64441f4ee54e885f"
    }
  ],
  "/explore-docs/nr1-catalog": [
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 548.21155,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 547.54614,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 540.4,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 537.89435,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 537.89435,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/build-apps/add-query-mutate-data-nerdstorage": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Add the NerdGraphQuery component to an application",
        "Add, query, and mutate data using NerdStorage",
        "Add a time picker to your app",
        "Create a \"Hello, World!\" application",
        "Build a custom visualization for dashboards",
        "Add a table to your app",
        "Create a custom map view",
        "Permissions for managing applications",
        "Publish and deploy apps",
        "Set up your development environment"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "Build apps",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "document_type": "page",
      "popularity": 1,
      "body": "You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the NerdGraphQuery component to an application 20 minutes The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a time picker to your app 20 min Add a time picker to a sample application Create a \"Hello, World!\" application 15 min Build a \"Hello, World!\" app and publish it to New Relic One Build a custom visualization for dashboards 15 min Create custom data views Add a table to your app 30 min Add a table to your New Relic One app Create a custom map view 30 min Build an app to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to apps Publish and deploy apps 30 min Start sharing the apps you build Set up your development environment 20 min Prepare to build apps and contribute to this site",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 406.11304,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Add</em>, <em>query</em>, and <em>mutate</em> <em>data</em> using <em>NerdStorage</em>",
        "body": " from your account and <em>add</em> it to a dropdown menu in an application <em>Add</em>, <em>query</em>, and <em>mutate</em> <em>data</em> using <em>NerdStorage</em> 45 min <em>NerdStorage</em> is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. <em>Add</em> a time picker to your app"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "sections": [
        "New Relic Global Performanceãã¼ã¿ã»ãã",
        "éè¦",
        "æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã",
        "Public API Performanceããã·ã¥ãã¼ããéå§ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic Global Performanceãã¼ã¿ã»ãã",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "a1a8dc00fa765076cf92d83e758f909c75c335ad",
      "image": "https://docs.newrelic.com/static/353175f500c15eb2209965910deb84b4/c1b63/Public-API-Performance-Dash-for-GPD.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/new-relic-global-performance-data-sets/",
      "published_at": "2021-03-18T12:11:39Z",
      "updated_at": "2021-03-18T12:11:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¬ã¡ããªã¼ãã¼ã¿ãã©ãããã©ã¼ã ã®ä¸é¨ã§ããNew Relicã®Global Performanceãã¼ã¿ã»ãããä½¿ç¨ãã¦ãæç¨ã§å¤§è¦æ¨¡ãªéè¨ããããã¬ã¡ããªã¼ãã¼ã¿ã«ãã ã¡ã«ã¢ã¯ã»ã¹ã§ãã¾ãã Global Performanceãã¼ã¿ã»ããã®ãã¼ã¿ã¯ãæ¬¡ã®æ¹ã«ã¨ã£ã¦æç¨ã§ãã éè¨ãããå®éã®ãã¼ã¿ã®ã­ã¥ã¬ã¼ãæ¸ã¿ã®éåãä¸è¬çã«ã¢ãã¿ã¼ããã©ãã«ã·ã¥ã¼ãã£ã³ã°ã«ã¤ãã¦ã®ç¥è¦ãå¾ãããæ¢å­ã®New Relicã®ãå®¢æ§ã New Relicã®ããã·ã¥ãã¼ãããã¼ã¿ãã¼ã«ã«ã¤ãã¦ç¥ããèªèº«ã®ãã¼ã¿ãNew Relicã«è¿½å ããæ¹æ³ã«ã¤ãã¦æå ±ã«åºã¥ãæ±ºå®ãè¡ãããå®éã«ãã¼ã¿ãè¦è¦åãã¦è¡¨ç¤ºããããæ°è¦ã®ãå®¢æ§ã ãã®ãªã½ã¼ã¹ã«ã¯ãGlobal Performanceãã¼ã¿ã»ããã«ã¤ãã¦ã®æå ±ããã®ããã¿ãåä½ãGlobal Performanceãã¼ã¿ã¸ã®ã¢ã¯ã»ã¹ã«ã¤ãã¦ã®ç¾å¨ã®ãªãã·ã§ã³ãè¨è¼ããã¦ãã¾ãã Public API Performanceããã·ã¥ãã¼ã éè¦ æ¬¡ã®ç¹ã«ãæ³¨æãã ãããGlobal Performanceãã¼ã¿ã»ããã¯ãç¾ç¶ã®ã¾ã¾ã§æç¤ºããã¾ããGlobal Performanceãã¼ã¿ã»ããã¯ãä¸é£ã®ã½ã¼ã¹å¨ä½ã§ã®ãµã³ãã«ã®éè¨ãè¡¨ããNew Relicã¯ãã¼ã¿ãæ­£ãããã¨ãå®å¨ãªãã¨ããã¼ã¿ã®ä¿¡ææ§ã®ç¢ºèªã¯è¡ãã¾ããããã®ãã¼ã¿ã¯ããã¼ã¿ãä½¿ç¨ããç®çã«ã¤ãã¦å¯ä¸ã®æå ±æºã¨ããªãã§ãã ãããNew Relicã¯ããã®ãã¼ã¿ã«åºã¥ãã¦è¡ãããæ±ºå®ã«ã¤ãã¦è²¬ä»»ãè² ãã¾ãããGlobal Performanceãã¼ã¿ã»ããã¯ããã¼ã¿ã»ããã§è¡¨æãããæè¡ã«ã¤ãã¦ã®New Relicã«ããä¿è¨¼ãæ¨å¥¨ã¨ã¯èããªãã§ãã ããã æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã å½ç¤¾åã®Global Performanceãã¼ã¿ã»ããã§ããPublic API Performanceã¯ãAWSãGoogleãNew Relicã®ãå®¢æ§ãï¼æ­£è¦ã«ï¼ä½é¨ã§ãããã®ãå«ãããããªãã¯APIã®ããã©ã¼ãã³ã¹ã«ã¤ãã¦ã®ãå®éã®ãªã¢ã«ã¿ã¤ã ãã¼ã¿ãæ°å¤ãæä¾ãã¦ãã¾ãã ãã®ãã¼ã¿ã¯ãã§ã«New Relicãéãã¦æµãã¦ãããããã¢ã«ã¦ã³ãã®ã¢ã¯ãã£ãã¼ã·ã§ã³ããæ°ç§ä»¥åã«ãã¼ã¿ã«ã¢ã¯ã»ã¹ãããã­ã»ã¹ã§New Relicã®ããã·ã¥ãã¼ããã¯ã¨ãªæ©è½ãè©¦ãã¦ã¿ããã¨ãã§ãã¾ãã èªèº«ã®ãã¼ã¿ã½ã¼ã¹ãNew Relicã«æåã«æ¥ç¶ããå¿è¦ã¯ããã¾ãããããå®¢æ§èªèº«ã®ãã¼ã¿ã®è¿½å ã¯ç°¡åãã¤ç¡æã§è¡ããNew Relicããå®¢æ§ã®ãã¸ãã¹ãã¼ãºã«ã©ã®ããã«å½¹ç«ã¤ããçè§£ããã®ã«æé«ã®æ¹æ³ã§ããããããã¼ã¿ã½ã¼ã¹ãè¿½å ãããã¨ãæ¨å¥¨ãã¾ãã Public API Performanceããã·ã¥ãã¼ããéå§ãã Public API Performanceãã¼ã¿ãä½¿ç¨ãã¦éå§ããä¸å©ã¨ãã¦ãå½ç¤¾ã§ã¯Public API Performanceããã·ã¥ãã¼ããä½æãã¾ããããã®ããã·ã¥ãã¼ãã¯ãå®è¡å¯è½ãªä¸è¬çãªç¥è¦ã¨åæã®ä¸¡æ¹ãæä¾ããã¾ãããã·ã¥ãã¼ãã®æ©è½ãèªèº«ã®ãã¼ã¿ã«ã©ã®ããã«é©ç¨å¯è½ãã®ä¾ãæä¾ãã¾ãã æ°è¦ã®ãå®¢æ§ã¨æ¢å­ã®ãå®¢æ§ã®ãããããPublic API Performanceããã·ã¥ãã¼ãã§Global Performanceãã¼ã¿ãè¿éãã¤ç°¡åã«è¡¨ç¤ºã§ãã¾ãããã®ããã·ã¥ãã¼ãã®ä½¿ç¨ãéå§ããã«ã¯ãPublic API Performanceããã·ã¥ãã¼ãã«ã¤ãã¦è©³ããèª¿ã¹ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 160.16333,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Query</em> your <em>data</em>"
      },
      "id": "6053437b28ccbc1ce2c2fd65"
    },
    {
      "sections": [
        "ããã·ã¥ãã¼ãã®ç®¡ç",
        "ããã·ã¥ãã¼ãã®ã«ã¹ã¿ãã¤ãº",
        "ãã³ã",
        "ããã·ã¥ãã¼ããç·¨éãã",
        "è¨­å®ã¡ãã¥ã¼",
        "TVã¢ã¼ã",
        "ãã¼ã¯ã¢ã¼ã",
        "ããã·ã¥ãã¼ããã¨ã¯ã¹ãã¼ããã",
        "æ°è¦ã³ã³ãã³ããããã·ã¥ãã¼ãã«è¿½å ãã",
        "ãã¼ã¯ãã¦ã³ã¨ãã£ã¿ãä½¿ç¨ãã¦ãã«ã¹ã¿ã ã³ã³ãã³ããè¿½å ããã",
        "ãã¼ã¸ã®ããããã·ã¥ãã¼ããæ´çãã",
        "ãã¼ã¸ãããã·ã¥ãã¼ãã«è¿½å ãç·¨éãã",
        "ãã£ã¼ãã¨ãã¼ã¯ãã¦ã³ã³ã³ãã³ããç®¡çãã",
        "éè¦",
        "ãã£ã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ãã¦çµãè¾¼ã",
        "ãã£ã¼ãå¡ä¾ãä½¿ç¨ãã¦ãã£ã«ã¿ã¼ãé©ç¨ãã",
        "ãã¡ã»ãããä½¿ç¨ãã¦ããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ãã",
        "ã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦æéè¨­å®ãå¤æ´ãã",
        "ãã¼ã¿ãã¨ã¯ã¹ãã¼ããå±æãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ããã·ã¥ãã¼ãã®ç®¡ç",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "d5e5a7705eda167da4867960df29bd237535a8e5",
      "image": "https://docs.newrelic.com/static/129e7a553450c47847a969c79a2f7f89/c1b63/Dashboards_conf.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/manage-your-dashboard/",
      "published_at": "2021-03-18T12:11:39Z",
      "updated_at": "2021-03-18T12:11:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneããã·ã¥ãã¼ãã«ã¢ã¯ã»ã¹ãããã£ã¼ãã¡ãã¥ã¼ããç´æ¥ãã£ã¼ããä½æã¾ãã¯ç®¡çããããã·ã¥ãã¼ãã®ã¬ã¤ã¢ã¦ããã«ã¹ã¿ãã¤ãºããè¡¨ç¤ºã¢ã¼ããèª¿æ´ãããã¼ã¿ã®ã¨ã¯ã¹ãã¼ããè¡ãã¾ãã ããã·ã¥ãã¼ããã«ã¹ã¿ãã¤ãºãããã£ã¼ããæ§ç¯ãããããã¼ã¿ãè©³ããç¥ãããã®é«åº¦ãªè¦è¦åæ©è½ã¨ãã¼ã«ãä½¿ç¨ãã¦ããã¼ã¿ãé¢é£ä»ãåæãã¾ãã ããã·ã¥ãã¼ãã®ã«ã¹ã¿ãã¤ãº ããã·ã¥ãã¼ãã¯éå¸¸ã«æè»ãªè¨­å®ã¨ãªã£ã¦ãã¾ããããã·ã¥ãã¼ãã®ã¬ã¤ã¢ã¦ããã«ã¹ã¿ãã¤ãºãããã£ã¼ãã®ãµã¤ãºãèª¿æ´ãã¦ãã¼ã¿ã®è¡¨ç¤ºæ¹æ³ãæé©åã§ãã¾ãã ãã³ã ãã¯ãªãã¯ãã¦ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¢ã¼ãã«ã«ã¢ã¯ã»ã¹ãã¾ããããã§ãããã·ã¥ãã¼ãã®ã¬ã¤ããã¢ã«ã¦ã³ãIDãã¢ããªIDãè¡¨ç¤ºããããã·ã¥ãã¼ãã«è¿½å ããããã¹ã¦ã®ã¿ã°ãç®¡çã§ãã¾ãã ããã·ã¥ãã¼ãã«ã¯ãæ¬¡ã®æ©è½ãå«ã¾ãã¾ãï¼ ããã·ã¥ãã¼ããç·¨éãã ç·¨é ãã¿ã³ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãè¡ã: ããã·ã¥ãã¼ãã®ååãå¤æ´ãããååã¯æ¤ç´¢å¯è½ãªãããæå³ã®ããååãä»ãããã¨ãæ¨å¥¨ãã¾ãã ã¦ã£ã¸ã§ãããè¿½å ãã¿ã³ãã¯ãªãã¯ãã¦ãæ°è¦ã³ã³ãã³ããä½æãããã¯ã¨ãªãã«ãã¼ãä½¿ç¨ãã¦æ°è¦ãã£ã¼ããè¿½å ãããã¾ãã¯ãã¼ã¯ãã¦ã³ã¨ãã£ã¿ãä½¿ç¨ãã¦ãã­ã¹ããç»åããªã³ã¯ãè¿½å ããã æ°è¦ãã¼ã¸ãè¿½å ããããã¼ã¸ãä½¿ç¨ãã¦ãããã·ã¥ãã¼ããããæ´çã§ãã¾ãã ãã£ã¼ãã®ãµã¤ãºã¨ç¯å²ãå¤æ´ããããã£ã¼ããç§»åããããã·ã¥ãã¼ãã®ã©ãã«ãç½®ããã¨ãã§ããããããå¥½ã¿ã«åããã¦ã¬ã¤ã¢ã¦ããè¨­å®ãã¾ãï¼é¢é£æ§ã®é«ããã£ã¼ããä¸é¨ã«ç½®ãããããã¾ãä½¿ç¨ããªããã£ã¼ããè§ã«éç½®ãã¾ããæå¤§ã§12åã®ãã£ã¼ããè¨­å®ã§ãã¾ãã è¨­å®ã¡ãã¥ã¼ å³ä¸ã«ããè¨­å®ã¡ãã¥ã¼ãä½¿ç¨ãã¾ãã ããã·ã¥ãã¼ãã®ååãå¤æ´ãããååã¯æ¤ç´¢å¯è½ãªãããããã·ã¥ãã¼ããç°¡åã«æ¤ç´¢ã§ããæå³ã®ããååãä»ãããã¨ãæ¨å¥¨ãã¾ãã ããã·ã¥ãã¼ãã®è¨±å¯ãå¤æ´ããã è¨­å®ã¡ãã¥ã¼ã§ãããã·ã¥ãã¼ãã®ä½æææã¨ããã·ã¥ãã¼ãã«å±ããã¢ã«ã¦ã³ããè¡¨ç¤ºã§ãã¾ãããã®å¤ã¯å¤æ´ã§ãã¾ããã TVã¢ã¼ã ãã¬ãç»é¢ã§ã®è¡¨ç¤ºåãã«ããã·ã¥ãã¼ããæé©åãããå¨ç»é¢ã®TVã¢ã¼ããæå¹ã«ã§ãã¾ãã TVã¢ã¼ããæå¹ã«ããã«ã¯ãæ¬¡ã®2ã¤ã®æ¹æ³ãããã¾ãã New Relic Oneã§ããã·ã¥ãã¼ããè¡¨ç¤ºãã¦ããéã«ãå³ä¸ã® ã¢ã¤ã³ã³ãé¸æãã¾ãã ãã®ãã©ã¡ã¼ã¿ã¼ãããã·ã¥ãã¼ãã®ãã¼ã¸ã®URLã«è¿½å ãã¾ãï¼&platform[tvMode]=true TVã¢ã¼ããè¨­å®ããã«ã¯ãããã·ã¥ãã¼ããã ã¢ã¤ã³ã³ãé¸æãã¾ãããªãã·ã§ã³ã«å«ã¾ãããã®ï¼ ããã·ã¥ãã¼ãåãè¡¨ç¤ºããã¾ãã ããã·ã¥ãã¼ãåããªãã«ããã¨ãç»é¢ä¸ã§ããã·ã¥ãã¼ãã®ãã£ã¼ãã®ã¹ãã¼ã¹ãå¢ãã¾ãã ãã¼ã¸ã®åãæ¿ãã è¤æ°ã®ãã¼ã¸ã®ããããã·ã¥ãã¼ãã§ã¯ãããã«ãããã¼ã¸ãèªåçã«åãæ¿ããã¾ãã ãã¼ã¯ã¢ã¼ã é«ã³ã³ãã©ã¹ãã¢ã¼ãããããã·ã¥ãã¼ãã§ä½¿ç¨ã§ãã¾ãã ã¢ã¤ã³ã³ããå³ä¸ã®ã¡ãã¥ã¼ãã¼ããé¸æãã¾ãã ããã·ã¥ãã¼ããã¨ã¯ã¹ãã¼ããã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦ãPDFãã¡ã¤ã«ã¨ãã¦ããã·ã¥ãã¼ããã¨ã¯ã¹ãã¼ãã§ãã¾ãã ãã³ã ãã¤ã§ãæ¤ç´¢æ©è½ãä½¿ç¨ãã¦ãNew Relic Oneå¨ä½ã§ãã¼ã¿ãæ¤ç´¢ã§ãã¾ãã æ°è¦ã³ã³ãã³ããããã·ã¥ãã¼ãã«è¿½å ãã è¤æ°ã®æ¹æ³ã§ãããã·ã¥ãã¼ãã«æ°è¦ã³ã³ãã³ããè¿½å ã§ãã¾ãï¼ ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ããã³ã¯ã¨ãªãã«ãã¼æ©è½ããã + ããã·ã¥ãã¼ãã«è¿½å ãã¿ã³ï¼ã¡ã¤ã³ã®ããã·ã¥ãã¼ãã®ãã¼ã¸ãããã¾ãã¯ç·¨éã¢ã¼ãã§ã¢ã¯ã»ã¹å¯è½ï¼ãä½¿ç¨ãã¦ãã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãããããã¼ã¯ãã¦ã³ã¨ãã£ã¿ãä½¿ç¨ãã¦ã³ã³ãã³ãï¼ãã­ã¹ãããªã³ã¯ãç»åãªã©ï¼ãè¿½å ããã ããã·ã¥ãã¼ãããæ¢å­ã®ãã£ã¼ããã³ãã¼ããã ãã¼ã¯ãã¦ã³ã¨ãã£ã¿ãä½¿ç¨ãã¦ãã«ã¹ã¿ã ã³ã³ãã³ããè¿½å ããã ãã¼ã¯ãã¦ã³ã¨ãã£ã¿ã«ã¯ãã³ã³ãã³ããå¥åãããã¼ã¯ãã¦ã³ãã¤ã³ããè¡¨ç¤ºãããã¬ãã¥ã¼ãã¤ã³ãå«ã¾ãã¾ãããã¼ã¯ãã¦ã³æ§æãªãã·ã§ã³ã®è©³ç´°ã«ã¤ãã¦ã¯ãCommonmarkã®ã¦ã§ããµã¤ãããè¦§ãã ããã ãã¼ã¯ãã¦ã³ã¦ã£ã¸ã§ããã®æ¥å ã¢ã¤ã³ã³ãã¯ãªãã¯ããç·¨éãã¯ãªãã¯ãã¦ãæ¢å­ã®ã³ã³ãã³ããç·¨éãããã¨ãã§ãã¾ãã ãã¼ã¸ã®ããããã·ã¥ãã¼ããæ´çãã è¤æ°ã®ãã¼ã¸ãä½¿ç¨ãã¦ããã¾ãã¾ãªè¡¨ç¤ºã§ããã·ã¥ãã¼ããæ´çã§ãã¾ãããã¼ã¸ããã®ããã·ã¥ãã¼ãã«è¿½å ããã¨ãããã·ã¥ãã¼ãUIã®ä¸é¨ã«ããã¿ããä½¿ç¨ãã¦ããã®ãã¼ã¸ã«ã¢ã¯ã»ã¹ã§ãã¾ãã one.newrelic.com > Dashboards: ããã·ã¥ãã¼ãã®ä¸é¨ã«ããã¿ãã§è¡¨ç¤ºããããè¤æ°ã®ãã¼ã¸ã®ããNew Relic Oneã®ããã·ã¥ãã¼ãã®ä¾ã¯æ¬¡ã®ã¨ããã§ãããã¼ã¸ãããã·ã¥ãã¼ãã«è¿½å ããæ¢å­ã®ãã¼ã¸ãã³ãã¼ãããã¼ã¸ã¿ããæ°ããªä½ç½®ã«ãã©ãã°ãã¦ãã­ããã§ãã¾ãã ãã®æ©è½ãä½¿ç¨ãã¦ãé¢é£ããããã·ã¥ãã¼ãè¡¨ç¤ºãã°ã«ã¼ãåã§ãã¾ããããã¯ãç¹å®ã®ãã­ã¸ã§ã¯ãããã¼ã ãä¸»é¡ã«é¢é£ããå¤ãã®ãã¼ã¿ã¨ãã£ã¼ããéè¨ããéã«æç¨ã§ãã ãã¨ãã°ãã¢ãã¤ã«ã¢ããªãã¼ã ã¯ãå½ãã¨ã«ã¢ããªã®ããã©ã¼ãã³ã¹ã«éç¹ãç½®ããããã·ã¥ãã¼ããæ§ç¯ã§ãã¾ããæåã®ããã·ã¥ãã¼ãã®ãã¼ã¸ãããã¹ã¦ã®å½ã®ããã©ã¼ãã³ã¹ã®æ¦è¦ã¨ãããã®ä»ã®ãã¼ã¸ã§ç¹å®ã®å½ãåãä¸ãããã¨ãã§ãã¾ãã å½ç¤¾ã§ã¯ãããã·ã¥ãã¼ããã¤ãªããã®ä»ã®æ©è½ãæä¾ãã¦ãã¾ãã ãã¼ã¯ãã¦ã³ãã­ã¹ããå«ãã¦ã£ã¸ã§ãããä½æãã¦ãç¹å®ã®UIãã¼ã¸ãããã·ã¥ãã¼ãã¸ã®ãã¤ã¬ã¯ããªã³ã¯ãè¿½å ãã¾ãã ãã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ãä½¿ç¨ãã¦ãèªåçã«ãã®ä»ã®ããã·ã¥ãã¼ãã«ãªã³ã¯ããã£ã«ã¿ãªã³ã°ãè¡ããªã³ã¯ãä½æãã¾ãã ããã·ã¥ãã¼ãæ¤ç´¢ãä½¿ç¨ãã¦ãä¼¼ãååã®ããã·ã¥ãã¼ããæ¤ç´¢ãã¾ãããã®æ©è½ãæ´»ç¨ãã¦ããã¼ã ããã­ã¸ã§ã¯ãã«åºæã®èªå¥ãããã·ã¥ãã¼ãåã«è¿½å ã§ãã¾ãã New Relic Insightsã§ã¯ããã®æ©è½ã¯ãã¼ã¿ã¢ããªã¨å¼ã°ãã¦ãã¾ãããInsightsããNew Relic Oneã®åãæ¿ãã®è©³ç´°ã«ã¤ãã¦ã¯ãç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã¼ã¸ãããã·ã¥ãã¼ãã«è¿½å ãç·¨éãã ãã¼ã¸ãããã·ã¥ãã¼ãã«è¿½å ãã¾ãã¯ãã¼ã¸ãç·¨éããã«ã¯ï¼ æ°è¦ã¾ãã¯æ¢å­ã®ããã·ã¥ãã¼ãã§ã ã¢ã¤ã³ã³ãé¸æãã¦ç·¨éã¢ã¼ãã§å¥åãã¾ãã æ°è¦ãã¼ã¸ãè¿½å ããï¼ ãã¼ã¸ãè¿½å ãé¸æãã¦ç©ºç½ã®ãã¼ã¸ãè¿½å ãã¾ãã ããã·ã¥ãã¼ãåã®é£ã«ãããã­ãããã¦ã³ãã¯ãªãã¯ããè¤è£½ãé¸æãã¦ãæ¢å­ã®ãã¼ã¸ã®ã¯ã­ã¼ã³ãä½æãã¾ãã ç·¨éã¢ã¼ãã®éãæ°è¦ãã¼ã¸ã«ã¦ã£ã¸ã§ãããè¿½å ãããã¼ã¸ã¿ããæ°ããªå ´æã«ãã©ãã°ãã¦ãã­ãããããããã®ä»ã®ããã·ã¥ãã¼ãç·¨éã¿ã¹ã¯ãè¡ãã¾ãã çµäºããããç·¨éãå®äºãé¸æãã¾ãã ãã£ã¼ãã¨ãã¼ã¯ãã¦ã³ã³ã³ãã³ããç®¡çãã ãã£ã¼ããããå³ä¸è§ã®ãã£ã¼ãã¢ã¯ã·ã§ã³ã¡ãã¥ã¼ã«ã¢ã¯ã»ã¹ããæ¬¡ã®ãã¨ãè¡ãã¾ãã ãã£ã¼ããå¨ç»é¢ã«æ¡å¼µããã ç»åã¨ãã¦ãã¾ãã¯ãªã³ã¯ãä»ãã¦ãã£ã¼ããå±æããã ãã£ã¼ããããã·ã¥ãã¼ãã«ã³ãã¼ããã ã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãããã£ã¼ãã«é¢é£ããã¯ã¨ãªãè¡¨ç¤ºã¾ãã¯ç·¨éããã ãã£ã¼ããåé¤ããã éè¦ ããã·ã¥ãã¼ãã«å¯¾ããè¨±å¯ãèª­ã¿åãå°ç¨ã®å ´åããã£ã¼ãã®ã¯ã¨ãªã¯ç·¨éã§ãã¾ããã ãã¼ã¯ãã¦ã³è¦ç´ ãããå³ä¸éã«ããã¢ã¯ã»ã¹ã¡ãã¥ã¼ã«ã¢ã¯ã»ã¹ããç·¨éã¾ãã¯åé¤ãè¡ãã¾ãã è©³ç´°ã«ã¤ãã¦ã¯ããã£ã¼ãã®ä½¿ãæ¹ããè¦§ãã ããã ãã£ã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ãã¦çµãè¾¼ã ãã£ã«ã¿ãªã³ã°æ©è½ãä½¿ç¨ãã¦ããã£ã¹ãã¬ã¤ã§æå ±ãçµãè¾¼ããã¨ãã§ãã¾ãããã®æ©è½ã¯ãã¯ã¨ãªæ¡ä»¶ãè¦è¦çã«è¡¨ããã®ã§ãã ãã£ã«ã¿ã¼ãã¼ãä½¿ç¨ãã¦ãè¡¨ç¤ºããå¤ãå±æ§ãé¸æãããã£ã¼ãããæ®ãã®è¦ç´ ãåé¤ããã é«åº¦ãªãã£ã«ã¿ã¼ãã¼ãéãã¦booleanæ¼ç®å­ï¼=ã!=ãCONTAINSãEXCLUDESãªã©ï¼ã«ã¢ã¯ã»ã¹ãããã¼ã¿ã®ãã£ã«ã¿ãªã³ã°ã®ããã®è¤éã§çµã¿åããããæ¡ä»¶ãè¿½å ããã ãã£ã«ã¿ã¼ãé©ç¨å¾ãããã·ã¥ãã¼ãã«ã¯ãé¸æããè¦ç´ ã«é¢é£ãããã¼ã¿ã®ã¿ãè¡¨ç¤ºããã¾ããå°ããªã«ã¦ã³ã¿ã¼ã¯ã1åã«ããã¤ã®ãã£ã«ã¿ã¼ãé©ç¨ããã¦ããããè¡¨ãã¾ãã ããã©ã«ãè¡¨ç¤ºã«æ»ãã«ã¯ããã£ã«ã¿ã¼ã®æ¨ªã«ããå°ããªXãã¯ãªãã¯ãã¦åé¤ãã¾ãã ãã£ã¼ãå¡ä¾ãä½¿ç¨ãã¦ãã£ã«ã¿ã¼ãé©ç¨ãã å¡ä¾ã®ã¤ãããã£ã¼ãã§å¡ä¾ãã¯ãªãã¯ãã¦ããã®ç³»åã®ã¿ãè¡¨ç¤ºãããã£ã¼ãããæ®ãã®ãã®ãåé¤ãã¾ããããã«ãããåæãããã¼ã¿ãéé¢ã§ãã¾ãã åå¯¾ã®åä½ã§ã¯ãCMDï¼Macã®å ´åï¼ã¾ãã¯CTRLï¼Windowsã®å ´åï¼ãä½¿ç¨ãã¾ããé¸æããç³»åãåé¤ããæ®ããä¿å­ãã¾ãã ãã¡ã»ãããä½¿ç¨ãã¦ããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ãã ãã£ã¼ãã®NRQLã¯ã¨ãªã«FACETå¥ãå«ã¾ããå ´åããã¡ã»ããã®ã¤ããå±æ§ãä½¿ç¨ãã¦ãç¾å¨ã®ããã·ã¥ãã¼ãã¾ãã¯å¥ã®é¢é£ããããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ã§ãã¾ããè©³ç´°ã«ã¤ãã¦ã¯ããã¡ã»ããã«ãããã£ã«ã¿ã¼ãé©ç¨ããããè¦§ãã ããã ã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦æéè¨­å®ãå¤æ´ãã ããã©ã«ãã§ã¯ãããã·ã¥ãã¼ãã®åãã£ã¼ãã«ã¯ãã¯ã¨ãªãã«ãã¼ã§ä½ææã«æå®ãããæéã®ãã¼ã¿ãè¡¨ç¤ºããã¾ãããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦è¡¨ç¤ºããããã¼ã¿ã®æéç¯å²ãå¤æ´ãããã¹ã¦ã®ãã£ã¼ãã«åãç¯å²ãè¨­å®ã§ãã¾ããããã¯ããã¼ã¿ãçµãè¾¼ã¿ç¹å®ã®æéã«ä½ãçºçããããè¦³å¯ããå¿è¦ãããå ´åãã¤ã³ã·ãã³ãã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ã®éã«ç¹ã«æç¨ã§ãã æ´æ°çã¯ãè¡¨ç¤ºä¸­ã®æéã®é·ãã«ããç°ãªãã¾ããå°æ¥ã¨ä¾ã«ã¤ãã¦ã¯ããã£ã¼ãã®æ´æ°ééããè¦§ãã ããã æéç¯å²ãå¤æ´ããã«ã¯ï¼ ãã­ãããã¦ã³ã¡ãã¥ã¼ãããå©ç¨å¯è½ãªãªãã·ã§ã³ï¼ç´è¿30åããç´è¿7æ¥ã¾ã§ï¼ã1ã¤é¸æãã¾ãã ã«ã¹ã¿ã ã¡ãã¥ã¼ãä½¿ç¨ãã¦ãç¹å®ã®éå§ããã³çµäºã¿ã¤ã ã¹ã¿ã³ãã§æéç¯å²ãã«ã¹ã¿ãã¤ãºãã¾ãã éè¦ ããã·ã¥ãã¼ãã§ã¯ãInsightsã¨ã¯ç°ãªããã¿ã¤ã ã¾ã¼ã³ã¯ãä½¿ãã®ãã¼ããã½ã³ã³ã®æéã¨ã¯é¢é£ãã¦ãã¾ãããã¿ã¤ã ããã«ã¼ã®ã«ã¹ã¿ã ã¡ãã¥ã¼ããç°¡åã«ã¢ã¯ã»ã¹ã§ããã¦ã¼ã¶ã¼è¨­å®ã§ãä½¿ç¨ããã¿ã¤ã ã¾ã¼ã³ãè¨­å®ã§ãã¾ãã ãã¼ã¿ãã¨ã¯ã¹ãã¼ããå±æãã ç¤¾åå¤ã§ããã·ã¥ãã¼ãã¨ãã£ã¼ããã¼ã¿ãã¨ã¯ã¹ãã¼ããå±æãããã¨ã¯ãéå¸¸ã«ç°¡åã§ãã å³ä¸ã®ã¡ãã¥ã¼ãã¼ã«ããPDFã¨ãã¦ããã·ã¥ãã¼ããã¨ã¯ã¹ãã¼ããã¿ã³ãä½¿ç¨ãã¦ãPDFãã¡ã¤ã«ã¨ãã¦ããã·ã¥ãã¼ããã¨ã¯ã¹ãã¼ãã§ãã¾ãã ãã£ã¼ããPNGç»åã¾ãã¯ãªã³ã¯ã¨ãã¦å±æãããã¨ãã§ãã¾ãããã£ã¼ãã¡ãã¥ã¼ã«ç§»åããç»åã¨ãã¦åå¾ã¾ãã¯ãã£ã¼ããªã³ã¯ãåå¾ãªãã·ã§ã³ã®ãããããé¸æãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 160.16333,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Query</em> your <em>data</em>"
      },
      "id": "6053437b196a67a8322d1626"
    },
    {
      "sections": [
        "ãã¡ã»ããã«ããNew Relic Oneããã·ã¥ãã¼ãã«ãã£ã«ã¿ãé©ç¨ãã",
        "ãã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ãä½¿ç¨ããçç±",
        "è¦ä»¶",
        "ãã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ã®ä½¿ç¨ä¾",
        "FACET CASESå¥ã¨ã®ãªã³ã¯ãã¡ã»ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ãã¡ã»ããã«ããNew Relic Oneããã·ã¥ãã¼ãã«ãã£ã«ã¿ãé©ç¨ãã",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "954e24fc2fa5108c44642daa583e203bd16e740a",
      "image": "https://docs.newrelic.com/static/8190f8c9ef92e92ca0996c32b91b53a5/c1b63/facetfiltering01bis.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/filter-new-relic-one-dashboards-facets/",
      "published_at": "2021-03-18T12:10:27Z",
      "updated_at": "2021-03-18T12:10:27Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¡ã»ããåããå±æ§ã«ããNew Relic Oneããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ããããã·ã¥ãã¼ããããã¤ã³ã¿ã©ã¯ãã£ããªãã®ã¨ãä½¿ããããã§ãã¾ãã ãã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ãä½¿ç¨ããçç± New Relic Oneããã·ã¥ãã¼ãã§ã¯ãFACETå¥ãå«ã¿ãã®ä»ã®ãã£ã¼ãã¿ã¤ãè¦ä»¶ãæºããNRQLã¯ã¨ãªã«ã¤ãã¦ããã¡ã»ããåããå±æ§ãè¨­å®ãã¦ãç¾å¨ã®ããã·ã¥ãã¼ããé¢é£ãããªã³ã¯ããããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ã§ãã¾ããããã·ã¥ãã¼ãã®ãã£ã«ã¿ãªã³ã°ãè¿éã«è¡ãããã£ã«ã¿ã¼ãé©ç¨æ¸ã¿ã®ããã·ã¥ãã¼ãã«ãªã³ã¯ãããã¨ã§ãããã·ã¥ãã¼ããããã¤ã³ã¿ã©ã¯ãã£ããªãã®ã¨ãä½¿ããããã§ãã¾ãã ãã®æ©è½ã¯ãæ°è¦ã®ãã£ã¼ããããã·ã¥ãã¼ãã«è¿½å ãã¾ãã¯æ¢å­ã®ããã·ã¥ãã¼ãã§ãã£ã¼ããç·¨éããéã«å©ç¨ã§ãã¾ãã å®éã®ãã®æ©è½ã«ã¤ãã¦ã¯ãä½¿ç¨ä¾ããè¦§ãã ããã è¦ä»¶ ãã®æ©è½ãä½¿ç¨ããããã®è¦ä»¶ï¼ New Relic Oneããã·ã¥ãã¼ããéãã¦ããå¿è¦ãããã¾ããã¯ã¨ãªãã«ãã¼ã®ã¹ã¿ã³ãã¢ã­ã³ãã£ã¼ãã§ã¯æ©è½ãã¾ããã NRQLã¯ã¨ãªã«ãFACETå¥ãå«ã¾ããå¿è¦ãããã¾ãã ãã¼ãã£ã¼ãã¨ãã¼ããããããã¤ãã£ã¼ããè¡¨ã§ãããå©ç¨ããã ãã¾ããã ãã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ã®ä½¿ç¨ä¾ New Relic Oneã§ãæ¢å­ã®ããã·ã¥ãã¼ãã«ã¤ãã¦ã®ãæ¬¡ã®ãã¡ã»ãããå«ãNRQLã¯ã¨ãªãä½æãã¦ããã¨ãã¾ãã one.newrelic.com > Dashboards: FACETå¥ãå«ã¿ãã£ã¼ãã¿ã¤ãã®è¦ä»¶ãæºããã¯ã¨ãªã«ã¤ãã¦ã¯ããã®å±æ§ãè¨­å®ãã¦ç°¡åãªããã·ã¥ãã¼ããã£ã«ã¿ã¼ã¨ãã¦ä½¿ç¨ã§ãã¾ããå±æ§ãä½¿ç¨ãã¦ãç¾å¨éãã¦ããããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ãã¾ãã¯é¸æããé¢é£ããããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ã§ãã¾ãã ç¾å¨ã®ããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ãé¸æããã¨ããã®ãã£ã¼ããä½¿ç¨ãããå©ç¨å¯è½ãªuserAgentNameå±æ§ã«ããç¾å¨ã®ããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ããã¾ãããã®å±æ§ã®1ã¤ãé¸æãããã®ããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ããã¨ãããªãã¾ããé¸æããå±æ§ã¯ãä¸é¨ã®æ¤ç´¢ãã¼ã§ãã£ã«ã¿ã¼ã¨ãã¦è¡¨ç¤ºããããã¨ã«æ³¨æãã¦ãã ããã one.newrelic.com > Dashboards: ãã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ã§è¨­å®ããå±æ§ãé¸æããã¨ãç¾å¨ã®ããã·ã¥ãã¼ãã«ãã£ã«ã¿ã¼ãé©ç¨ããã¾ãã ãã®æ©è½ã®è©³ç´°ã«ã¤ãã¦ã¯ããã¡ã»ããã«ãããã£ã«ã¿ãªã³ã°ã«ã¤ãã¦ã®Explorers Hubã®æç¨¿ããè¦§ãã ããã FACET CASESå¥ã¨ã®ãªã³ã¯ãã¡ã»ãã FACET CASESã¯ãæ¡ä»¶ã«åºã¥ãã¦ãã¡ã»ãããã°ã«ã¼ãåã§ããNRQLé¢æ°ã§ããåããã¡ã»ããåã§è¤æ°ã®ã±ã¼ã¹ããµãã¼ãããã¦ãã¾ãã ä¾ãã°ãã¢ããªã±ã¼ã·ã§ã³ã«ã¯ã¨ãªãããã¨ãã¦ããæã«ãã¯ã©ã¦ãã«ç§»è¡æ¸ã¿ã®ãã®ã¨ãç§»è¡ããã¦ããªããã®ãåãããªãå ´åãä¾ã«èãã¦ã¿ã¾ãã SELECT filter(count(*), WHERE duration > 1) as 'On-premises', filter(count(*), WHERE duration < .06) as 'AWS' FROM Transaction WHERE appName NOT LIKE '%Tower%' FACET appName LIMIT 5 since 5 minutes ago ã³ãã¼ FACET casesãä½¿ç¨ãããã¨ã§ãæ¡ä»¶ãè¿½å ãã¦ãç§»è¡ã¹ãã¼ã¿ã¹ãåå¾ã§ãã¾ãã SELECT count(*) FROM Transaction WHERE appName NOT LIKE '%Tower%' facet cases(WHERE appName = 'WebPortal' OR appName = 'Plan Service' as '% of Hosts On-Prem', WHERE appName != 'WebPortal' AND appName != 'Plan Service' as '% of Hosts in Cloud') since 10 minutes ago limit 100 ã³ãã¼ æ¬¡ã«ããã¡ã»ãããªã³ã¯ãä½¿ç¨ãã¦ããããã®ãã¡ã»ããã§ããã·ã¥ãã¼ãããã£ã«ã¿ã¼ã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 160.15182,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Query</em> your <em>data</em>"
      },
      "id": "60534333196a67a9472d164a"
    },
    {
      "sections": [
        "ããã·ã¥ãã¼ãå¥é",
        "ãã³ã",
        "éè¦ãªçç±",
        "New Relicå¨ä½ã«ã¾ãããããã·ã¥ãã¼ããè¡¨ç¤ºãã",
        "ããã·ã¥ãã¼ãã®ä½¿ç¨ãéå§",
        "ããã·ã¥ãã¼ãã®ä½æ",
        "ããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æ",
        "ããã·ã¥ãã¼ãã®åé¤",
        "ããã·ã¥ãã¼ãã«ãæ°ã«å¥ãã®å°ãä»ãã",
        "ããã·ã¥ãã¼ãã®æ¤ç´¢ã¨ä¸¦ã³æ¿ã",
        "ããã·ã¥ãã¼ãã®ã¢ã¯ã»ã¹è¨±å¯",
        "ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çãã",
        "ä¸»è¦ãªè¦è¦åãã¼ã«",
        "ä¸è²«ãããã£ã¼ãã®è²",
        "é¢é£ãããã¼ãã«",
        "ãã¼ã¿ã¹ã¯ã©ãã¼",
        "æ¡å¤§ãã©ã·",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ããã·ã¥ãã¼ãå¥é",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "36da9a58bf388d15522c769ef3ad709550eee043",
      "image": "https://docs.newrelic.com/static/c9724f76b9c3ad86f9a22abab501a2af/c1b63/dashboards_intro.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/introduction-dashboards/",
      "published_at": "2021-03-18T12:10:26Z",
      "updated_at": "2021-03-18T12:10:26Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¼ã¿ãéè·¯ã®è¤éãªã·ã¹ãã ã¨ãã¦æããï¼éè·¯ã®æ¨è­ãä¿¡å·ã«å¾ãéè»¢ããåéããæå ±ã®æå³ãè¿éã«ææ¡ãå®è¡ããå¿è¦ãããã¾ããNew Relic Oneããã·ã¥ãã¼ãã¯ãNew Relicãã©ãããã©ã¼ã ã®ããããå ´æãããè¡¨ç¤ºãããç¹å®ã®ãã¼ã¿ãåéãã¦ããæã¿ã®æ¹æ³ã§ãã£ã¼ããä½æãã¾ãã ãã³ã ããã·ã¥ãã¼ãã¨ãã®ä»ã®ãªãã¶ã¼ãããªãã£ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ãNew Relicãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã éè¦ãªçç± New Relic Oneããã·ã¥ãã¼ããä½¿ç¨ãã¦ãåéãããã¼ã¿ãã«ã¹ã¿ãã¤ãºãã¦çè§£ã§ãã¾ããã«ã¹ã¿ãã¤ãºãããã¦ã¼ã¶ã¼ãã¬ã³ããªã¼ãªãã£ã¼ãã§ãã¼ã¿ãè©³ããèª¿ã¹ãã¤ãªããã®ããã½ã¼ã¹ã®ç¸é¢æ§ãå°ããã·ã¹ãã ã¨ã¢ããªã±ã¼ã·ã§ã³ã®ç¶æãç´ æ©ãçè§£ãããã¨ã§ãããè¿éãã¤å¹ççãªãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãè¡ãã¾ãã ããã·ã¥ãã¼ããå©ç¨ãã¦ãæ¬¡ã®ãã¨ãè¡ãã¾ãï¼ ä¸è²«ããUIã«ããã«ã¹ã¿ã ã®é«å¯ã®ã¤ã³ã¿ã©ã¯ãã£ããªå¯è¦åã«ãããç¥è¦ãæ·±ããã ãã©ãããã©ã¼ã ã®ã©ãããã§ãããã¹ã¦ã®ã¤ãã³ãã¨å±æ§ã®ãã£ã¼ããä½æãããè©³ç´°ã«ã¤ãã¦ã¯ãããã©ã«ãã®ãã¼ã¿åéã«é¢ããå¼ç¤¾ã®ãã­ã¥ã¡ã³ãã¼ã·ã§ã³ãåç§ãã¦ãã ããã ã«ã¹ã¿ã å±æ§ã®è¿½å ã¾ãã¯ã«ã¹ã¿ã ã¤ãã³ãã¿ã¤ãã®éä¿¡ãå¤§åã®ã¤ãã³ãã«å¯¾ãã¦è¡ãã¾ããããã«ãããè²´ç¤¾ã®ãã¸ãã¹ã¸ã®çè§£åãé«ãããã¼ã¸ãã¥ã¼æ°ããã¹ããã©ã³ã¶ã¯ã·ã§ã³ãªã©ãé¡§å®¢ã¨ãã©ãããã©ã¼ã ã®ã¤ã³ã¿ã©ã¯ã·ã§ã³ã«é¢ããå·ä½çãªãã¤ã³ããç¢ºèªã§ãã¾ãã ã¯ã¤ãã¯ã¢ã¯ã»ã¹CRUDã¡ãã¥ã¼ã¨ç·¨éãªãã·ã§ã³ã«ãã£ã¦ããã£ã¼ãã¨ããã·ã¥ãã¼ãç®¡çãå®¹æã«ãã¾ãã é«åº¦ãªè£è¶³èª¬ææ©è½ã¨ãºã¼ã ã¤ã³æ©è½ã§ãã¼ã¿ã®æ¢ç´¢ã¨ã³ã³ãã­ã¹ãåãè¡ããè²´ç¤¾ã·ã¹ãã ã®ãªã¢ã«ã¿ã¤ã ã®ã¢ã¯ãã£ããã£ãã¢ãã¿ã¼ã§ãã¾ãã ããã·ã¥ãã¼ãã§å±æ§ã¨ã¡ããªãã¯ã¹ãæ¤ç´¢ãã¾ãã APIãä½¿ç¨ãã¦ããã·ã¥ãã¼ãã«ãã¼ã¿ãéä¿¡ãã¾ãã New Relicå¨ä½ã«ã¾ãããããã·ã¥ãã¼ããè¡¨ç¤ºãã New Relic Oneã®ããã·ã¥ãã¼ãã«ã¯ãåãã®New Relicãã©ãããã©ã¼ã ã¨ã®å®å¨ãªä¸ä½äºææ§ãåãã£ã¦ãããããInsightsã§ä½æããå¨ã¦ã®ããã·ã¥ãã¼ããããã·ã¥ãã¼ãã§èªåçã«å©ç¨ã§ããããã«ãªãã¾ããã¤ã¾ããæ°ãã«ããã·ã¥ãã¼ããè¿½å ããã¨ãInsightsã§ãä½æããã¾ããè¿½å ã®è¨­å®ã¯å¿è¦ããã¾ãããNew Relic Oneã§ã¯ãã¯ã­ã¹ã¢ã«ã¦ã³ãæ¤ç´¢ãå©ç¨ãããã¨ã§ãçµç¹å¨ä½ã«ã¾ãããããã·ã¥ãã¼ããè¡¨ç¤ºã§ãã¾ãã ãã³ã InsightsããNew Relic Oneã«åãæ¿ããå ´åç§»è¡ã¬ã¤ãããè¦§ãã ããã ããã·ã¥ãã¼ãã®ä½¿ç¨ãéå§ ããã·ã¥ãã¼ãã«ã¢ã¯ã»ã¹ããã«ã¯ãone.newrelic.comã«ç§»åããããã²ã¼ã·ã§ã³ã¡ãã¥ã¼ã®ä¸é¨ã«ããããã·ã¥ãã¼ããã¯ãªãã¯ãã¾ãã ããã·ã¥ãã¼ãã®ç´¢å¼ã§ãNew Relicã¢ã«ã¦ã³ãã«é¢é£ãããã¹ã¦ã®ããã·ã¥ãã¼ãã¨ãã¼ã¿ã¢ããªãè¡¨ç¤ºã§ãã¾ããããã«ã¯ãNew Relic Oneãã©ãããã©ã¼ã åã§ä½æããããã·ã¥ãã¼ãã¨ãInsightsã§æ§ç¯ããããã·ã¥ãã¼ããå«ã¾ãã¾ãã ä¸é¨ã®ãã¼ãããã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ããAPMãBrowserãInfrastructure monitoringãLogsãã¤ã³ããªã¸ã§ã³ã¹ã®å¿ç¨ãªã©ãã¹ã¦ã®New Relicæ©è½ã«è¿éã«ã¢ã¯ã»ã¹ãã¾ããã¾ãããã©ãããã©ã¼ã å¨ä½ã§ä½¿ç¨ã§ãããã¼ã¿ã®æ¤ç´¢ãã¯ã¨ãªãªã©ã®New Relic Oneã®ä¸­å¿çãªæ©è½ãä½¿ç¨ã§ãã¾ãã åããã·ã¥ãã¼ãã§ãç´¢å¼ã«æ¬¡ã®æå ±ãè¡¨ç¤ºããã¾ãï¼ æã§è¡¨ãããããæ°ã«å¥ãã®ã¹ãã¼ã¿ã¹ ååï¼ããã·ã¥ãã¼ãã®åå ã¢ã«ã¦ã³ãï¼ããã·ã¥ãã¼ããå±ããã¢ã«ã¦ã³ã ä½æèï¼ããã·ã¥ãã¼ããä½æããã¦ã¼ã¶ã¼ æçµç·¨éæ¥æï¼ç´è¿ã®ããã·ã¥ãã¼ãå¤æ´ã®æ¥æ ä½ææ¥æï¼ããã·ã¥ãã¼ãã®ä½ææ¥æï¼ æ¬¡ã®ã¢ã¯ã·ã§ã³ãè¡ãã¾ãï¼ ããã·ã¥ãã¼ãã®ä½æ ããã·ã¥ãã¼ãã®ç´¢å¼ã®å³ä¸éã«ãã+ããã·ã¥ãã¼ããä½æãã¿ã³ãé¸æãã¦ãããã·ã¥ãã¼ãããNew Relic Oneã§ããã·ã¥ãã¼ããä½æã§ãã¾ãã ããã·ã¥ãã¼ãã«ååãä»ããååã¯æ¤ç´¢å¯è½ãªãããããã·ã¥ãã¼ããç°¡åã«æ¤ç´¢ã§ããæå³ã®ããååï¼ä¾ã¨ãã¦ããµã¼ãã¹ãã¢ããªã±ã¼ã·ã§ã³ï¼ãä»ãããã¨ãæ¨å¥¨ãã¾ãã ããã·ã¥ãã¼ããå±ããã¢ã«ã¦ã³ããé¸æãã¾ãããã®ã¢ã¯ã·ã§ã³ã¯å¤æ´ã§ããªããããæéã«é¸æãã¦ãã ããã ä½æãæ¼ãã¦ç¶ããããã­ã£ã³ã»ã«ãæ¼ãã¦ç´¢å¼ã«æ»ãã¾ãã ãã³ã ããã©ã«ãã§ã¯ãããã·ã¥ãã¼ãã¯ãããªãã¯ - èª­ã¿åãã¨æ¸ãè¾¼ã¿è¨±å¯ã§ä½æããã¾ããããã·ã¥ãã¼ãã«ã¢ã¯ã»ã¹ããå¾ãè¨­å®ã¡ãã¥ã¼ããç·¨éã§ãã¾ãã ã¾ãã¯ãæ¬¡ã®ããã«æ°è¦ã®ããã·ã¥ãã¼ããä½æãããã¨ãã§ãã¾ãï¼ æ¢å­ã®ããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æãã¦ã ãã£ã¼ãããï¼ãã£ã¼ããä»»æã®ããã·ã¥ãã¼ãããæ°è¦ã¾ãã¯æ¢å­ã®ããã·ã¥ãã¼ãã«ã³ãã¼ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¾ãã¯ã¯ã¨ãªãã«ãã¼ãã: ã¯ã¨ãªæ©è½ããä½æãããã£ã¼ãããæ°è¦ã¾ãã¯æ¢å­ã®ããã·ã¥ãã¼ãã«è¿½å ãã¾ãã ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ããï¼ã¨ã³ãã£ãã£ããã¼ã¸ã£ããããã·ã¥ãã¼ãã«ã«ã¹ã¿ã ã§è¡¨ç¤ºãè¡ãã¾ãã è¤æ°ã®ãã¼ã¸ã§ããã·ã¥ãã¼ããæ´çããã«ã¯ãããã·ã¥ãã¼ãã«ãã¼ã¸ãè¿½å ãã¾ãã ããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æ ç´¢å¼ã®ããã·ã¥ãã¼ãè¡ã®ä¸ã«ã«ã¼ã½ã«ãç§»åããã¨è¡¨ç¤ºãããããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æãã¿ã³ãã¯ãªãã¯ãã¦ãããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æãã¾ããè¨±å¯ã®ã¬ãã«ã«ããããããããããããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æã§ãã¾ãã ããã·ã¥ãã¼ãã¯èªåçã«ã³ãã¼ãããã¯ã­ã¼ã³ãç´¢å¼ã«è¿½å ããã¾ããç»é¢ã«ãããã¢ããè¡¨ç¤ºãããã¡ãã»ã¼ã¸ãã¯ãªãã¯ãã¦ãæ°è¦ããã·ã¥ãã¼ãã«ã¢ã¯ã»ã¹ãã¾ãã ã¯ã­ã¼ã³çã®ããã·ã¥ãã¼ãã«ã¯ãåã®ããã·ã¥ãã¼ãã®ååã®å¾ã«ãcopyããä»ãããã¾ãããã¨ãã°ãthis is my dashboardã¨ããååã®ããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æããã¨ãã¯ã­ã¼ã³ã¯this is my dashboard copyã¨ãã¦ä½æããã¾ããã¯ã­ã¼ã³ã®è¨±å¯ã¯ããããªãã¯ - èª­ã¿åãã¨æ¸ãè¾¼ã¿ã¨ãªãã¾ãã ããã·ã¥ãã¼ãã®ååãè¨±å¯ãªã©ã®ãã®ä»ã®ãã­ããã£ã¯ããã¤ã§ãç·¨éã§ãã¾ãã ãã³ã ç´¢å¼ã«ã¯ãä¸¦ã¹æ¿ãã«å¾ãããã·ã¥ãã¼ããè¡¨ç¤ºããã¾ããã¯ã­ã¼ã³çã®ããã·ã¥ãã¼ããè¿éã«æ¤ç´¢ããã«ã¯ãä½ææ¥ã§ããã·ã¥ãã¼ããä¸¦ã³æ¿ãã¾ããæ°è¦ã®ããã·ã¥ãã¼ããåé ­ã«è¡¨ç¤ºããã¾ãã ããã·ã¥ãã¼ãã®åé¤ ããã·ã¥ãã¼ããåé¤ããã«ã¯ãåé¤ãã¿ã³ãè¡¨ç¤ºãããã¾ã§ãç´¢å¼ã®ããã·ã¥ãã¼ãè¡ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã¾ããèªèº«ã§ä½æããå ´åãã¾ãã¯è¨±å¯ããããªãã¯ - èª­ã¿åãã¨æ¸ãè¾¼ã¿ã®å ´åãããããã·ã¥ãã¼ãã¯åé¤ã§ãã¾ãããè©³ããã¯ãè¨±å¯ã«ã¤ãã¦ã®æå ±ãåç§ãã¦ãã ããã ããã·ã¥ãã¼ãã®è¨­å®ããã«ãããããã·ã¥ãã¼ããåé¤ãããã¨ãã§ãã¾ãã ããã·ã¥ãã¼ãã«ãæ°ã«å¥ãã®å°ãä»ãã ããã·ã¥ãã¼ãã®é£ã«ããæã®ã¢ã¤ã³ã³ãã¯ãªãã¯ããã¨ããæ°ã«å¥ãããªã³ã¨ãªãã§åãæ¿ããã¾ããããã·ã¥ãã¼ãããæ°ã«å¥ãã«ããã¨ããªã¹ãã®åé ­ã«ãããã®ä»ã®ãæ°ã«å¥ãã®ããã·ã¥ãã¼ãã¨åãã°ã«ã¼ãã«å¥ããNew Relic Oneã®ãã¼ã ãã¼ã¸ã§è¡¨ç¤ºããã¾ãã ãæ°ã«å¥ãããããã·ã¥ãã¼ããåé¤ããã«ã¯ãæã®ã¢ã¤ã³ã³ãããä¸åº¦é¸æãã¾ãã New Relic Oneã¯ãInsightsãããæ°ã«å¥ãã®ããã·ã¥ãã¼ããåå¾ãã¾ãããInsightsããNew Relic Oneã¸ã®ç§»è¡ã®æ¹æ³ããè¦§ãã ããã ããã·ã¥ãã¼ãã®æ¤ç´¢ã¨ä¸¦ã³æ¿ã ç´¢å¼ã®ä¸ã«ããæ¤ç´¢ããã¯ã¹ãä½¿ç¨ãã¦ãããã·ã¥ãã¼ãåã¨ä½æèå¥ã«ãããã·ã¥ãã¼ãã®æ¤ç´¢ãè¡ãã¾ãã ç´¢å¼ã§ããã·ã¥ãã¼ãã®ä¸¦ã¹æ¿ããè¡ãã¾ããããã©ã«ãã§ã¯ãç´è¿ã«ç·¨éããããã·ã¥ãã¼ããããæ°ã«å¥ãã¨ãæ°ã«å¥ãä»¥å¤ã®ã»ã¯ã·ã§ã³ã®ä¸¡æ¹ã§ãç´¢å¼ã®åé ­ã«è¡¨ç¤ºããã¾ãããã®é åºãå¤æ´ããã«ã¯ãç´¢å¼ã®ä»»æã®åã§ä¸¡æ¹ã®ã»ã¯ã·ã§ã³ãä¸¦ã¹æ¿ããã¨ãç´è¿ã®ä¸¦ã¹æ¿ãã®çµæããæ¬¡åNew Relic Oneã«ã¢ã¯ã»ã¹ããéã«è¡¨ç¤ºããã¾ãã ããã·ã¥ãã¼ãã®ã¢ã¯ã»ã¹è¨±å¯ ããã·ã¥ãã¼ãã«ã¯ãæ¬¡ã®3ç¨®é¡ã®æ¨©éãããã¾ãã ãããªãã¯ - èª­ã¿åãã¨æ¸ãè¾¼ã¿: ãã¹ã¦ã®ã¦ã¼ã¶ã¼ããããã·ã¥ãã¼ãã«å¯¾ãå®å¨ãªæ¨©å©ãæãã¾ãã ãããªãã¯ - èª­ã¿åãã®ã¿: ãã¹ã¦ã®ã¦ã¼ã¶ã¼ã¯ããã·ã¥ãã¼ããè¡¨ç¤ºã§ãã¾ãããããã·ã¥ãã¼ãã§ä½æ¥­ãè¡ãå®å¨ãªæ¨©å©ãæããã®ã¯ããªãã ãã§ããä»ã®ã¦ã¼ã¶ã¼ã¯ããã·ã¥ãã¼ãã«ã¢ã¯ã»ã¹ããã¯ã­ã¼ã³ãä½æã§ãã¾ãããç·¨éãåé¤ã¯ã§ãã¾ããã ãã©ã¤ãã¼ã: ããã·ã¥ãã¼ããè¡¨ç¤ºã§ããã®ã¯ããªãã ãã§ãã ããã·ã¥ãã¼ããä½æãã¿ã³ãä½¿ç¨ãã¦ãã¾ãã¯å¥ã®ããã·ã¥ãã¼ãã®ã¯ã­ã¼ã³ãä½æãã¦ããã·ã¥ãã¼ããä½æããã¨ãããã©ã«ãã§ãããªãã¯ - èª­ã¿åãã¨æ¸ãè¾¼ã¿ã®æ¨©å©ãä»ä¸ããã¾ããæ°è¦ããã·ã¥ãã¼ãã«ã¢ã¯ã»ã¹ãã¦ããã®è¨­å®ãå¤æ´ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çãã ã¿ã°ä½æAPIã§ããNerdGraphãä½¿ç¨ãã¦ãã¿ã°ãè¿½å ã§ãã¾ãã ã¿ã°å¥ã«ããã·ã¥ãã¼ãããã£ã«ã¿ã¼ãããã¨ãã§ãã¾ããããã«ãã£ã¦ã¦ã¼ã¶ã¼ã¢ã«ã¦ã³ããã­ã±ã¼ã·ã§ã³ãªã©ãç¹å®ã§ãã¾ããã¿ã°ãã£ã«ã¿ã¼ãã¯ãªãã¯ãã¦ä½¿ç¨å¯è½ãªã¿ã°ãè¡¨ç¤ºããã¨ããªã¹ããã1ã¤ä»¥ä¸ã®ã¿ã°ãç°¡åã«é¸æãã¦ãç´¢å¼ã§ããã·ã¥ãã¼ããçµãè¾¼ããã¨ãã§ãã¾ãã ä¸»è¦ãªè¦è¦åãã¼ã« ããã·ã¥ãã¼ãã«ã¯ãè©³ç´°ãªãã¼ã¿æ¤ç´¢ãè¿éãªãã©ãã«ã·ã¥ã¼ãã£ã³ã°ã®ããã®ãåãããããè¦è¦åæ©è½ã¨ãã¼ã«ãåãã£ã¦ãã¾ãã ä¸è²«ãããã£ã¼ãã®è² ãã¼ã¿ããã¡ã»ãããããã«è¡¨ç¤ºãé¢é£ä»ããããã·ã¥ãã¼ãã§1ã¤ä»¥ä¸ã®ãã£ã¼ãã«é©ç¨ãããã¹ã¦ã®ãã£ã¼ãã§ãã¡ã»ããã®è²ãä¸è²«ãããã®ã«ã§ãã¾ãã é¢é£ãããã¼ãã« ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãé¢é£ãããã¼ãã«ããåæã«ããã·ã¥ãã¼ãã®ãã¹ã¦ã®ãã£ã¼ãããã¼ã¿ãã¤ã³ãã«éãªã£ã¦è¡¨ç¤ºããã¾ãããã¼ã«ãããã«ã¯ãç·ãã£ã¼ãã®æå¤§å¤ãæå°å¤ãªã©ãé¸æãããã¡ã»ããããã®é¢é£ãã¼ã¿ãã¤ã³ããè¨è¼ããã¦ãã¾ããã¾ãããã¤ãã£ã¼ãã§é¸æããå±æ§ããã¤ã©ã¤ãè¡¨ç¤ºãã¾ãã ãã¼ã¿ã¹ã¯ã©ãã¼ ãã£ã¼ãã¹ã¯ã©ãã¼ãä½¿ç¨ãã¦ããã£ã¼ããå¯éãã¦ããããã¡ã»ããéã®è·é¢ãéå¸¸ã«è¿ãå ´åã«ããã£ã¼ãã§ãã¼ã¿ãã¤ã³ãããã¡ã»ãããé¸æã§ãã¾ãã ãã¦ã¹ããã¼ãã«ã®å´ã«ç§»åããé£ã«ãããã¡ã»ãããã¹ã ã¼ãºã«é¸æããé¢é£ãããã¼ã¿ãã¤ã³ããè¡¨ç¤ºãã¾ããã¾ããUIã«è¡¨ç¤ºããã1ã¤ä»¥ä¸ã®å±æ§ã®é¸æãè§£é¤ãã¦ãæå¥ãã¼ã¿ã®å¤ããã£ã¼ãã®ãã¼ã¿æå¥ãæ¸ãããã¨ãã§ãã¾ãã æ¡å¤§ãã©ã· ãã©ãã°ãã¦ãã£ã¼ãä¸ã®æéã»ã°ã¡ã³ããé¸æããã¨ãããã·ã¥ãã¼ãã®ãã¹ã¦ã®ãã£ã¼ãã§ãã®æéãèªåçã«æ¡å¤§ããã¾ãã ã¿ã¤ã ããã«ã¼ã¯ãããã·ã¥ãã¼ãã«è¡¨ç¤ºãããæ°è¦ã®æéãåæ ãã¾ãããã¤ã§ãããã©ã«ãããã®ä»ã®æéè¨­å®ã«æ»ããã¨ãã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 160.15167,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Query</em> your <em>data</em>"
      },
      "id": "6053433228ccbcdc10c2fd60"
    }
  ],
  "/explore-docs/nerdstorage": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Add the NerdGraphQuery component to an application",
        "Add, query, and mutate data using NerdStorage",
        "Add a time picker to your app",
        "Create a \"Hello, World!\" application",
        "Build a custom visualization for dashboards",
        "Add a table to your app",
        "Create a custom map view",
        "Permissions for managing applications",
        "Publish and deploy apps",
        "Set up your development environment"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "Build apps",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "document_type": "page",
      "popularity": 1,
      "body": "You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the NerdGraphQuery component to an application 20 minutes The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a time picker to your app 20 min Add a time picker to a sample application Create a \"Hello, World!\" application 15 min Build a \"Hello, World!\" app and publish it to New Relic One Build a custom visualization for dashboards 15 min Create custom data views Add a table to your app 30 min Add a table to your New Relic One app Create a custom map view 30 min Build an app to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to apps Publish and deploy apps 30 min Start sharing the apps you build Set up your development environment 20 min Prepare to build apps and contribute to this site",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 431.55212,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build <em>apps</em>",
        "sections": "Add, query, and mutate <em>data</em> using <em>NerdStorage</em>",
        "body": " from your account and add it to a dropdown menu in an application Add, query, and mutate <em>data</em> using <em>NerdStorage</em> 45 min <em>NerdStorage</em> is a document database accessible within <em>New</em> <em>Relic</em> <em>One</em>. It allows you to modify, save, and retrieve documents from <em>one</em> session to the next. Add a time picker to your <em>app</em>"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 298.20813,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you a <em>new</em>, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the <em>data</em> you send us. Use the <em>New</em> <em>Relic</em> Explorer to <em>access</em> and give context to the performance <em>data</em> from all your monitored applications, services"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "Dependencies UI page: View an entity's upstream and downstream dependencies",
        "Requirements",
        "View dependencies"
      ],
      "title": "Dependencies UI page: View an entity's upstream and downstream dependencies",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "2b2f328a6281bb155bcde07efec7f42eae943048",
      "image": "https://docs.newrelic.com/static/aabc5f64a91cc01b6e226df53c62458f/c1b63/new-relic-one-dependencies-UI.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/ui-data/explore-downstream-dependencies-new-relic-one/",
      "published_at": "2021-03-18T01:47:10Z",
      "updated_at": "2021-03-16T10:03:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the Entity explorer, an entity's Dependencies page shows a filterable list of all the applications, services, databases, and hosts connected to the entity. It shows upstream and downstream dependencies, and provides paths to explore them. Similar to service maps, the dependencies page helps you understand how all of your upstream and downstream services are connected. It also uses the same color coding system used by service maps to show you what's performing well and what isn't. Requirements To view an entity's dependencies, make sure your app uses the minimum required APM agent version: C 1.0.0 or higher Go 1.11 or higher Java 3.9.0 or higher .NET 4.2 or higher Node.js 2.0.0 or higher PHP 4.19.0 or higher Python 2.38.0.31 or higher Ruby 4.3.0 or higher View dependencies To view dependencies for applications, services, databases, and hosts connected to an entity: Go to one.newrelic.com, select Entity explorer, and select an entity. Select Dependencies. To drill down further, filter the apps, services, databases, or hosts. one.newrelic.com > Entity explorer > (select an entity) > Dependencies: View a filterable list of all the apps, services, databases, and hosts connected to an entity, and their color-coded health status. You can filter the dependencies page to view specific things that report to the entity. Dependencies include: Services: APM-monitored applications and services. Mobile applications: your mobile apps. Browser applications: your front-end browser apps. External services: external services monitored by APM. External services include out-of-process services such as web services, resources in the cloud, and any other network calls. Databases: your application's database and cache data. Databases are agentless. Because of this, alerts cannot be set for the database, as only the service call is reported to New Relic. Hosts: your infrastructure (servers and hosts).",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 281.3841,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ". External services: external services monitored by APM. External services include out-of-process services such as web services, resources in the cloud, and any other network calls. Databases: your application&#x27;s database and cache <em>data</em>. Databases are agentless. Because of this, alerts cannot be set for the database, as only the service call is reported to <em>New</em> <em>Relic</em>. Hosts: your infrastructure (servers and hosts)."
      },
      "id": "603eb2e564441f0fe44e889b"
    },
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 277.73132,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 277.09955,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> <em>application</em> ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> <em>application</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and <em>data</em>. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display <em>data</em> from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    }
  ],
  "/explore-docs/nr1-plugins": [
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 539.5718,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 538.8369,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 531.8834,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 529.41724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 529.41724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/explore-docs/nr1-nerdpack": [
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 548.21155,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 547.54614,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 540.4,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 537.89435,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 537.89435,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/explore-docs/intro-to-sdk": [
    {
      "sections": [
        "Use workloads",
        "Create a workload",
        "Use tags to define the workload content",
        "How the dynamic query logic works",
        "Add dashboards to workloads",
        "Use the API"
      ],
      "title": "Use workloads",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Workloads"
      ],
      "external_id": "c39090bde9b797940e7f5ba0c9610ba39879677b",
      "image": "https://docs.newrelic.com/static/14c811e218cfc8793bb4d2bd4b2aad0b/c1b63/new-relic-workloads-add-dashboards.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/workloads/use-workloads/",
      "published_at": "2021-03-18T10:33:51Z",
      "updated_at": "2021-03-16T10:05:10Z",
      "document_type": "page",
      "popularity": 1,
      "body": "To view workloads, go to one.newrelic.com and find them on the Explorer. A Workload looks like this: Important components in the New Relic One workload UI. The screenshot numbers are important parts of the workload UI we'd like to describe to you: The Overview tab shows the most relevant entity performance and alert data that you need to operate the workload. View of workload components. This is useful for understanding the workloadâs architecture, especially if the workloadâs entities change over time because they are dynamically defined. Important charts. These are charts with key metrics for each entity type, such as number of requests, response time and error rate for an application. Explore the charts to detect correlations among different entities (for example, two applications) and different stack layers (for example, applications and hosts). The golden metrics that you see for each entity type on a workload can be customized either at the account or the workload level. Workload status. You can configure the status to inform about how your workload is performing, based on the individual alerting status of the entities in your workload. Open violations. You can filter the workload to only the alerting entities to make it easier to troubleshoot the most important issues. Linked dashboards. You can add links to dashboards from your workload, and create pre-filtered, workload-relevant links to dashboards. The Entities tab shows the entities that make up the workload. If youâve used queries to dynamically select entities, the workload entities will change over time. Edit workload. Edit the workload to define the entities that are part of the workload and to link dashboards to the workload. Summary page. See all the tags that have been added to the workload, as well as metadata such as the workload's GUID and account. Create a workload A workload should contain the entities you and your team want to see. Your choice of entities depends on your organization structure and goals. one.newrelic.com > Apps > Workloads > Create a workload: When you create a workload, you choose the associated accounts and monitored entities. You can use New Relic One or the NerdGraph API to create a workload. Follow these steps to create a workload using the UI: Go to one.newrelic.com and click on the Explorer, and then click + Create a workload. Give the workload a name that will be meaningful for you and your team later. From the Select an account dropdown, select the workload account you'd like to use. Click Choose the scope accounts to check all of the accounts related to this workload. Find and choose the entities that make up the workload. When you have the results you're looking for, you can add specific entities or add the query to dynamically update the entities in the workload. You can search by entity type, tags, or attributes (like entity name, account ID, and AWS region). Click + Add this query to create a list of dynamically updated entities for your workload. We recommend this if you want your workload to update its entities as your system changes. Click + Add next to an entity to add it to your workload. This is a good choice if you know that the entities will stay useful even as your system changes. You can add a combination of queries and specific entities to the workload, which combine according to the query logic. Click Create a workload to save the workload. Once you've created the workload, you can edit it at any time If your workload contains one or more dashboards, you can set filters on those dashboard links. Below are more details about some aspects of how to define workloads: Use tags to define the workload content You can query and select workload entities using both tags and attributes. Therefore, to optimize your use of workloads, it helps to have a good entity-tagging strategy. We recommend reading the tagging documentation. How the dynamic query logic works You can add several individual entities and queries to define a workload. Queries can include multiple search terms. These are combined with an AND operator. Separate queries within a workload are combined with an OR operator. You can wrap strings between percent signs (%) to match exact substrings within a query. If you use substrings in entity names to categorize those entities (for example, <team>-<env>-<appName>), consider using tags complementarily, which are more powerful for filtering and grouping (for example, team:awesome, env:production). We recommend not to use percent signs (%) in dynamic queries that might return over 500 entities. This way, you get a more consistent experience in the user interface. Add dashboards to workloads If you have custom dashboards and you already know which data is relevant to your team for observing and operating their workloads, you can link those dashboards from your workload. You can also set filters on dashboards to scope them to a workload-specific context. When a user selects that dashboard from the workload, it opens with the filter already applied. one.newrelic.com > Apps > Workloads: You can add dashboards to a workload. To add dashboards to a workload: When creating or editing a workload, type Dashboard in the workload search bar to filter to dashboard entities. Add other search terms to filter to specific dashboards. Click Add. one.newrelic.com > Apps > Workloads: You can set filters on the dashboards you've linked to a workload. To filter a workloadâs dashboard: From a workloadâs Overview page, select a dashboard. Add search terms to filter the dashboard to a view thatâs relevant for that workload. Select Save filter for this workload. Use the API You can query, create, and update workloads with our NerdGraph API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1021.6058,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "How the dynamic <em>query</em> logic works",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "To view workloads, go to <em>one</em>.newrelic.com and find them on the Explorer. A Workload looks like this: Important <em>components</em> in the <em>New</em> <em>Relic</em> <em>One</em> workload <em>UI</em>. The screenshot numbers are important parts of the workload <em>UI</em> we&#x27;d like to describe to you: The Overview tab shows the most relevant entity"
      },
      "id": "603e81e8196a67c972a83db1"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-16T10:03:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities An entity is anything that reports data to New Relic, so you'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 992.72205,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the concept of the entity. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity? From a <em>New</em> <em>Relic</em> product perspective, entity is a broad"
      },
      "id": "603ec160e7b9d295f72a07fc"
    },
    {
      "sections": [
        "Use a Plugin Central plugin",
        "Important",
        "Limited access to legacy plugins",
        "View plugin dashboard details",
        "Plugin summary",
        "Plugin dashboards",
        "Plugin alerts",
        "Delete a plugin",
        "Remove plugin components (instances)",
        "Delete the plugin"
      ],
      "title": "Use a Plugin Central plugin",
      "type": "docs",
      "tags": [
        "Plugins",
        "Plugins New Relic",
        "Install plugins"
      ],
      "external_id": "feae68c2e9d870f7c02fff5ffb69f2c262a0cd6c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/plugins/plugins-new-relic/install-plugins/use-plugin-central-plugin/",
      "published_at": "2021-03-18T12:08:02Z",
      "updated_at": "2021-03-16T11:03:19Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important For an even better experience than plugins, go to: newrelic.com/integrations: Integrate the on-host and cloud systems you already use with New Relic, so you can filter and analyze data, create dashboards, and set alerts within a single platform. developer.newrelic.com: Use developer tools to collect data from any source, automate workflows, build apps, and use our APIs. Limited access to legacy plugins As of December 2, 2020, plugin access has been limited to accounts that have accessed a legacy plugin in the past 30 days. The legacy plugin experience will reach end of life (EoL) as of June 16, 2021. For more information, see our Explorers Hub post. View plugin dashboard details Each plugin in Plugin Central includes procedures for how to install, use, troubleshoot, and uninstall it. Plugins in Plugin Central are not supported with accounts that host data in the EU region data center. After you install a plugin, it starts to receive data, usually within five minutes. The plugin automatically appears with a short name and icon on your Plugins menu in New Relic One. You do not need to select it from Plugin Central. The amount and types of information on the plugin's summary page and dashboards depend on the specific plugin. For example, a plugin may have one or more components (instances) and one or more dashboards. To view summary and dashboard details about the plugin: Go to one.newrelic.com > More > Plugins, and select your plugin. From the plugin's summary page, review the list of components or instances, summary metrics, and list of Recent Events. To view dashboard details about any component or instance, select its name. Plugin summary Depending on the plugin, the summary includes: One or more components or instances (what the plugin agent is monitoring, typically a host/port pair) Zero to five summary metrics for the past three minutes (values such as average, total, minimum, maximum, standard deviation, rate, or count) with optional alerts Recent events list, including deployments, notifications, and alerts Other information about alert violations, events, and activity If your plugin has 100 or more components or instances, you can search for a specific component instance. Here is a summary of additional standard features. If you want to... Do this... View version information for a component's or instance's agent Mouse over the component's name. Change the sort order On the title row of the plugin's summary page, select the up or down arrow for a component (instance) or a summary metric's label. Show or hide items on the events and activity list Select an event icon, or select All. View details about an event On the events and activity list, select the link. View page details for a component or instance Select the name or a summary metric for the component (instance). Plugin dashboards Depending on the plugin, it may have one or more dashboards, and each dashboard may present data as a chart or a table. You can use any of New Relic's standard dashboard features to drill down into detailed information. The customized dashboards that show plugin data are part of the plugin. Users cannot add or remove these dashboards. This must be done by the author or publisher as part of a plugin update. Plugin alerts If the plugin publisher set Critical (red) or Caution (yellow) alert conditions for your plugin's components or instances, you can view details direct in the user interface. For example, you can: Select and view alert details. Change the existing thresholds. Set your alert notification options; for example, to receive email notifications for Critical events. Delete a plugin Each plugin in Plugin Central includes procedures for how to uninstall it. When you select the plugin's Download or Continue button, the plugin should include a README file or refer to other documentation resources. Remove plugin components (instances) At a minimum, your plugin must stop reporting data before you start uninstalling it. Make sure the health status for your plugin's components (instances) are gray. Depending on the plugin, there may be other dependencies before disabling or uninstalling it. For example, plugins from SaaS providers may have different requirements. Be sure to review the instructions that the plugin's publisher provides. Then, to remove individual components from your plugin, click the settings icon for each component (instance). Delete the plugin After you remove each component (instance) for the plugin, the plugin icon will automatically disappear from your Plugins menu in the New Relic UI. You do not need to do anything else to delete the plugin. If you are the plugin's publisher and need to delete the plugin from Plugin Central, go to support.newrelic.com.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 968.4985,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Remove plugin <em>components</em> (instances)",
        "tags": "Plugins <em>New</em> <em>Relic</em>",
        "body": "Important For an even better experience than plugins, go to: newrelic.com&#x2F;integrations: Integrate the on-host and cloud systems you already use with <em>New</em> <em>Relic</em>, so you can filter and analyze data, create dashboards, and set alerts within a single <em>platform</em>. developer.newrelic.com: Use developer tools"
      },
      "id": "603ebf0928ccbcf8d0eba762"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Add the NerdGraphQuery component to an application",
        "Add, query, and mutate data using NerdStorage",
        "Add a time picker to your app",
        "Create a \"Hello, World!\" application",
        "Build a custom visualization for dashboards",
        "Add a table to your app",
        "Create a custom map view",
        "Permissions for managing applications",
        "Publish and deploy apps",
        "Set up your development environment"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "Build apps",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "document_type": "page",
      "popularity": 1,
      "body": "You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the NerdGraphQuery component to an application 20 minutes The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a time picker to your app 20 min Add a time picker to a sample application Create a \"Hello, World!\" application 15 min Build a \"Hello, World!\" app and publish it to New Relic One Build a custom visualization for dashboards 15 min Create custom data views Add a table to your app 30 min Add a table to your New Relic One app Create a custom map view 30 min Build an app to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to apps Publish and deploy apps 30 min Start sharing the apps you build Set up your development environment 20 min Prepare to build apps and contribute to this site",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 943.2324,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build <em>apps</em>",
        "sections": "Publish <em>and</em> deploy <em>apps</em>",
        "body": " from your account and add it to a dropdown menu in an application Add, <em>query</em>, and mutate data using Nerd<em>Storage</em> 45 min Nerd<em>Storage</em> is a document database accessible within <em>New</em> <em>Relic</em> <em>One</em>. It allows you to modify, save, and retrieve documents from <em>one</em> session to the next. Add a time picker to your <em>app</em>"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 924.91125,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability <em>platform</em>, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    }
  ],
  "/explore-docs/nr1-subscription": [
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 548.21155,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 547.54614,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 540.4,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 537.89435,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 537.89435,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/build-apps/build-visualization": [
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-03-17T23:31:12Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errorsâand more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 389.57965,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>1</em>. Make instrumentation part of every build",
        "body": ". For example, the New Relic <em>CLI</em> lets you search and tag entities across accounts. The New Relic Lambda <em>CLI</em> installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the <em>NR</em>-<em>1</em> <em>CLI</em> to build and share your own New Relic applications. 3. Leverage the power of APIs Now"
      },
      "id": "603ea2f7196a672323a83def"
    },
    {
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Tip",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Advance configurations",
        "Extend webpack configuration",
        "Proxy browser setup",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2020-12-04T01:59:59Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "body": "Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, you create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. See the video, which demonstrates the steps in this guide in five minutes. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need the New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in the CLI quick start. For additional details about setting up your environment, see Set up your development environment. Tip Use the New Relic One VSCode extension or the New Relic VSCode extension pack to build your apps. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI quick start, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Tip You will need an icon.png in 2 places for it to be representing properly in the New Relic One Catalog, To set a launcher icon place an icon.png file in the the launcher directory. To set the icon for the app details page place an icon in the root directory of the project. Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: bash Copy $ npm start Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click Apps, and then in the Other apps section, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: bash Copy $ nr1 nerdpack:publish Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the Apps launcher. Step 4 of 4 Under New Relic One catalog, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: bash Copy $ nr1 create Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: bash Copy $ nr1 catalog:submit Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application in the catalog, you need to subscribe accounts to the application. Any user with the NerdPack manager or admin role can subscribe to an application from accounts that they have permission to manage. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update accounts to save your selections. When you return to the Apps page, you'll see the launcher for your new application. Advance configurations Extend webpack configuration You can use our .extended-webpackrc.js file to extend the webpack 4 configuration. This allows you to add your own aliases, scripts, and configurations when locally serving or deploying your app. Proxy browser setup Generally, you don't need to know how your application code is loaded in New Relic One. But understanding how this works can help you if you encounter issues (for example, with a proxy or browser setup). When developing, your code is served from your local laptop by using an nr-local.net subdomain. This domain points to 127.0.0.1, and will use a variety of ports to connect, including 9973. In order to load third-party code into the platform, (both in development and production), New Relic One uses an <IFRAME>, as well as a separate domain (a subdomain of nr-ext.net) to perform the load, relying on same-domain policy to sandbox the code. For this reason, your network administrator may need to enable access to: Any subdomain of nr-local.net, or, at the very least, to any domain of the shape of <UserId>.nr-local.net, where UserId is a 32-hexadecimal character identifier that is unique to the user logged into the platform (you can use [0-9a-f]{32} to discriminate it). Any subdomain of nr-ext.net, or, at the very least, to any domain in the shape of <NerdpackUuid>.g <NerdpackGid>.nr-ext.net, where NerdpackUuid is the UUID assigned to your package, and NerdpackGid is zero, or a positive integer (you can use 0|[1-9]\\d+ to discriminate it). Summary Now that you've completed the steps in this example, you learned the basic steps to: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can use it.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 382.37598,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Subscribe</em> accounts to your application",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to New Relic <em>One</em>",
        "tags": "<em>NR</em> <em>One</em> <em>Catalog</em>",
        "body": " in your terminal: bash Copy $ <em>nr1</em> nerdpack:publish Step 2 of 4 Close your local New Relic <em>One</em> development tab, and open New Relic <em>One</em>. Step 3 of 4 Click the Apps launcher. Step 4 of 4 Under New Relic <em>One</em> <em>catalog</em>, click the launcher for your new application. When your new application opens, notice"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "sections": [
        "Charts",
        "Query New Relic data",
        "Craft custom data",
        "Metadata",
        "Data",
        "Tip",
        "Special States",
        "Configure your chart",
        "Chart Groups",
        "Next Step"
      ],
      "title": "Charts",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "Nerdpack file structure"
      ],
      "external_id": "67f2919065eb0e710d863bdbd106db85463cc788",
      "image": "",
      "url": "https://developer.newrelic.com/components/charts/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2021-01-16T01:54:19Z",
      "document_type": "page",
      "popularity": 1,
      "info": "How to use charts in your NR1 app.",
      "body": "In your application, you can display data in charts, like those used elsewhere in New Relic's user interface. The New Relic One SDK provides React components for different chart types. Once you decide the kind of data you want to present, either from New Relic or some other source, you supply that data to your chart, using props. Query New Relic data In some cases, you want to fetch data from New Relic's database. For example, you may want to display a line chart which plots the number of transactions your application receives over time. With your chart component, set the accountId and query props to query your New Relic data using NRQL: <LineChart accountId={1234} query=\"SELECT count(*) FROM Transaction\" />; Copy Alternatively, you can fetch data with a NrqlQuery and set the data prop: <NrqlQuery accountId={1234} query=\"SELECT count(*) FROM Transaction\"> {({ data }) => <LineChart data={data} />} </NrqlQuery>; Copy If you're looking to visualize New Relic data, such as your web application's response times or your server's throughput, querying data in your charts is the way to go. But what if you want to create charts that aren't focused on New Relic data? The data prop is flexible enough that you can supply any arbitrary data, as long as it matches the standardized format. Craft custom data Whether you use custom data sets or the results of a NrqlQuery, a chart's data prop must be an array of objects where each object has both of the following fields: metadata: Defines how the chart presents its data data: An array of data points that appear on the chart For example, create a chart consisting of a line between two points by supplying two x-y coordinates in its data field: const data = [ { metadata: { id: 'series-1', name: 'My series', viz: 'main', color: 'blue', }, data: [ { x: 0, y: 0, }, { x: 20, y: 10, }, ], }, ]; <LineChart data={data} />; Copy This LineChart plots a line between coordinates (0, 0) and (20, 10). Use x-y coordinates for all two-dimensional chart formats. For other formats, which you'll learn more about later, use other types of data points. Because data accepts an array, you can supply two series to the same chart: const data = [ { metadata: { id: 'series-1', name: 'My series', viz: 'main', color: 'blue', }, data: [ { x: 0, y: 0, }, { x: 20, y: 10, }, ], }, { metadata: { id: 'series-2', name: 'My second series', viz: 'main', color: 'red', }, data: [ { x: 0, y: 50, }, { x: 20, y: 100, }, ], }, ]; <LineChart data={data} />; Copy In this example, you create a single chart with two series. The first series contains the line from the last example. The second series contains a line between points (0, 50) and (20, 100). When using two series in a single chart, like this, you may want to define how the chart represents each series. Use metadata to define those elements. Metadata A series's metadata defines certain features of the series, itself, such as how it should be displayed in your chart. metadata consists of the following attributes: Attribute Description id The series's identifier. Two series having the same id are considered the same series, regardless of where they are located. In general, use a unique id for each series. However, if you use the same series for multiple charts, keeping the id consistent can help with some cross-chart functionality, like simultaneously highlighting multiple charts. name The series's name. name is used in legends, tooltips, and other areas to indicate which series youâre looking at. color The series's color. Most visualizations use this value to differentiate series. Some visualizations, like BillboardChart or JsonChart, ignore it. Use any valid CSS color representation, such as #RRGGBB, hsl(HHH, SS%, LL%), or rgba(RR, GG, BB, .AA). Avoid tweaking the alpha value, when possible, because charts use alpha to highlight or dim certain series. viz The series's visual style. While you most often use main, this field accepts several options: main: Show the series based on chart's type. For instance, a LineChart shows the series as a line, and an AreaChart shows the series as an area. line: Show the series as a line, regardless of the chart's type. This setting applies only to AreaChart and ScatterChart. Other chart types will not show the series. area: Show the series as an area, regardless of the chart's type. This setting applies only to LineChart and ScatterChart. Other chart types will not show the series. event: Show the series as an event, regardless of the chart's type. Charts represent an event as a vertical area behind the main visualization. Events are often used to show alerts. This setting applies only to AreaChart, LineChart, and ScatterChart. Other chart types will not show the series. target-line: Show the series as a vertical line. This setting applies only to AreaChart, LineChart, and ScatterChart. Other chart types will not show the series. units_data You can assign a unit type to each axis on a chart. The chart will present data according to the unit type you set with units_data. To set unit_data, pass a JSON object with maps the axis to one of the following unit types: UNKNOWN: The chart displays the series with no special units. COUNT: Each value in the chart represents a count. The chart formats values with their International System prefix. For example, \"k\" represents thousands, \"M\" represents millions, and \"G\" represents billions. PERCENTAGE: Each value in the chart represents a percentage. Typically, you provide values ranging from 0 to 1. The chart formats a value of 1 as \"100%\", a value of 2 as \"200%\", and a value of 0.01 as \"1%\". MS: Each value in the chart represents some number of milliseconds. The chart represents values higher than 1 as a human-readable time duration. For example, 60000 is represented as \"1 minute\". The chart represents values lower than 1 using SI prefixes. For example, 0.001 is represented as 1 Î¼s. TIMESTAMP: Each value in the chart represents a timestamp, the number milliseconds since midnight UTC on January 1, 1970, the UNIX Epoch. The chart formats each value as a date. BITS: Each value in the chart represents some number of bits. The chart formats these values using \"b\". When upscaling, the chart will display decimal prefixes instead of binary ones. For example, the chart displays 1000 as \"1 kb\". BITS_PER_SECOND: Each value in the chart represents some number of bits per second. The chart formats these values using \"b/s\". When upscaling, the chart will display decimal prefixes instead of binary ones. For example, the chart displays 1000 as \"1 kb/s\". BYTES: Each value in the chart represents some number of bytes. The chart formats these values using \"B\". For example, the chart displays 1000 as \"1 kB\". BYTES_PER_SECOND: Each value in the chart represents some number of bytes per second. The chart formats these values using \"B/s\". For example, the chart displays 1000 as \"1 kB/s\". So, to represent the y-axis for your series in bits, set the y-value in units_data: { \"units_data\": { \"y\": \"BITS\" } } Data While a data series can contain any arbitrary values, a chart only uses values which adhere to its type. So, create your data points according to the chart type: Series Type Example Description Unidimensional [{ \"y\": 10 }, { \"y\": 20 }] The chart plots data points using y values. Use this format with BarChart, BillboardChart, PieChart, StackedBarChart. Two-dimensional [ { \"x\": 10, \"y\": 20 }, { \"x\": 20, \"y\": 30 } ] The chart plots data points using x and y values. Use this format with AreaChart, LineChart, ScatterChart, SparklineChart, Funnel [{ \"label1\": 10, \"label2\": 20 }] The chart plots data according to labels. Use this format with FunnelChart. Table [{ \"jobType\": \"SIMPLE\", \"count\": 18 }] The chart plots data according to table columns. You must specify table columns in the metadata. Use this format with TableChart. Event [ { \"x0\": 0, \"x1\": 5 }, { \"x0\": 10, \"x1\": 15 } ] The chart plots the event's width based on x0 and x1 values. Histogram [ { \"x0\": 10, \"x1\": 20, \"y\": 100 }, { \"x0\": 30, \"x1\": 40, \"y\": 150 } ] The chart plots the series's width based on x0 and x1 and height based on y. Use this format with HistogramChart and HeatmapChart. Tip JsonChart is a special case because it processes any valid data. For example, you can set an arbitrary JSON object for the chart's data: const data = { data: [ { id: 1, name: 'Foo', price: 123, tags: ['Bar', 'Eek'], stock: { warehouse: 300, retail: 20, } } ], } <JsonChart data={data} /> Copy Special States In previous sections, you learned that a chart's data is an array of series. But you can use special values to present special chart states: null or undefined: Indicates the chart is âloadingâ its data. In this state, the chart shows a placeholder data set. []: Indicates there is no data to show. The chart states, \"No chart data available\". Configure your chart As you've seen, you use query or data to supply data to your chart, but you can configure other aspects of your chart, too, such as visual settings and click and hover event listeners. Read the documentation for the chart you're using for more specific information. Chart Groups Under some circumstances, you might want to synchronize events, such as dragging or scrubbing, across multiple charts. To do this, use a ChartGroup. All charts in a ChartGroup synchronize their events: <ChartGroup> <Stack> <StackItem> <LineChart accountId={1} query=\"SELECT count(*) FROM Transaction SINCE 1 hour ago\" /> </StackItem> <StackItem> <AreaChart accountId={1} query=\"SELECT count(*) FROM Synthetics SINCE 1 day ago\" /> </StackItem> </Stack> </ChartGroup>; Copy Ideally, group charts that are conceptually related, and separate charts that are conceptually unrelated. Next Step Read the documentation specific to the chart you'd like to use to learn specifics about that chart's behavior and configuration.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 200.44026,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "info": "How to use charts in your <em>NR1</em> app.",
        "tags": "<em>nr1</em> <em>cli</em>",
        "body": " <em>visualizations</em>, like BillboardChart or JsonChart, ignore it. Use any valid CSS color representation, such as #RRGGBB, hsl(HHH, SS%, LL%), or rgba(RR, GG, BB, .AA). Avoid tweaking the alpha value, when possible, because charts use alpha to highlight or dim certain series. viz The series&#x27;s <em>visual</em> style"
      },
      "id": "5fdab9f1e7b9d2e1e8df9221"
    },
    {
      "sections": [
        "Intro to New Relic One SDK",
        "Components of the SDK",
        "UI components",
        "Chart components",
        "Query and storage components",
        "Platform APIs"
      ],
      "title": "Intro to New Relic One SDK",
      "type": "developer",
      "tags": [
        "SDK components",
        "New Relic One apps",
        "UI components",
        "chart components",
        "query and storage components",
        "Platform APIs"
      ],
      "external_id": "3620920c26bcd66c59c810dccb1200931b23b8c2",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/intro-to-sdk/",
      "published_at": "2021-03-18T01:52:07Z",
      "updated_at": "2020-12-04T01:58:15Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Intro to New Relic One SDK",
      "body": "To help you build New Relic One applications, we provide you with the New Relic One SDK. Here we give you an introduction to the types of API calls and components in the SDK. The SDK provides everything you need to build your Nerdlets, create visualizations, and fetch New Relic or third-party data. Components of the SDK SDK components are located in the Node module package named nr1, which you get when you install the NR1 CLI. The nr1 components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components category of the SDK contains React UI components, including: Text components: These components provide basic font and heading elements. These include HeadingText and BlockText. Layout components: These components give you control over the layout, and help you build complex layout designs without having to deal with the CSS. Layout components include: Grid and GridItem: for organizing more complex, larger scale page content in rows and columns Stack and StackItem: for organizing simpler, smaller scale page content (in column or row) Tabs and TabsItem: group various related pieces of content into separate hideable sections List and ListItem: for providing a basic skeleton of virtualized lists Card, CardHeader and CardBody : used to group similar concepts and tasks together Form components: These components provide the basic building blocks to interact with the UI. These include Button, TextField, Dropdown and DropdownItem, Checkbox, RadioGroup, Radio, and Checkbox. Feedback components: These components are used to provide feedback to users about actions they have taken. These include: Spinnerand Toast. Overlaid components: These components are used to display contextual information and options in the form of an additional child view that appears above other content on screen when an action or event is triggered. They can either require user interaction (like modals), or be augmenting (like a tooltip). These include: Modal and Tooltip. Components suffixed with Item can only operate as direct children of that name without the suffix. For example: GridItem should only be found as a child of Grid. Chart components The Charts category of the SDK contains components representing different types of charts. The ChartGroup component helps a group of related charts share data and be aligned. Some chart components can perform NRQL queries on their own; some accept a customized set of data. Query and storage components The Query components category contains components for fetching and storing New Relic data. The main way to fetch data is with NerdGraph, our GraphQL endpoint. This can be queried using NerdGraphQuery. To simplify use of NerdGraph queries, we provide some components with pre-defined queries. For more on using NerdGraph, see Queries and mutations. We also provide storage for storing small data sets, such as configuration settings data, or user-specific data. For more on this, see NerdStorage. Platform APIs The Platform API components of the SDK enable your application to interact with different parts of the New Relic One platform, by reading and writing state from and to the URL, setting the configuration, etc. They can be divided into these categories: PlatformStateContext: provides read access to the platform URL state variables. Example: timeRange in the time picker. navigation: an object that allows programmatic manipulation of the navigation in New Relic One. Example: opening a new Nerdlet. NerdletStateContext: provides read access to the Nerdlet URL state variables. Example: an entityGuid in the entity explorer. nerdlet: an object that provides write access to the Nerdlet URL state.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 198.9921,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to New Relic <em>One</em> SDK",
        "sections": "Intro to New Relic <em>One</em> SDK",
        "info": "Intro to New Relic <em>One</em> SDK",
        "tags": "New Relic <em>One</em> apps",
        "body": ". Components of the SDK SDK components are located in the Node module package named <em>nr1</em>, which you get when you install the <em>NR1</em> <em>CLI</em>. The <em>nr1</em> components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components"
      },
      "id": "5efa989e28ccbc4071307de5"
    },
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 137.1227,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "New Relic <em>One</em>",
        "body": "New Relic <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    }
  ],
  "/explore-docs/nr1-common": [
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 539.5718,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 538.8369,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 531.8834,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 529.41724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 529.41724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/explore-docs/nr1-config": [
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 539.5718,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 538.8369,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 531.8834,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 529.41724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across apps, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 529.41724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/build-apps/permission-manage-apps": [
    {
      "sections": [
        "Add custom visualizations to your dashboards",
        "Add a visualization to a dashboard",
        "Manage your dashboard visualizations"
      ],
      "title": "Add custom visualizations to your dashboards",
      "type": "docs",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "d6c9973ef2c2547a99539d1da027b54db23af42c",
      "image": "https://docs.newrelic.com/static/5f7bd9c6a2a163d1f19c5c8b0d844d2f/c1b63/dashboard_viz.png",
      "url": "https://docs.newrelic.com/docs/query-your-data/explore-query-data/dashboards/add-custom-visualizations-your-dashboards/",
      "published_at": "2021-03-18T12:09:17Z",
      "updated_at": "2021-03-16T11:03:19Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can build your own visualizations and add them to a dashboard. This gives you great flexibility around what you display on dashboards, from a company logo to custom queries from any data source. This visualization shows the number of people in each city who are viewing New Relic within an organization. The visualization was created using the New Relic One CLI and Treemap from the Recharts library. If you have full user permissions, which include the Nerdpack manager role, you can add a visualization to a dashboard as described in the following section. The process for creating a visualization is covered in the guide, Build a custom visualization for dashboards. Add a visualization to a dashboard You can add a visualization to a new or existing dashboard. From New Relic, in the top right, click the Apps button, and then on the Apps page, click Custom Visualizations. Hint: if you don't see the Custom Visualizations tile, use the search to locate it. In Custom Visualizations, select the visualization you want to add to a dashboard and then enable it. If there are configuration options, fill those in. The visualization will update with your changes. Click Add to dashboard and then select a dashboard from the list of available dashboards, or select New dashboard. If you decide to create a new dashboard, select the account where you want to run the dashboard, and give the dashboard a name. Click Add to dashboard, then click the link to your dashboard to see the custom visualization. Manage your dashboard visualizations Deleting: To remove a visualization from a dashboard, click the ellipses button in the right-hand corner of the visualization and click delete. Editing: If your visualization needs some tweaking, delete the visualization, then follow the steps above to re-add the visualization, making any updates in Custom Visualizations.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 209.18817,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Manage</em> your dashboard visualizations",
        "body": " an organization. The visualization was created using the New Relic One CLI and Treemap from the Recharts library. If you have full user <em>permissions</em>, which include the <em>Nerdpack</em> <em>manager</em> role, you can add a visualization to a dashboard as described in the following section. The process for creating"
      },
      "id": "603ec4e628ccbc9409eba7ab"
    },
    {
      "sections": [
        "Users and roles (original user model)",
        "Requirements",
        "View and manage users in UI",
        "Tip",
        "View pending SAML SSO users",
        "Add a new user",
        "Important",
        "Update user type",
        "Update account roles",
        "Delete a user",
        "Update the account Owner",
        "User types: basic user and full user",
        "Account roles",
        "Add-on roles",
        "View roles",
        "Assign a managed role",
        "Create a custom role",
        "Assign a custom role",
        "Edit or delete a custom role",
        "Account permissions",
        "Alert permissions",
        "APM permissions",
        "Browser permissions",
        "Infrastructure permissions",
        "Insights permissions",
        "Mobile permissions",
        "Synthetics permissions",
        "Workloads"
      ],
      "title": "Users and roles (original user model)",
      "type": "docs",
      "tags": [
        "Accounts",
        "Original accounts and billing",
        "Original users and roles"
      ],
      "external_id": "95ae42f3474b43dec394245cfc3e23628449a1ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/accounts/original-accounts-billing/original-users-roles/users-roles-original-user-model/",
      "published_at": "2021-03-18T05:13:28Z",
      "updated_at": "2021-03-16T09:14:33Z",
      "document_type": "page",
      "popularity": 1,
      "body": "For users on our original user model, an introduction to how the user model works, including user roles and permissions, and how to add and manage users. Requirements This doc and the surrounding section of docs shows you how to manage users who are on our original user model. If you were a New Relic customer before July 30 2020, you likely have users on our original user model (and not the New Relic One user model). One way to quickly check your users' user model: if you can see users in the Users and roles UI, those users are on our original user model. Want to learn more about user model changes? See Overview of user models. View and manage users in UI If your New Relic account has users on our original user model, you can use the Users and roles UI. To access this UI: select the account dropdown, select Account settings, and select Users and roles. Some features in the UI are visible only to account Owners and Admins. Tip You can also use the New Relic REST API to obtain a list of everyone and their roles in your New Relic account. Here are some instructions and tips for adding and managing users via the UI: View pending SAML SSO users New Relic accounts with SAML Single Sign On (SSO) may have a list of Pending users. These are individuals who have been added to the SAML-enabled account but have not yet confirmed. Add a new user Tip Owner or Admins To add a new user to your New Relic account: Go to: account dropdown > Account settings > Users and roles > Users. In the upper right corner, click New user. Enter the appropriate name and email address. Select their base role as either Admin, User, or Restricted. Select Add user. The new user will receive an email notification automatically from New Relic. Important New Relic recommends a maximum of 1,000 accounts per user. Additional accounts may result in limited access to some New Relic features. Update user type To update a user's type (basic user or full user): Go to: account dropdown > Account settings > Users and roles > Users. Select a user and edit its type. You can also bulk update user type changes. For more about this, see User type. Update account roles Tip Owner or Admins To update a person's role and capabilities: Go to: account dropdown > Account settings > Users and roles > Users. Select the person's name. Under Roles and capabilities, select their base role as Admin, User, or Restricted. The account Owner must update the Owner role. Delete a user Tip Owner or Admins To remove a user from your New Relic account: Go to: account dropdown > Account settings > Users and roles > Users. Click on the name of the person you would like to update. Click Delete User. Tip You can also add, update, or delete users in bulk via CSV file. Update the account Owner A New Relic account can have only one Owner role at any time. You must be the current account Owner to change your role to someone who currently has an Admin role for the account. If the current Owner is unavailable, contact your account representative at New Relic, or get support at support.newrelic.com. You cannot delete or remove your assigned Owner role. However, if the account has one or more Admin role, you can change an Owner to an Admin. Go to: account dropdown > Account settings > Account > Users and roles. Above the Active users list, select Change owner. If an account has no Admins, this button won't be available. Select someone who currently has an Admin role for the account. Refresh the page for changes to take effect. Your previous Owner role automatically changes to an Admin role. To find out who is the current assigned Owner: Go to: account dropdown > Account settings > Account > Users and roles. View the Base role column to locate your account Owner. The Change owner button is only visible to the current account Owner. If the current Owner is unable to change the role (for example, that person no longer is with your organization), contact your account representative at New Relic, or get support at support.newrelic.com. User types: basic user and full user Important On March 1, 2021, we ended the preview period for basic users on our original user model. Previously these basic users had the same permissions as full users. For more on this, see our Explorer's Hub post on basic user changes. On the Users and roles UI page, users on our original user model are categorized by user type (full user or basic user). For how to change this, see Update user type. If you're on New Relic One pricing, the number of full users is a factor in your billing. To learn more, see New Relic One pricing. Account roles A New Relic account can have only one Owner. To share an account with other users in your organization, create Admins, Users, or Restricted Users. Account role Description Owner The person who initially creates the New Relic account and receives all billing queries. The Owner has complete access to all of the account information. Admin Can add, edit, and delete users, and can enable or set up features. User Can use (and optionally set up) New Relic features. In general, Admins take responsibility for setting up features, and Users and Restricted Users can use them. Restricted User One or more individuals who can view (but not set up or change) any New Relic features. The Restricted User role is useful, for example, for demos. You can change your New Relic session settings so that Restricted User logins do not time out, and then set the user interface to Kiosk mode. Add-on roles With add-on roles, you can grant variable levels of access to all users in your account, across the entire platform of New Relic products. This allows you to tailor your account permissions levels to suit the needs of Users and Restricted Users within your account. Giving a User or Restricted User add-on manager access to a product grants them the equivalent of Admin capabilities within the product. They will continue to have User or Restricted User capabilities for all other New Relic products. For example, you could make a software engineer in your company a User in most products, but assign Admin-level access to APM. For another example, you might assign the Nerdpack manager role to a user, and that gives them the ability to subscribe and unsubscribe New Relic One applications to an account. There are two types of add-on roles: Add-on Manager roles are available to grant permissions on a per-product basis. Giving a User or Restricted User managed add-on access to a product grants them the equivalent of Admin capabilities within the product. Custom add-on roles can grant feature-specific permissions across different New Relic products. For example, a group of Users could have the ability to acknowledge incidents and close violations in New Relic Alerts, but not have the ability to modify your existing alert preferences. Individuals on a master account that has sub-accounts automatically have the same level of access for all sub-accounts. Below are options for managing both managed add-on roles and custom add-on roles: View roles To view the list of individuals assigned to your account and their current roles: Go to account dropdown > Account settings > Users and roles. Assign a managed role Tip Owner and Admins Managed add-on roles are available by default for each New Relic product. Adding a managed role for a user grants them Admin-level permissions for the assigned product. They cannot be edited or deleted. To assign a managed add-on role for a User or Restricted User in your account: Go to account dropdown > Account settings > Users and roles. From the list of users associated with your account, select their name. Under Add-on roles, select the type of manager role for the user. To understand which capabilities may be added, use the Capabilities preview chart. Features in the Capabilities preview chart may not exactly match what features are available for your subscription level. Tip You can also add, update, or delete users in bulk by using a CSV file. Create a custom role To create a custom add-on role for your account: Go to account dropdown > Account settings > Users and roles > Roles. Select New custom add-on role. Select the capabilities necessary for the new custom role, then Create role. Assign a custom role Tip Owners and Admins You must create a custom role before assigning it to a user. To assign a custom add-on role for a User or Restricted User in your account: Go to account dropdown > Account settings > Users and roles > Users. From the list of users associated with your account, select their name ]. Under Add-on roles, select a custom role for the user. Click Update user. Edit or delete a custom role Tip Owners and Admins You cannot edit or delete New Relic's default roles. However, you can edit or delete custom add-on roles for your account: Go to account dropdown > Account settings > Users and roles > Roles. From the Add-on roles list, select the custom add-on role, then select Edit role or Delete role as appropriate. Account permissions Here is a summary of basic user rights for your New Relic account. Individuals on a master account with sub-accounts automatically have the same level of access for all sub-accounts. However, they will not receive email notifications for alerts or weekly reports for sub-accounts unless they are explicitly granted permission on these sub-accounts. Function Owner Admin User Restricted Maintain billing information. Change the account Owner. Add, update, and delete account Admins, Users, and Restricted Users. When the account Owner and Admins add individuals to the account, New Relic automatically sends them an email message. Update users' job titles and roles from Account settings in the New Relic UI. Create, modify and delete sub-accounts from Account settings in the New Relic UI. Update your own account information (name, password change or password reset request, default account, email preferences, etc.) from User preferences in the New Relic UI. Change someone else's password. You cannot reset passwords for anyone else on the account, even if you are an Owner or Admin. Instead, follow standard procedures to request a password reset from New Relic. View the list of individuals on the account from (account dropdown) > Account settings > Account > Summary in the New Relic UI. Manage flexible data retention. Subscribe and unsubscribe applications to New Relic One Alert permissions Here is a summary of Admin and Add-on manager capabilities with New Relic Alerts. To allow a User or Restricted User to execute any of these functions in New Relic Alerts, assign an Alerts add-on manager role. Admin and manager capabilities for Alerts include: Create or name alert policies. Specify incident preferences. Disable or define alert conditions. Provide runbook instructions. Select product targets. Alter alert condition thresholds. Create, modify, or delete notification channels. APM permissions Here is a summary of Admin and Add-on manager capabilities with New Relic APM. To allow a User or Restricted User to execute any of these functions in New Relic APM, assign an APM add-on manager role. Admin and manager capabilities for APM include: Remove applications from the New Relic UI. Delete app traces and error traces. Browser permissions Here is a summary of Admin and Add-on manager capabilities with New Relic Browser. To allow a User or Restricted User to execute any of these functions in New Relic Browser, assign a Browser add-on manager role. Admin and manager capabilities for Browser include: Add, rename, or delete applications. Manage whitelists. Manage domain conditions. Infrastructure permissions Here is a summary of Admin and Add-on manager capabilities with New Relic Infrastructure. To allow a User or Restricted User to execute any of these functions in New Relic Infrastructure, assign an Infrastructure manager role. Admin and manager capabilities for Infrastructure include: Create alert conditions in New Relic Infrastructure, including conditions for host not reporting. Add or modify integrations. Insights permissions Here is a summary of Admin and Add-on manager capabilities with New Relic Insights. To allow a User or Restricted User to execute any of these functions in New Relic Insights, assign an Insights manager role. These functions include: Create, view, modify, or delete Query API keys or Insert API keys. Tip New Relic Insights includes permission levels to share your Insights dashboards with others. Mobile permissions To give permission to delete a mobile app from New Relic, you can assign an Admin or Mobile manager role. Synthetics permissions Here's a summary of Admin and Add-on manager capabilities with New Relic Synthetics. To allow a User or Restricted User to execute any of these functions in New Relic Synthetics, assign a Synthetics add-on manager role. Admin and manager capabilities for Synthetics include: Create, edit, or delete monitors. Edit monitor scripts. Create, edit, or delete private locations. Create, edit, or delete monitor downtimes. Create, view, edit, or delete secure credentials. For more information, see User roles in Synthetics. Workloads Here's a summary of Admin and Add-on manager capabilities with New Relic One workloads: Create, duplicate, modify, or delete workloads. Link dashboards to workloads and save filters. To allow a User or Restricted User to execute these functions, assign the workloads manager add-on role.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 149.12619,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Account <em>permissions</em>",
        "body": ", assign an APM add-on <em>manager</em> role. Admin and <em>manager</em> capabilities for APM include: Remove applications from the New Relic UI. Delete <em>app</em> traces and error traces. Browser <em>permissions</em> Here is a summary of Admin and Add-on <em>manager</em> capabilities with New Relic Browser. To allow a User or Restricted"
      },
      "id": "603e88b2e7b9d2a3f12a07d5"
    },
    {
      "image": "https://newrelic.com/dam/new-relic/opengraph/newrelic_og_image.png",
      "url": "https://newrelic.com/resources/webinars/NR-One-Programmability-191126",
      "sections": [
        "During this session we will review the following topics:",
        "Related Links",
        "COMPANY",
        "CONNECT",
        "international"
      ],
      "published_at": "2021-03-17T17:52:37Z",
      "title": "New Relic One Programmability Online Training",
      "updated_at": "2021-03-16T04:37:48Z",
      "type": "storefront",
      "external_id": "f583edb88ca2d2430ca297364eac839705311616",
      "popularity": 1,
      "body": "logo-newrelic Search Products Pricing Solutions Help Center About New Relic for iOS or Android Â Â  New Relic Insights App for iOS Search icon Sign Up Log In Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience Tool Consolidation Open Source By Industry E-commerce and Retail Media Public Sector By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore open source projects Training Get help Community forum Global technical support Expert services About Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Social Impact Â  Investor Relations Newsroom Partner Program Contact Us logo-newrelic Want to use our logo? There's a page for that, including instructions and different styles and formats. Sorry about grabbing your right-click. Just trying to be helpful. You can also go home. Back to top icon Video New Relic One Programmability Online Training 46:59 Â  Join us for this exclusive 90-minute introduction to the fundamentals of New Relic One Programmability. This training will introduce you to the key concepts and walk you through developing New Relic Applications. The training is based on the self-paced material freely available on New Relic GitHub and delivered by a New Relic facilitator who will guide you through the introduction of the first 3 of the 10 labs available. This session allows for active questions and answers and facilitated troubleshooting when code or environments act unpredictably. Prerequisites This New Relic One training assumes no specific software engineering or developer experience; each lab comes with a fully completed functional solution that participants can copy into the lab repo to complete the activity. The labs are designed to promote experimentation by changing variables, layouts, data access methods, and UI components allowing each participant to comfortably experiment with the material to gain familiarity. Whether you are new to or rusty at programming or JavaScript, or happen to be an expert React.js developer; this training will provide important context to start you on the journey of developing New Relic Applications.Â  Must have: Permissions to installÂ  Git installed Node installed A text editor or IDE of your choice (we will be using VS Code) Nerdpack manager role to deploy Technical exercises include exposure to the following technical topics: Installing the New Relic command-line interface (CLI) on local workstation Setting New Relic API developer access credentials Accessing GitHub repositories and cloning existing NR1 applications Executing New Relic CLI commands Making GraphQL and Web Service requests JavaScript layouts Â  During this session we will review the following topics: Installation of New Relic CLI and Environment setup Familiarisation with New Relic One Application component model and lifecycle Advanced UI construction and data processing Individual self paced experimentation and Open Source example deployment Request a Demo Related Links Case Study La plus grande brasserie au monde se tourne vers New Relic pour que la biÃ¨re continue de couler Ã  flots dans lâÃ¨re numÃ©rique Webinar Introduction to Custom Apps on New Relic One eBook Understanding the 3 Phases of DevOps Maturity Article Black Friday Is Coming: Are Your Sites and Apps Ready? eBook DevOps â so geht es richtig : Best Practices zur Ãberwindung von Erfolgshindernissen eBook DevOps Done Right: Best Practices to Knock Down Barriers to Success eBook Creating a Framework for Digital Media Success Article 7 Requirements for Monitoring Cloud Apps and Infrastructure COMPANY Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal CONNECT Contact Us Request Demo Events international newrelic.co.jp (æ¥æ¬èª) newrelic.fr (FranÃ§ais) newrelic.de (Deutsch) newrelic.co.kr (íêµ­ì´) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 144.3086,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " to be an expert React.js developer; this training will provide important context to start you on the journey of developing New Relic Applications.Â  Must have: <em>Permissions</em> to installÂ  Git installed Node installed A text editor or IDE of your choice (we will be using VS Code) <em>Nerdpack</em> <em>manager</em> role"
      },
      "id": "5ece92cb28ccbc3012c1356a"
    },
    {
      "sections": [
        "Integrations and custom roles",
        "Recommended role",
        "Optional role",
        "Important",
        "List of permissions",
        "Common permissions",
        "Service-specific permissions",
        "Permissions to link projects through the UI"
      ],
      "title": "Integrations and custom roles",
      "type": "docs",
      "tags": [
        "Integrations",
        "Google Cloud Platform integrations",
        "Get started"
      ],
      "external_id": "d4f60e2d8413ddde9a342980d75a0e216af9baa4",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/google-cloud-platform-integrations/get-started/integrations-custom-roles/",
      "published_at": "2021-03-18T09:02:56Z",
      "updated_at": "2021-03-16T05:48:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "To read the relevant data from your Google Cloud Platform (GCP) account, New Relic uses the Google Stackdriver API and also other specific services APIs. To access these APIs in your Google Cloud project, the New Relic authorized account needs to be granted a certain set of permissions; GCP uses roles to grant these permissions. Recommended role By default we highly recommend using the GCP primitive role Project Viewer, which grants \"permissions for read-only actions that do not affect your cloud infrastructure state, such as viewing (but not modifying) existing resources or data.\" This role is automatically managed by Google and updated when new Google Cloud services are released or modified. Optional role Alternatively, you can create your own custom role based on the list of permissions, which specifies the minimum set of permissions required to fetch data from each GCP integration. This will allow you to have more control over the permissions set for the New Relic authorized account. Important New Relic has no way of identifying problems related to custom permissions. If you choose to create a custom role, it is your responsibility to maintain it and ensure proper data is being collected. To customize your role you need to: Create a Google Cloud IAM Custom Role in each one of the GCP projects you want to monitor with New Relic. In each custom role, add the permissions that are specifically required for the cloud services you want to monitor according to the following list. Assign the custom role(s) to the New Relic authorized account. List of permissions Common permissions All integrations need the following permission: monitoring.timeSeries.list Service-specific permissions For some GCP integrations, New Relic will also need the following permissions, mainly to collect labels and inventory attributes. Integration Permissions Google AppEngine n/a; Google App Engine does not require additional permissions. Google BigQuery bigquery.datasets.get bigquery.tables.get bigquery.tables.list Google Cloud Functions cloudfunctions.locations.list Google Cloud Load Balancing n/a; Google Cloud Load Balancing does not require additional permissions. Google Cloud Pub/Sub pubsub.subscriptions.get pubsub.subscriptions.list pubsub.topics.get pubsub.topics.list Google Cloud Spanner spanner.instances.list spanner.databases.list spanner.databases.getDdl Google Cloud SQL cloudsql.instances.list Google Cloud Storage storage.buckets.list Google Compute Engine compute.instances.list compute.disks.get compute.disks.list Google Kubernetes Engine container.clusters.list Permissions to link projects through the UI To be able to see the list of projects that you can link to New Relic through the UI, your New Relic authorized service account needs the following permissions: resourcemanager.projects.get monitoring.monitoredResourceDescriptors.list If you do not want to grant New Relic authorized account the permissions that are needed for the linking process through the UI, you have the following options: Assign the Project Viewer or Monitoring Viewer role initially to the authorized account to link Google Cloud projects to New Relic through the UI. After the projects are linked, assign a Google Cloud custom role to the authorized account. Use New Relic NerdGraph to link Google Cloud projects to New Relic. This does not involve listing the viewable projects. However, you must know the id of the project you want to monitor. For more information, see the NerdGraph GraphiQL cloud integrations API tutorial.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 114.43983,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "List of <em>permissions</em>",
        "body": " to collect labels and inventory attributes. Integration <em>Permissions</em> Google <em>App</em>Engine n&#x2F;a; Google <em>App</em> Engine does not require additional <em>permissions</em>. Google BigQuery bigquery.datasets.get bigquery.tables.get bigquery.tables.list Google Cloud Functions cloudfunctions.locations.list Google Cloud Load"
      },
      "id": "603ebb3564441f34b64e8874"
    },
    {
      "sections": [
        "Factors affecting access to features and data",
        "User permissions",
        "Account access",
        "Pricing plan or tier",
        "The entities being monitored",
        "Data retention"
      ],
      "title": "Factors affecting access to features and data",
      "type": "docs",
      "tags": [
        "Accounts",
        "Accounts and billing",
        "Account structure"
      ],
      "external_id": "906937687aef5067060335c1723a3f722cb1eac0",
      "image": "",
      "url": "https://docs.newrelic.com/docs/accounts/accounts-billing/general-account-settings/factors-affecting-access-features-data/",
      "published_at": "2021-03-17T23:04:08Z",
      "updated_at": "2021-03-16T14:17:30Z",
      "document_type": "page",
      "popularity": 1,
      "body": "There are several factors that can affect your access to a New Relic feature, or New Relic data, including: User permissions Account access Pricing plan/tier Monitored entities Data retention User permissions User-related settings can impact what features or data you have access to. Potential impacts include: Your user type (basic user or full user). Your assigned roles. How your user roles and permissions work depends on which user model you're on. Account access New Relic gives you a cross-account view of data from accounts within the same organization. But there can be boundaries between accounts that result in some data being obfuscated. For example, a user may see missing or obfuscated data if they don't have permissions for the account that data is coming from. For more on assigning permissions, see User permissions. Some New Relic users have an email address associated with more than one New Relic account. This may result in you being in the âwrongâ account and looking for data that isnât there. For more on having multiple associated accounts, see Login issues. Options for switching between accounts: Log out and log back in to a different account. If you're having trouble getting into an older account, see this Explorers Hub post about multiple account access. Use the account switcher, located at the top of the New Relic UI, to switch to a different account. Related docs: Account structure Login and password troubleshooting Delete account created accidentally Pricing plan or tier We have two pricing plans available, and this can impact feature availability. Pricing plans: Our original product-based pricing plan: This plan separates our offerings by product. If youâre on this plan, access to some features may depend on the products you pay for. Our New Relic One pricing plan: This newer pricing plan gives more cross-platform access. The main factors affecting access are your pricing tier and your user type. Learn more about our pricing plans. The entities being monitored Some of our solutions enable functionality that isnât available to all users, like: Additional UI components, and Data available for querying For example, enabling distributed tracing results in you seeing trace data in the UI and in having trace data available for querying. If you are missing data that you expect to see, see Missing data. Data retention Different types of New Relic data have different data retention periods. Once data has passed a given data retention point, it may be deleted or be aggregated for longer term storage. For details, see Data retention.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 107.7583,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "User <em>permissions</em>",
        "body": "There are several factors that can affect your access to a New Relic feature, or New Relic data, including: User <em>permissions</em> Account access Pricing plan&#x2F;tier Monitored entities Data retention User <em>permissions</em> User-related settings can impact what features or data you have access to. Potential"
      },
      "id": "603e894728ccbc21a9eba7b3"
    }
  ],
  "/collect-data/query-data-nrql": [
    {
      "sections": [
        "Create smoother charts with sliding windows",
        "When to use sliding windows",
        "Valid NRQL syntax for SLIDE BY",
        "Translation from PromQL-style queries",
        "Use SLIDE BY with MAX and AUTO",
        "Tip"
      ],
      "title": "Create smoother charts with sliding windows",
      "type": "docs",
      "tags": [
        "Query your data",
        "NRQL: New Relic Query Language",
        "NRQL query tutorials"
      ],
      "external_id": "97fe07b51e5f2c6a2868c924d1c829d82fd8f585",
      "image": "https://docs.newrelic.com/static/9d882293c1b7b04e65b4bcf6f3ae4bbf/e5166/SlidingWindow2.jpg",
      "url": "https://docs.newrelic.com/docs/query-your-data/nrql-new-relic-query-language/nrql-query-tutorials/create-smoother-charts-sliding-windows/",
      "published_at": "2021-03-18T02:15:01Z",
      "updated_at": "2021-03-16T13:22:26Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Sliding windows are a technique for generating charts using the SLIDE BY clause in conjunction with the TIMESERIES clause. With sliding windows, data is gathered in time \"windows\" that overlap with each other. For example, in the image below, a query gathers data with 5 minute windows. The windows \"slide\" by 1 minute. Each window overlaps with the previous window by 4 minutes. 5-minute windows with 1-minute \"slide\" In contrast, with \"tumbling\" or \"cascading\" windows, the windows do not overlap. For example, in this TIMESERIES 3 minutes NRQL query, the windows are 3 minutes in length, with each beginning when the other ends. There is no overlap in the measurement interval. 3-minute windows with no overlap or \"slide\". When to use sliding windows Sliding windows are helpful when you need to smooth out \"spiky\" charts. One common use case is to use sliding windows to smooth line graphs that have a lot of variation over short periods of time in cases where the rolling aggregate (for example a rolling mean) is more important than aggregates from narrow windows of time. In the example below, data varies greatly from one minute to another, so the 1-minute tumbling window chart shows many high peaks and low valleys. TIMESERIES query without SLIDE BY clause However, in this example, 5-minute wide TIMESERIES windows are smoothed with the help of 1-minute SLIDE BY intervals. The query returns similar data but creates a much smoother chart. TIMESERIES query with SLIDE BY clause Valid NRQL syntax for SLIDE BY Valid NRQL syntax for the SLIDE BY clause will follow the format below. SELECT ... TIMESERIES integer1 units SLIDE BY integer2 units Copy integer1 specifies the sliding window width and integer2 specifies the SLIDE BY interval. units is a time unit, such as second, minute, hour, or day. All standard NRQL time units are accepted. Hereâs a real-life example. It shows 5-minute TIMESERIES windows with a 1-minute SLIDE BY interval. SELECT average(duration) from Transaction TIMESERIES 5 minutes SLIDE BY 1 minute Copy Translation from PromQL-style queries When applicable, a PromQL-style query is translated into a NRQL sliding window query. For example, if your PromQL style query uses rate(request_count[5m]) for the past 60 minutes with a 1-minute window overlap, the NRQL translation would be the query below. SELECT rate(sum(request_count), 1 SECONDS) FROM Metric SINCE 3600 SECONDS AGO UNTIL NOW FACET dimensions() LIMIT 100 TIMESERIES 300000 SLIDE BY 60000 Copy In the translation output, the default unit of millisecond is used for TIMESERIES and SLIDE BY clauses. For TIMESERIES, 300000 ms is 300 seconds, or 5 minutes, specifying a window size of 5 minutes. For SLIDE BY, 60000 ms is 60 seconds, specifying a slide interval of 1 minute. Use SLIDE BY with MAX and AUTO You can combine SLIDE BY with MAX and AUTO arguments to further tailor query results, as shown in the examples below. SELECT average(duration) FROM Transaction TIMESERIES 5 minutes SLIDE BY MAX Copy SELECT average(duration) FROM Transaction TIMESERIES 5 minutes SLIDE BY AUTO Copy Tip When paired with SLIDE BY, TIMESERIES does not support AUTO or MAX. The TIMESERIES value must be an integer time unit value. In other words, SLIDE BY AUTO or SLIDE BY MAX will work, but TIMESERIES AUTO or TIMESERIES MAX followed by SLIDE BY and MAX, AUTO, or a specific integer time unit is not supported. Tip The SLIDE BY value as determined by AUTO or MAX can produce a step interval greater than the window size, which will show up as gaps and unexpected results. If you experience these issues with query results, consider checking for instances of SLIDE BY where the step interval exceeds the window size.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 209.79166,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Valid <em>NRQL</em> <em>syntax</em> for SLIDE BY",
        "tags": "Query your <em>data</em>",
        "body": " high peaks and low valleys. TIMESERIES query without SLIDE BY clause However, in this example, 5-minute wide TIMESERIES windows are smoothed with the help of 1-minute SLIDE BY intervals. The query returns similar <em>data</em> but creates a much smoother chart. TIMESERIES query with SLIDE BY clause Valid <em>NRQL</em>"
      },
      "id": "603e8a2528ccbc56e5eba774"
    },
    {
      "image": "https://cc.sj-cdn.net/instructor/1h7ahmdd447dx-new-relic/courses/1qf2g217c4q7m/promo-image.1608575584.png",
      "url": "https://learn.newrelic.com/getting-started-with-dashboards-nrql",
      "sections": [
        "Learn to use the Data Explorer and Query Builder Basic Mode to create charts and dashboards without any knowledge of NRQL. Progress to working directly with NRQL to create a wider range of charts and visualizations.",
        "About this workshop",
        "Getting started with Dashboards & NRQL"
      ],
      "published_at": "2021-03-18T01:37:09Z",
      "title": "[Webinar] Getting started with Dashboards & NRQL",
      "updated_at": "2021-03-18T01:37:09Z",
      "type": "",
      "external_id": "20be8b6c5a3882e951f9dfd70354ea7ceaa38c7c",
      "popularity": 1,
      "body": "Sign In [Webinar] Getting started with Dashboards & NRQL Learn to use the Data Explorer and Query Builder Basic Mode to create charts and dashboards without any knowledge of NRQL. Progress to working directly with NRQL to create a wider range of charts and visualizations. Register | FREE Already registered? Sign In About this workshop New Relic One offers a consistent, powerful, and flexible query language NRQL which enables you to query and analyze all of your collected data, and build custom charts and visualizations.Â  These charts can be combined to create powerful dashboards to help you correlate and understand your systems, troubleshoot more efficiently, or correlate performance metrics with business KPIs. Using tools like the Data Explorer or Query Builder Basic Mode, you can quickly and easily create charts and dashboards without any knowledge of NRQL.Â  Working directly with NRQL you can go further and create a wider range of charts and visualizations to suit your requirements.Â Â  In this hands-on session, youâll get to explore the data being collected, start building custom charts with the Data Explorer, and learn about the structure and capabilities of NRQL.Â  Using a sandbox account youâll get familiar with NRQL syntax, work with the Query Builder to build your own queries and charts, and create data rich dashboards.Â  Youâll also learn about some of the powerful features of dashboards which enable you to link, filter, and share them for more powerful troubleshooting and data correlation.Â  Course agenda: Introduction to Charts and Dashboards Introduction to Event Data and NRQL Data Explorer: Create charts without writing NRQL Lab: Explore your data: Event, Plot, Dimensions Lab: Create performance charts Query Builder: NRQL and query components Group and Filter your data Lab: Starting queries Lab: Create user-based charts Aggregate your data: Answering specific questions Lab: Create specific performance charts Time spans, Timeseries, and Comparing data Query multiple columns; Multi Facet Interactive Dashboards More Event types Lab: Build a dashboard Knowledge Check and Takeaways Getting started with Dashboards & NRQL Event Date Spaces left Getting started with Dashboards & NRQL April 8, 2021, noon - April 8, 2021, 2 p.m. PDT 144 Getting started with Dashboards & NRQL April 20, 2021, 1 p.m. - April 20, 2021, 3 p.m. BST 150 About this workshop New Relic One offers a consistent, powerful, and flexible query language NRQL which enables you to query and analyze all of your collected data, and build custom charts and visualizations.Â  These charts can be combined to create powerful dashboards to help you correlate and understand your systems, troubleshoot more efficiently, or correlate performance metrics with business KPIs. Using tools like the Data Explorer or Query Builder Basic Mode, you can quickly and easily create charts and dashboards without any knowledge of NRQL.Â  Working directly with NRQL you can go further and create a wider range of charts and visualizations to suit your requirements.Â Â  In this hands-on session, youâll get to explore the data being collected, start building custom charts with the Data Explorer, and learn about the structure and capabilities of NRQL.Â  Using a sandbox account youâll get familiar with NRQL syntax, work with the Query Builder to build your own queries and charts, and create data rich dashboards.Â  Youâll also learn about some of the powerful features of dashboards which enable you to link, filter, and share them for more powerful troubleshooting and data correlation.Â  Course agenda: Introduction to Charts and Dashboards Introduction to Event Data and NRQL Data Explorer: Create charts without writing NRQL Lab: Explore your data: Event, Plot, Dimensions Lab: Create performance charts Query Builder: NRQL and query components Group and Filter your data Lab: Starting queries Lab: Create user-based charts Aggregate your data: Answering specific questions Lab: Create specific performance charts Time spans, Timeseries, and Comparing data Query multiple columns; Multi Facet Interactive Dashboards More Event types Lab: Build a dashboard Knowledge Check and Takeaways Live events Getting started with Dashboards & NRQL Event Date Spaces left Getting started with Dashboards & NRQL April 8, 2021, noon - April 8, 2021, 2 p.m. PDT 144 Getting started with Dashboards & NRQL April 20, 2021, 1 p.m. - April 20, 2021, 3 p.m. BST 150 Â© 2021 powered by",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 209.10233,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "[Webinar] Getting started with Dashboards &amp; <em>NRQL</em>",
        "sections": "Learn to use the <em>Data</em> Explorer and Query Builder Basic Mode to create charts and dashboards without any knowledge of <em>NRQL</em>. Progress to working directly with <em>NRQL</em> to create a wider range of charts and visualizations.",
        "body": " a sandbox account youâll get familiar with <em>NRQL</em> <em>syntax</em>, work with the Query Builder to build your own queries and charts, and create <em>data</em> rich dashboards.Â  Youâll also learn about some of the powerful features of dashboards which enable you to link, filter, and share them for more powerful troubleshooting"
      },
      "id": "5fe29f8528ccbcf532f15668"
    },
    {
      "sections": [
        "APM metric alert conditions",
        "Identify the entity",
        "ãã³ã",
        "Create the NRQL condition"
      ],
      "title": "APM metric alert conditions",
      "type": "docs-jp",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert conditions"
      ],
      "external_id": "eacb0e99d9a0e3dcec32da7dd5b873078193b3c7",
      "image": "https://docs.newrelic.com/static/61c2d8ae304b64d4279de390cedc5d98/6146e/top-twenty-2.png",
      "url": "https://docs.newrelic.com/jp/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/apm-metric-alert-conditions/",
      "published_at": "2021-03-17T20:52:51Z",
      "updated_at": "2021-03-17T20:52:51Z",
      "document_type": "page",
      "popularity": 1,
      "body": "While there are various ways to create APM metric alert conditions, we recommend using NRQL because this provides additional controls, improved detection time, and consistency across all data types. In 2021, we will be making it easier to create alert NRQL conditions from charts and queries throughout New Relic One. Until that integration is complete, please use the method described below. We'll show an example of how to create an APM external service condition using NRQL. To set up an APM metric condition, it's a two-part process: you first need to identify the entity and then create the NRQL condition. Identify the entity Here's how to get started: Go to one.newrelic.com, and click APM in the toolbar. Find the service youâd like to alert on. Click on the service. In the left navigation pane, click External services. Under Top 20 external services, find the service you want and click on it. On the right side of the page, where you see graphs for Response time and External calls per minute (throughput), decide which of these two options you would like to alert on. In the upper-right corner of the graph you choose, click the three dots, and select View query. ãã³ã If you donât see these three dots, ensure the Show new view option at the top of the page is enabled. Copy the query to your clipboard. If you choose response time, your query may look like this: If you choose external calls per minute, your query may look like this: When your query is on the clipboard, continue to the next section to create the NRQL alert condition. Create the NRQL condition After you generate the query, complete the following: Navigate to the alert's policy where youâd like to create this condition. Click Add a condition, select the NRQL tab, and click Next, define thresholds... In Define your signal, paste the query from your clipboard. Remove any LIMIT, SINCE...AGO, and TIMESERIES clauses. These must be removed for the NRQL query syntax to be valid. ãã³ã If no results are returned, ensure you are in the correct account using the account dropdown in the upper-left corner. Fill out the remaining fields and save your condition. See our additional information about querying APM metric timeslice data with NRQL. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 154.58922,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Create the <em>NRQL</em> condition",
        "body": "While there are various ways to create APM metric alert conditions, we recommend using <em>NRQL</em> because this provides additional controls, improved detection time, and consistency across all <em>data</em> types. In 2021, we will be making it easier to create alert <em>NRQL</em> conditions from charts and queries"
      },
      "id": "60526c2328ccbca01ac2fd32"
    },
    {
      "sections": [
        "Create NRQL alert conditions",
        "Tip",
        "Create a NRQL alert condition",
        "NRQL alert syntax",
        "Important",
        "Reformatting incompatible NRQL",
        "NRQL alert threshold examples",
        "Alert on specific segments of your data",
        "Alert on Nth percentile of your data",
        "Alert on max, min, avg of your data",
        "Alert on a percentage of your data",
        "Alert on Apdex with any T-value",
        "Nested aggregation NRQL alerts",
        "Nested queries with a non-faceted innermost query are not currently supported",
        "Queries at all levels must have the same aggregation window size",
        "Signal loss is not yet supported for nested queries",
        "NRQL condition creation tips",
        "Alert threshold types",
        "Sum of query results (limited or intermittent data)",
        "Set the loss of signal threshold",
        "Advanced signal settings",
        "Aggregation window",
        "Evaluation offset",
        "Fill data gaps"
      ],
      "title": "Create NRQL alert conditions",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert conditions"
      ],
      "external_id": "2872f770a5fc8a802f99b9f848906f7e351ad761",
      "image": "https://docs.newrelic.com/static/eb8e1b2d826f9fd9cf46fe3dd5455217/c1b63/nr1_nrql_alert_conditions.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/create-nrql-alert-conditions/",
      "published_at": "2021-03-17T20:52:52Z",
      "updated_at": "2021-03-17T20:52:52Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use NRQL queries to create alert conditions. Once you've defined your signal, you can further define your warning and critical threshold levels. This determines when an alerts violation is created. Read on to learn more about how to do this. Go to one.newrelic.com, click Alerts & AI, in the left sidebar click Policies, select a policy, then Add a condition. Click NRQL, and then Next, define thresholds. Tip For more information on key concepts relating to NRQL alert conditions and streaming alerts, see Streaming alerts: key terms and concepts. Create a NRQL alert condition To create a NRQL alert condition for a policy: On one.newrelic.com, in the header click Alerts & AI, then in the left sidebar click Policies. Select an existing policy or click New alert policy to create a new policy. Click Add a condition. Under Select a product click NRQL, and then click Next, define thresholds. NRQL alert syntax Here's the basic syntax for creating all NRQL alert conditions. The FACET clause is required for Outlier threshold types, optional for Static, and not allowed for Baseline. SELECT function(attribute) FROM Event WHERE attribute [comparison] [AND|OR ...] Copy Clause Notes SELECT function(attribute) Required Supported functions that return numbers include: apdex average count latest max min percentage percentile sum uniqueCount Tip If you use the percentile aggregator in a faceted alert condition with many facets, this may cause the following error to appear: An error occurred while fetching chart data. If you see this error, use average instead. FROM data type Required Only one data type can be targeted. Supported data types: Event Metric (RAW data points will be returned) WHERE attribute [comparison] [AND|OR ...] Use the WHERE clause to specify a series of one or more conditions. All the operators are supported. FACET attribute Required for outlier conditions, but not baseline or static Include an optional FACET clause in your NRQL syntax depending on the threshold type: static, baseline, or outlier. Use the FACET clause to separate your results by attribute and alert on each attribute independently. No LIMIT clause is allowed, but all queries will receive the maximum number of facets possible. Faceted queries can return a maximum of 5000 values for static conditions and a maximum of 500 values for outlier conditions. Important If the query returns more than the maximum number of values, the alert condition can't be created. If you create the condition and the query returns more than this number later, the alert will fail. Modify your query so that it returns a fewer number of values. Reformatting incompatible NRQL Some elements of NRQL used in charts donât make sense in the streaming context of alerts. Hereâs a list of the most common incompatible elements and suggestions for reformatting a NRQL alert query to achieve the same effect. Clause Notes SINCE and UNTIL Example: SELECT percentile(largestContentfulPaint, 75) FROM PageViewTiming WHERE (appId = 837807) SINCE yesterday Copy NRQL Alerting produces a never-ending stream of windowed query results, so the SINCE and UNTIL keywords to scope the query to a point in time are not compatible. As a convenience, we automatically strip SINCE and UNTIL from a query when creating a NRQL Alert Condition from the context of a chart. TIMESERIES In NRQL queries, the TIMESERIES clause is used to return data as a time series broken out by a specified period of time. For NRQL alerts, the equivalent property of a signal is the aggregation window. Multiple Aggregation Functions Each alert condition can only target a single aggregated stream of data. To alert on multiple streams simultaneously, youâll need to decompose them into individual conditions within the same policy. Original Query: SELECT count(foo), average(bar), max(baz) from Transaction Copy Decomposed: SELECT count(foo) from Transaction SELECT average(bar) from Transaction SELECT max(baz) from Transaction Copy COMPARE WITH The COMPARE WITH clause is used to compare the values for two different time ranges. This type of query is incompatible with NRQL alerting. We recommend using a Baseline Alert Condition to dynamically detect deviations for a particular signal. SLIDE BY The SLIDE BY clause supports a feature known as sliding windows. With sliding windows, SLIDE BY data is gathered into \"windows\" of time that overlap with each other. These windows can help to smooth out line graphs with a lot of variation in cases where the rolling aggregate (such as a rolling mean) is more important than aggregates from narrow windows of time. Sliding windows are not currently supported in NRQL alerts. LIMIT In NRQL queries, the LIMIT clause is used to control the amount of data a query returns, either the maximum number of facet values returned by FACET queries or the maximum number of items returned by SELECT * queries. LIMIT is not compatible with NRQL alerting: evaluation is always performed on the full result set. NRQL alert threshold examples Here are some common use cases for NRQL alert conditions. These queries will work for static and baseline threshold types. The outlier threshold type will require additional FACET clauses. Alert on specific segments of your data Create constrained alerts that target a specific segment of your data, such as a few key customers or a range of data. Use the WHERE clause to define those conditions. SELECT average(duration) FROM Transaction WHERE account_id in (91290, 102021, 20230) Copy SELECT percentile(duration, 95) FROM Transaction WHERE name LIKE 'Controller/checkout/%' Copy Alert on Nth percentile of your data Create alerts when an Nth percentile of your data hits a specified threshold; for example, maintaining SLA service levels. Since we evaluate the NRQL query in one-minute time windows, percentiles will be calculated for each minute separately. SELECT percentile(duration, 95) FROM Transaction Copy SELECT percentile(databaseDuration, 75) FROM Transaction Copy Alert on max, min, avg of your data Create alerts when your data hits a certain maximum, minimum, or average; for example, ensuring that a duration or response time does not pass a certain threshold. SELECT max(duration) FROM Transaction Copy SELECT average(duration) FROM Transaction Copy Alert on a percentage of your data Create alerts when a proportion of your data goes above or below a certain threshold. SELECT percentage(count(*), WHERE duration > 2) FROM Transaction Copy SELECT percentage(count(*), WHERE httpResponseCode = '500') FROM Transaction Copy Alert on Apdex with any T-value Create alerts on Apdex, applying your own T-value for certain transactions. For example, get an alert notification when your Apdex for a T-value of 500ms on transactions for production apps goes below 0.8. SELECT apdex(duration, t:0.5) FROM Transaction WHERE appName like '%prod%' Copy Nested aggregation NRQL alerts Nested aggregation queries are a powerful way to query your data. However, they have a few restrictions that are important to note. Nested queries with a non-faceted innermost query are not currently supported Without a FACET, the inner query produces a single result, giving the outer query nothing to aggregate. If you're using a nested query, make sure your inner query is faceted. SELECT max(cpu) FROM (FROM Event SELECT min(cpuTime) as cpu) âââââ Copy Queries at all levels must have the same aggregation window size With an alert aggregation window of 1 minute, the inner query would produce two smaller windows of 30 seconds. In theory, these two windows could be aggregated by the outer query. However, this is not currently supported. SELECT max(cpu) FROM (FROM Event SELECT min(cpuTime) as cpu TIMESERIES 30 seconds)ââ Copy Signal loss is not yet supported for nested queries For more information on signal loss, see NerdGraph API: Loss of signal and gap filling. NRQL condition creation tips Here are some tips for creating and using a NRQL condition: Topic Tips Condition threshold types NRQL condition threshold types include static, baseline, and outlier. Create a description For NRQL conditions, you can create a custom description to add to each violation. Descriptions can be enhanced with variable substitution based on metadata in the specific violation. For details, see Description Query results Queries must return a number. The condition evaluates the returned number against the thresholds you've set. Time period As with all alert conditions, NRQL conditions evaluate one single minute at a time. The implicit SINCE ... UNTIL clause specifying which minute to evaluate is controlled by your Evaluation offset setting. Since very recent data may be incomplete, you may want to query data from 3 minutes ago or longer, especially for: Applications that run on multiple hosts. SyntheticCheck data: Timeouts can take 3 minutes, so 5 minutes or more is recommended. Also, if a query will generate intermittent data, consider using the sum of query results option. Lost signal threshold (loss of signal detection) You can use loss of signal detection to alert on when your data (a telemetry signal) should be considered lost. A signal loss can indicate that a service or entity is no longer online or that a periodic job failed to run. You can also use this to make sure that violations for sporadic data, such as error counts, are closed when no signal is coming in. Tip To learn more about signal loss and how to request access to it, see this announcement. Advanced signal settings These settings give you options for better handling continuous, streaming data signals that may sometimes be missing. These settings include the aggregation window, the evaluation offset, and an option for filling data gaps. For more on using these, see Advanced signal settings. Condition settings Use the Condition settings to: Create a concise, descriptive condition name. Provide a custom violation description for the condition that will be included in violations and notifications. Add the runbook URL to include your organization's procedures for handling incidents. You may also add this information to the custom violation description. Limits on conditions See the maximum values. Health status NRQL alert conditions don't affect an entity's health status display. Examples For more information, see: Expected NRQL syntax Examples of NRQL condition queries Alert threshold types When you create a NRQL alert, you can choose from different types of thresholds: NRQL alert threshold types Description Static This is the simplest type of NRQL threshold. It allows you to create a condition based on a NRQL query that returns a numeric value. Optional: Include a FACET clause. Baseline (Dynamic) Uses a self-adjusting condition based on the past behavior of the monitored values. Uses the same NRQL query form as the static type, except you can't use a FACET clause. Outlier Looks for group behavior and values that are outliers from those groups. Uses the same NRQL query form as the static type, but requires a FACET clause. Sum of query results (limited or intermittent data) Important Available only for static (basic) threshold types. If a query returns intermittent or limited data, it may be difficult to set a meaningful threshold. Missing or limited data will sometimes generate false positives or false negatives. You can use loss of signal, aggregation duration, and gap filling settings to minimize these false notifications. To avoid this problem when using the static threshold type, you can set the selector to sum of query results. This lets you set the alert on an aggregated sum instead of a value from a single harvest cycle. Up to two hours of one-minute data checks can be aggregated. The duration you select determines the width of the rolling sum and the preview chart will update accordingly. Set the loss of signal threshold Loss of signal occurs when no data matches the NRQL condition over a specific period of time. You can set your loss of signal threshold duration and and also what happens when the threshold is crossed. Go to one.newrelic.com, click Alerts & AI, in the left sidebar click Policies, select a policy, then Add a condition. Loss of signal is only available for NRQL conditions. You may also manage these settings using the GraphQL API (recommended), or the REST API. Go here for specific GraphQL API examples. Loss of signal settings: Loss of signal settings include a time duration and two possible actions. Signal loss expiration time UI label: Signal is lost after: GraphQL Node: expiration.expirationDuration Expiration duration is a timer that starts and resets when we receive a data point in the streaming alerts pipeline. If we don't receive another data point before your 'expiration time' expires, we consider that signal to be lost. This can be because no data is being sent to New Relic or the WHERE clause of your NRQL query is filtering that data out before it is streamed to the alerts pipeline. The loss of signal expiration time is independent of the threshold duration and triggers as soon as the timer expires. The maximum expiration duration is 48 hours. This is helpful when monitoring for the execution of infrequent jobs. The minimum is 30 seconds, but we recommend using at least 3-5 minutes. Loss of signal actions Once a signal is considered lost, you can close open violations, open new violations, or both. Close all current open violations: This closes all open violations that are related to a specific signal. It won't necessarily close all violations for a condition. If you're alerting on an ephemeral service, or on a sporadic signal, you'll want to choose this action to ensure that violations are closed properly. The GraphQL node name for this is \"closeViolationsOnExpiration\" Open new violations: This will open a new violation when the signal is considered lost. These violations will indicate that they are due to a loss of signal. Based on your incident preferences, this should trigger a notification. The graphQL node name for this is \"openViolationOnExpiration\" When you enable both actions, we'll close all open violations first, and then open a new violation for loss of signal. To create a NRQL alert configured with loss of signal detection in the UI: For a policy, when you create a condition, under Select a product, click NRQL, then click Next, define thresholds. Write a NRQL query that returns the values you want to alert on. For Threshold type, select Static or Baseline. Click + Add lost signal threshold, then set the signal expiration duration time in minutes or seconds in the Signal is lost after field. Choose what you want to happen when the signal is lost. You can check one or both of Close all current open violations and Open new \"lost signal\" violation . These control how loss of signal violations will be handled for the condition. Make sure you name your condition before you save it. Tip Loss of signal detection doesn't work on NRQL queries that use nested aggregation or sub-queries. Advanced signal settings When creating a NRQL alert condition, the advanced signal settings gives you better control over streaming alert data and helps you avoid false alarms. When creating a NRQL condition, there are several advanced signal settings: Aggregation window Evaluation offset Fill data gaps To read an explanation of what these settings are and how they relate to each other, see Streaming alerts concepts. Below are instructions and tips on how to configure them. Aggregation window You can set the aggregation window duration to choose how long data is accumulated in a streaming time window before it's aggregated. You can set it to anything between one second and 15 minutes. The default is one minute. Tip Baseline alert condition thresholds don't support editing the aggregation window. They use the 1 minute default. Evaluation offset You can adjust the evaluation offset to coordinate our streaming alerting algorithm with your data's latency. If it takes a while for your data to arrive, then you may need to increase the evaluation offset. The total supported latency is the product of the aggregation window duration multiplied by the evaluation offset. In the example screenshot above, the supported latency is 3 minutes (a 1-minute aggregation window multiplied by three windows). If the data type comes from an APM language agent and is aggregated from many app instances (for example, Transactions, TransactionErrors, etc.), we recommend using an evaluation offset of 3 with 1 minute aggregation windows. Important When creating NRQL conditions for data collected from Infrastructure Cloud Integrations such as AWS Cloudwatch or Azure, we recommend that you start with an evaluation offset of 15 minutes, then adjust up or down depending on how long it takes to collect your data. Fill data gaps Gap filling lets you customize the values to use when your signals don't have any data. You can fill gaps in your data streams with one of these settings: None: (Default) Choose this if you don't want to take any action on empty aggregation windows. On evaluation, an empty aggregation window will reset the threshold duration timer. For example, if a condition says that all aggregation windows must have data points above the threshold for 5 minutes, and 1 of the 5 aggregation windows is empty, then the condition won't be in violation. Custom static value: Choose this if you'd like to insert a custom static value into the empty aggregation windows before they're evaluated. This option has an additional, required parameter of fillValue (as named in the API) that specifies what static value should be used. This defaults to 0. Last known value: This option inserts the last seen value before evaluation occurs. We maintain the state of the last seen value for 2 hours. Options for editing data gap settings: In the NRQL conditions UI, go to Condition settings > Advanced signal settings > fill data gaps with and choose an option. If using our Nerdgraph API (preferred), this node is located at: actor : account : alerts : nrqlCondition : signal : fillOption | fillValue NerdGraph is the preferred API but if you are using our REST API, you can find this setting in the REST API explorer under the \"signal\" section of the Alert NRQL conditions API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 148.52144,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create <em>NRQL</em> alert conditions",
        "sections": "<em>NRQL</em> alert <em>syntax</em>",
        "body": " thresholds. <em>NRQL</em> alert <em>syntax</em> Here&#x27;s the basic <em>syntax</em> for creating all <em>NRQL</em> alert conditions. The FACET clause is required for Outlier threshold types, optional for Static, and not allowed for Baseline. SELECT function(attribute) FROM Event WHERE attribute [comparison] [AND|OR ...] Copy Clause Notes SELECT"
      },
      "id": "603ef04864441fbc114e8883"
    },
    {
      "sections": [
        "Introduction to NRQL, New Relic's query language",
        "What is NRQL?",
        "Where can you use NRQL?",
        "What data can you query with NRQL?",
        "Tip",
        "Start using NRQL",
        "Important",
        "NRQL query examples",
        "Basic NRQL query of Browser data",
        "Attribute name with a space in it",
        "Querying multiple data sources",
        "Query returning multiple columns",
        "NRQL syntax"
      ],
      "title": "Introduction to NRQL, New Relic's query language",
      "type": "docs",
      "tags": [
        "Query your data",
        "NRQL: New Relic Query Language",
        "Get started"
      ],
      "external_id": "51e361ee5ec2a2379486d6686677e0383eb49163",
      "image": "https://docs.newrelic.com/static/04052353f8dbe132cd384d7472778b3f/c1b63/new-relic-view-chart-nrql-query_0.png",
      "url": "https://docs.newrelic.com/docs/query-your-data/nrql-new-relic-query-language/get-started/introduction-nrql-new-relics-query-language/",
      "published_at": "2021-03-18T12:13:25Z",
      "updated_at": "2021-03-11T03:19:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "One way to query your New Relic data is with the New Relic Query Language (NRQL). This resource explains what NRQL is, when and how you can use it, and basic syntax rules. For more detailed information on querying, including a listing of clauses and functions and example queries, see NRQL syntax, clauses, and functions. What is NRQL? NRQL is New Relic's SQL-like query language. You can use NRQL to retrieve detailed New Relic data and get insight into your applications, hosts, and business-important activity. Reasons to use NRQL include: To answer a question for the purpose of troubleshooting or business analysis To create a new chart To make API queries of New Relic data (for example, using our NerdGraph API) NRQL is used behind the scenes to generate some New Relic charts: Some New Relic charts are built using NRQL. One way to start using NRQL is to view a chart's query and then edit it to make your own custom chart. Where can you use NRQL? You can use NRQL in these places: New Relic One query builder: Advanced mode is a NRQL query interface Basic mode provides a simplified query experience that doesn't require knowledge of NRQL but that uses NRQL to generate results New Relic Insights NerdGraph: our GraphQL-format API, which includes options for making NRQL queries one.newrelic.com > Query your data: You can run a NRQL query in both New Relic One and New Relic Insights. This NRQL query shows a count of distributed tracing spans faceted by their entity names. NRQL is one of several ways to query New Relic data. For more on all query options, see Query your data. What data can you query with NRQL? NRQL allows you to query these New Relic data types: Event data from all New Relic products, including: APM events, like Transaction Browser monitoring events, like PageView Mobile monitoring events, like Mobile Infrastructure events, like ProcessSample Synthetics events, like SyntheticCheck Custom events, like those reported by the Event API Metric timeslice data (metrics reported by New Relic APM, Browser, and Mobile) The Metric data type (metrics reported by the Metric API and data sources that use that API) The Span data type (distributed tracing data) The Log data type (data from New Relic Logs) Tip Some data, like relationships between monitored entities, is not available via NRQL but is available using our NerdGraph API. Start using NRQL One way to start using NRQL and to understand what data you have available is to go to a NRQL interface (for example, the New Relic One query builder), type FROM, and press space. The interface will suggest available types of data: To see the attributes available for a specific data type, type FROM DATA_TYPE SELECT and press space. The interface will suggest available attributes. For example: To see the complete JSON associated with a data type, including all of its attributes, use the keyset() attribute. For example: FROM Transaction SELECT keyset() Copy NRQL is used behind the scenes to build some New Relic charts and dashboards. One way to learn NRQL is to find one of these NRQL-generated charts and start playing with the NRQL to create new, customized queries and charts: Charts built with NRQL will have View query as an option. You can then edit and customize that query to see how your changes affect the resulting visualization. Important To explore your data without having to use NRQL, use the basic mode of New Relic One query builder. NRQL query examples Here's an example NRQL query of Transaction data, which is reported by New Relic APM. FROM Transaction SELECT average(duration) FACET appName TIMESERIES auto Copy This would generate a chart that looks like: Here are some more query examples: Basic NRQL query of Browser data Here's a NRQL query of PageView data, which is reported by New Relic Browser. SELECT uniqueCount(user) FROM PageView WHERE userAgentOS = 'Mac' FACET countryCode SINCE 1 day ago LIMIT 20 Copy Attribute name with a space in it If a custom attribute name has a space in it, use backticks around the attribute name: SELECT count(*) FROM Transaction FACET `Logged-in user` Copy Querying multiple data sources To return data from two data sources, separate their data types with a comma. For example, this query returns a count of all APM transactions and Browser events over the last three days: SELECT count(*) FROM Transaction, PageView SINCE 3 days ago Copy Query returning multiple columns To return multiple columns from a dataset, separate the aggregator arguments with a comma: SELECT function(attribute), function(attribute) ... FROM ... Copy This query returns the minimum, average, and maximum duration for New Relic Browser PageView events over the last week: SELECT min(duration), max(duration), average(duration) FROM PageView SINCE 1 week ago Copy See more NRQL query examples. NRQL syntax The syntax of a NRQL query is similar to standard SQL queries. Here is a breakdown of the structure of a NRQL query: SELECT function(attribute) [AS 'label'][, ...] FROM data type [WHERE attribute [comparison] [AND|OR ...]][AS 'label'][, ...] [FACET attribute | function(attribute)] [LIMIT number] [SINCE time] [UNTIL time] [WITH TIMEZONE timezone] [COMPARE WITH time] [TIMESERIES time] Copy Basic rules include: NRQL condition Details Required values The SELECT statement and FROM clause are required. All other clauses are optional. You can start your query with either SELECT or FROM. Query string size The query string must be less than 4 KB. Case sensitivity The data type names and attribute names are case sensitive. NRQL clauses and functions are not case sensitive. Syntax for strings NRQL uses single quotes to designate strings. For example: ... where traceId = '030a573f0df02c57' Copy Attribute names with spaces Use backticks `` to quote a custom attribute name that has a space in it. For example: ... FACET `Logged-in user` Copy Data type coercion Insights does not support data type \"coercion.\" For more information, see Data type conversion. Use of math functions Basic and advanced math functions are supported in the SELECT statement. JOIN functions NRQL does not have the equivalent of the SQL JOIN function, but you can simulate a JOIN with custom attributes. Read more about NRQL syntax and functions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 147.61899,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>NRQL</em>, New Relic&#x27;s query language",
        "sections": "What <em>data</em> can you query with <em>NRQL</em>?",
        "tags": "Query your <em>data</em>",
        "body": "One way to query your New Relic <em>data</em> is with the New Relic Query Language (<em>NRQL</em>). This resource explains what <em>NRQL</em> is, when and how you can use it, and basic <em>syntax</em> rules. For more detailed information on querying, including a listing of clauses and functions and example queries, see <em>NRQL</em> <em>syntax</em>"
      },
      "id": "60445a0e196a67cb09960f6e"
    }
  ],
  "/automate-workflows/diagnose-problems/error-alerts": [
    {
      "sections": [
        "Practice diagnosing common issues using New Relic",
        "Welcome to Acme Telco Lite!",
        "Set up your environment",
        "Deploy Telco Lite",
        "Tip",
        "View your services",
        "Tear down Telco Lite",
        "Conclusion"
      ],
      "title": "Practice diagnosing common issues using New Relic",
      "type": "developer",
      "tags": [
        "demo",
        "explore"
      ],
      "external_id": "0d4529b0c9a58c8b8d3098b4916d99c61f649cba",
      "image": "https://developer.newrelic.com/static/f94b1522d40914cb51e86ff2166f5c8e/0e533/acme.png",
      "url": "https://developer.newrelic.com/automate-workflows/diagnose-problems/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2021-01-16T01:54:19Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Automatically spin up a microservice infrastructure, and use New Relic to diagnose its issues.",
      "body": "Every time you deploy an application, you hope that it's efficient and error-free. The reality, however, is usually quite different. You might introduce a bug in a release, overlook an edge case, or rely on a broken dependency. These issues, and others, can result in bad user experiences. In this guide, you: Use the open-source New Relic demo-deployer to spin up the infrastructure for Acme Telco Lite, a fictional company. This demo scenario is part of our Demo Catalog and will simulate real-world issues in a controlled, demo environment Use New Relic to understand those issues from the perspective of a Telco Lite developer Use the deployer to tear down the resources you create Welcome to Acme Telco Lite! Acme Telco Lite is a mock telecom business that maintains an eCommerce website for its customers. The site's architecture has eight, interconnected microservices, plus a simulator: The simulator isn't part of the Telco Lite infrastructure, but it is part of the demo deployment. It runs scenarios against the application to create web traffic and generate interesting data in New Relic. Set up your environment Before you begin, follow the Prerequisites guide from the deployer's GitHub repository for a detailed walkthrough of how to set up your environment. For this guide, you can choose between Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) to host your deployment. The guide steps you through: Installing Docker & pulling the demo-deployer image locally Creating a user config file containing credentials for New Relic and your cloud provider Downloading a .pem key file (if your cloud provider is AWS) Once you're all set up, deploy Acme Telco Lite. Deploy Telco Lite It's time to deploy and instrument the Telco Lite services using demo-deployer. Copy the url for the demo that corresponds to the cloud provider you chose when you set up your environment: AWS Telco Lite Demo Azure Telco Lite Demo GCP Telco Lite Demo Follow the Deployment guide in the Demo Catalog repository for a thorough explanation of how to use the deployer in a local Docker environment. When you run the deployment script, make sure to pass the url you copied for <demo-url>. Tip Since Telco Lite contains several services, the deployment can take over half an hour. When the deloyer is finished, you should see some output stating that the deployment was successful: bash Copy [INFO] Executing Deployment [â] Parsing and validating Deployment configuration success [â] Provisioner success [â] Installing On-Host instrumentation success [â] Installing Services and instrumentations success [INFO] Deployment successful! Deployed Resources: simuhost (aws/ec2): ip: 34.201.60.23 services: [\"simulator\"] uihost (aws/ec2): ip: 18.233.97.28 services: [\"webportal\", \"fluentd\"] instrumentation: nr_infra: newrelic v1.12.1 backendhost (aws/ec2): ip: 35.170.192.236 services: [\"promo\", \"login\", \"inventory\", \"plan\", \"fulfillment\", \"warehouse\", \"fluentd\"] instrumentation: nr_infra: newrelic v1.12.1 reportinghost (aws/ec2): ip: 54.152.82.127 services: [\"billing\", \"fluentd\"] instrumentation: nr_infra: newrelic v1.12.1 Installed Services: simulator: url: http://34.201.60.23:5000 webportal: url: http://18.233.97.28:5001 instrumentation: nr_node_agent: newrelic v6.11.0 nr_logging_in_context: newrelic promo: url: http://35.170.192.236:8001 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic login: url: http://35.170.192.236:8002 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic inventory: url: http://35.170.192.236:8003 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic plan: url: http://35.170.192.236:8004 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic fulfillment: url: http://35.170.192.236:8005 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic billing: url: http://54.152.82.127:9001 instrumentation: nr_java_agent: newrelic v5.14.0 nr_logging_in_context: newrelic nr_logging: newrelic warehouse: url: http://35.170.192.236:9002 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic fluentd: url: http://18.233.97.28:9999 url: http://35.170.192.236:9999 url: http://54.152.82.127:9999 Completed at 2020-08-11 11:27:00 -0700 [INFO] This deployment summary can also be found in: [INFO] /tmp/telcolite/deploy_summary.txt After configuring your environment, you only needed two commands (and a bit of patience) to spin up all the Telco Lite services! View your services With your services running in the cloud, log in to New Relic and select APM from the top navigation to see how your services are holding up: Yikes! The alerts, high response times, and red-colored indicators suggest things aren't well. Use New Relic to diagnose these issues, which are simultaneously affecting your services: Issue 1: The Warehouse Portal has abnormally high response times Issue 2: Multiple services are raising error alerts Tip Don't worry if you don't see all the same alerts. The simulator triggers issues at regular intervals, so you should start seeing these problems in New Relic within 30 minutes to an hour. Tear down Telco Lite When you're finished diagnosing all the issues effecting Telco Lite, follow the Teardown guide in the deployer's repository to tear down the services you created in your cloud provider. If you're still exploring, don't tear down your services, or you'll have to deploy them again later. Conclusion Congratulations, you're done! Throughout this tutorial, you: Used the demo-deployer to deploy Telco Lite to the cloud Used New Relic to investigate simulated issues in Telco Lite services Tore down all the infrastructural resources you created throughout this tutorial Hopefully, you learned a lot about using New Relic to investigate issues in your services. To get your hands on more features of New Relic, pick another demo from the catalog and spin it up with the deployer!",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 157.29295,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>explore</em>",
        "body": ". In this guide, you: Use the open-source New Relic <em>demo</em>-deployer to spin up the infrastructure for Acme Telco Lite, a fictional company. This <em>demo</em> scenario is part of our <em>Demo</em> Catalog and will simulate real-world issues in a controlled, <em>demo</em> environment Use New Relic to understand those issues from"
      },
      "id": "5f97897864441f14936ed88e"
    },
    {
      "sections": [
        "Diagnose high response times in Telco Lite",
        "Prerequisites",
        "Conclusion"
      ],
      "title": "Diagnose high response times in Telco Lite",
      "type": "developer",
      "tags": [
        "demo",
        "explore"
      ],
      "external_id": "257b617b5a1c415b4563b211805653c5f59647b1",
      "image": "https://developer.newrelic.com/static/7b43ba54fb07afd22eb0b6b72e8aacc0/0086b/high-response-times.png",
      "url": "https://developer.newrelic.com/automate-workflows/diagnose-problems/high-response-times/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2020-12-04T01:54:04Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to use New Relic to diagnose high response times in your services.",
      "body": "Use New Relic to understand why Telco-Warehouse Portal has slower-than-normal response times. Prerequisites Before you begin: Learn about the infrastructure of Telco Lite Set up your local environment Deploy and instrument the Telco Lite services When you're ready, start your journey by observing the high response times in your services. Step 1 of 6 Log in to New Relic One and select APM from the top navigation menu. Here, you see an overview of all eight Telco Lite services, including the service names, response times, and throughputs. Notice that the response time for Telco-Warehouse Portal is 43 seconds, much higher than the response times in other services: On the APM page, select the Telco-Warehouse Portal service name to see a summary of that service. The top graph in the summary view shows Web transactions time: You see several peaks, reaching almost 50,000 millisecondsâor 50 seconds! From this graph, you can actually gain a little more insight by toggling the colored components beneath the graph. For example, select Node.js: The graph changes to show only what the Node.js component contributes to the overall response timeâless than 100 ms, in this example. Now, select Web external and deselect Node.js: External web traffic is the primary contributor to the high response times. That's a good start, but it doesn't tell the whole story. Next, dive deeper to find out which external service is causing the issue. Step 2 of 6 So, you know that Web external is the culprit of the high response times, but it's hard to tell why. External web traffic is all the requests made from your service to other services. This means you should look into what external requests that the warehouse portal makes to try to understand exactly what external service is the bottleneck. From the left-hand navigation, select Monitor > Distributed tracing: This view shows you requests to the warehouse portal. Select a request from the table at the bottom of the view to see a trace through that request: This trace shows that one external request contributes almost all of the total trace duration. Specifically, an external request to the Telco-Fulfillment Service contributes over 99% of the overall response time. This is good news! You own the fulfillment service, which means you can drill down for even more information. Select the offending row (called a span), and then select Explore this transaction: Step 3 of 6 You're now looking at the __main__:inventory_item transaction overview. Because you know that some part of this transaction is slow, you can use this overview to narrow your focus even further. Similar to how you modified the warehouse portal APM graph, you can look specifically at the components of this transaction to understand where the root cause of the slowness is. Another way to view this information is to scroll down to the Breakdown table in that same view: Function/__main__:inventory_item, a Python function, contributes over 99% of the overall response time. At this point, you know that Telco-Warehouse Portal is slow because it makes an external request to Telco-Fulfillment Service, which is slow. You also know that the issue in the fulfillment service is local because over 99% of the request is spent in Python code, not external services. Navigate to the fulfillment service's summary page to look at the service as a whole, instead of this single transaction: Step 4 of 6 Scroll down on this view to familiarize yourself with the graphs it shows, such as Throughput and Error rate. At the bottom of the page, you can see a table with the fulfillment hosts. You can't currently drill into a specific host in the new UI (we're working on it), but you can in the old UI. Toggle Show new view to off and select the host link: Step 5 of 6 Now, you're looking at graphs in the infrastructure view for that service's host. Notice that CPU % has a lot of high spikes. Click and drag on the graph from the start of a spike to the end of it to narrow the timeslice to the period when CPU utilization goes up: If you compare this graph to the fulfillment service's transaction graph you looked at earlier, you'll see that soon after __main__:inventory_item begins executing, the CPU utilization of the host sharply rises to 100%! Step 6 of 6 Now, you understand the problem causing slow response times in the warehouse portal, but you don't know the extent of the issue. Using service maps, you can see all your services that depend on the fullfillment service. Navigate to the service map under APM > Telco-Fulfillment Service: This map shows you the fulfillment service's incoming and outgoing dependencies. Not only is Telco-Warehouse Portal dependent on the fullfillment service, but so is Telco-Web Portal! Select the web portal node to see that the fulfillment service also affects the web portal's response times: Conclusion At the end of your investigation, you discovered: Telco-Warehouse Portal is slow because it makes an external request to Telco-Fulfillment Service, which is slow The fulfillment service's Python function contributes over 99% of the response time Soon after the Python function starts executing, the host's CPU utilization spikes up to 100% The fulfillment service also affects Telco-Web Portal response times Now, as the developer behind the fulfillment service, you have enough information to debug the issue causing the CPU spikes. Congratulations! You can learn more about using New Relic by diagnosing other issues. If this is your last issue, you can tear down all the Telco Lite services.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 145.71753,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>explore</em>",
        "body": " duration. Specifically, an external request to the Telco-Fulfillment Service contributes over 99% of the overall response time. This is good news! You own the fulfillment service, which means you can drill down for even more information. Select the offending row (called a span), and then select <em>Explore</em>"
      },
      "id": "5f9789dde7b9d23fd65c94fa"
    },
    {
      "sections": [
        "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®æ¦è¦",
        "ãã³ã",
        "éè¦ãªçç±",
        "ãã¼ã¿ã®ã¯ã¨ãª",
        "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã",
        "ã¤ãã³ããè©³ããèª¿ã¹ã",
        "ã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ã",
        "éè¦",
        "èª¿æ»ãå¯è¦åãçµãè¾¼ã",
        "ã¯ã¨ãªã¨ãªã¢",
        "NRQLã¯ã¨ãªè¡¨ç¤º",
        "ãã£ã¼ãã¨ãªã¢",
        "å±æãã¦ã¨ã¯ã¹ãã¼ã",
        "ä½¿ç¨äºä¾",
        "æ°è¦ãã¼ã¿ãç¢ºèª",
        "ãã¼ã¿ãæ¤è¨¼",
        "ãã¼ã¿ã®åé¡ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®æ¦è¦",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Explore data"
      ],
      "external_id": "94545f74e5fd5ab0b18f47342f7a8f2a2fa82558",
      "image": "https://docs.newrelic.com/static/e5a9353fdbe2b92dba6856c1ee912b02/c1b63/data_explorer_new.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/explore-data/introduction-data-explorer/",
      "published_at": "2021-03-18T12:12:36Z",
      "updated_at": "2021-03-18T12:12:35Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã°ãNRQLã®ç¥è­ããªãã¦ãããã¹ã¦ã®ãã¼ã¿ãè¦è¦çã«æä½ã§ãã¾ãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãã¼ã¿ã«ã¢ã¯ã»ã¹ãã¯ã¨ãªãã«ã¹ã¿ãã¤ãºãè¦è¦åãè¡ãããµã¼ãã¹ã¨ãµã¼ãã¹ãã¤ãªããä¸è²«ããã­ã¥ã¬ã¼ãæ¸ã¿ã®ä½é¨ãå®ç¾ãã¾ãã ãã³ã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã³ãã®ä»ã®ãªãã¶ã¼ãããªãã£ ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ãNew Relicãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã éè¦ãªçç± ã·ã¹ãã ã®ç¶æãèª¿æ»ãã¾ããï¼ãªã½ã¼ã¹ã®è¨ç»ãä½æããã¤ã³ã·ãã³ããç¹å®ãããã«å¯¾å¿ããåä½ä¸è¯ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãè¡ãå¿è¦ãããã¾ããï¼ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã«ãããNRQLãä½¿ç¨ãããã¯ã¨ãªãæ§ç¯ããã«ãè¦è¦çãªã¡ãã¥ã¼ãéãã¦ãæ¢ãã¦ãããã¼ã¿ãç°¡åã«ç¹å®ãåå¾ããè¦è¦åã§ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãæ¬¡ã®ãã¨ãè¡ãã¾ãã ã¤ãã³ããã¡ããªãã¯ã¹ãã¼ã¿ã«ãè¿éã§ç´æçãªæ¹æ³ã§ã¢ã¯ã»ã¹ããã è¦è¦åãç°¡åã«å®è¡ã§ããããã«ãã¦ããã¼ã¿ã®ãã£ã¡ã³ã·ã§ã³ãè©³ããèª¿ã¹ãã ãã¾ãã¾ãªè¦³ç¹ãããã¼ã¿ãææ¡ããï¼çãã¼ã¿ããé²æ­©ãéä¿¡ãªã©ã«ã¤ãã¦ã®ç¥è¦ãæä¾ãããã¾ãã¾ãªè¦è¦åã ãã£ã«ã¿ã¼ã«ãããã¼ã¿ãæãä¸ããã 1åã®ã¯ãªãã¯ã§æ¤ç´¢ãããã·ã¥ãã¼ãã«è¿½å ããã NRQLã®ããã¿ã«ã¤ãã¦çè§£ãã: ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãå©ç¨å¯è½ãªãã¼ã¿ãæ¤ç´¢ãã¦ããéã«ã¯ã¨ãªãã©ã®ããã«æ§ç¯ãããããç¤ºãã¾ãã ãã³ã InsightsããNew Relic Oneã«åãæ¿ããå ´åç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã¼ã¿ã®ã¯ã¨ãª ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã«ã¢ã¯ã»ã¹ããã«ã¯ãone.newrelic.comã«ç§»åãããã¼ã¸ã®ä¸é¨ã§ãã¼ã¿ã®ã¯ã¨ãªã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãNew Relicã«ãããã¹ã¦ã®ãã¼ã¿ãè©³ããèª¿ã¹ãããã®ãã¼ã¿ã«ã§ãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼UIã«ããã¤ãã³ããã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ãããLogsãTracesã¢ããªãé¸æãã¦è©³ããèª¿ã¹ããã¨ãã§ãã¾ããã¾ããã¿ããã¯ãªãã¯ãã¦ããã¤ã§ãã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãããã¨ãã§ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãä¸é¨ã«ããç¯å²çµãè¾¼ã¿ã»ã¯ã·ã§ã³ï¼aï¼ãå·¦å´ã®ãã¼ã¿ãã©ã¦ã¸ã³ã°ã¨ãªã¢ï¼bï¼ãã¯ã¼ã¯ã¹ãã¼ã¹ï¼cï¼ã§æ§æããã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã«ã¯ï¼ èª¿ã¹ãç¯å²ãå®ç¾©ããï¼ãã©ã¦ãºããã¢ã«ã¦ã³ãã¨ãã¼ã¿ã¿ã¤ãï¼ã¡ããªãã¯ã¾ãã¯ã¤ãã³ãï¼ãé¸æãã¾ãã ã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦æéç¯å²ãé¸æãã¾ãã å·¦å´ã®ãã­ãã¯ãä½¿ç¨ãã¦ãã¤ãã³ããã¡ããªãã¯ã¹ã®ããããã«ã¤ãã¦ä½¿ç¨å¯è½ãªãã¼ã¿ããã©ã¦ãºããæ¤ç´¢ãä½æãã¾ãã1ãã­ãã¯ã«ã¤ã1ã¤ã®è¦ç´ ããé¸æã§ãã¾ããããã­ãã¯ã¯æ¤ç´¢å¯è½ã§ãã ã¤ãã³ããè©³ããèª¿ã¹ã ã¤ãã³ãã¿ã¤ã é¸æããã¢ã«ã¦ã³ãã§ä½¿ç¨ã§ãããã¹ã¦ã®ã¤ãã³ããè¡¨ç¤ºãã¾ãã ããã©ã«ãã§ã¯ãã¤ãã³ãã¯ååã§ä¸¦ã³æ¿ãããã¾ãã ãã­ãã ä»¥åé¸æããã¤ãã³ãã®ãã¹ã¦ã®æ°å­å±æ§ãè¡¨ç¤ºãã¾ãã ãªã¹ãã®æåã®é ç®ã¯count( * )ã§ãããã¯å±æ§ã§ã¯ããã¾ãããé¸æããã¤ãã³ãã®æ°ãè¨ç®ãã¾ãã ããã©ã«ãã§ã¯ãå±æ§ã¯ååã§ä¸¦ã³æ¿ãããã¾ãã ãã­ããããé¢æ°ãé¸æãã¾ããããã©ã«ãã§ã¯ãåå±æ§ã¯é¢æ°Averageã«è¨­å®ããã¾ãã ãã£ã¡ã³ã·ã§ã³ ä»¥åé¸æããã¤ãã³ãã¨ãã­ããã®ãã¹ã¦ã®ãã£ã¡ã³ã·ã§ã³ãè¡¨ç¤ºãã¾ãã ãã£ã¡ã³ã·ã§ã³ã¯ãã¤ãã³ãã«ã¤ãã¦ã®æå ±ãæä¾ããæå­åå¤ã§ãã æ¿åº¦ãããªãã¡é¸æããæéç¯å²ã«ãããã®å±æ§ã®ç°ãªãå¤ã®uniqueCountãè¡¨ãã¾ããè¦ç´ ã1ã¤ãããªãå ´åããã®å±æ§ã®å¤ãç¤ºãã¾ãã ããã©ã«ãã§ã¯ããã£ã¡ã³ã·ã§ã³ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã ã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ã APM æéåºåããã¼ã¿ãèª¿ã¹ãã«ã¯ãAppIDãAppNameãã¾ãã¯EntityGuidãã¹ãããã¨ãã¦é¸æãã¾ãï¼ã¾ãã¯ãããã®ã¹ãããã§ã°ã«ã¼ãåãã¾ãï¼ãããä»¥å¤ã®å ´åã¯ããã¹ã¦ã®ã¨ã³ãã£ãã£ã®éè¨ãã¼ã¿ãåå¾ãã¾ãã ã¡ããªãã¯ é¸æããã¢ã«ã¦ã³ãã§ä½¿ç¨ã§ãããã¹ã¦ã®ã¡ããªãã¯ã¹ãè¡¨ç¤ºãã¾ãã ããã©ã«ãã§ã¯ãã¡ããªãã¯ã¹ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã ãã£ã¡ã³ã·ã§ã³ ä»¥åé¸æããã¡ããªãã¯ã®ãã¹ã¦ã®ãã£ã¡ã³ã·ã§ã³ãè¡¨ç¤ºãã¾ãã ãã£ã¡ã³ã·ã§ã³ã¯ãã¡ããªãã¯ã«ã¤ãã¦ã®æå ±ãæä¾ããæå­åå¤ã§ãã æ¿åº¦ãããªãã¡é¸æããæéç¯å²ã«ãããã®å±æ§ã®ç°ãªãå¤ã®uniqueCountãè¡¨ãã¾ããè¦ç´ ã1ã¤ãããªãå ´åããã®å±æ§ã®å¤ãç¤ºãã¾ãã ããã©ã«ãã§ã¯ããã£ã¡ã³ã·ã§ã³ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã éè¦ ã¦ãããã®è¡¨ç¤ºã«ã¯ãã¡ããªãã¯ã·ã¹ãã ï¼ã¡ããªãã¯SIãã¬ãã£ãã¯ã¹ãå«ãï¼ãä½¿ç¨ããã¦ãã¾ãã èª¿æ»ãå¯è¦åãçµãè¾¼ã èª¿æ»ã®çµæã¯ãå³å´ã®ã¯ã¼ã­ã³ã°ã¹ãã¼ã¹ã«è¡¨ç¤ºããã¾ãã èª¿æ»ãçµãè¾¼ããããã£ã¼ããå±æãã ã¯ã¼ã­ã³ã°ã¹ãã¼ã¹ã«ã¯ãæ¬¡ã®ãã®ãè¡¨ç¤ºããã¾ãã ã¯ã¨ãªã¨ãªã¢ ã¯ã¨ãªã¨ãªã¢ã§ã¯ãã¯ã¨ãªãç°ãªãæ§æè¦ç´ ã«åè§£ãã¾ããããã§ãNRQLã¯ã¨ãªã¨ãã¦èª¿æ»ã®çµæãç°¡åã«èª­ã¿ããã­ãããã¦ããæ­£ç¢ºãªãã¼ã¿ããã§ãã¯ã§ãã¾ãã NRQLã«ç¿çãã¦ããªãå ´åããã®ã¨ãªã¢ããã§ãã¯ãã¯ã¨ãªã®ä½ææ¹æ³ã«ã¤ãã¦å­¦ç¿ãã¾ãã ã¯ã¨ãªã®å¥ã®é¨åã¯æ¬¡ã®ã¨ããã§ãã [ ã¤ãã³ãã®ã¿]FROM: æåã®ãã­ãã¯ã§é¸æããã¤ãã³ãã SELECT: é¸æãããã­ããã¾ãã¯ã¡ããªãã¯ããã®å¥åã§ã¯ã1ã¤ã®å¤ã¨1ã¤ã®é¢æ°ã®ã¿ããã­ãããã¾ãã GROUP BY: FACETå¥ãè¡¨ããé¸æãããã£ã¡ã³ã·ã§ã³ãã¨ã«ãã¼ã¿ãã°ã«ã¼ãåãã¾ãã LIMIT: è¡¨ç¤ºããå¤ã®éãå¥åãã¾ãã WHERE: ãã®ãã£ã¼ã«ããä½¿ç¨ãã¦ãçµæã«ããã«ãã£ã«ã¿ã¼ãé©ç¨ãã¾ãããã®å¥åã§ã¯ãnå¤ããã­ãããã¾ãã åé ç®ã¯ãxãã¯ãªãã¯ãã¦ã¯ã¨ãªããåé¤ã§ãã¾ãã NRQLã¯ã¨ãªè¡¨ç¤º ä¸è¨ã®ãã£ã¼ã«ãã¨ãã¿ã¤ã ããã«ã¼ã§é¸æããæéç¯å²ã§æ§æããããå®å¨ãªã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãã ãã³ã ããè©³ç´°ãªæ¤ç´¢ãè¡ããã¾ãã¯ãã£ã¼ããã«ã¹ã¿ãã¤ãºããå¿è¦ãããå ´åãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãã¦ã¯ã¨ãªãç·¨éã§ãã¾ãã ãã£ã¼ãã¨ãªã¢ ããã©ã«ãã§ã¯ããã¼ã¿ã¯ç·ãã£ã¼ãã§è¡¨ç¤ºããã¾ãããã£ã¼ãããã«ã¼ãä½¿ç¨ãã¦ãé¢ã°ã©ããåã°ã©ããããã³ãã¼ãã£ã¼ãã«ç°¡åã«åãæ¿ãããã¨ãã§ãã¾ããçµæã®çãã¼ã¿ããã¼ãã«ã¾ãã¯JSONå½¢å¼ã¨ãã¦è¡¨ç¤ºãããã¨ãã§ãã¾ãã ãã£ã¡ã³ã·ã§ã³ãé¸æãã¦ããå ´åããã£ã¼ãã¯ç°ãªããã¡ã»ããã§æ´æ°ããã¾ãããã£ã¼ãã®ä¸ã«ããã¡ã»ããã®ãªã¹ãã¨ããããã®å¤ããããã¡ã»ããã®è¡¨ãè¡¨ç¤ºããã¾ãã ãã¡ã»ãããã¼ãã«ãä½¿ç¨ãã¦ããã¼ã¿ãããªã«ãã¦ã³ãã¾ããã¯ãªãã¯ãããã¡ã»ããã¯ãã£ã«ã¿ã¼ã¨ãã¦é©ç¨ããã¾ããè¡¨ã¯è¡¨ç¤ºãããã¾ã¾ãªã®ã§ãå¥ã®ãã¡ã»ãããç°¡åã«é¸æãã¦èª¿æ»ãç¶ãããã¨ãã§ãã¾ãã å±æãã¦ã¨ã¯ã¹ãã¼ã å³ä¸ã«ãããªãã·ã§ã³ã¡ãã¥ã¼ãä½¿ç¨ãã¦ããã£ã¼ããç»åã¨ãã¦åå¾ãã¾ãã¯ãªã³ã¯ã¨ãã¦å±æãããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãã ã¾ããURLãã³ãã¼ãããã®ä»ã®New Relicã¦ã¼ã¶ã¼ã¨èª¿æ»å¨ä½ãå±æãããã¨ãã§ãã¾ãã ä½¿ç¨äºä¾ æ¬¡ã®ä¾ã§ããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ããã¤ã©ã®ããã«ä½¿ç¨ãããã«ã¤ãã¦å­¦ç¿ãã¦ãã ããã æ°è¦ãã¼ã¿ãç¢ºèª æ°è¦ã¤ã³ã¹ãã¥ã«ã¡ã³ãã¼ã·ã§ã³ã«æ¥ç¶ããã°ããã§ãæ°è¦ãã¼ã¿ãå©ç¨ã§ãããã©ããç¢ºèªãããã¨æã£ã¦ãã¾ãã ã¢ã«ã¦ã³ãã¨ã¤ãã³ããã¾ãã¯æ°è¦ãã¼ã¿ãçæãã¦ããã¡ããªãã¯ãé¸æãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§å¥ã®ãã¼ã«ãä½¿ç¨ãã¦ãå©ç¨ã§ããããã«ãªã£ãæ°è¦ãã¼ã¿ãä½¿ã£ã¦ã¿ãï¼ãã®ã¤ãã³ãã¾ãã¯ã¡ããªãã¯ã®çãã¼ã¿ãè¡¨ã¨ãã¦è¦ããã¾ãã¯ãªã¹ãã¨ãããã¾ãã¯ã¯ãªãã¯ãã¦ãã£ã¼ãã¨ãã¦ãã­ããããããã¨ãç¢ºèªãã¾ãã ã¤ãã³ããã¡ããªãã¯ãé¸æããå¾ããã£ã¡ã³ã·ã§ã³ã§ãã¼ã¿ã®å½¢ç¶ãç¢ºèªãã¾ããæ¿åº¦ãä½¿ç¨ãã¦ããããããã¼ã¿ã®ç°ãªãè¦ç¹ãç¢ºèªã§ãã¾ãã é¢é£æ§ãè¦ã¤ãã£ãå ´åããã·ã¥ãã¼ãã«ä¿å­ããããååã¨å±æãã¾ãã ãã¼ã¿ãæ¤è¨¼ ã«ã¹ã¿ã ã¤ãã³ã/ã¡ããªãã¯ãå¤æ´ããã®ã§ããã®å¤æ´ãæ­£å¸¸ã«è¡ããããã©ããããã§ãã¯ããå¿è¦ãããã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¿ãã§ãå¤æ´ããã¢ã«ã¦ã³ãã¨ãã¼ã¿ã¿ã¤ããã¤ãã³ã/ã¡ããªãã¯ãé¸æãã¾ãã ã¨ã³ãã£ãã£ããã¼ã¿ãã¬ãã¼ããã¦ãããã¨ã¨ããã¹ã¦ã®å±æ§ããã­ããããã¦ãããã¨ãç¢ºèªãã¾ãã å¤æ´ããå±æ§ãæ¤ç´¢ããæ´æ°ãæ­£å¸¸ã«è¡ããããã¨ããã§ãã¯ãã¾ãã ãã¼ã¿ã®åé¡ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã° ã¢ã©ã¼ããããã·ã¥ãã¼ãããã®ã¤ãã³ã/ã¡ããªãã¯ã§ä½ãåé¡ããããã¨ãåãã£ã¦ãããã¤ãã³ã/ã¡ããªãã¯å±æ§ã®åä½ã«ã¤ãã¦ãæ ¹æ¬åå ãç¥ãå¿è¦ãããã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ãã¡ãã¥ã¼ãä½¿ç¨ãã¦ãæ³å®ã©ããã«åä½ãã¦ããªãã¤ãã³ããã¡ããªãã¯ãé¸æãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ãã®ãã£ã¼ãããã­ãããã¾ãã ããããããã®ãã¼ã¿ã®ãã£ã¡ã³ã·ã§ã³ãæãä¸ãã¦ãé¢é£ããå±æ§ã«ãããã£ã«ã¿ã¼ãé©ç¨ã§ãã¾ãã ã¾ããæ¬¡ã®ãããªç°ãªãè¦³ç¹ãããã®ãã¼ã¿ãææ¡ãããã¨ãã§ãã¾ãï¼åå¸ãå¤ã®é ä½ãçµæé²åã é¢é£æ§ãè¦ã¤ãã£ãå ´åããã·ã¥ãã¼ãã«ä¿å­ããããååã¨å±æãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 108.9415,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Explore</em> and query data"
      },
      "id": "605343b4196a6754132d166e"
    },
    {
      "sections": [
        "Introduction to the data explorer",
        "Tip",
        "Why it matters",
        "Query your data",
        "Use the data explorer",
        "Explore your events",
        "Explore your metrics",
        "Important",
        "Visualize and refine your exploration",
        "Querying area",
        "NRQL query display",
        "Chart area",
        "Share and export",
        "Use cases",
        "Discover your new data",
        "Validate your data",
        "Troubleshooting data issues"
      ],
      "title": "Introduction to the data explorer",
      "type": "docs",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Explore data"
      ],
      "external_id": "8f390d6aa6f57d215b3c23f8cf08c02ef310bddc",
      "image": "https://docs.newrelic.com/static/e5a9353fdbe2b92dba6856c1ee912b02/c1b63/data_explorer_new.png",
      "url": "https://docs.newrelic.com/docs/query-your-data/explore-query-data/explore-data/introduction-data-explorer/",
      "published_at": "2021-03-18T12:12:36Z",
      "updated_at": "2021-03-16T11:03:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With the data explorer you can navigate all your data visually, without any NRQL knowledge. Use the data explorer to access, query and customize your data, create visualizations, and make connections between your services in a consistent and curated experience. Tip To use the data explorer and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters Do you research the state of your systems? Do you need to plan resources, identify and respond to incidents, or troubleshoot faulty behaviors? The data explorer makes it easy to identify, fetch and visualize the data you are looking for through visual menus, without ever using NRQL or building queries. With the data explorer you can: Access events and metrics data in a quick, intuitive way. Exploit the dimensionality of data by making it visible and easily actionable upon. See data from different points of view: from raw data to different visualizations that provide insights on evolution, distribution, etc. Drill down into data with filters. Add your searches to a dashboard in a click. Understand how NRQL works: data explorer shows how queries are built while navigating the available data. Tip Want to switch to New Relic One from Insights? See our transition guide. Query your data To access the data explorer, go to one.newrelic.com and At the top of the page, click the Query your data icon. At the Browse data dropdown, select Events or Metrics. The data explorer is the portal to explore all the data you have in New Relic. You can explore events and metrics on the data explorer UI, or select the Logs and Traces apps to explore those. You can also access the query builder any time by clicking on the tab. Use the data explorer The data explorer consists of a scoping section on the top (a), a data browsing area on the left (b), and a workspace (c). To use the data explorer: Define the scope of the exploration: select the account and data type (metric or event) you want to browse. Select the time range using the time picker. Use the blocks on the left to browse the available data for either events or metrics, and build your search. You can only select one element per block. Blocks are searchable. Explore your events Event type Lists all available events for the selected account. By default, events are sorted by Name. Plot Lists all the numeric attributes of the event previously selected. The first item on the list is count( * ), which is not an attribute. It calculates the count of the selected event. By default attributes are sorted by Name. Select the function that you want to plot. By default each attribute is set to the function Average. Dimensions Lists all the dimensions of the event and plot previously selected. Dimensions are string values that provide information on the event. They represent the cardinality, that is, the uniqueCount of the different values of that attribute in the selected time range. If there is only one element it shows the value of the attribute. By default, dimensions are sorted by Name. Explore your metrics To explore APM timeslice data, select AppID, AppName, or EntityGuid as dimensions (or group by those dimensions). Otherwise, you'll get aggregated data for all entities. Metric Lists all the metrics available for the selected account. By default, metrics are sorted by Name. Dimensions Lists all the dimensions of the metric previously selected. Dimensions are string values that provide information on the metric. They represent the cardinality, that is, the uniqueCount of the different values of that attribute in the selected time range. If there is only one element it shows the value of the attribute. By default, dimensions are by Name. Important We use the metric system (including metric SI prefixes) to display our units. Visualize and refine your exploration The result of your exploration is displayed in the working space on the right. Refine your exploration, or share your chart At the working space you can see: Querying area The querying area breaks down the query into its different constituents. Here you can easily read the result of your exploration as a NRQL query, and check the exact data being plotted. If you are not familiar with NRQL, check this area to learn how queries are built. The different parts of the query are: [ EVENTS ONLY]FROM: the event selected on the first block. SELECT: the plot or metric selected. This input plots only one value and one function. GROUP BY: represents the FACET clause, and groups the data by the selected dimension. LIMIT: type in the amount of values you want to see. WHERE: use this field to further filter results. This input plots n values. Each item can be deleted from the query by clicking on the x. NRQL query display You can see the full query, which is composed by the fields above and the time range selected with the time picker. Tip Need to do more advanced searches or customize your charts? From data explorer you can access query builder to edit the query. Chart area By default data is displayed on a line chart. You can easily change to Area chart, Pie chart, and Bar chart using the chart picker. You can also choose to see your results' raw data as a table, or as in JSON format. If you have selected a dimension, the chart is updated with the different facets. Below the chart you can see the facets' table with the list of facets and the value for each one. Use the facet table to drill down data. By clicking on a facet, it is applied as a filter. The table stays visible so you can easily select another facet to continue your exploration. Share and export You can get the chart as an image, share it as a link, or add it to a dashboard using the Options menu on the top right corner. You can also copy the URL and share your whole exploration with other New Relic users. Use cases See the following examples to learn how and when to use the data explorer. Discover your new data Iâve just connected new instrumentation and want to see if new data is available. Select the account and event or metric that's generating the new data. Use the different tools in the data explorer to toy around the new data that has become available: have a look at the raw data of that event or metric as a table, shape it as a list, or click to see it plotted as a chart. After selecting an event or metric, discover the shape of the data in its dimensions. Guided by cardinality, you can see the different points of view of any data. Found anything relevant? Save it to a dashboard or share it with a colleague. Validate your data I changed a custom event/metric and need to check if this change has been successful. In the data explorer tab, select the account, data type and event/metric you made changes to. Verify the entity is reporting data, and that all the attributes are being plotted. Find the attribute you made changes to and check the update was successful. Troubleshooting data issues I know thereâs something off with an event/metric from an alert or dashboard. I need to know the root cause about the event/metric/attribute behavior. In the data explorer, use the menus to select the event or metric that's not behaving as expected and let the data explorer plot that chart. From there, you can drill down in the dimensions of that data and filter by those attributes that are relevant. You can also see that data from different perspectives: its distribution, ranking of values, or evolution over time. Found anything relevant? Save it to a dashboard or share it with a colleague.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 93.68713,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to the data <em>explorer</em>",
        "sections": "Introduction to the data <em>explorer</em>",
        "tags": "<em>Explore</em> and query data",
        "body": " icon. At the Browse data dropdown, select Events or Metrics. The data explorer is the portal to <em>explore</em> all the data you have in New Relic. You can <em>explore</em> events and metrics on the data explorer UI, or select the Logs and Traces apps to <em>explore</em> those. You can also access the query builder any time"
      },
      "id": "603e962e28ccbc6a92eba7a8"
    },
    {
      "sections": [
        "New Relic Global Performanceãã¼ã¿ã»ãã",
        "éè¦",
        "æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã",
        "Public API Performanceããã·ã¥ãã¼ããéå§ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic Global Performanceãã¼ã¿ã»ãã",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "a1a8dc00fa765076cf92d83e758f909c75c335ad",
      "image": "https://docs.newrelic.com/static/353175f500c15eb2209965910deb84b4/c1b63/Public-API-Performance-Dash-for-GPD.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/new-relic-global-performance-data-sets/",
      "published_at": "2021-03-18T12:11:39Z",
      "updated_at": "2021-03-18T12:11:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¬ã¡ããªã¼ãã¼ã¿ãã©ãããã©ã¼ã ã®ä¸é¨ã§ããNew Relicã®Global Performanceãã¼ã¿ã»ãããä½¿ç¨ãã¦ãæç¨ã§å¤§è¦æ¨¡ãªéè¨ããããã¬ã¡ããªã¼ãã¼ã¿ã«ãã ã¡ã«ã¢ã¯ã»ã¹ã§ãã¾ãã Global Performanceãã¼ã¿ã»ããã®ãã¼ã¿ã¯ãæ¬¡ã®æ¹ã«ã¨ã£ã¦æç¨ã§ãã éè¨ãããå®éã®ãã¼ã¿ã®ã­ã¥ã¬ã¼ãæ¸ã¿ã®éåãä¸è¬çã«ã¢ãã¿ã¼ããã©ãã«ã·ã¥ã¼ãã£ã³ã°ã«ã¤ãã¦ã®ç¥è¦ãå¾ãããæ¢å­ã®New Relicã®ãå®¢æ§ã New Relicã®ããã·ã¥ãã¼ãããã¼ã¿ãã¼ã«ã«ã¤ãã¦ç¥ããèªèº«ã®ãã¼ã¿ãNew Relicã«è¿½å ããæ¹æ³ã«ã¤ãã¦æå ±ã«åºã¥ãæ±ºå®ãè¡ãããå®éã«ãã¼ã¿ãè¦è¦åãã¦è¡¨ç¤ºããããæ°è¦ã®ãå®¢æ§ã ãã®ãªã½ã¼ã¹ã«ã¯ãGlobal Performanceãã¼ã¿ã»ããã«ã¤ãã¦ã®æå ±ããã®ããã¿ãåä½ãGlobal Performanceãã¼ã¿ã¸ã®ã¢ã¯ã»ã¹ã«ã¤ãã¦ã®ç¾å¨ã®ãªãã·ã§ã³ãè¨è¼ããã¦ãã¾ãã Public API Performanceããã·ã¥ãã¼ã éè¦ æ¬¡ã®ç¹ã«ãæ³¨æãã ãããGlobal Performanceãã¼ã¿ã»ããã¯ãç¾ç¶ã®ã¾ã¾ã§æç¤ºããã¾ããGlobal Performanceãã¼ã¿ã»ããã¯ãä¸é£ã®ã½ã¼ã¹å¨ä½ã§ã®ãµã³ãã«ã®éè¨ãè¡¨ããNew Relicã¯ãã¼ã¿ãæ­£ãããã¨ãå®å¨ãªãã¨ããã¼ã¿ã®ä¿¡ææ§ã®ç¢ºèªã¯è¡ãã¾ããããã®ãã¼ã¿ã¯ããã¼ã¿ãä½¿ç¨ããç®çã«ã¤ãã¦å¯ä¸ã®æå ±æºã¨ããªãã§ãã ãããNew Relicã¯ããã®ãã¼ã¿ã«åºã¥ãã¦è¡ãããæ±ºå®ã«ã¤ãã¦è²¬ä»»ãè² ãã¾ãããGlobal Performanceãã¼ã¿ã»ããã¯ããã¼ã¿ã»ããã§è¡¨æãããæè¡ã«ã¤ãã¦ã®New Relicã«ããä¿è¨¼ãæ¨å¥¨ã¨ã¯èããªãã§ãã ããã æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã å½ç¤¾åã®Global Performanceãã¼ã¿ã»ããã§ããPublic API Performanceã¯ãAWSãGoogleãNew Relicã®ãå®¢æ§ãï¼æ­£è¦ã«ï¼ä½é¨ã§ãããã®ãå«ãããããªãã¯APIã®ããã©ã¼ãã³ã¹ã«ã¤ãã¦ã®ãå®éã®ãªã¢ã«ã¿ã¤ã ãã¼ã¿ãæ°å¤ãæä¾ãã¦ãã¾ãã ãã®ãã¼ã¿ã¯ãã§ã«New Relicãéãã¦æµãã¦ãããããã¢ã«ã¦ã³ãã®ã¢ã¯ãã£ãã¼ã·ã§ã³ããæ°ç§ä»¥åã«ãã¼ã¿ã«ã¢ã¯ã»ã¹ãããã­ã»ã¹ã§New Relicã®ããã·ã¥ãã¼ããã¯ã¨ãªæ©è½ãè©¦ãã¦ã¿ããã¨ãã§ãã¾ãã èªèº«ã®ãã¼ã¿ã½ã¼ã¹ãNew Relicã«æåã«æ¥ç¶ããå¿è¦ã¯ããã¾ãããããå®¢æ§èªèº«ã®ãã¼ã¿ã®è¿½å ã¯ç°¡åãã¤ç¡æã§è¡ããNew Relicããå®¢æ§ã®ãã¸ãã¹ãã¼ãºã«ã©ã®ããã«å½¹ç«ã¤ããçè§£ããã®ã«æé«ã®æ¹æ³ã§ããããããã¼ã¿ã½ã¼ã¹ãè¿½å ãããã¨ãæ¨å¥¨ãã¾ãã Public API Performanceããã·ã¥ãã¼ããéå§ãã Public API Performanceãã¼ã¿ãä½¿ç¨ãã¦éå§ããä¸å©ã¨ãã¦ãå½ç¤¾ã§ã¯Public API Performanceããã·ã¥ãã¼ããä½æãã¾ããããã®ããã·ã¥ãã¼ãã¯ãå®è¡å¯è½ãªä¸è¬çãªç¥è¦ã¨åæã®ä¸¡æ¹ãæä¾ããã¾ãããã·ã¥ãã¼ãã®æ©è½ãèªèº«ã®ãã¼ã¿ã«ã©ã®ããã«é©ç¨å¯è½ãã®ä¾ãæä¾ãã¾ãã æ°è¦ã®ãå®¢æ§ã¨æ¢å­ã®ãå®¢æ§ã®ãããããPublic API Performanceããã·ã¥ãã¼ãã§Global Performanceãã¼ã¿ãè¿éãã¤ç°¡åã«è¡¨ç¤ºã§ãã¾ãããã®ããã·ã¥ãã¼ãã®ä½¿ç¨ãéå§ããã«ã¯ãPublic API Performanceããã·ã¥ãã¼ãã«ã¤ãã¦è©³ããèª¿ã¹ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 88.4657,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Explore</em> and query data"
      },
      "id": "6053437b28ccbc1ce2c2fd65"
    }
  ],
  "/explore-docs/query-and-store-data": [
    {
      "sections": [
        "Intro to NerdStorage",
        "Use NerdStorage in your apps",
        "Data model",
        "Caution",
        "Limits",
        "Data access",
        "Permissions for working with NerdStorage"
      ],
      "title": "Intro to NerdStorage",
      "type": "developer",
      "tags": [
        "nerdstorage",
        "nerdstorage components",
        "new relic one apps",
        "data access"
      ],
      "external_id": "709e06c25376d98b2191ca369b4d139e5084bd62",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nerdstorage/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2020-12-04T01:58:15Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Intro to NerdStorage on New Relic One",
      "body": "To help you build a New Relic One application, we provide you with the New Relic One SDK. On this page, youâll learn how to use NerdStorage SDK components. Use NerdStorage in your apps NerdStorage is used to store and retrieve simple sets of data, including users' configuration settings and preferences (like favorites), or any other small data sets. This storage is unique per Nerdpack, and can't be shared with any other Nerdpack. NerdStorage can be classified into three categories: User storage: Data that is attached to a particular user. If youâre authenticated as the user the data is attached to, you can read it and write it. Account storage: Data that is attached to a particular account. If youâre authenticated and can access the account, you can read and write to account scoped NerdStorage. Visibility of account data is also determined by master/subaccount rules: If a user has access to the master account, then they also have access to data in all subaccounts. Entity storage: Data that is attached to a particular entity. If you can see the corresponding entity, you can read and write data on that entity. Data model You can imagine NerdStorage as a nested key-value map. Data is inside documents, which are nested inside collections: { \"YourNerdpackUuid\": { \"collection-1\": { \"document-1-of-collection-1\": \"{\\\"lastNumber\\\": 42, \\\"another\\\": [1]}\", \"document-2-of-collection-1\": \"\\\"userToken\\\"\" // ... }, \"another-collection\": { \"fruits\": \"[\\\"pear\\\", \\\"apple\\\"]\" // ... } // ... } } Copy Each NerdStorage level has different properties and purpose: Collections: From a Nerdpack, you can create multiple collections by naming each of them. Inside a collection you can put one or more documents. Think of a collection as key-value storage, where each document is a key-value pair. Documents: A document is formed by an identifier (documentId) and a set of data associated with it. Data associated with a document: NerdStorage accepts any sort of data associated to a documentId. Query and mutation components that are provided work by serializing and deserializing JSON. Caution NerdStorage is not encrypted. Do not store secrets, API keys, personal access tokens or license keys here. Limits A Nerdpack can hold up to 1,000 collections and 10,000 documents, plus storage type. A collection can hold up to 1,500 documents, plus storage type. Each document can have a maximum length of 1024 KiB when serialized. Data access To access NerdStorage, you can run NerdGraph queries, or use the provided storage queries. Depending on which storage you want to access, you can use a different set of SDK components: User access: UserStorageQuery and UserStorageMutation Account access: AccountStorageQuery and AccountStorageMutation Entity access: EntityStorageQuery and EntityStorageMutation Each of these components can operate declaratively (for example, as part of your React rendering methods) or imperatively (by using the static methods for query and mutation). For more information on this, see Data querying and mutations. Permissions for working with NerdStorage In order to persist changes on NerdStorage, such as creating, updating, and deleting account and entity storage, you must have a user role with permission to persist changes.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 106.99161,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "nerdstorage <em>components</em>",
        "body": ": AccountStorage<em>Query</em> and AccountStorage<em>Mutation</em> Entity access: EntityStorage<em>Query</em> and EntityStorage<em>Mutation</em> Each of these <em>components</em> can operate declaratively (for example, as part of your React rendering <em>methods</em>) or imperatively (by using the <em>static</em> <em>methods</em> for <em>query</em> and <em>mutation</em>). For more information"
      },
      "id": "5efa989ee7b9d2048e7bab92"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/docs/release-notes/agent-release-notes/java-release-notes/java-agent-3360/",
      "sections": [
        "Java agent v3.36.0",
        "Improvements",
        "Fixes"
      ],
      "published_at": "2021-03-18T12:48:26Z",
      "title": "Java agent v3.36.0",
      "updated_at": "2021-03-11T03:30:39Z",
      "type": "docs",
      "external_id": "620b9aa4068c44bd29515f153020db735791cd39",
      "document_type": "release_notes",
      "popularity": 1,
      "body": "Improvements APIs This release adds a number of APIs that will allow you to instrument and get expanded visibility into frameworks, libraries, and any custom code that New Relic does not automatically instrument. In addition to instrumenting your web frameworks, you can also instrument calls to and from messaging systems, database calls, and external calls! By passing context about your code to the APIs, you will get the same reporting, including cross application tracing, that you get with New Relicâs built-in instrumentation. Solr This release adds support for Solr versions 5 and 6 (up to and including version 6.3.0). Fixes Fixes a bug that prevents an application from starting up when a JAX-RS annotated method contains more than 8 parameters. Fixes an issue that affected Spring and JAX-RS applications compiled with the Java 8 flag javac -parameters. The issue would cause the application to throw a java.lang.reflect.MalformedParametersException exception. Fixes bug that affected applications implementing JAX-RS endpoints using static methods. The agent now reports WildFly dispatcher name and version. Fixes a bug in which Queue Time could be misreported on the Overview page for customers injecting the X-Queue-Start or X-Request-Start HTTP headers. This fix brings the Java Agent into compliance with the behavior of other New Relic Agents. Fixes an issue in which custom Hystrix Commands that are subclassed multiple times in Groovy cause an application to throw an exception on startup.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 101.88098,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " the application to throw a java.lang.reflect.MalformedParametersException exception. Fixes bug that affected applications implementing JAX-RS endpoints using <em>static</em> <em>methods</em>. The agent now reports WildFly dispatcher name and version. Fixes a bug in which Queue Time could be misreported on the Overview page"
      },
      "id": "60445ebc196a676dd6960f5e"
    },
    {
      "sections": [
        "newrelic_add_custom_tracer (PHP agent API)",
        "Syntax",
        "Requirements",
        "Description",
        "Parameters",
        "Return values",
        "Examples",
        "Instrument a function",
        "Instrument a method within a class",
        "Instrument a method within a namespaced class"
      ],
      "title": "newrelic_add_custom_tracer (PHP agent API)",
      "type": "docs",
      "tags": [
        "Agents",
        "PHP agent",
        "PHP agent API"
      ],
      "external_id": "c3a4f57bd2b02aa46f896e6e54ef818bac7d66b6",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/php-agent/php-agent-api/newrelic_add_custom_tracer/",
      "published_at": "2021-03-18T18:44:05Z",
      "updated_at": "2021-03-11T06:57:21Z",
      "document_type": "api_doc",
      "popularity": 1,
      "body": "Syntax newrelic_add_custom_tracer(string $function_name) Copy Specify functions or methods for the agent to instrument with custom instrumentation. Requirements Compatible with all agent versions. Description Specify functions or methods for the agent to target for custom instrumentation. This is the API equivalent of the newrelic.transaction_tracer.custom setting. You cannot apply custom tracing to internal PHP functions. Parameters Parameter Description $function_name string Required. The name can be formatted either as function_name for procedural functions, or as \"ClassName::method\" for methods. Both static and instance methods will be instrumented if the method syntax is used, and the class name must be fully qualified: it must include the full namespace if the class was defined within a namespace. Return values Returns true if the tracer was added successfully. Examples Instrument a function function example_function() { if (extension_loaded('newrelic')) { // Ensure PHP agent is available newrelic_add_custom_tracer(\"example_function\"); } } Copy Instrument a method within a class class ExampleClass { function example_method() { if (extension_loaded('newrelic')) { // Ensure PHP agent is available newrelic_add_custom_tracer(\"ExampleClass::example_method\"); } } } Copy Instrument a method within a namespaced class namespace Foo\\Bar; class ExampleClass { function example_method() { if (extension_loaded('newrelic')) { // Ensure PHP agent is available newrelic_add_custom_tracer(\"Foo\\\\Bar\\\\ExampleClass::example_method\"); } } } Copy Alternatively, on PHP 5.5 or later, the ::class syntax can be used instead: namespace Foo\\Bar { class ExampleClass { function example_method() { // ... } } } namespace { use Foo\\Bar; if (extension_loaded('newrelic')) { // Ensure PHP agent is available newrelic_add_custom_tracer(Bar::class . \"::example_method\"); } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 54.4094,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Instrument a <em>method</em> within a class",
        "body": "&quot; for <em>methods</em>. Both <em>static</em> and instance <em>methods</em> will be instrumented if the <em>method</em> syntax is used, and the class name must be fully qualified: it must include the full namespace if the class was defined within a namespace. Return values Returns true if the tracer was added successfully. Examples Instrument"
      },
      "id": "6043c950196a67e23d960f2d"
    },
    {
      "sections": [
        "Guide to using the Java agent API",
        "Important",
        "Use the API",
        "Transactions",
        "Instrument asynchronous work",
        "Distributed tracing API usage",
        "Caution",
        "Cross application tracing (CAT) API usage",
        "Obtain references to New Relic API classes",
        "Additional API functionality",
        "Additional API usage examples"
      ],
      "title": "Guide to using the Java agent API ",
      "type": "docs",
      "tags": [
        "Agents",
        "Java agent",
        "API guides"
      ],
      "external_id": "d2e891456fe10b28930afad273f760ef9f06a85a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/java-agent/api-guides/guide-using-java-agent-api/",
      "published_at": "2021-03-18T03:16:58Z",
      "updated_at": "2021-03-11T02:31:15Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The New Relic Java agent API lets you control, customize, and extend the functionality of the APM Java agent. This API consists of: Static methods on the com.newrelic.api.agent.NewRelic class A @Trace annotation for implementing custom instrumentation A hierarchy of API objects providing additional functionality Use this API to set up custom instrumentation of your Java app and collect more in-depth data. For detailed information about this API, see the complete Javadoc on GitHub. Another way to set up custom instrumentation is to use XML instrumentation. The XML option is simpler and does not require modification of your app code, but it lacks the complete functionality of the Java agent API. Important For best results when using the API, ensure that you have the latest Java agent release. Several APIs used in the examples require Java agent 6.4.0 or higher. For all available New Relic APIs, see Intro to APIs. Use the API To access the API class, add newrelic-api.jar to your application class path. The jar is in the New Relic Java agent's installation zip file. You can call the API when the Java agent is not running. The API methods are just stubs; the implementation is added when the Java agent loads the class. Transactions To instrument Transactions in your application, use the following APIs. If you want to... Use this Create a Transaction when New Relic does not create one automatically @Trace(dispatcher = true) on the method that encompasses the work to be reported. When this annotation is used on a method within the context of an existing transaction, this will not start a new transaction, but rather include the method in the existing transaction. Capture the duration of a method that New Relic does not automatically trace @Trace() on the method you want to time. Set the name of the current Transaction NewRelic.setTransactionName(...) Start the timer for the response time of the current Transaction and to cause a Transaction you create to be reported as a Web transaction, rather than as an Other transaction NewRelic.setRequestAndReponse(...) Add custom attributes to Transactions and TransactionEvents NewRelic.addCustomParameter(...) Prevent a Transaction from being reported to New Relic NewRelic.ignoreTransaction() Exclude a Transaction when calculating your app's Apdex score NewRelic.ignoreApdex() Instrument asynchronous work For detailed information, see Java agent API for asynchronous applications. If you want to... Use this Trace an asynchronous method if it is linked to an existing Transaction... @Trace(async = true) Link the Transaction associated with the Token on the current thread... Token.link() or Token.linkAndExpire() Expire a Token associated with the current Transaction... Token.expire() Stop timing a Segment and have it report as part of its parent Transaction Segment.end() Stop timing a Segment and not have it report as part of its parent Transaction Segment.ignore() Distributed tracing API usage These APIs require distributed tracing to be enabled. See Java agent configuration for all distributed tracing config options. Distributed tracing lets you see the path that a request takes as it travels through a distributed system. For general instructions on how to use the calls below to implement distributed tracing, see Use distributed tracing APIs. To see these APIs in action, see Using Java agent distributing tracing API with Kafka. Important With agent version 6.4.0, the following distributed tracing APIs were introduced, with the exception of addCustomAttribute(), which was introduced in 6.1.0. We highly recommended using these APIs instead of the deprecated ones. If you want to... Use this Create and insert distributed tracing headers into a Headers data structure. This API will insert both newrelic and W3C Trace Context headers (traceparent & tracestate), unless the agent is explicitly configured to exclude newrelic headers. Transaction.insertDistributedTraceHeaders(Headers) Copy For more on obtaining references to the current transaction and other API classes, see Obtain references. Accept the distributed tracing headers sent from the calling service and link these services together in a distributed trace. Transaction.acceptDistributedTraceHeaders(TransportType, Headers) Copy For more on obtaining references to the current transaction and other API classes, see Obtain references. The type-specific headers of an inbound or outbound message. For a provided implementation of Headers use ConcurrentHashMapHeaders. Headers Copy A utility class that provides enum constants for defining the transport type when accepting distributed tracing headers. TransportType Copy Add custom attributes to SpanEvents in distributed traces NewRelic.getAgent().getTracedMethod().addCustomAttribute(...) Caution With agent version 6.4.0, the following distributed tracing APIs have been deprecated and replaced by the APIs in the above table. It's highly recommended to upgrade the agent and use the new APIs instead of these deprecated ones. If you want to... Use this Create a payload to be sent to a called service. Transaction.createDistributedTracePayload() Copy For more on obtaining references to the current transaction and other API classes, see Obtain references. Caution API deprecated as of agent 6.4.0 Accept a payload sent from the first service; this will link these services together in a trace. Transaction.acceptDistributedTracePayload(...) Copy For more on obtaining references to the current transaction and other API classes, see Obtain references. Caution API deprecated as of agent 6.4.0 Payload used to connect services. The text() call returns a JSON string representation of the payload. DistributedTracePayload.text() Caution API deprecated as of agent 6.4.0 Payload used to connect services. The httpSafe() call returns a base64 encoded JSON string representation of the payload. DistributedTracePayload.httpSafe() Caution API deprecated as of agent 6.4.0 Cross application tracing (CAT) API usage To track external calls and add cross application tracing, use the following APIs: If you want to... Use this Trace across a custom transport channel that New Relic does not support by default, such as a proprietary RPC transport Transaction.getRequestMetadata(), .processRequestMetadata(...), .getResponseMetadata(), .processResponseMetadata(...) Copy Also refer to the information in this document about using Transaction to obtain references to New Relic API classes. View or change the metric name or a rollup metric name of a TracedMethod (A rollup metric name, such as OtherTransaction/all, is not scoped to a specific transaction. It represents all background transactions.) TracedMethod.getMetricName(), .setMetricName(...), .setRollupMetricName(...) Copy Also refer to the information in this document about using TracedMethod to obtain references to New Relic API classes. Report a call to an external HTTP service, database server, message queue, or other external resource that is being traced using the Java agent API's @Trace annotation TracedMethod.reportAsExternal(...) passing arguments constructed using ExternalParameters builder. Also refer to the information in this document about using TracedMethod to obtain references to New Relic API classes. Enable and add cross application tracing when communicating with an external HTTP or JMS service that is instrumented by New Relic TracedMethod.addOutboundRequestHeaders(...) along with TracedMethod.reportAsExternal(...) Also refer to the information in this document about using TracedMethod to obtain references to New Relic API classes. Add timing for an application server or dispatcher that is not supported automatically Transaction.setRequest(...), Transaction.setResponse(...), or NewRelic.setRequestAndResponse(...), and Transaction.markResponseSent() Also refer to the information in this document about using Transaction to obtain references to New Relic API classes. Obtain references to New Relic API classes Other tasks require the New Relic Agent object. The Agent object exposes multiple objects that give you the following functionality: If you want to... Use this Get a reference to the current Transaction NewRelic.getAgent().getTransaction() Get a Token to link asynchronous work NewRelic.getAgent().getTransaction().getToken() Copy Start and get a reference to a Segment NewRelic.getAgent().getTransaction().startSegment() Copy Get a reference to the method currently being traced NewRelic.getAgent().getTracedMethod() Get a reference to the Agent logger NewRelic.getAgent().getLogger() Get a reference to the Agent configuration NewRelic.getAgent().getConfig() Get a reference to an aggregator for custom metrics NewRelic.getAgent().getAggregator() Get a reference to Insights in order to record custom events NewRelic.getAgent().getInsights() Additional API functionality The following APIs provide additional functionality, such as setting app server info, reporting errors, adding page load timing information, recording custom metrics, and sending custom events to Insights. If you want to... Use this Explicitly set port, name, and version information for an application server or dispatcher and the instance name for a JVM NewRelic.setAppServerPort(...), .setServerInfo(...), and .setInstanceName(...) Copy Report an error that New Relic does not report automatically NewRelic.noticeError(...) When inside a transaction, the first call to noticeError wins. Only 1 error will be reported per transaction. Add browser page load timing for Transactions that New Relic does not add to the header automatically NewRelic.getBrowserTimingHeader(), .getBrowserTimingFooter(), .setUserName(String name), .setAccountName(String name), and .setProductName(String name) Copy Create and accumulate custom metrics NewRelic.recordMetric(...), .recordResponseTimeMetric(...), or .incrementCounter(...) Record custom events Insights.recordCustomEvent(...) Or, use NewRelic.addCustomParameter(...) to add custom attributes to the New Relic-defined TransactionEvent type. Also refer to the information in this document about using Insights to obtain references to New Relic API classes. Additional API usage examples For detailed code examples about using the APIs, see New Relic's documentation about custom instrumentation for: External calls, cross application traces, messaging, datastores, and web frameworks Cross application tracing and external datastore calls Apps using custom instrumentation with annotation Custom framework instrumentation API Preventing unwanted instrumentation Inserting custom attributes Inserting custom events Collecting custom metrics",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 47.23448,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": "The New Relic Java agent API lets you control, customize, and extend the functionality of the APM Java agent. This API consists of: <em>Static</em> <em>methods</em> on the com.newrelic.api.agent.NewRelic class A @Trace annotation for implementing custom instrumentation A hierarchy of API objects providing additional"
      },
      "id": "6043c7f8e7b9d2dd935799df"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/docs/introduction-new-relic-mobile-unity/",
      "sections": [
        "Introduction to New Relic Mobile (Unity)",
        "Caution",
        "Contents",
        "Monitor mobile app performance",
        "Features",
        "Known limitations",
        "Install and configure",
        "Install the Unity plugin",
        "Configure the Unity plugin",
        "Configure crash reporting",
        "Optional: Change the logging level",
        "Use Unity SDK API",
        "Create and complete interactions",
        "Set a custom build identifier",
        "Execute a demo crash",
        "Record custom metrics",
        "Send custom events and attributes to Insights",
        "RecordEvent (name, attributes)",
        "SetAttribute (name, value)",
        "IncrementAttribute (name [, value])",
        "RemoveAttribute (name)",
        "removeAllAttributes",
        "Track custom network requests",
        "NoticeNetworkRequest",
        "NoticeNetworkFailure",
        "Uninstall plugin",
        "Unity release notes",
        "Unity plugin 1.2.0",
        "Unity plugin 1.1.0",
        "Unity plugin 1.0.1",
        "Unity plugin 1.0.0"
      ],
      "published_at": "2021-03-18T04:37:21Z",
      "title": "Introduction to New Relic Mobile (Unity)",
      "updated_at": "2021-03-13T01:08:55Z",
      "type": "docs",
      "external_id": "21224415c30ee2bedbd3e15ec5afae0f830e5305",
      "document_type": "page",
      "popularity": 1,
      "body": "Caution This document is for historical reference. Unity is no longer supported for new customers. Contents Monitor mobile app performance The New Relic Unity plugin allows Unity developers to embed a New Relic Mobile agent (iOS or Android) in a Unity app build for mobile devices to monitor your app's performance. The plugin is written in C#, but it includes the native iOS and Android agents that embed the appropriate files for your build. Features New Relic Mobile Features Comprehensive performance data View your mobile app's performance Overview page for summary information about active sessions, or drill down to detailed information, including (note limitations below): Interaction times and trace details Crash reporting Devices Operating systems Detailed network views Available by using the API to track custom network requests For iOS apps, receive automatic instrumentation for networking for any parts of the app that are native and non-Unity (using standard Apple networking components such as NSURLConnection) Examine HTTP errors and network failures (such as DNS lookups, timeouts, SSL errors, etc.) and server error traces. Usage details at a glance Compare performance between versions of your app with detailed information for memory, CPU (iOS only), interaction speed, network requests per minute, and network failures. View a monthly report with a bar chart tracking the number of devices running your app for each month over the last year. Mobile SDK API options Use the Unity API to: Create and complete interactions Record custom metrics Send custom events to Insights Track custom network requests Known limitations The New Relic Unity plugin does not automatically instrument interactions. You must use the Unity API to track specific interactions. The New Relic Unity plugin does not automatically instrument network requests. You must use the Unity API to track network calls. Android builds: Unity still generates an Eclipse project, but Android Studio can import the Eclipse project. Install and configure The Unity plugin includes iOS and Android agent files that will embed the appropriate files for your build. To instrument interactions and network requests, you must use the Unity API to manually instrument your code. Install the Unity plugin As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile project you monitor in New Relic Mobile. For Admins with existing New Relic accounts, follow these steps to install and configure your Unity application. (If you do not have a New Relic account, see New Relic Mobile.) Go to rpm.newrelic.com/mobile. From the mobile apps index, select Add a new app. From the Get started page, select Unity as the platform for mobile monitoring. Type a name for your mobile project, then select Continue. Continue with the procedures to configure the Unity plugin. Configure the Unity plugin These procedures to configure your app also appear on the Get started page in the New Relic UI. Install NewRelic-Unity-Plugin.unitypackage into your project by going to Assets > Import package > Custom package... and selecting NewRelic-Unity-Plugin.unitypackage. Create a new GameObject in your project's initial scene by going to GameObject > Create empty and naming it NewRelicAgent. Add NewRelicAgent.cs script (located in Assets/Plugins) to the NewRelicAgent GameObject: Drag it on top of NewRelicAgent in the Hierarchy tab. OR Click Add Component button, then select New Relic Agent from the Scripts option. In the Inspector tab, set the iOS or Android application token from your New Relic Mobile apps. (Recommendation: Keep New Relic Mobile apps on separate platforms.) Build for your platform (iOS or Android), then open the resulting project (Xcode or Eclipse). For Eclipse, import the generated project into Android Studio. Android only: Ensure that your app requests the INTERNET permission through the Player Settings inspector window. In Other Settings, Configuration, ensure the Internet access dropdown is set to Required. This will result in the following permission added to the app's manifest: <uses-permission android:name=\"android.permission.INTERNET\" /> Run your app in an emulator or device to generate data. Check New Relic Mobile to ensure the data is reporting to your account. Configure crash reporting The New Relic Unity plugin cannot automatically upload dSYMs for iOS crash reporting. You must manually upload dSYMs once your iOS unity app is built for release. If the application is bitcode enabled, follow the procedures for bitcode enabled apps once the your iOS app is submitted to Apple. If you are building an Android app with ProGuard enabled, you must follow similar steps. The ProGuard mapping must be uploaded to New Relic so crash reports can be de-obfuscated. For more information, see Android agent crash reporting. Optional: Change the logging level Six logging levels are available for mobile apps monitoring: NONE ERROR WARNING INFO VERBOSE DEBUG Recommendation: Set the logging level from the Unity Inspector tab. Use Unity SDK API Use the New Relic Unity SDK API to further configure and extend the plugin's instrumentation. Create and complete interactions To start an interaction: string interactionIdentifier = NewRelicAgent.StartInteractionWithName(\"new interaction\"); Copy To stop the current interaction: NewRelicAgent.StopCurrentInteraction(interactionIdentifier); Copy Interactions work in conjuction with method tracing. To trace a method insert startTracingMethod, insert at the start of the method to trace, and insert endTracingMethodWithTimer at each exit point of the method. To start tracing a method: Timer methodTimer = new Timer(); NewRelicAgent.StartTracingMethod(\"MethodName\",\"ClassName\",methodTimer,NewRelicAgent.NRTraceType.None); Copy To end tracing a method, use the same timer as the startTracingMethod:> NewRelicAgent.EndTracingMethodWithTimer(methodTimer); Copy Set a custom build identifier Custom build identifiers are set as the Application Build property in the inspector pane for the NewRelicAgent game object, under the New Relic Agent (Script) settings. Execute a demo crash If you have trouble getting your project to crash, use the New Relic Unity plugin API to execute a demo crash. Recommendation: Add this line of code to a button click event handler as applicable: NewRelicAgent.CrashNow(\"message\")> Copy Record custom metrics With the custom metric API, you can record arbitrary numerical data and named events. Custom metrics can help to track high level events specific to your application. You can use several API calls to record custom metrics that provide different levels of detail. To create a custom metric, use this method: NewRelicAgent.RecordMetricWithName(String name, String category) Copy The name parameter is the textual name of the metric that will appear in the user interface for New Relic Mobile. Using clear, concise metric names will help you get the most out of the metrics. The guidelines for naming a custom metric include: Use case and white space characters appropriate for display in the user interface. Metric names are rendered as-is. Capitalize the metric name. Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. If you want to specify more details about a custom metric, three other API methods are available: NewRelicAgent.RecordMetricWithName(String name, String category, double value) NewRelicAgent.RecordMetricWithName(string name, string category, double value, string valueUnits) NewRelicAgent.RecordMetricWithName(string name, string category, double value, string valueUnits, string countUnits) Copy With these methods, you can record additional details: Parameter Description count The number of times the event has happened totalValue The total value of the recording exclusiveValue The exclusive value of the recording; for example, if the total value contains measurements accounted for elsewhere countUnit Unit of measurement for the metric count, including PERCENT, BYTES, SECONDS, BYTES_PER_SECOND, or OPERATIONS valueUnit Unit of measurement for the metric value, including PERCENT, BYTES, SECONDS, BYTES_PER_SECOND, or OPERATIONS To view the custom metrics you collect, follow standard procedures to create custom dashboards. Send custom events and attributes to Insights Caution The SDK can store up to 64 user-defined attributes at a time. If you attempt to store more than 64 attributes, the SDK returns false. Use the following static methods in the NewRelicAgent namespace to send custom attributes and events to New Relic Insights. Methods that return boolean results return true if they succeed, or false if the operation did not complete. The following methods are available for custom attributes and events: RecordEvent (name, attributes) NewRelicAgent.RecordEvent (string name, string dictionary attributes) Copy Records a custom Insights event. Includes a list of attributes specified as a map. SetAttribute (name, value) NewRelicAgent.SetAttribute (string name, string value) Copy NewRelicAgent.SetAttribute (string name, double value) Copy Creates an attribute with the specified text name and text/float value. SetAttribute overwrites its previous value and type each time it is called. Examples boolean attributeSet = NewRelicAgent.SetAttribute(\"username\", \"SampleUserName\"); Copy boolean attributeSet = NewRelicAgent.SetAttribute(\"rate\", 9999.99); Copy IncrementAttribute (name [, value]) public static boolean IncrementAttribute(String name); Copy public static boolean incrementAttribute(String name, double value) Copy If value is not specified, this method increments the count for the specified attribute by 1. If the attribute does not exist, it creates the attribute with a value of 1. If value is specified, the method will increment the attribute by the specified amount. Examples boolean incremented = NewRelicAgent.IncrementAttribute(\"rate\"); Copy boolean incremented = NewRelicAgent.IncrementAttribute(\"rate\", 9999.99, false); Copy RemoveAttribute (name) NewRelicAgent.RemoveAttribute(String name) Copy Removes the specified attribute. Example boolean attributeRemoved = NewRelicAgent.RemoveAttribute(\"rate\"); Copy removeAllAttributes NewRelicAgent.removeAllAttributes() Copy Removes all attributes from the session. Example boolean attributesRemoved = NewRelicAgent.RemoveAllAttributes(); Copy Track custom network requests New Relic Mobile's API provides several methods to track network requests and network failures. For example, use the noticeHttpTransaction family of methods to record HTTP transactions with several available levels of detail. If a network request fails, you can record details about the failure with noticeNetworkFailure. NoticeNetworkRequest NewRelicAgent.NoticeNetworkRequest (\"http://newrelic.com\", \"GET\", timer, null, 200, 1024, 8192, bytes, httpParameters); Copy Parameter Description url The URL of the request httpMethod The HTTP method used, such as GET or POST statusCode The statusCode of the HTTP response, such as 200 for OK timer A timer created when the network request was started bytesSent The number of bytes sent in the request bytesReceived The number of bytes received in the response responseBody The response body of the HTTP response. The response body will be truncated and included in an HTTP Error metric if the HTTP transaction is an error. params Additional parameters included in an HTTP Error metric if the HTTP transaction is an error. NoticeNetworkFailure NewRelicAgent.NoticeNetworkFailure(String url, String httpMethod, Timer timer, NewRelicAgent.NetworkFailureCode failureCode, String message) Copy Parameter Description url The URL of the request httpMethod The HTTP method used, such as GET or POST timer A timer created when the network request was started exception The exception that occurred. New Relic Mobile can automatically translate many common exceptions into network failure types. failure The type of network failure that occurred. If an exception cannot be resolved to a network failure automatically, this method can be used to categorize the failure accurately. The values are defined by the NetworkFailure enum. Valid values include Unknown, BadURL, TimedOut, CannotConnectToHost, DNSLookupFailed, BadServerResponse, and SecureConnectionFailed. Uninstall plugin To uninstall the Unity plugin, use the project console to remove all related files and resources that were installed with the Unity package: Delete NewRelicAgent object from the Hierarchy pane of the Unity project console. From All Scripts, delete all the scripts that start with newrelic. Then do the following as applicable: From Assets > Plugin > iOS, delete the NewRelicIos, NewRelicUnityPlugin, post-build, and restore-framework files. Then remove the mod_pbxproj and NewRelicAgent.framework directories. From Assets > Plugin > Android, delete the newrelic.android and NewRelicAndroid files. Then remove the LICENSE and README directories. Unity release notes Caution These release notes are for historical reference. Unity is no longer supported for new customers. Unity plugin 1.2.0 Released on: Monday, March 13, 2017 - 13:00 Download URL: https://download.newrelic.com/unity/NewRelic-Unity-Plugin_1.2.0.zip Notes: Updated Unity plugin to iOS agent 5.9.0 and Android agent 5.9.0 Unity plugin 1.1.0 Released on: Tuesday, September 6, 2016 - 14:53 Download URL: https://download.newrelic.com/unity/NewRelic-Unity-Plugin_1.1.0.zip Notes: Updated Unity plugin to iOS agent 5.8.0 and Android agent 5.7.1 Unity plugin 1.0.1 Released on: Monday, August 8, 2016 - 14:00 Download URL: https://download.newrelic.com/unity/NewRelic-Unity-Plugin_1.0.1.zip Notes: Bundle Android class rewriter JAR file (version 5.6.1) into the Unity package. Unity plugin 1.0.0 Released on: Wednesday, May 25, 2016 - 14:00 Download URL: http://download.newrelic.com/unity/NewRelic-Unity-Plugin_1.0.0.zip Notes: This plugin provides New Relic Mobile agent support for iOS and Android applications built with Unity. It also gives Unity developers access to New Relic crash reporting. It provides information about app performance, sessions, devices, operating systems, and more. It also includes APIs for custom instrumentation to gain deeper insights into specific areas of your app.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 31.058226,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " and attributes to Insights Caution The SDK can store up to 64 user-defined attributes at a time. If you attempt to store more than 64 attributes, the SDK returns false. Use the following <em>static</em> <em>methods</em> in the NewRelicAgent namespace to send custom attributes and events to New Relic Insights. <em>Methods</em>"
      },
      "id": "6043daf4e7b9d24bf75799fd"
    }
  ],
  "/collect-data/get-started-nerdgraph-api-explorer": [
    {
      "sections": [
        "Use NerdGraph to manage license keys and user keys",
        "Overview of feature description",
        "Before using examples",
        "Create keys",
        "Create a user key",
        "Update keys",
        "Delete keys",
        "Query keys"
      ],
      "title": "Use NerdGraph to manage license keys and user keys",
      "type": "docs",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "5610c77ebfcd92d59c1d0a1b15343f499c8e310e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-user-keys/",
      "published_at": "2021-03-18T06:18:19Z",
      "updated_at": "2021-03-16T08:11:47Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc contains tutorials on how to use NerdGraph to programmatically manage some New Relic API keys. For general information about New Relic keys, see API keys. Overview of feature description You can use the API keys UI to create and manage keys. Alternatively, you can use NerdGraph's ApiAccess field to programmatically create and manage the following types of keys: User keys License keys, including: General license key (used for APM, infrastructure monitoring, more) Browser key (for browser monitoring) One common use case for this feature is the ability to create and manage license keys to let you rotate keys for security purposes. Note that you can't use this NerdGraph functionality to manage or delete your original license keys; you can only create additional license keys and manage the ones you've created. Notes about this functionality: All mutations can accept multiple keys as arguments, and will return details about successful changes and errors. See examples below for details. All mutations (create, update and delete) will result in an NrAuditEvent that can be queried for auditing purposes. For details, see Audit events. Regarding license keys: License keys are categorized by NerdGraph as ingest keys. This is because their main use is to allow data ingest. You can create up to 1,000 keys of each license key type, which allows for key rotation. You can't manage or delete original license keys; you can only create additional license keys and manage keys you've created. Before using examples Things to note before using these example queries: The examples below use license keys (aka ingest keys), but you can query user keys in similar ways, replacing the ingest-key-specific fields with user-key-specific fields. To understand the data structure, we recommend experimenting with queries using the GraphiQL explorer. You can also create, view, and delete user keys using the UI. Create keys You can create multiple keys in a single mutation, for multiple accounts and key types. Note that the mutation can return successfully created keys as well as any errors encountered trying to create keys. Example of creating a key: mutation { apiAccessCreateKeys(keys: {ingest: {accountId: YOUR_ACCOUNT_ID, ingestType: BROWSER, name: \"Browser Key\", notes: \"A note.\"}}) { createdKeys { id key name notes type ... on ApiAccessIngestKey { ingestType } } errors { message type ... on ApiAccessIngestKeyError { accountId errorType ingestType } } } } Copy Results will vary depending on your data. Use the GraphiQL explorer to experiment with mutations and queries. Here's an example of using this query to create a user key: Create a user key To create a user key, you'd change the above query slightly, in the keys section: mutation { apiAccessCreateKeys(keys: {user: {accountId: YOUR_ACCOUNT_ID, userId: YOUR_USER_ID}}) { createdKeys { id key name notes type ... on ApiAccessIngestKey { ingestType } } errors { message type ... on ApiAccessIngestKeyError { accountId errorType ingestType } } } } Copy Update keys The update mutation takes the key ID, not the key string, to identify keys. mutation { apiAccessUpdateKeys(keys: {ingest: {keyId: KEY_ID, name: \"Updated name\", notes: \"A new note!\"}}) { updatedKeys { id key type name notes } errors { message } } } Copy Results will vary depending on your data. Use the GraphiQL explorer to experiment with mutations and queries. Delete keys The delete mutation takes the key ID, not the key string, to identify keys. Deleted keys will no longer grant access to New Relic systems and will no longer be returned by queries to the API access GraphQL API. mutation { apiAccessDeleteKeys(keys: {ingestKeyIds: INGEST_KEY_ID}) { deletedKeys { id } errors { message } } } Copy Results will vary depending on your data. Use the GraphiQL explorer to experiment with mutations and queries. Query keys You can access ingest and user keys by querying a single key or all keys, scoped to the actor. If querying for a single key, you must provide the key ID and type (INGEST or USER). Querying for multiple keys is done via a key search, which uses a mandatory types list and an optional scope to filter results. User keys belonging to other users will be obfuscated in the results. Single key example query: query { actor { apiAccess { key(id: INGEST_KEY_ID, keyType: INGEST) { key name type ... on ApiAccessIngestKey { ingestType } } } } } Copy Key search example query: query { actor { apiAccess { keySearch(query: {types: INGEST, scope: {ingestTypes: BROWSER}}) { keys { name key type ... on ApiAccessIngestKey { ingestType } } } } } } Copy Results will vary depending on your data. Use the GraphiQL explorer to experiment with mutations and queries.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 292.78174,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Use <em>NerdGraph</em> to manage license keys and user keys",
        "sections": "Use <em>NerdGraph</em> to manage license keys and user keys",
        "tags": "<em>NerdGraph</em>",
        "body": " to let you rotate keys for security purposes. Note that you can&#x27;t use this <em>NerdGraph</em> functionality to manage or delete your original license keys; you can only create additional license keys and manage the ones you&#x27;ve created. Notes about this functionality: All <em>mutations</em> can accept multiple keys"
      },
      "id": "603e96bf28ccbc326aeba75c"
    },
    {
      "sections": [
        "NerdGraph API: Examples",
        "Alerts features you can manage with NerdGraph",
        "NerdGraph API explorer",
        "Tip",
        "Queries",
        "Mutations"
      ],
      "title": "NerdGraph API: Examples ",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alerts and Nerdgraph"
      ],
      "external_id": "62c3f9bdca2acc3e9257b07970a717ee2ab0548f",
      "image": "https://docs.newrelic.com/static/6551638ff382e1ef38324cd82dca1214/e2c15/alerts_query_0.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alerts-nerdgraph/nerdgraph-api-examples/",
      "published_at": "2021-03-17T20:29:19Z",
      "updated_at": "2021-03-13T02:52:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can manage your policies, conditions, and muting rules programmatically using our GraphQL NerdGraph API. This is a powerful alternative to managing them in New Relic One or through the REST API. Alerts features you can manage with NerdGraph Here's what you can do in NerdGraph: Manage policies Use NRQL conditions Muting rules: suppress notifications The easiest way to discover alerts queries and mutations is through the NerdGraph API explorer. NerdGraph API explorer Our NerdGraph API explorer is a GraphiQL editor where you can prototype queries and mutations. Here are some examples showing how to find fields for queries and mutations. Tip For general information about NerdGraph, see Introduction to NerdGraph. Queries To explore the various queries, look for the available queries under the actor.account.alerts namespace in NerdGraph API explorer: Mutations To explore various mutations, look in the alerts dropdown in the NerdGraph API explorer:",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 285.36734,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> API: Examples ",
        "sections": "<em>Mutations</em>",
        "tags": "Alerts and <em>Nerdgraph</em>",
        "body": " Use NRQL conditions Muting rules: suppress notifications The easiest way to discover alerts queries and <em>mutations</em> is through the <em>NerdGraph</em> API explorer. <em>NerdGraph</em> API explorer Our <em>NerdGraph</em> API explorer is a GraphiQL editor where you can prototype queries and <em>mutations</em>. Here are some examples showing"
      },
      "id": "6043fe3864441f2dd2378ee8"
    },
    {
      "sections": [
        "Dashboards API migration: from Insights API to Nerdgraph",
        "Why a new dashboards API?",
        "From REST endpoints to GraphQL queries/mutations",
        "List (GET) -> entitySearch query",
        "Show (GET) -> entity query",
        "Create (POST) -> dashboardCreate mutation",
        "Update (PUT) -> dashboardUpdate mutation",
        "Delete (DELETE) -> dashboardDelete mutation",
        "Errors as first class citizens"
      ],
      "title": "Dashboards API migration: from Insights API to Nerdgraph",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "7a1a086f45b7aefccb5d2cd5f42b3a0f0dd526c2",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/dashboards-api-migration-insights-api-nerdgraph/",
      "published_at": "2021-03-18T10:31:30Z",
      "updated_at": "2021-03-11T03:15:51Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In case you havenât heard, NerdGraph is New Relicâs unified API in a GraphQL flavor. The new dashboards API follows this unified approach and is exposed through NerdGraph for user consumption. Why a new dashboards API? Dashboards in New Relic embrace the entity concept and are now an entity in New Relicâs entity ecosystem. Dashboards can now connect with any other type of entity for better observability solutions, which opens the door to endless opportunities we would like you to benefit from. At the same time, we have built new features for dashboards: All New Relic One dashboards are structured in pages, known as Data Apps in Insights Multiple queries from different accounts within the same widget Facet linking Facet linking with support for cases From REST endpoints to GraphQL queries/mutations One of the main benefits from a GraphQL API is that it provides a complete and understandable description of the APIs' data. By using NerdGraph GraphiQL explorer, you can discover GraphQL types and fields, along with a brief explanation. We want to facilitate your migration from the Insights API to the new New Relic One dashboards API. Find below some examples that illustrate how the old REST endpoints map to the new GraphQL queries or mutations. List (GET) -> entitySearch query Dashboards in New Relic One embrace the concept of entity. They are now another entity in New Relicâs entity ecosystem. You can list all the dashboard entities you have access to: { actor { entitySearch(queryBuilder: {type: DASHBOARD}) { results { entities { ... on DashboardEntityOutline { guid name accountId } } } } } } Copy You can list all the dashboards by name: { actor { entitySearch(queryBuilder: {name: \"My dashboard\"}) { results { entities { ... on DashboardEntityOutline { guid name accountId } } } } } } Copy You can list all the dashboards by the creatorâs email: { actor { entitySearch(queryBuilder: {type: DASHBOARD, tags: {key: \"createdBy\", value: \"email@domain.com\"}}) { results { entities { ... on DashboardEntityOutline { guid name accountId } } } } } } Copy You can list all the dashboards by the creatorâs userId: { actor { entitySearch(query: \"type = 'DASHBOARD' and ownerId = \"2357322\") { results { entities { ... on DashboardEntityOutline { guid name accountId } } } } } } Copy Show (GET) -> entity query In order to get information on a dashboard, all you need is to provide its unique entity identifier or entity GUID. Then you can access all the dashboard properties that you are interested in by adding them in the GraphQL query. In the example below we are only interested in the entity GUID and the name of our dashboard. { actor { entity(guid: \"MY_DASHBOARD_GUID\") { ... on DashboardEntity { guid name } } } } Copy Create (POST) -> dashboardCreate mutation Operations that mutate the state of the system are mutations in GraphQL APIs. You can create a dashboard by providing the required input for the dashboardCreate mutation. Although GraphQL APIs aim to be self-explanatory, Nerdgraph docs can help you with some information about the fields, like the doc about how to build dashboard widgets. The example below is not complete but can give you an understanding of how the mutation looks like. Try it out using the NerdGraph GraphiQL explorer. mutation { dashboardCreate( accountId: 1, dashboard: { name: \"My dashboard\", pages: [ { name: \"Errors page\", widgets: {} } { name: \"Logs page\", widgets: {} } ], permissions: PUBLIC_READ_ONLY }) { entityResult { name guid updatedAt createdAt } errors { description type } } } Copy Update (PUT) -> dashboardUpdate mutation The dashboardUpdate mutation allows you to update an existing dashboard by providing the existing dashboard GUID and the new configuration. Similarly to creating a dashboard, the mutation tries to be self-explanatory, but you can look up the doc about how to build dashboard widgets. The example is not complete but it can give you an understanding of how the mutation looks like. Try it out using the NerdGraph GraphiQL explorer. mutation { dashboardUpdate( guid: \"MY_EXISTING_DASHBOARD_GUID\", dashboard: { name: \"My dashboard\", pages: [ { name: \"Errors page\", widgets: {} } { name: \"Logs page\", widgets: {} } ], permissions: PUBLIC_READ_ONLY }) { entityResult { name guid updatedAt createdAt } errors { description type } } } Copy Delete (DELETE) -> dashboardDelete mutation The dashboardDelete mutation allows you to delete an existing dashboard by providing its entity GUID. mutation { dashboardDelete { status errors { type description } } } Copy Errors as first class citizens As you might have noticed, all dashboard mutations offer you a way to ask for errors when being executed. This means that you can perform your dashboard mutations and check the response in order to detect potential issues. Every error has a type and a description to help you identify whatâs the source of the problem. mutation { dashboardMutation(guid: \"MY_EXISTING_DASHBOARD_GUID\") { mutationResult { result } errors { description type } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 232.25247,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Dashboards API migration: from Insights API to <em>Nerdgraph</em>",
        "sections": "From REST endpoints to GraphQL <em>queries</em>&#x2F;<em>mutations</em>",
        "body": " REST endpoints map to the new GraphQL queries or <em>mutations</em>. List (GET) -&gt; entitySearch <em>query</em> Dashboards in New Relic One embrace the concept of entity. They are now another entity in New Relicâs entity ecosystem. You can list all the dashboard entities you have access to: { actor { entitySearch"
      },
      "id": "60441442e7b9d2020b5799b9"
    },
    {
      "sections": [
        "Analyze and monitor data trends with metrics",
        "Why create metrics from other data types?",
        "Available operations",
        "Mutations",
        "Create a rule",
        "Delete a rule",
        "Important",
        "Enable or disable a rule",
        "Queries",
        "List all rules for a New Relic account",
        "List rule by rule ID",
        "Use the NerdGraph GraphiQL API tool"
      ],
      "title": "Analyze and monitor data trends with metrics",
      "type": "docs",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Convert data to metrics"
      ],
      "external_id": "a3b979aee29f067545756256000669f9bc011805",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/ingest-manage-data/convert-data-metrics/analyze-monitor-data-trends-metrics/",
      "published_at": "2021-03-18T19:02:22Z",
      "updated_at": "2021-03-16T18:25:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can generate metric-type data from other types of data in New Relic, including events, logs, and spans. Metrics are aggregates of your data and are optimal for analyzing and monitoring trends over long time periods. This document explains: Reasons to use this feature Available operations How to use our NerdGraph API tool to perform operations Why create metrics from other data types? Using metrics allows for more efficient data storage. This in turn allows you to query your data and build charts more easily. The difference between metrics and other types of data in New Relic is based on time. For more information, see Understand data types. Events, logs, spans: These types of data represent a single record at a specific moment in time. For example, you may have an event for every request to the system. This data is ideal for in-depth troubleshooting and analysis. Metrics: These provide an aggregated view of your events, logs, or spans. Metrics are better for showing trends over longer time ranges. For example, you can aggregate the total number of requests per service to one metric and then examine this information month over month. Why use metrics? Comments Flexibility Metrics are dimensional. You can choose what metadata (like host name or app name) is attached to them. Common metric measurements, like average, sum, minimum, and maximum, are already calculated. Data aggregation and retention The data has already been pre-aggregated into longer-period time buckets. Data retention is 13 months. Query capabilities You can query using the Metric data type. When you create metrics, this does not delete your events or other types of data. However, metrics are better for longer-range querying and charting. To get started converting your data to metrics, create a rule. Available operations To perform operations for events, logs, or spans as metrics, use NerdGraph, our GraphQL-format API. Before performing any operation, we recommend reading Intro to NerdGraph and exploring your data with the GraphiQL API tool. These operations fall under two basic request types: Mutations, which are operations that make changes to existing rules or settings (for example, creating a new metrics rule). Queries, for fetching existing data (for example, fetching existing metrics rules). All operations are role-based in NerdGraph as the currently logged-in New Relic user. Mutations Mutation operations for events to metrics, logs to metrics, or spans to metrics include: Create a rule See Create metrics. Delete a rule Important This operation modifies production settings, so we recommend thoroughly reviewing your changes before you run the operation. To delete a rule, you need the rule ID and the New Relic account ID. Example request: mutation { eventsToMetricsDeleteRule(deletes: {ruleId: \"12\", accountId: 123456}) { successes { id name nrql } failures { errors { description reason } submitted { ruleId accountId } } } } Copy In this request: Element Description mutation One of the basic API operation types. eventsToMetricsDeleteRule The method being called to delete a rule. deletes This takes two parameters: ruleId: The ID of the rule for events to metrics, logs to metrics, or spans to metrics. accountId: The New Relic account ID. successes and submitted blocks Here you define the data returned by a success or failure. Available parameters for these blocks: id (or ruleId for submitted) name description nrql enabled accountId Example response for the request: { \"data\": { \"eventsToMetricsDeleteRule\": { \"failures\": [], \"successes\": [ { \"id\": \"12\", \"name\": \"Test Rule\", \"nrql\": \"select summary(duration) as 'server.responseTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" } ] } } } Copy Enable or disable a rule Important This operation modifies production settings, so we recommend thoroughly reviewing your changes before you run the operation. To enable or disable an existing rule for events to metrics, logs to metrics, or spans to metrics, use the same eventsToMetricsUpdateRule operation. The only difference is whether enabled is set to true or false. Example request to enable an existing metrics rule: mutation { eventsToMetricsUpdateRule(updates: {ruleId: \"12\", accountId: 123456, enabled: true}) { successes { id name nrql } failures { errors { description reason } submitted { ruleId accountId } } } } Copy In this request: Element Description mutation One of the basic API operation types. eventsToMetricsUpdateRule The method being called to update an existing rule and either enable it or disable it. updates This takes three required parameters: ruleId: The ID of the rule for events to metrics, logs to metrics, or spans to metrics. accountId: The New Relic account ID. enabled: To enable a disabled rule, set this to true. To disable a rule, set this to false. successes and submitted blocks Here you define the data returned by a success or failure. Available parameters for these blocks: id (or ruleId for submitted) name description nrql enabled accountId Queries Query operations include: List all rules for a New Relic account You can list all rules in a New Relic account or return a specific rule. Example listing all rules for account 123456: query { actor { account(id:123456) { eventsToMetrics{ allRules{ rules{ id name enabled nrql description } } } } } } Copy In this request: Element Description query One of the basic API operation types. Used to query but not make changes. actor This specifies the current New Relic user. account(id: 123456) Specify the ID for the New Relic account where to retrieve data. eventsToMetrics Scope the data only for events-to-metrics, logs-to-metrics, or spans-to-metrics rules. allRules Returns all rules for that account. rules In the rules block, you can define what data you want returned. Available fields include: id name description nrql accountId enabled Example response: { \"data\": { \"actor\": { \"account\": { \"eventsToMetrics\": { \"allRules\": { \"rules\": [ { \"description\": \"Metric for total time\", \"enabled\": true, \"id\": \"1\", \"name\": \"Total Time Tx\", \"nrql\": \"select summary(totalTime) as 'server.totalTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" }, { \"description\": \"Metric for duration\", \"enabled\": true, \"id\": \"2\", \"name\": \"Duration Rule\", \"nrql\": \"select summary(duration) as 'server.responseTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" } ] } } } } } } Copy List rule by rule ID If you know the exact ID for a rule, then you can query for a specific rule. For example, you may have just created a rule and now you want to list its contents so you can review it. Example listing rule 36 for New Relic account 123456: query { actor { account(id: 123456) { eventsToMetrics { rulesById(ruleIds: \"36\") { rules { id name enabled nrql description accountId } } } } } } Copy For more details about the elements in this query, see List all rules. Example response: { \"data\": { \"actor\": { \"account\": { \"eventsToMetrics\": { \"rulesById\": { \"rules\": [ { \"accountId\": 123456, \"description\": \"Metric for total time\", \"enabled\": true, \"id\": \"36\", \"name\": \"Total Time Tx\", \"nrql\": \"select summary(totalTime) as 'server.totalTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" } ] } } } } } } Copy Use the NerdGraph GraphiQL API tool You can use our GraphiQL tool to explore the data structure. You can also use it to build and run the operations to convert events, logs, and spans to metrics. To use this tool: Create the metrics operation's request with the required parameters. Go to api.newrelic.com/graphiql, and paste your query into the box. To execute the operation, press Play. Or, to get the cURL format, select Copy as cURL.) Validate the response in the response box. Optional: To verify that your rule-creation operation was performed successfully, run a list query for that rule ID.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 229.86623,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Mutations</em>",
        "body": " to use our <em>NerdGraph</em> API tool to perform operations Why create metrics from other data types? Using metrics allows for more efficient data storage. This in turn allows you to <em>query</em> your data and build charts more easily. The difference between metrics and other types of data in New Relic is based"
      },
      "id": "603eb239e7b9d2b99d2a07bb"
    },
    {
      "sections": [
        "NerdGraph cloud integrations API tutorial",
        "Requirements",
        "Access the NerdGraph GraphiQL explorer",
        "Query examples",
        "Available provider accounts",
        "Specific provider account information",
        "Specific integration data from a specific cloud provider",
        "List of enabled cloud accounts",
        "Specific linked account data",
        "Enabled cloud integrations for all linked accounts",
        "Specific cloud integration data for a specific linked account",
        "Mutation examples",
        "Link an account",
        "Link an Amazon AWS account",
        "Link a Microsoft Azure account",
        "Link a Google Cloud Platform (GCP) project",
        "Rename one or more cloud accounts",
        "Enable an integration in a cloud account",
        "Enable an integration in multiple cloud accounts",
        "Enable multiple integrations in multiple cloud accounts",
        "Modify an integration's configuration (regions, polling intervals, etc.)",
        "Disable (remove) an integration",
        "Unlink account",
        "Caution",
        "Enable an Amazon AWS integration",
        "Send query to fetch account data",
        "Link AWS provider account",
        "Enable Amazon AWS SQS integration",
        "Enable integration in multiple provider accounts",
        "Change polling interval for Amazon AWS integration",
        "Update the polling interval",
        "Disable Amazon AWS integration",
        "Disable the SQS integration"
      ],
      "title": "NerdGraph cloud integrations API tutorial",
      "type": "docs",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "9b0b3a78186946732433d21aa149fc36e14bb2d8",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-cloud-integrations-api-tutorial/",
      "published_at": "2021-03-18T07:13:01Z",
      "updated_at": "2021-03-13T02:28:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This document provides examples of how to use New Relic NerdGraph to query and modify your cloud integration configuration data, including Amazon AWS, Microsoft Azure, and Google Cloud Platform (GCP). Using the NerdGraph GraphiQL explorer, you can also query NRQL data. These examples for querying cloud integration configuration data use GraphQL queries and mutations: Queries: requests that are intended to only fetch data Mutations: requests that create or update data on the server Requirements Before querying cloud integration data with NerdGraph, ensure you have: Followed the instructions to connect cloud integrations with New Relic. Created an API key. Access the NerdGraph GraphiQL explorer To access the NerdGraph GraphiQL explorer: Go to https://api.newrelic.com/graphiql. Add any of the following examples. Query examples Queries are requests that are intended to only fetch data (no side effects). Queries in NerdGraph are not static, meaning that you can ask for more or less data depending on your needs. For each query, you can specify exactly what data you want to retrieve, as long as it is supported by the schema. Available provider accounts This query returns a list of all provider accounts available in your infrastructure data. Depending on the provider, additional properties can be requested. For example, for GCP, you can also ask for the serviceAccountId property, which is needed when linking a new GCP project to New Relic. Anonymous: { actor { account(id: <NR_ACCOUNT_ID>) { cloud { providers { id name slug ... on CloudGcpProvider { serviceAccountId } } } } } } Copy Named: query cloudProviders { actor { account(id: <NR_ACCOUNT_ID>) { cloud { providers { id name slug } } } } } Copy Specific provider account information This query returns information about a specific provider account for your Amazon AWS integration. The properties id, name, slug are requested, along with a list of integrations available to be monitored. { actor { account(id: <NR_ACCOUNT_ID>) { cloud { provider(slug: \"aws\") { id slug name services { id slug name } } } } } } Copy Specific integration data from a specific cloud provider This query returns information about a specific cloud service integration of a provider. In this example, the integration is the Amazon AWS ALB monitoring integration and the provider is AWS. The properties id, name, slug, and isAllowed are requested with the available configuration parameters. { actor { account(id: <NR_ACCOUNT_ID>) { cloud { provider(slug: \"aws\") { service(slug: \"alb\") { id name slug isEnabled } } } } } } Copy List of enabled cloud accounts This query returns the list of cloud accounts enabled with your New Relic account. (Your cloud account associates your New Relic account and a specific provider account with your integration.) You can enable multiple cloud provider accounts in the same New Relic account, even with the same cloud provider. { actor { account(id: <NR_ACCOUNT_ID>) { cloud { linkedAccounts { id name createdAt provider { id name } } } } } } Copy Specific linked account data This query returns information about a linked account, including the properties name, providerId, and a list of the cloud integrations enabled for monitoring. { actor { account(id: <NR_ACCOUNT_ID>) { cloud { linkedAccount(id: <LINKED_CLOUD_ACCOUNT_ID>) { name provider { id name } integrations { id name createdAt updatedAt } } } } } } Copy Enabled cloud integrations for all linked accounts This query returns all monitored integrations for all the provider cloud accounts. { actor { account(id: <NR_ACCOUNT_ID>) { cloud { linkedAccounts { name provider { id name } integrations { id name service { id name } createdAt updatedAt } } } } } } Copy Specific cloud integration data for a specific linked account This query returns information about a specific integration from a specific linked account. { actor { account(id: <NR_ACCOUNT_ID>) { cloud { linkedAccount(id: <LINKED_CLOUD_ACCOUNT_ID>) { name provider { id name } integration(id: <INTEGRATION_ID>) { id name service { id name } createdAt updatedAt } } } } } } Copy Mutation examples Mutations are requests that are intended to have side effects, such as creating or updating data on the server. Mutations require the keyword mutation and the name of the mutation. NerdGraph mutations are restricted to a subset of all possible mutations. Link an account This mutation allows linking cloud provider accounts to a New Relic account, creating one or more linked accounts. It can link one specific cloud provider account (for example aws) to the New Relic account or multiple cloud provider accounts to one New Relic account. Required: The parameter <PROVIDER_ACCOUNT_NAME> is required and cannot be empty. It must be unique in your New Relic account. Other parameters are specific to the provider (AWS, GCP, and Azure) and are also required. In the following sections, you can see which parameters are required for each provider account. After linking an account the createdAt and updatedAt values are equal. mutation { cloudLinkAccount( accounts: { accountId: <NR_ACCOUNT_ID>, aws: [{ name: <PROVIDER_ACCOUNT_NAME>, <other_params> }] azure: [{ name: <PROVIDER_ACCOUNT_NAME>, <other_params> }] gcp: [{ name: <PROVIDER_ACCOUNT_NAME>, <other_params> }] } ) { linkedAccounts { id name authLabel createdAt updatedAt } } } } Copy Link an Amazon AWS account This mutation links an Amazon AWS provider account to your New Relic account. mutation { cloudLinkAccount( accountId: <NR_ACCOUNT_ID>, accounts: { aws: [{ name: <PROVIDER_ACCOUNT_NAME>, arn: <AWS_ROLE_ARN> }] } ) { linkedAccounts { id name authLabel createdAt updatedAt } } } } Copy Link a Microsoft Azure account This mutation links a Microsoft Azure cloud subscription to the New Relic account. mutation { cloudLinkAccount( accountId: <NR_ACCOUNT_ID>, accounts: { azure: [{ name: <PROVIDER_ACCOUNT_NAME>, applicationId: <azure_application_id>, clientSecret: <azure_application_key>, tenantId: <azure_tenant_id>, subscriptionId: <azure_subscription_id> }] } ) { linkedAccounts { id name authLabel createdAt updatedAt } } } Copy Link a Google Cloud Platform (GCP) project This mutation links a GCP project to the New Relic account. mutation { cloudLinkAccount( accountId: <NR_ACCOUNT_ID>, accounts: { gcp: [{ name: <PROVIDER_ACCOUNT_NAME>, projectId: <GCP_PROJECT_ID> }] } ) { linkedAccounts { id name authLabel createdAt updatedAt } } } Copy Rename one or more cloud accounts This mutation allows you to rename one or more linked provider accounts. The name parameter is required, cannot be empty, and must be unique within your New Relic account. mutation { cloudRenameAccount( accountId: <NR_ACCOUNT_ID>, accounts: [ { id: <linked_cloud_account_id_1>, name: <new_provider_account_name> }, { id: <linked_cloud_account_id_2>, name: <new_provider_account_name> } ] ) { linkedAccounts { id name } } } Copy Enable an integration in a cloud account This mutation allows you to enable the monitoring of one or more specific cloud integrations in an existing cloud account. With this mutation, New Relic records data for the enabled integration from the provider account. For each provider account you have access to different input parameters, matching each available service. mutation { cloudConfigureIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { <provider_slug> : { <integration_slug>: [{ linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID>, <other_parameters> }] } } ) { integrations { id name integration { id slug } ... on SqsIntegration { awsRegions } } } } Copy Enable an integration in multiple cloud accounts If you have many provider accounts linked, you can enable the same integration in the many cloud accounts at the same time. For the output of the operation, you can use GraphQL fragments for integration specific configuration parameters. mutation { cloudConfigureIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { <provider_slug> : { <integration_slug> : [ { linkedAccountId: <linked_cloud_account_id_1> }, { linkedAccountId: <linked_cloud_account_id_2> } ] } } ) { integrations { id name integration { id name } ... on SqsIntegration { awsRegions } } } } Copy Enable multiple integrations in multiple cloud accounts If you have multiple cloud accounts linked, you can also enable multiple integrations in multiple linked cloud accounts at the same time. For the output of the operation, you can use GraphQL fragments to ask for integration specific configuration parameters. mutation { cloudConfigureIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { <provider_slug_1>: { <integration_slug_1>: [ { linkedAccountId: <linked_cloud_account_id_1> } ] <integration_slug_2>: [ { linkedAccountId: <linked_cloud_account_id_2> } ] }, <provider_slug_2>: { <integration_slug_3>: [ { linkedAccountId: <linked_cloud_account_id_3>}, { linkedAccountId: <linked_cloud_account_id_4>} ] } } ) { integrations { id name service { id name } ... on SqsIntegration { awsRegions } } } } Copy Modify an integration's configuration (regions, polling intervals, etc.) This mutation also allows you to modify one or more cloud integrations and change one or more configuration parameters. Each service will have specific parameters that you can modify. For parameters of a type list (for example, awsRegion) supply the full list. For the output of the operation, you can use GraphQL fragments to ask for integration specific configuration parameters. mutation { cloudConfigureIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { <provider_slug>: { <integration_slug>: [{ linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID>, metricsPollingInterval: <new_polling_interval>, <parameter_1>: <value_1>, <parameter_N>: <value_N>, }] } } ) { integrations { id name service { id slug } ... on SqsIntegration { metricsPollingInterval, <parameter_1>, <parameter_N> } } errors { type message } } } Copy Disable (remove) an integration This mutation allows you to disable an integration and stop data collection for the specific cloud integration. mutation { cloudDisableIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { : { : [ { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID> } ] } } ) { disabledIntegrations { id name authLabel provider { id } } errors { type message } } }</integration_slug></provider_slug> Copy Unlink account This mutation allows you to unlink cloud provider accounts from New Relic account. Caution This action can not be undone. However, you can link the account again, but account history will still be lost. mutation { cloudUnlinkAccount ( accountId: <NR_ACCOUNT_ID>, accounts: { { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID> } } ) { unlinkedAccounts { id name } errors { type message } } }</integration_slug></provider_slug> Copy Enable an Amazon AWS integration This example uses an Amazon AWS SQS integration and assumes you have connected an AWS account to New Relic. To enable an Amazon AWS integration: Send query to fetch account data Send a query to fetch data about the account, specifically available providers and already created provider accounts: { actor { account(id: <NR_ACCOUNT_ID>) { cloud { providers { id name slug } linkedAccounts { name integrations { id name } } } } } } Copy Link AWS provider account Link an AWS provider account, if there is not one already linked or if you want to link another AWS account: Use your New Relic account identifier in the <NR_ACCOUNT_ID> parameter. Provide a name for the provider account in the <PROVIDER_ACCOUNT_NAME>. Include the ARN of the AWS role used to fetch data from your AWS account. mutation { cloudLinkAccount( accountId: <NR_ACCOUNT_ID>, accounts: { aws: [{ name: <PROVIDER_ACCOUNT_NAME>, arn: <AWS_ROLE_ARN> }] } ) { linkedAccounts { id name authLabel createdAt updatedAt } errors { type message } } } Copy Enable Amazon AWS SQS integration Use your New Relic account ID in the <NR_ACCOUNT_ID> parameter and the ID of the provider account in the <LINKED_CLOUD_ACCOUNT_ID> parameter value. mutation { cloudConfigureIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { aws: { sqs: [ { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID> } ] } } ) { integrations { id name service { id name } } errors { type message } } } Copy Enable integration in multiple provider accounts If you have multiple accounts with the same provider account, you can enable the same integration in multiple provider accounts at the same time. Use your New Relic account ID in the <NR_ACCOUNT_ID> parameter and the ID of the provider accounts in the <LINKED_CLOUD_ACCOUNT_ID_n> parameter value. mutation { cloudConfigureIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { aws: { sqs: [ { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID_1> }, { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID_2>, configuration_param_1: value_1, configuration_param_2: value_2 } ] } } }) { integrations { id name service { id name } } errors { type message } } } Copy Change polling interval for Amazon AWS integration This example uses an Amazon AWS SQS integration and assumes you have connected an AWS account to New Relic. To change the polling interval of an AWS integration: Update the polling interval To update the polling interval for an Amazon AWS SQS integration, use your New Relic account ID in the <NR_ACCOUNT_ID> parameter and the id of the linked provider account in the <LINKED_ACCOUNT_ID> parameter value: mutation { cloudConfigureIntegration( accountId: <NR_ACCOUNT_ID>, integrations: { aws : { sqs: [ { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID>, metricsPollingInterval: 300 } ] } } ) { integrations { id name service { id slug } ... on SqsIntegration { metricsPollingInterval } } errors { type message } } } Copy Disable Amazon AWS integration This example uses an Amazon AWS SQS integration and assumes you have connected an AWS account to New Relic. To disable an AWS integration: Disable the SQS integration Use your New Relic account identifier in the <NR_ACCOUNT_ID> parameter and the ID of the linked cloud account the <LINKED_ACCOUNT_ID> parameter value. mutation { cloudDisableIntegration ( accountId: <NR_ACCOUNT_ID>, integrations: { aws: { sqs : [ { linkedAccountId: <LINKED_CLOUD_ACCOUNT_ID> } ] } } ) { disabledIntegrations { id accountId name } errors { type message } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 211.86954,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> cloud integrations API tutorial",
        "sections": "<em>NerdGraph</em> cloud integrations API tutorial",
        "tags": "<em>NerdGraph</em>",
        "body": "This document provides examples of how to use New Relic <em>NerdGraph</em> to <em>query</em> and modify your cloud integration configuration data, including Amazon AWS, Microsoft Azure, and Google Cloud Platform (GCP). Using the <em>NerdGraph</em> GraphiQL explorer, you can also <em>query</em> NRQL data. These examples for querying"
      },
      "id": "6044293864441f1bdc378f05"
    }
  ],
  "/automate-workflows/get-started-kubernetes": [
    {
      "sections": [
        "Recommended ECS alert conditions",
        "Recommended alert conditions"
      ],
      "title": "Recommended ECS alert conditions",
      "type": "docs",
      "tags": [
        "Integrations",
        "Elastic Container Service integration",
        "Understand use data"
      ],
      "external_id": "334d80a75b3ef0a7b6125bf2a15f643ea46d7282",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/elastic-container-service-integration/understand-use-data/ecs-integration-recommended-alert-conditions/",
      "published_at": "2021-03-18T10:07:04Z",
      "updated_at": "2021-03-16T05:41:29Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's ECS integration reports and displays performance data from your Amazon ECS environment. This document provides some recommended alert conditions for monitoring ECS performance. Recommended alert conditions Here are some recommended ECS alert conditions. To add these alerts, go to the Alerts UI and add the following NRQL alert conditions to an existing or new alert policy: High CPU usage NRQL: FROM ContainerSample SELECT cpuUsed / cpuLimitCores Critical: > 90% for 5 minutes High memory usage NRQL: FROM ContainerSample SELECT memoryUsageBytes / memorySizeLimitBytes Critical: > 80% for 5 minutes Restart count NRQL: FROM ContainerSample SELECT max(restartCount) - min(restartCount) Critical: > 5 for 5 minutes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 164.30699,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Recommended ECS <em>alert</em> <em>conditions</em>",
        "sections": "Recommended ECS <em>alert</em> <em>conditions</em>",
        "body": " to the Alerts UI and add the following <em>NRQL</em> <em>alert</em> <em>conditions</em> to an existing or new <em>alert</em> policy: High CPU usage <em>NRQL</em>: FROM ContainerSample SELECT cpuUsed &#x2F; cpuLimitCores Critical: &gt; 90% for 5 minutes High memory usage <em>NRQL</em>: FROM ContainerSample SELECT memoryUsageBytes &#x2F; memorySizeLimitBytes Critical: &gt; 80% for 5 minutes Restart count <em>NRQL</em>: FROM ContainerSample SELECT max(restartCount) - min(restartCount) Critical: &gt; 5 for 5 minutes"
      },
      "id": "603e7eee64441f0f674e889f"
    },
    {
      "sections": [
        "Introduction to the Metric API",
        "ãã³ã",
        "What is the Metric API?",
        "Get started",
        "Access and requirements",
        "Find and use your data",
        "Alert on metric data",
        "Data retention",
        "Troubleshooting"
      ],
      "title": "Introduction to the Metric API",
      "type": "docs-jp",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Ingest APIs"
      ],
      "external_id": "4d6a12c247aa2bf57ac387aa6f27664fa1795eab",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/telemetry-data-platform/ingest-manage-data/ingest-apis/introduction-metric-api/",
      "published_at": "2021-03-18T19:30:46Z",
      "updated_at": "2021-03-18T19:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Metric API can be used to send metric data to New Relic from a variety of sources. This API is how metrics from some of our integrations and exporters get into New Relic. ãã³ã To use APIs and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. What is the Metric API? The Metric API is a way to get metric data into New Relic. The API works by sending a POST request to our HTTP endpoint with a JSON payload containing the metric data. The Metric API is how metrics are ingested from some of our integrations, including our open source exporters (like DropWizard, OpenCensus, and Prometheus). The Metric API is also used by our Telemetry SDKs, which are language-specific tools that make it easier to use our data-ingest APIs. The Metric API can be used to: Report metric data to New Relic without a New Relic agent. Integrate metric data from an open source or in-house developed tool, library, or framework. Fully control the metric data you're sending, including the resolution and associated dimensions. Leverage the power of NRQL, New Relic's query language, for querying your metric data. Set up alerts for your metric data. Get started If we don't have an existing integration that meets your metric-reporting needs, you have two options: Use our Telemetry SDKs, which are language-specific tools that help you send us metrics and other data. Use the Metric API directly. Access and requirements You'll need a New Relic Insert API key. For information on limits and restricted attributes, see Metric API requirements and limits. Find and use your data You can find data sent via the Metric API (including from integrations that use this API) in these locations: From one.newrelic.com, select Entity explorer and look for your service. By querying the Metric data type. For example, you can use NRQL to run: SELECT * FROM Metric ã³ãã¼ For more on querying, see Metric query examples. For information on querying in general, see Query data. Alert on metric data To alert on metrics created with the Metric API, use NRQL alert conditions: Select the NRQL category when defining your condition, then use the FROM Metric ... NRQL query syntax to express it. When you create these alert conditions, Alerts automatically uses the finest granularity data available (the raw metric data points) to evaluate alerts. Data retention All raw metric data points will be retained for 30 days. All additional aggregated data derived from the raw metric data points (for example, one-minute rollups) will be retained for 13 months. Any change to the retention period beyond such periods may result in a charge to you. Troubleshooting If you receive an NrIntegrationError, see Troubleshoot a NrIntegrationError event. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 139.23607,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Alert</em> on metric data",
        "body": " on metric data To <em>alert</em> on metrics created with the Metric API, use <em>NRQL</em> <em>alert</em> <em>conditions</em>: Select the <em>NRQL</em> category when defining your condition, then use the FROM Metric ... <em>NRQL</em> query syntax to express it. When you create these <em>alert</em> <em>conditions</em>, Alerts automatically uses the finest granularity data"
      },
      "id": "6053aa6664441f8b685321d2"
    },
    {
      "sections": [
        "Create NRQL alert conditions",
        "Tip",
        "Create a NRQL alert condition",
        "NRQL alert syntax",
        "Important",
        "Reformatting incompatible NRQL",
        "NRQL alert threshold examples",
        "Alert on specific segments of your data",
        "Alert on Nth percentile of your data",
        "Alert on max, min, avg of your data",
        "Alert on a percentage of your data",
        "Alert on Apdex with any T-value",
        "Nested aggregation NRQL alerts",
        "Nested queries with a non-faceted innermost query are not currently supported",
        "Queries at all levels must have the same aggregation window size",
        "Signal loss is not yet supported for nested queries",
        "NRQL condition creation tips",
        "Alert threshold types",
        "Sum of query results (limited or intermittent data)",
        "Set the loss of signal threshold",
        "Advanced signal settings",
        "Aggregation window",
        "Evaluation offset",
        "Fill data gaps"
      ],
      "title": "Create NRQL alert conditions",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert conditions"
      ],
      "external_id": "2872f770a5fc8a802f99b9f848906f7e351ad761",
      "image": "https://docs.newrelic.com/static/eb8e1b2d826f9fd9cf46fe3dd5455217/c1b63/nr1_nrql_alert_conditions.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/create-nrql-alert-conditions/",
      "published_at": "2021-03-17T20:52:52Z",
      "updated_at": "2021-03-17T20:52:52Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use NRQL queries to create alert conditions. Once you've defined your signal, you can further define your warning and critical threshold levels. This determines when an alerts violation is created. Read on to learn more about how to do this. Go to one.newrelic.com, click Alerts & AI, in the left sidebar click Policies, select a policy, then Add a condition. Click NRQL, and then Next, define thresholds. Tip For more information on key concepts relating to NRQL alert conditions and streaming alerts, see Streaming alerts: key terms and concepts. Create a NRQL alert condition To create a NRQL alert condition for a policy: On one.newrelic.com, in the header click Alerts & AI, then in the left sidebar click Policies. Select an existing policy or click New alert policy to create a new policy. Click Add a condition. Under Select a product click NRQL, and then click Next, define thresholds. NRQL alert syntax Here's the basic syntax for creating all NRQL alert conditions. The FACET clause is required for Outlier threshold types, optional for Static, and not allowed for Baseline. SELECT function(attribute) FROM Event WHERE attribute [comparison] [AND|OR ...] Copy Clause Notes SELECT function(attribute) Required Supported functions that return numbers include: apdex average count latest max min percentage percentile sum uniqueCount Tip If you use the percentile aggregator in a faceted alert condition with many facets, this may cause the following error to appear: An error occurred while fetching chart data. If you see this error, use average instead. FROM data type Required Only one data type can be targeted. Supported data types: Event Metric (RAW data points will be returned) WHERE attribute [comparison] [AND|OR ...] Use the WHERE clause to specify a series of one or more conditions. All the operators are supported. FACET attribute Required for outlier conditions, but not baseline or static Include an optional FACET clause in your NRQL syntax depending on the threshold type: static, baseline, or outlier. Use the FACET clause to separate your results by attribute and alert on each attribute independently. No LIMIT clause is allowed, but all queries will receive the maximum number of facets possible. Faceted queries can return a maximum of 5000 values for static conditions and a maximum of 500 values for outlier conditions. Important If the query returns more than the maximum number of values, the alert condition can't be created. If you create the condition and the query returns more than this number later, the alert will fail. Modify your query so that it returns a fewer number of values. Reformatting incompatible NRQL Some elements of NRQL used in charts donât make sense in the streaming context of alerts. Hereâs a list of the most common incompatible elements and suggestions for reformatting a NRQL alert query to achieve the same effect. Clause Notes SINCE and UNTIL Example: SELECT percentile(largestContentfulPaint, 75) FROM PageViewTiming WHERE (appId = 837807) SINCE yesterday Copy NRQL Alerting produces a never-ending stream of windowed query results, so the SINCE and UNTIL keywords to scope the query to a point in time are not compatible. As a convenience, we automatically strip SINCE and UNTIL from a query when creating a NRQL Alert Condition from the context of a chart. TIMESERIES In NRQL queries, the TIMESERIES clause is used to return data as a time series broken out by a specified period of time. For NRQL alerts, the equivalent property of a signal is the aggregation window. Multiple Aggregation Functions Each alert condition can only target a single aggregated stream of data. To alert on multiple streams simultaneously, youâll need to decompose them into individual conditions within the same policy. Original Query: SELECT count(foo), average(bar), max(baz) from Transaction Copy Decomposed: SELECT count(foo) from Transaction SELECT average(bar) from Transaction SELECT max(baz) from Transaction Copy COMPARE WITH The COMPARE WITH clause is used to compare the values for two different time ranges. This type of query is incompatible with NRQL alerting. We recommend using a Baseline Alert Condition to dynamically detect deviations for a particular signal. SLIDE BY The SLIDE BY clause supports a feature known as sliding windows. With sliding windows, SLIDE BY data is gathered into \"windows\" of time that overlap with each other. These windows can help to smooth out line graphs with a lot of variation in cases where the rolling aggregate (such as a rolling mean) is more important than aggregates from narrow windows of time. Sliding windows are not currently supported in NRQL alerts. LIMIT In NRQL queries, the LIMIT clause is used to control the amount of data a query returns, either the maximum number of facet values returned by FACET queries or the maximum number of items returned by SELECT * queries. LIMIT is not compatible with NRQL alerting: evaluation is always performed on the full result set. NRQL alert threshold examples Here are some common use cases for NRQL alert conditions. These queries will work for static and baseline threshold types. The outlier threshold type will require additional FACET clauses. Alert on specific segments of your data Create constrained alerts that target a specific segment of your data, such as a few key customers or a range of data. Use the WHERE clause to define those conditions. SELECT average(duration) FROM Transaction WHERE account_id in (91290, 102021, 20230) Copy SELECT percentile(duration, 95) FROM Transaction WHERE name LIKE 'Controller/checkout/%' Copy Alert on Nth percentile of your data Create alerts when an Nth percentile of your data hits a specified threshold; for example, maintaining SLA service levels. Since we evaluate the NRQL query in one-minute time windows, percentiles will be calculated for each minute separately. SELECT percentile(duration, 95) FROM Transaction Copy SELECT percentile(databaseDuration, 75) FROM Transaction Copy Alert on max, min, avg of your data Create alerts when your data hits a certain maximum, minimum, or average; for example, ensuring that a duration or response time does not pass a certain threshold. SELECT max(duration) FROM Transaction Copy SELECT average(duration) FROM Transaction Copy Alert on a percentage of your data Create alerts when a proportion of your data goes above or below a certain threshold. SELECT percentage(count(*), WHERE duration > 2) FROM Transaction Copy SELECT percentage(count(*), WHERE httpResponseCode = '500') FROM Transaction Copy Alert on Apdex with any T-value Create alerts on Apdex, applying your own T-value for certain transactions. For example, get an alert notification when your Apdex for a T-value of 500ms on transactions for production apps goes below 0.8. SELECT apdex(duration, t:0.5) FROM Transaction WHERE appName like '%prod%' Copy Nested aggregation NRQL alerts Nested aggregation queries are a powerful way to query your data. However, they have a few restrictions that are important to note. Nested queries with a non-faceted innermost query are not currently supported Without a FACET, the inner query produces a single result, giving the outer query nothing to aggregate. If you're using a nested query, make sure your inner query is faceted. SELECT max(cpu) FROM (FROM Event SELECT min(cpuTime) as cpu) âââââ Copy Queries at all levels must have the same aggregation window size With an alert aggregation window of 1 minute, the inner query would produce two smaller windows of 30 seconds. In theory, these two windows could be aggregated by the outer query. However, this is not currently supported. SELECT max(cpu) FROM (FROM Event SELECT min(cpuTime) as cpu TIMESERIES 30 seconds)ââ Copy Signal loss is not yet supported for nested queries For more information on signal loss, see NerdGraph API: Loss of signal and gap filling. NRQL condition creation tips Here are some tips for creating and using a NRQL condition: Topic Tips Condition threshold types NRQL condition threshold types include static, baseline, and outlier. Create a description For NRQL conditions, you can create a custom description to add to each violation. Descriptions can be enhanced with variable substitution based on metadata in the specific violation. For details, see Description Query results Queries must return a number. The condition evaluates the returned number against the thresholds you've set. Time period As with all alert conditions, NRQL conditions evaluate one single minute at a time. The implicit SINCE ... UNTIL clause specifying which minute to evaluate is controlled by your Evaluation offset setting. Since very recent data may be incomplete, you may want to query data from 3 minutes ago or longer, especially for: Applications that run on multiple hosts. SyntheticCheck data: Timeouts can take 3 minutes, so 5 minutes or more is recommended. Also, if a query will generate intermittent data, consider using the sum of query results option. Lost signal threshold (loss of signal detection) You can use loss of signal detection to alert on when your data (a telemetry signal) should be considered lost. A signal loss can indicate that a service or entity is no longer online or that a periodic job failed to run. You can also use this to make sure that violations for sporadic data, such as error counts, are closed when no signal is coming in. Tip To learn more about signal loss and how to request access to it, see this announcement. Advanced signal settings These settings give you options for better handling continuous, streaming data signals that may sometimes be missing. These settings include the aggregation window, the evaluation offset, and an option for filling data gaps. For more on using these, see Advanced signal settings. Condition settings Use the Condition settings to: Create a concise, descriptive condition name. Provide a custom violation description for the condition that will be included in violations and notifications. Add the runbook URL to include your organization's procedures for handling incidents. You may also add this information to the custom violation description. Limits on conditions See the maximum values. Health status NRQL alert conditions don't affect an entity's health status display. Examples For more information, see: Expected NRQL syntax Examples of NRQL condition queries Alert threshold types When you create a NRQL alert, you can choose from different types of thresholds: NRQL alert threshold types Description Static This is the simplest type of NRQL threshold. It allows you to create a condition based on a NRQL query that returns a numeric value. Optional: Include a FACET clause. Baseline (Dynamic) Uses a self-adjusting condition based on the past behavior of the monitored values. Uses the same NRQL query form as the static type, except you can't use a FACET clause. Outlier Looks for group behavior and values that are outliers from those groups. Uses the same NRQL query form as the static type, but requires a FACET clause. Sum of query results (limited or intermittent data) Important Available only for static (basic) threshold types. If a query returns intermittent or limited data, it may be difficult to set a meaningful threshold. Missing or limited data will sometimes generate false positives or false negatives. You can use loss of signal, aggregation duration, and gap filling settings to minimize these false notifications. To avoid this problem when using the static threshold type, you can set the selector to sum of query results. This lets you set the alert on an aggregated sum instead of a value from a single harvest cycle. Up to two hours of one-minute data checks can be aggregated. The duration you select determines the width of the rolling sum and the preview chart will update accordingly. Set the loss of signal threshold Loss of signal occurs when no data matches the NRQL condition over a specific period of time. You can set your loss of signal threshold duration and and also what happens when the threshold is crossed. Go to one.newrelic.com, click Alerts & AI, in the left sidebar click Policies, select a policy, then Add a condition. Loss of signal is only available for NRQL conditions. You may also manage these settings using the GraphQL API (recommended), or the REST API. Go here for specific GraphQL API examples. Loss of signal settings: Loss of signal settings include a time duration and two possible actions. Signal loss expiration time UI label: Signal is lost after: GraphQL Node: expiration.expirationDuration Expiration duration is a timer that starts and resets when we receive a data point in the streaming alerts pipeline. If we don't receive another data point before your 'expiration time' expires, we consider that signal to be lost. This can be because no data is being sent to New Relic or the WHERE clause of your NRQL query is filtering that data out before it is streamed to the alerts pipeline. The loss of signal expiration time is independent of the threshold duration and triggers as soon as the timer expires. The maximum expiration duration is 48 hours. This is helpful when monitoring for the execution of infrequent jobs. The minimum is 30 seconds, but we recommend using at least 3-5 minutes. Loss of signal actions Once a signal is considered lost, you can close open violations, open new violations, or both. Close all current open violations: This closes all open violations that are related to a specific signal. It won't necessarily close all violations for a condition. If you're alerting on an ephemeral service, or on a sporadic signal, you'll want to choose this action to ensure that violations are closed properly. The GraphQL node name for this is \"closeViolationsOnExpiration\" Open new violations: This will open a new violation when the signal is considered lost. These violations will indicate that they are due to a loss of signal. Based on your incident preferences, this should trigger a notification. The graphQL node name for this is \"openViolationOnExpiration\" When you enable both actions, we'll close all open violations first, and then open a new violation for loss of signal. To create a NRQL alert configured with loss of signal detection in the UI: For a policy, when you create a condition, under Select a product, click NRQL, then click Next, define thresholds. Write a NRQL query that returns the values you want to alert on. For Threshold type, select Static or Baseline. Click + Add lost signal threshold, then set the signal expiration duration time in minutes or seconds in the Signal is lost after field. Choose what you want to happen when the signal is lost. You can check one or both of Close all current open violations and Open new \"lost signal\" violation . These control how loss of signal violations will be handled for the condition. Make sure you name your condition before you save it. Tip Loss of signal detection doesn't work on NRQL queries that use nested aggregation or sub-queries. Advanced signal settings When creating a NRQL alert condition, the advanced signal settings gives you better control over streaming alert data and helps you avoid false alarms. When creating a NRQL condition, there are several advanced signal settings: Aggregation window Evaluation offset Fill data gaps To read an explanation of what these settings are and how they relate to each other, see Streaming alerts concepts. Below are instructions and tips on how to configure them. Aggregation window You can set the aggregation window duration to choose how long data is accumulated in a streaming time window before it's aggregated. You can set it to anything between one second and 15 minutes. The default is one minute. Tip Baseline alert condition thresholds don't support editing the aggregation window. They use the 1 minute default. Evaluation offset You can adjust the evaluation offset to coordinate our streaming alerting algorithm with your data's latency. If it takes a while for your data to arrive, then you may need to increase the evaluation offset. The total supported latency is the product of the aggregation window duration multiplied by the evaluation offset. In the example screenshot above, the supported latency is 3 minutes (a 1-minute aggregation window multiplied by three windows). If the data type comes from an APM language agent and is aggregated from many app instances (for example, Transactions, TransactionErrors, etc.), we recommend using an evaluation offset of 3 with 1 minute aggregation windows. Important When creating NRQL conditions for data collected from Infrastructure Cloud Integrations such as AWS Cloudwatch or Azure, we recommend that you start with an evaluation offset of 15 minutes, then adjust up or down depending on how long it takes to collect your data. Fill data gaps Gap filling lets you customize the values to use when your signals don't have any data. You can fill gaps in your data streams with one of these settings: None: (Default) Choose this if you don't want to take any action on empty aggregation windows. On evaluation, an empty aggregation window will reset the threshold duration timer. For example, if a condition says that all aggregation windows must have data points above the threshold for 5 minutes, and 1 of the 5 aggregation windows is empty, then the condition won't be in violation. Custom static value: Choose this if you'd like to insert a custom static value into the empty aggregation windows before they're evaluated. This option has an additional, required parameter of fillValue (as named in the API) that specifies what static value should be used. This defaults to 0. Last known value: This option inserts the last seen value before evaluation occurs. We maintain the state of the last seen value for 2 hours. Options for editing data gap settings: In the NRQL conditions UI, go to Condition settings > Advanced signal settings > fill data gaps with and choose an option. If using our Nerdgraph API (preferred), this node is located at: actor : account : alerts : nrqlCondition : signal : fillOption | fillValue NerdGraph is the preferred API but if you are using our REST API, you can find this setting in the REST API explorer under the \"signal\" section of the Alert NRQL conditions API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 125.446724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create <em>NRQL</em> <em>alert</em> <em>conditions</em>",
        "sections": "Create <em>NRQL</em> <em>alert</em> <em>conditions</em>",
        "tags": "<em>Alert</em> <em>conditions</em>",
        "body": "You can use <em>NRQL</em> queries to create <em>alert</em> <em>conditions</em>. Once you&#x27;ve defined your signal, you can further define your warning and critical threshold levels. This determines when an alerts violation is created. Read on to learn more about how to do this. Go to one.newrelic.com, click Alerts &amp; AI"
      },
      "id": "603ef04864441fbc114e8883"
    },
    {
      "sections": [
        "Create baseline alert conditions",
        "How it works",
        "Set baseline thresholds",
        "Baseline rules and settings",
        "Rules governing creation of baseline",
        "Baseline direction: select upper or lower ranges",
        "Preview chart: select 2 or 7 days"
      ],
      "title": "Create baseline alert conditions",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert conditions"
      ],
      "external_id": "a144b0cc3c5eed1c31dbfcd079959bbd5496346a",
      "image": "https://docs.newrelic.com/static/7ca56bff2292c37f14a7b98e3e919e36/c1b63/new-relic-alerts-baseline-thresholds.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/create-baseline-alert-conditions/",
      "published_at": "2021-03-17T20:52:51Z",
      "updated_at": "2021-03-13T05:42:18Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use baseline conditions to define violation thresholds that adjust to the behavior of your data. Baseline alerting is useful for creating conditions that: Only notify you when data is behaving abnormally. Dynamically adjust to changing data and trend s, including daily or weekly trends. In addition, baseline alerting works well with new applications when you do not yet have known behaviors. How it works When you choose a data source (for example, an APM metric) for a baseline condition, we'll use the past values of that data to dynamically predict the data's near-future behavior. The line of that predicted future behavior for that value is called a baseline. It appears as a dotted black line on the preview chart in the baseline condition UI. You'll use the baseline alert condition UI to: Adjust how sensitive the condition is to fluctuations in the data source. Set the behavior that will trigger a violation (for example: \"deviating for more than five minutes\"). Set whether you want the condition to check for upper violations, lower violations, or both. When your data escapes the predicted \"normal\" behavior and meets the criteria you've chosen, you'll receive a notification. Set baseline thresholds one.newrelic.com > AI & Alerts > Policies > (create or select policy) > Create alert condition: Baseline alert conditions give you the ability to set intelligent, self-adjusting thresholds that only generate violations when abnormal behavior is detected. To create a baseline condition: When you start to create a condition, choose one of the following data sources: APM: Application metric baseline Browser: Metric baseline NRQL (and then choose a baseline type threshold) Here are some tips for setting baseline thresholds: Set the baseline direction to monitor violations that happen either above or below the baseline. Set the preview chart to either 2 days or 7 days of displayed data. (Not applicable for NRQL alert conditions.) Use the slider bar to adjust the Critical threshold sensitivity, represented in the preview chart by the light gray area around the baseline. The tighter the band around the baseline, the more sensitive it is and the more violations it will generate. Optional: You can create a Warning threshold (the darker gray area around the baseline). For NRQL alerts, see the allowed types of NRQL queries. If the alert condition applies to multiple apps, you can select a choice from the dropdown above the chart to use different metrics. (Not applicable for NRQL alert conditions.) Baseline rules and settings Here are some details about how the UI works: Rules governing creation of baseline The algorithm for baseline conditions is mathematically complex. Here are some of the major rules governing its predictive abilities: Data trait Baseline rules Age of data On initial creation, the baseline is calculated using between 1 to 4 weeks of data, depending on data availability and baseline type. After its creation, the algorithm will take into account ongoing data fluctuations over a long time period, although greater weight is given to more recent data. For data that has only existed for a short time, the baseline will likely fluctuate a good deal and not be very accurate. This is because there is not yet enough data to determine its usual values and behavior. The more history the data has, the more accurate the baseline and thresholds will become. Consistency of data For metric values that remain in a consistent range or that trend slowly and steadily, their more predictable behavior means that their thresholds will become tighter around the baseline. Data that is more varied and unpredictable will have looser (wider) thresholds. Regular fluctuations For shorter-than-one-week cyclical fluctuations (such as weekly Wednesday 1pm deployments or nightly reports), the baseline algorithm looks for these cyclical fluctuations and attempts to adjust to them. Baseline direction: select upper or lower ranges You can choose whether you want the condition to violate for behavior that goes above the baseline (\"upper\") or that goes below the baseline (\"lower\"), or that goes either above or below. You choose these with the Baseline direction selector. Example use cases for this: You might use the Upper setting for a data source like error rate, because you generally are only concerned if it goes up, and aren't concerned if it goes down. You might use the Lower setting for a data source like throughput, because sudden upward fluctuations are quite common, but a large sudden downswing would be a sign of a problem. Here are examples of how large fluctuations in your data would be treated under the different baseline direction settings. The red areas represent violations. Preview chart: select 2 or 7 days When setting thresholds, the preview chart has an option for displaying Since 2 days ago or Since 7 days ago. These selections are not the time period used to compute the baseline; they are only the time range used for a preview display. For more about the time range used to calculate the baseline, see the algorithm rules.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 120.54137,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create baseline <em>alert</em> <em>conditions</em>",
        "sections": "Create baseline <em>alert</em> <em>conditions</em>",
        "tags": "<em>Alert</em> <em>conditions</em>",
        "body": " that happen either above or below the baseline. Set the preview chart to either 2 days or 7 days of displayed data. (Not applicable for <em>NRQL</em> <em>alert</em> <em>conditions</em>.) Use the slider bar to adjust the Critical threshold sensitivity, represented in the preview chart by the light gray area around the baseline"
      },
      "id": "6044095ee7b9d214955799e9"
    },
    {
      "sections": [
        "Streaming alerts: key terms and concepts",
        "Tip",
        "Why it matters",
        "Streaming alerts tools",
        "Loss of signal detection",
        "Gap filling",
        "Aggregation window",
        "Offset evaluation"
      ],
      "title": "Streaming alerts: key terms and concepts",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Get started"
      ],
      "external_id": "1e971c3a992c0fed2c73d582fa78ee61dd369cbb",
      "image": "https://docs.newrelic.com/static/ee6e2e7f5d1fd4e68688994872aa6330/59000/streaming_alerts.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/get-started/streaming-alerts-key-terms-concepts/",
      "published_at": "2021-03-17T18:31:31Z",
      "updated_at": "2021-03-13T05:40:26Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The streaming alerts platform checks for violations based on data thatâs present or missing in the stream of data coming into New Relic. The stream of data that comes into New Relic is called a signal. You can control what part of the signal is alerted on through NRQL conditions. These NRQL condition alerts are processed by the streaming algorithm. The NRQL query provides the signal filter for all of your incoming data. Tip You can read more about the streaming alerts platform in this Explorers Hub post. Why it matters Alerts violations are easy when they're caused by a specific event happening, but trickier when looking for events not happening. Only data that matches the conditions of the NRQL WHERE clause is alerted on. As data streams into New Relic, it's filtered by the NRQL condition. Before data is evaluated, it must meet the criteria defined by the NRQL query's WHERE clause. Instead of evaluating that data immediately for violations, the NRQL alert conditions collect the data over a period of time known as the aggregation window. An additional offset delay allows for slower data to come through before it's processed. Once the aggregation window plus the offset time have elapsed, New Relic groups the aggregated data into a single data point. Alerts then evaluates the data point using the NRQL condition in order to determine whether it meets the violation threshold criteria. Even if a data point meets the criteria for a violation, a violation isn't triggered. A violation is only triggered when data points consistently meet the threshold criteria over a period of time. This is the threshold duration. If the data points are in violation for an entire threshold duration, we'll send you a notification based on your policy settings. All of these configurable delays give you more control over how you're alerted on sporadic and missing data. Streaming alerts tools Streaming alerts provide a set of tools you can use to more effectively alert on your streaming data, giving you greater control and reducing the number of false alerts notifications. They are: Loss of signal detection Gap filling Aggregation window duration customization Offset evaluation Tip This article covers these tools at a conceptual level. You'll find direct instructions on how to use these tools in Create NRQL alert conditions. Loss of signal detection Loss of signal occurs when no data matches the NRQL condition over a specific period of time. A loss of signal is caused by different things. The WHERE clause in your NRQL query can filter out data before it's evaluated for violations. It could also mean a service or entity is offline or a periodic job has failed to run and no data is being sent to New Relic. In order to avoid unnecessary notifications, you can choose how long to wait before you're notified by a loss of signal violation. You can use loss of signal detection to open violations and be notified when a signal is lost. Alternately, you can use a loss of signal to close violations for ephemeral services or sporadic data, such as error counts. Gap filling Gap filling lets you customize the values to use when your signals don't have any data. You can fill gaps in your data streams with None, the last value received, or a static value. The default is None. Gaps in streaming data can be caused by network or host issues, a signal may be sparse, or some signals, such as error counts, may only have data when something is wrong. By filling the gaps with known values, the alert evaluation process can process those gaps and determine how they should affect the loss of signal evaluation. Aggregation window In order to make loss of signal detection more effective and to reduce unnecessary notifications, you can customize aggregation windows to the duration that you need. An aggregation window is a specific block of time. We gather data points together in an aggregation window, before using the aggregation function to evaluate the data. A longer aggregation window gives straggling data points more time to arrive before evaluating that data. When a data point arrives, its timestamp is used to put it in the proper aggregation window. You can set your aggregation window to anything between 1 second and 15 minutes. The default is 1 minute. Offset evaluation For data that consistently takes longer to arrive, you can use offset evaluation to consistently delay the NRQL condition evaluation. Waiting longer increases accuracy, but also increases latency. The offset time value is the number of aggregation windows you want to use. The duration for each window is set in the Aggregation window field. For example, if your aggregation window is 1 minute and your Offset evaluation is 3, then a straggling data point will have about 3 minutes to arrive before it might be dropped. In other words, streaming alerts will always keep 3 aggregation windows in the queue, waiting 1 minute before evaluating each window and adding a new one. The current default is 3.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 120.534744,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Streaming <em>alerts</em>: key terms and concepts",
        "sections": "Streaming <em>alerts</em>: key terms and concepts",
        "tags": "<em>Alerts</em> and Applied Intelligence",
        "body": ". Instead of evaluating that data immediately for violations, the <em>NRQL</em> <em>alert</em> <em>conditions</em> collect the data over a period of time known as the aggregation window. An additional offset delay allows for slower data to come through before it&#x27;s processed. Once the aggregation window plus the offset time have"
      },
      "id": "604427ca28ccbc87142c60a5"
    }
  ],
  "/automate-workflows/diagnose-problems": [
    {
      "sections": [
        "Diagnose error alerts in Telco Lite",
        "Prerequisites",
        "Tip",
        "Extra Credit",
        "Conclusion"
      ],
      "title": "Diagnose error alerts in Telco Lite",
      "type": "developer",
      "tags": [
        "demo",
        "explore"
      ],
      "external_id": "2857da924e8d8a8e78dca86040692d061bf14753",
      "image": "https://developer.newrelic.com/static/a03659a8d751f40e75f74a23b135c921/0086b/error-alerts.png",
      "url": "https://developer.newrelic.com/automate-workflows/diagnose-problems/error-alerts/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2021-01-16T01:47:39Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to use New Relic to diagnose error alerts in your services.",
      "body": "Use New Relic to understand why some services are raising alerts. Prerequisites Before you begin: Learn about the infrastructure of Telco Lite Set up your local environment Deploy and instrument the Telco Lite services When you're ready, start your journey by observing the error alerts in your services. Step 1 of 8 Log in to New Relic One and select APM from the top navigation menu. Here, you see an overview of all eight Telco Lite services, including the service names, response times, and throughputs. Notice that Telco-Login Service and Telco-Web Portal have opened critical violations for high error percentages: Tip If you don't see all the same alerts, don't worry. The simulated issues happen at regular intervals, so you should start seeing these problems in New Relic within 30 minutes to an hour. The deployment has created an alert condition for cases where a service's error percentage rises above 10% for 5 minutes or longer. A critical violation means that the service's conditions violate that threshold. Begin your investigation by selecting the Telco-Web Portal service name. Step 2 of 8 You're now on the web portal's APM summary page. The top graph, Web transactions time, shows you the service's response times. By default, it also displays periods of critical violation. On the right-hand side of the view, Application activity shows when violations opened and closed: From the left-hand navigation, select Events > Errors to learn more about the errors: At the bottom of the view, the Errors table shows you what errors occurred in the service along with number of times each error occurred. In this scenario, the only error in the service has the following message: bash Copy An error occurred during a downstream request to http://35.182.223.70:7001/api/inventory detail:response code 500 This is a helpful message that explains that the web portal made a request to another service, raised an error, and responded with a response code of 500, indicating an Internal server error. Since this message tells you that the error occurred while the web portal was making an outbound request, use distributed tracing to better understand the issue. Select Monitor > Distributed tracing from the left-hand navigation. Step 3 of 8 Distributed tracing provides end-to-end information about a request. In this case, you're looking for a request to the web portal that raised an error, so that you can better understand what happened during that request. Filter the table, by selecting the Errors column header twice, to order by descending counts: Select the first row in the table: This trace gives a lot of information about what happened with the request once the web portal received it. One of the things that the trace reveals is that the web portal made a GET request to Telco-Login Service and received an error. The trace indicates an error by coloring the text red. Select the row (called a span) to see more information about the request to the login service: Expand Error details to see the error message: bash Copy java.lang.Exception: The application is not yet ready to accept traffic Interesting! This message says that, at the time that the web portal made the GET request to the login service, the login service was not ready to accept traffic. Inspect the login service to dive further into the root cause of these cascading errors. Return to the APM page, and select Telco-Login Service. Step 4 of 8 Notice that the APM summary for Telco-Login Service has similar red flags to the ones in the web portal: Web transactions time has a red error indicator, and Application activity shows critical violations. More than that, the times that the errors occurred in both services match up (around 10:53 AM, in this example). Step 5 of 8 Web transactions time, in APM, shows that requests to the login service spend all their time in Java code. So, in the left-hand navigation, open Monitor > JVMs: Java Virtual Machines, or JVMs, run Java processes, such as those used by the login service. This view shows resource graphs for each JVM your service uses. Change the timeslice to look at data for the last 3 hours, so you can get a better idea of how the service has been behaving: Notice, in Heap memory usage, that the line for Used Heap rises consistently over 30 minute intervals. About two-thirds of the way through each interval, the line for Committed Heap (the amount of JVM heap memory dedicated for use by Java processes) quickly rises to accommodate the increasing memory demands. This graph indicates that the Java process is leaking memory. Step 6 of 8 Your Java process is leaking memory, but you need to understand the extent of the leak's impact. Navigate to the login service's host infrastructure view to dive a little deeper. First, go to the Telco-Login Service summary page and turn off Show new view: Then, scroll to the bottom of the page, and select the host's name: Right now, you can only select the host's name from the old version of the UI (we're working on it). So, make sure you toggle off Show new view. In this infrastructure view, Memory Used % for Telco-Authentication-host consistently climbs from around 60% to around 90% over 30-minute intervals, matching the intervals in the JVM's heap memory usage graph: Therefore, the memory leak effects the login service's entire host. Click and drag on Memory Used % to narrow the timeslice to one of the peaks: Now, compare this graph with the login service's Errors graph to see how they relate. Step 7 of 8 Open New Relic in a new tab. From APM, select Telco-Login Service. Then, navigate to Events > Errors. By comparing these graphs, you see that the memory percentage reached its peak at 10:25 AM (in this example) and then dropped off. You also see that errors started occurring in the login service just after that, at 10:26 AM. The message for those errors is the same one you saw earlier: bash Copy java.lang.Exception: The application is not yet ready to accept traffic This suggests that the memory leaks cause the application to fail for a time. To understand the error a bit more, select the error class from the table at the bottom of the view: The stack trace shows that the service raised an UnhandledException from a function called EnsureAppIsStarted: With the information you've collected so far, you can conclude that Telco-Login Service's Java code has a memory leak. Also, the login service restarts the application when it runs out of memory, and it raises an UnhandledException when it receives requests while the app is restarting. You also know the login service is effecting the web portal, because that is what introduced you to this problem, but does the issue effect any other services? Step 8 of 8 Visualize service dependencies using service maps. First, navigate back to APM, and from Telco-Login Service, select Monitor > Service map: Both Telco-Web Portal and Telco-Warehouse Portal depend on Telco-Login Service. So, when the login service goes down, you start seeing errors in both portals. Extra Credit Use the same steps you used to investigate issues in the web portal to confirm there are issues in the warehouse portal. Conclusion At the end of your investigation, you discovered: Telco-Login Service and Telco-Web Portal raise alerts during critical violations The login service's Java processes leak memory When the login service's host, Telco-Authentication-host, runs out of memory, it restarts the login application While the login application is restarting, it raises an UnhandledException when it receives requests When the web portal and the warehouse portal make requests to the login service while it's restarting, they receive errors and raise errors of their own Now, as a Telco Lite developer, you have enough information to debug the issue causing the memory leak. Congratulations! Learn more about using New Relic by diagnosing other issues. If this is your last issue, tear down all the Telco Lite services.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 157.29092,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>explore</em>"
      },
      "id": "5f97897964441f26ff6ed879"
    },
    {
      "sections": [
        "Diagnose high response times in Telco Lite",
        "Prerequisites",
        "Conclusion"
      ],
      "title": "Diagnose high response times in Telco Lite",
      "type": "developer",
      "tags": [
        "demo",
        "explore"
      ],
      "external_id": "257b617b5a1c415b4563b211805653c5f59647b1",
      "image": "https://developer.newrelic.com/static/7b43ba54fb07afd22eb0b6b72e8aacc0/0086b/high-response-times.png",
      "url": "https://developer.newrelic.com/automate-workflows/diagnose-problems/high-response-times/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2020-12-04T01:54:04Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to use New Relic to diagnose high response times in your services.",
      "body": "Use New Relic to understand why Telco-Warehouse Portal has slower-than-normal response times. Prerequisites Before you begin: Learn about the infrastructure of Telco Lite Set up your local environment Deploy and instrument the Telco Lite services When you're ready, start your journey by observing the high response times in your services. Step 1 of 6 Log in to New Relic One and select APM from the top navigation menu. Here, you see an overview of all eight Telco Lite services, including the service names, response times, and throughputs. Notice that the response time for Telco-Warehouse Portal is 43 seconds, much higher than the response times in other services: On the APM page, select the Telco-Warehouse Portal service name to see a summary of that service. The top graph in the summary view shows Web transactions time: You see several peaks, reaching almost 50,000 millisecondsâor 50 seconds! From this graph, you can actually gain a little more insight by toggling the colored components beneath the graph. For example, select Node.js: The graph changes to show only what the Node.js component contributes to the overall response timeâless than 100 ms, in this example. Now, select Web external and deselect Node.js: External web traffic is the primary contributor to the high response times. That's a good start, but it doesn't tell the whole story. Next, dive deeper to find out which external service is causing the issue. Step 2 of 6 So, you know that Web external is the culprit of the high response times, but it's hard to tell why. External web traffic is all the requests made from your service to other services. This means you should look into what external requests that the warehouse portal makes to try to understand exactly what external service is the bottleneck. From the left-hand navigation, select Monitor > Distributed tracing: This view shows you requests to the warehouse portal. Select a request from the table at the bottom of the view to see a trace through that request: This trace shows that one external request contributes almost all of the total trace duration. Specifically, an external request to the Telco-Fulfillment Service contributes over 99% of the overall response time. This is good news! You own the fulfillment service, which means you can drill down for even more information. Select the offending row (called a span), and then select Explore this transaction: Step 3 of 6 You're now looking at the __main__:inventory_item transaction overview. Because you know that some part of this transaction is slow, you can use this overview to narrow your focus even further. Similar to how you modified the warehouse portal APM graph, you can look specifically at the components of this transaction to understand where the root cause of the slowness is. Another way to view this information is to scroll down to the Breakdown table in that same view: Function/__main__:inventory_item, a Python function, contributes over 99% of the overall response time. At this point, you know that Telco-Warehouse Portal is slow because it makes an external request to Telco-Fulfillment Service, which is slow. You also know that the issue in the fulfillment service is local because over 99% of the request is spent in Python code, not external services. Navigate to the fulfillment service's summary page to look at the service as a whole, instead of this single transaction: Step 4 of 6 Scroll down on this view to familiarize yourself with the graphs it shows, such as Throughput and Error rate. At the bottom of the page, you can see a table with the fulfillment hosts. You can't currently drill into a specific host in the new UI (we're working on it), but you can in the old UI. Toggle Show new view to off and select the host link: Step 5 of 6 Now, you're looking at graphs in the infrastructure view for that service's host. Notice that CPU % has a lot of high spikes. Click and drag on the graph from the start of a spike to the end of it to narrow the timeslice to the period when CPU utilization goes up: If you compare this graph to the fulfillment service's transaction graph you looked at earlier, you'll see that soon after __main__:inventory_item begins executing, the CPU utilization of the host sharply rises to 100%! Step 6 of 6 Now, you understand the problem causing slow response times in the warehouse portal, but you don't know the extent of the issue. Using service maps, you can see all your services that depend on the fullfillment service. Navigate to the service map under APM > Telco-Fulfillment Service: This map shows you the fulfillment service's incoming and outgoing dependencies. Not only is Telco-Warehouse Portal dependent on the fullfillment service, but so is Telco-Web Portal! Select the web portal node to see that the fulfillment service also affects the web portal's response times: Conclusion At the end of your investigation, you discovered: Telco-Warehouse Portal is slow because it makes an external request to Telco-Fulfillment Service, which is slow The fulfillment service's Python function contributes over 99% of the response time Soon after the Python function starts executing, the host's CPU utilization spikes up to 100% The fulfillment service also affects Telco-Web Portal response times Now, as the developer behind the fulfillment service, you have enough information to debug the issue causing the CPU spikes. Congratulations! You can learn more about using New Relic by diagnosing other issues. If this is your last issue, you can tear down all the Telco Lite services.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 145.71753,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>explore</em>",
        "body": " duration. Specifically, an external request to the Telco-Fulfillment Service contributes over 99% of the overall response time. This is good news! You own the fulfillment service, which means you can drill down for even more information. Select the offending row (called a span), and then select <em>Explore</em>"
      },
      "id": "5f9789dde7b9d23fd65c94fa"
    },
    {
      "sections": [
        "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®æ¦è¦",
        "ãã³ã",
        "éè¦ãªçç±",
        "ãã¼ã¿ã®ã¯ã¨ãª",
        "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã",
        "ã¤ãã³ããè©³ããèª¿ã¹ã",
        "ã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ã",
        "éè¦",
        "èª¿æ»ãå¯è¦åãçµãè¾¼ã",
        "ã¯ã¨ãªã¨ãªã¢",
        "NRQLã¯ã¨ãªè¡¨ç¤º",
        "ãã£ã¼ãã¨ãªã¢",
        "å±æãã¦ã¨ã¯ã¹ãã¼ã",
        "ä½¿ç¨äºä¾",
        "æ°è¦ãã¼ã¿ãç¢ºèª",
        "ãã¼ã¿ãæ¤è¨¼",
        "ãã¼ã¿ã®åé¡ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®æ¦è¦",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Explore data"
      ],
      "external_id": "94545f74e5fd5ab0b18f47342f7a8f2a2fa82558",
      "image": "https://docs.newrelic.com/static/e5a9353fdbe2b92dba6856c1ee912b02/c1b63/data_explorer_new.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/explore-data/introduction-data-explorer/",
      "published_at": "2021-03-18T12:12:36Z",
      "updated_at": "2021-03-18T12:12:35Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã°ãNRQLã®ç¥è­ããªãã¦ãããã¹ã¦ã®ãã¼ã¿ãè¦è¦çã«æä½ã§ãã¾ãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãã¼ã¿ã«ã¢ã¯ã»ã¹ãã¯ã¨ãªãã«ã¹ã¿ãã¤ãºãè¦è¦åãè¡ãããµã¼ãã¹ã¨ãµã¼ãã¹ãã¤ãªããä¸è²«ããã­ã¥ã¬ã¼ãæ¸ã¿ã®ä½é¨ãå®ç¾ãã¾ãã ãã³ã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã³ãã®ä»ã®ãªãã¶ã¼ãããªãã£ ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ãNew Relicãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã éè¦ãªçç± ã·ã¹ãã ã®ç¶æãèª¿æ»ãã¾ããï¼ãªã½ã¼ã¹ã®è¨ç»ãä½æããã¤ã³ã·ãã³ããç¹å®ãããã«å¯¾å¿ããåä½ä¸è¯ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãè¡ãå¿è¦ãããã¾ããï¼ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã«ãããNRQLãä½¿ç¨ãããã¯ã¨ãªãæ§ç¯ããã«ãè¦è¦çãªã¡ãã¥ã¼ãéãã¦ãæ¢ãã¦ãããã¼ã¿ãç°¡åã«ç¹å®ãåå¾ããè¦è¦åã§ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãæ¬¡ã®ãã¨ãè¡ãã¾ãã ã¤ãã³ããã¡ããªãã¯ã¹ãã¼ã¿ã«ãè¿éã§ç´æçãªæ¹æ³ã§ã¢ã¯ã»ã¹ããã è¦è¦åãç°¡åã«å®è¡ã§ããããã«ãã¦ããã¼ã¿ã®ãã£ã¡ã³ã·ã§ã³ãè©³ããèª¿ã¹ãã ãã¾ãã¾ãªè¦³ç¹ãããã¼ã¿ãææ¡ããï¼çãã¼ã¿ããé²æ­©ãéä¿¡ãªã©ã«ã¤ãã¦ã®ç¥è¦ãæä¾ãããã¾ãã¾ãªè¦è¦åã ãã£ã«ã¿ã¼ã«ãããã¼ã¿ãæãä¸ããã 1åã®ã¯ãªãã¯ã§æ¤ç´¢ãããã·ã¥ãã¼ãã«è¿½å ããã NRQLã®ããã¿ã«ã¤ãã¦çè§£ãã: ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãå©ç¨å¯è½ãªãã¼ã¿ãæ¤ç´¢ãã¦ããéã«ã¯ã¨ãªãã©ã®ããã«æ§ç¯ãããããç¤ºãã¾ãã ãã³ã InsightsããNew Relic Oneã«åãæ¿ããå ´åç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã¼ã¿ã®ã¯ã¨ãª ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã«ã¢ã¯ã»ã¹ããã«ã¯ãone.newrelic.comã«ç§»åãããã¼ã¸ã®ä¸é¨ã§ãã¼ã¿ã®ã¯ã¨ãªã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãNew Relicã«ãããã¹ã¦ã®ãã¼ã¿ãè©³ããèª¿ã¹ãããã®ãã¼ã¿ã«ã§ãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼UIã«ããã¤ãã³ããã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ãããLogsãTracesã¢ããªãé¸æãã¦è©³ããèª¿ã¹ããã¨ãã§ãã¾ããã¾ããã¿ããã¯ãªãã¯ãã¦ããã¤ã§ãã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãããã¨ãã§ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãä¸é¨ã«ããç¯å²çµãè¾¼ã¿ã»ã¯ã·ã§ã³ï¼aï¼ãå·¦å´ã®ãã¼ã¿ãã©ã¦ã¸ã³ã°ã¨ãªã¢ï¼bï¼ãã¯ã¼ã¯ã¹ãã¼ã¹ï¼cï¼ã§æ§æããã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã«ã¯ï¼ èª¿ã¹ãç¯å²ãå®ç¾©ããï¼ãã©ã¦ãºããã¢ã«ã¦ã³ãã¨ãã¼ã¿ã¿ã¤ãï¼ã¡ããªãã¯ã¾ãã¯ã¤ãã³ãï¼ãé¸æãã¾ãã ã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦æéç¯å²ãé¸æãã¾ãã å·¦å´ã®ãã­ãã¯ãä½¿ç¨ãã¦ãã¤ãã³ããã¡ããªãã¯ã¹ã®ããããã«ã¤ãã¦ä½¿ç¨å¯è½ãªãã¼ã¿ããã©ã¦ãºããæ¤ç´¢ãä½æãã¾ãã1ãã­ãã¯ã«ã¤ã1ã¤ã®è¦ç´ ããé¸æã§ãã¾ããããã­ãã¯ã¯æ¤ç´¢å¯è½ã§ãã ã¤ãã³ããè©³ããèª¿ã¹ã ã¤ãã³ãã¿ã¤ã é¸æããã¢ã«ã¦ã³ãã§ä½¿ç¨ã§ãããã¹ã¦ã®ã¤ãã³ããè¡¨ç¤ºãã¾ãã ããã©ã«ãã§ã¯ãã¤ãã³ãã¯ååã§ä¸¦ã³æ¿ãããã¾ãã ãã­ãã ä»¥åé¸æããã¤ãã³ãã®ãã¹ã¦ã®æ°å­å±æ§ãè¡¨ç¤ºãã¾ãã ãªã¹ãã®æåã®é ç®ã¯count( * )ã§ãããã¯å±æ§ã§ã¯ããã¾ãããé¸æããã¤ãã³ãã®æ°ãè¨ç®ãã¾ãã ããã©ã«ãã§ã¯ãå±æ§ã¯ååã§ä¸¦ã³æ¿ãããã¾ãã ãã­ããããé¢æ°ãé¸æãã¾ããããã©ã«ãã§ã¯ãåå±æ§ã¯é¢æ°Averageã«è¨­å®ããã¾ãã ãã£ã¡ã³ã·ã§ã³ ä»¥åé¸æããã¤ãã³ãã¨ãã­ããã®ãã¹ã¦ã®ãã£ã¡ã³ã·ã§ã³ãè¡¨ç¤ºãã¾ãã ãã£ã¡ã³ã·ã§ã³ã¯ãã¤ãã³ãã«ã¤ãã¦ã®æå ±ãæä¾ããæå­åå¤ã§ãã æ¿åº¦ãããªãã¡é¸æããæéç¯å²ã«ãããã®å±æ§ã®ç°ãªãå¤ã®uniqueCountãè¡¨ãã¾ããè¦ç´ ã1ã¤ãããªãå ´åããã®å±æ§ã®å¤ãç¤ºãã¾ãã ããã©ã«ãã§ã¯ããã£ã¡ã³ã·ã§ã³ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã ã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ã APM æéåºåããã¼ã¿ãèª¿ã¹ãã«ã¯ãAppIDãAppNameãã¾ãã¯EntityGuidãã¹ãããã¨ãã¦é¸æãã¾ãï¼ã¾ãã¯ãããã®ã¹ãããã§ã°ã«ã¼ãåãã¾ãï¼ãããä»¥å¤ã®å ´åã¯ããã¹ã¦ã®ã¨ã³ãã£ãã£ã®éè¨ãã¼ã¿ãåå¾ãã¾ãã ã¡ããªãã¯ é¸æããã¢ã«ã¦ã³ãã§ä½¿ç¨ã§ãããã¹ã¦ã®ã¡ããªãã¯ã¹ãè¡¨ç¤ºãã¾ãã ããã©ã«ãã§ã¯ãã¡ããªãã¯ã¹ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã ãã£ã¡ã³ã·ã§ã³ ä»¥åé¸æããã¡ããªãã¯ã®ãã¹ã¦ã®ãã£ã¡ã³ã·ã§ã³ãè¡¨ç¤ºãã¾ãã ãã£ã¡ã³ã·ã§ã³ã¯ãã¡ããªãã¯ã«ã¤ãã¦ã®æå ±ãæä¾ããæå­åå¤ã§ãã æ¿åº¦ãããªãã¡é¸æããæéç¯å²ã«ãããã®å±æ§ã®ç°ãªãå¤ã®uniqueCountãè¡¨ãã¾ããè¦ç´ ã1ã¤ãããªãå ´åããã®å±æ§ã®å¤ãç¤ºãã¾ãã ããã©ã«ãã§ã¯ããã£ã¡ã³ã·ã§ã³ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã éè¦ ã¦ãããã®è¡¨ç¤ºã«ã¯ãã¡ããªãã¯ã·ã¹ãã ï¼ã¡ããªãã¯SIãã¬ãã£ãã¯ã¹ãå«ãï¼ãä½¿ç¨ããã¦ãã¾ãã èª¿æ»ãå¯è¦åãçµãè¾¼ã èª¿æ»ã®çµæã¯ãå³å´ã®ã¯ã¼ã­ã³ã°ã¹ãã¼ã¹ã«è¡¨ç¤ºããã¾ãã èª¿æ»ãçµãè¾¼ããããã£ã¼ããå±æãã ã¯ã¼ã­ã³ã°ã¹ãã¼ã¹ã«ã¯ãæ¬¡ã®ãã®ãè¡¨ç¤ºããã¾ãã ã¯ã¨ãªã¨ãªã¢ ã¯ã¨ãªã¨ãªã¢ã§ã¯ãã¯ã¨ãªãç°ãªãæ§æè¦ç´ ã«åè§£ãã¾ããããã§ãNRQLã¯ã¨ãªã¨ãã¦èª¿æ»ã®çµæãç°¡åã«èª­ã¿ããã­ãããã¦ããæ­£ç¢ºãªãã¼ã¿ããã§ãã¯ã§ãã¾ãã NRQLã«ç¿çãã¦ããªãå ´åããã®ã¨ãªã¢ããã§ãã¯ãã¯ã¨ãªã®ä½ææ¹æ³ã«ã¤ãã¦å­¦ç¿ãã¾ãã ã¯ã¨ãªã®å¥ã®é¨åã¯æ¬¡ã®ã¨ããã§ãã [ ã¤ãã³ãã®ã¿]FROM: æåã®ãã­ãã¯ã§é¸æããã¤ãã³ãã SELECT: é¸æãããã­ããã¾ãã¯ã¡ããªãã¯ããã®å¥åã§ã¯ã1ã¤ã®å¤ã¨1ã¤ã®é¢æ°ã®ã¿ããã­ãããã¾ãã GROUP BY: FACETå¥ãè¡¨ããé¸æãããã£ã¡ã³ã·ã§ã³ãã¨ã«ãã¼ã¿ãã°ã«ã¼ãåãã¾ãã LIMIT: è¡¨ç¤ºããå¤ã®éãå¥åãã¾ãã WHERE: ãã®ãã£ã¼ã«ããä½¿ç¨ãã¦ãçµæã«ããã«ãã£ã«ã¿ã¼ãé©ç¨ãã¾ãããã®å¥åã§ã¯ãnå¤ããã­ãããã¾ãã åé ç®ã¯ãxãã¯ãªãã¯ãã¦ã¯ã¨ãªããåé¤ã§ãã¾ãã NRQLã¯ã¨ãªè¡¨ç¤º ä¸è¨ã®ãã£ã¼ã«ãã¨ãã¿ã¤ã ããã«ã¼ã§é¸æããæéç¯å²ã§æ§æããããå®å¨ãªã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãã ãã³ã ããè©³ç´°ãªæ¤ç´¢ãè¡ããã¾ãã¯ãã£ã¼ããã«ã¹ã¿ãã¤ãºããå¿è¦ãããå ´åãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãã¦ã¯ã¨ãªãç·¨éã§ãã¾ãã ãã£ã¼ãã¨ãªã¢ ããã©ã«ãã§ã¯ããã¼ã¿ã¯ç·ãã£ã¼ãã§è¡¨ç¤ºããã¾ãããã£ã¼ãããã«ã¼ãä½¿ç¨ãã¦ãé¢ã°ã©ããåã°ã©ããããã³ãã¼ãã£ã¼ãã«ç°¡åã«åãæ¿ãããã¨ãã§ãã¾ããçµæã®çãã¼ã¿ããã¼ãã«ã¾ãã¯JSONå½¢å¼ã¨ãã¦è¡¨ç¤ºãããã¨ãã§ãã¾ãã ãã£ã¡ã³ã·ã§ã³ãé¸æãã¦ããå ´åããã£ã¼ãã¯ç°ãªããã¡ã»ããã§æ´æ°ããã¾ãããã£ã¼ãã®ä¸ã«ããã¡ã»ããã®ãªã¹ãã¨ããããã®å¤ããããã¡ã»ããã®è¡¨ãè¡¨ç¤ºããã¾ãã ãã¡ã»ãããã¼ãã«ãä½¿ç¨ãã¦ããã¼ã¿ãããªã«ãã¦ã³ãã¾ããã¯ãªãã¯ãããã¡ã»ããã¯ãã£ã«ã¿ã¼ã¨ãã¦é©ç¨ããã¾ããè¡¨ã¯è¡¨ç¤ºãããã¾ã¾ãªã®ã§ãå¥ã®ãã¡ã»ãããç°¡åã«é¸æãã¦èª¿æ»ãç¶ãããã¨ãã§ãã¾ãã å±æãã¦ã¨ã¯ã¹ãã¼ã å³ä¸ã«ãããªãã·ã§ã³ã¡ãã¥ã¼ãä½¿ç¨ãã¦ããã£ã¼ããç»åã¨ãã¦åå¾ãã¾ãã¯ãªã³ã¯ã¨ãã¦å±æãããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãã ã¾ããURLãã³ãã¼ãããã®ä»ã®New Relicã¦ã¼ã¶ã¼ã¨èª¿æ»å¨ä½ãå±æãããã¨ãã§ãã¾ãã ä½¿ç¨äºä¾ æ¬¡ã®ä¾ã§ããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ããã¤ã©ã®ããã«ä½¿ç¨ãããã«ã¤ãã¦å­¦ç¿ãã¦ãã ããã æ°è¦ãã¼ã¿ãç¢ºèª æ°è¦ã¤ã³ã¹ãã¥ã«ã¡ã³ãã¼ã·ã§ã³ã«æ¥ç¶ããã°ããã§ãæ°è¦ãã¼ã¿ãå©ç¨ã§ãããã©ããç¢ºèªãããã¨æã£ã¦ãã¾ãã ã¢ã«ã¦ã³ãã¨ã¤ãã³ããã¾ãã¯æ°è¦ãã¼ã¿ãçæãã¦ããã¡ããªãã¯ãé¸æãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§å¥ã®ãã¼ã«ãä½¿ç¨ãã¦ãå©ç¨ã§ããããã«ãªã£ãæ°è¦ãã¼ã¿ãä½¿ã£ã¦ã¿ãï¼ãã®ã¤ãã³ãã¾ãã¯ã¡ããªãã¯ã®çãã¼ã¿ãè¡¨ã¨ãã¦è¦ããã¾ãã¯ãªã¹ãã¨ãããã¾ãã¯ã¯ãªãã¯ãã¦ãã£ã¼ãã¨ãã¦ãã­ããããããã¨ãç¢ºèªãã¾ãã ã¤ãã³ããã¡ããªãã¯ãé¸æããå¾ããã£ã¡ã³ã·ã§ã³ã§ãã¼ã¿ã®å½¢ç¶ãç¢ºèªãã¾ããæ¿åº¦ãä½¿ç¨ãã¦ããããããã¼ã¿ã®ç°ãªãè¦ç¹ãç¢ºèªã§ãã¾ãã é¢é£æ§ãè¦ã¤ãã£ãå ´åããã·ã¥ãã¼ãã«ä¿å­ããããååã¨å±æãã¾ãã ãã¼ã¿ãæ¤è¨¼ ã«ã¹ã¿ã ã¤ãã³ã/ã¡ããªãã¯ãå¤æ´ããã®ã§ããã®å¤æ´ãæ­£å¸¸ã«è¡ããããã©ããããã§ãã¯ããå¿è¦ãããã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¿ãã§ãå¤æ´ããã¢ã«ã¦ã³ãã¨ãã¼ã¿ã¿ã¤ããã¤ãã³ã/ã¡ããªãã¯ãé¸æãã¾ãã ã¨ã³ãã£ãã£ããã¼ã¿ãã¬ãã¼ããã¦ãããã¨ã¨ããã¹ã¦ã®å±æ§ããã­ããããã¦ãããã¨ãç¢ºèªãã¾ãã å¤æ´ããå±æ§ãæ¤ç´¢ããæ´æ°ãæ­£å¸¸ã«è¡ããããã¨ããã§ãã¯ãã¾ãã ãã¼ã¿ã®åé¡ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã° ã¢ã©ã¼ããããã·ã¥ãã¼ãããã®ã¤ãã³ã/ã¡ããªãã¯ã§ä½ãåé¡ããããã¨ãåãã£ã¦ãããã¤ãã³ã/ã¡ããªãã¯å±æ§ã®åä½ã«ã¤ãã¦ãæ ¹æ¬åå ãç¥ãå¿è¦ãããã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ãã¡ãã¥ã¼ãä½¿ç¨ãã¦ãæ³å®ã©ããã«åä½ãã¦ããªãã¤ãã³ããã¡ããªãã¯ãé¸æãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ãã®ãã£ã¼ãããã­ãããã¾ãã ããããããã®ãã¼ã¿ã®ãã£ã¡ã³ã·ã§ã³ãæãä¸ãã¦ãé¢é£ããå±æ§ã«ãããã£ã«ã¿ã¼ãé©ç¨ã§ãã¾ãã ã¾ããæ¬¡ã®ãããªç°ãªãè¦³ç¹ãããã®ãã¼ã¿ãææ¡ãããã¨ãã§ãã¾ãï¼åå¸ãå¤ã®é ä½ãçµæé²åã é¢é£æ§ãè¦ã¤ãã£ãå ´åããã·ã¥ãã¼ãã«ä¿å­ããããååã¨å±æãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 108.9415,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Explore</em> and query data"
      },
      "id": "605343b4196a6754132d166e"
    },
    {
      "sections": [
        "Introduction to the data explorer",
        "Tip",
        "Why it matters",
        "Query your data",
        "Use the data explorer",
        "Explore your events",
        "Explore your metrics",
        "Important",
        "Visualize and refine your exploration",
        "Querying area",
        "NRQL query display",
        "Chart area",
        "Share and export",
        "Use cases",
        "Discover your new data",
        "Validate your data",
        "Troubleshooting data issues"
      ],
      "title": "Introduction to the data explorer",
      "type": "docs",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Explore data"
      ],
      "external_id": "8f390d6aa6f57d215b3c23f8cf08c02ef310bddc",
      "image": "https://docs.newrelic.com/static/e5a9353fdbe2b92dba6856c1ee912b02/c1b63/data_explorer_new.png",
      "url": "https://docs.newrelic.com/docs/query-your-data/explore-query-data/explore-data/introduction-data-explorer/",
      "published_at": "2021-03-18T12:12:36Z",
      "updated_at": "2021-03-16T11:03:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With the data explorer you can navigate all your data visually, without any NRQL knowledge. Use the data explorer to access, query and customize your data, create visualizations, and make connections between your services in a consistent and curated experience. Tip To use the data explorer and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters Do you research the state of your systems? Do you need to plan resources, identify and respond to incidents, or troubleshoot faulty behaviors? The data explorer makes it easy to identify, fetch and visualize the data you are looking for through visual menus, without ever using NRQL or building queries. With the data explorer you can: Access events and metrics data in a quick, intuitive way. Exploit the dimensionality of data by making it visible and easily actionable upon. See data from different points of view: from raw data to different visualizations that provide insights on evolution, distribution, etc. Drill down into data with filters. Add your searches to a dashboard in a click. Understand how NRQL works: data explorer shows how queries are built while navigating the available data. Tip Want to switch to New Relic One from Insights? See our transition guide. Query your data To access the data explorer, go to one.newrelic.com and At the top of the page, click the Query your data icon. At the Browse data dropdown, select Events or Metrics. The data explorer is the portal to explore all the data you have in New Relic. You can explore events and metrics on the data explorer UI, or select the Logs and Traces apps to explore those. You can also access the query builder any time by clicking on the tab. Use the data explorer The data explorer consists of a scoping section on the top (a), a data browsing area on the left (b), and a workspace (c). To use the data explorer: Define the scope of the exploration: select the account and data type (metric or event) you want to browse. Select the time range using the time picker. Use the blocks on the left to browse the available data for either events or metrics, and build your search. You can only select one element per block. Blocks are searchable. Explore your events Event type Lists all available events for the selected account. By default, events are sorted by Name. Plot Lists all the numeric attributes of the event previously selected. The first item on the list is count( * ), which is not an attribute. It calculates the count of the selected event. By default attributes are sorted by Name. Select the function that you want to plot. By default each attribute is set to the function Average. Dimensions Lists all the dimensions of the event and plot previously selected. Dimensions are string values that provide information on the event. They represent the cardinality, that is, the uniqueCount of the different values of that attribute in the selected time range. If there is only one element it shows the value of the attribute. By default, dimensions are sorted by Name. Explore your metrics To explore APM timeslice data, select AppID, AppName, or EntityGuid as dimensions (or group by those dimensions). Otherwise, you'll get aggregated data for all entities. Metric Lists all the metrics available for the selected account. By default, metrics are sorted by Name. Dimensions Lists all the dimensions of the metric previously selected. Dimensions are string values that provide information on the metric. They represent the cardinality, that is, the uniqueCount of the different values of that attribute in the selected time range. If there is only one element it shows the value of the attribute. By default, dimensions are by Name. Important We use the metric system (including metric SI prefixes) to display our units. Visualize and refine your exploration The result of your exploration is displayed in the working space on the right. Refine your exploration, or share your chart At the working space you can see: Querying area The querying area breaks down the query into its different constituents. Here you can easily read the result of your exploration as a NRQL query, and check the exact data being plotted. If you are not familiar with NRQL, check this area to learn how queries are built. The different parts of the query are: [ EVENTS ONLY]FROM: the event selected on the first block. SELECT: the plot or metric selected. This input plots only one value and one function. GROUP BY: represents the FACET clause, and groups the data by the selected dimension. LIMIT: type in the amount of values you want to see. WHERE: use this field to further filter results. This input plots n values. Each item can be deleted from the query by clicking on the x. NRQL query display You can see the full query, which is composed by the fields above and the time range selected with the time picker. Tip Need to do more advanced searches or customize your charts? From data explorer you can access query builder to edit the query. Chart area By default data is displayed on a line chart. You can easily change to Area chart, Pie chart, and Bar chart using the chart picker. You can also choose to see your results' raw data as a table, or as in JSON format. If you have selected a dimension, the chart is updated with the different facets. Below the chart you can see the facets' table with the list of facets and the value for each one. Use the facet table to drill down data. By clicking on a facet, it is applied as a filter. The table stays visible so you can easily select another facet to continue your exploration. Share and export You can get the chart as an image, share it as a link, or add it to a dashboard using the Options menu on the top right corner. You can also copy the URL and share your whole exploration with other New Relic users. Use cases See the following examples to learn how and when to use the data explorer. Discover your new data Iâve just connected new instrumentation and want to see if new data is available. Select the account and event or metric that's generating the new data. Use the different tools in the data explorer to toy around the new data that has become available: have a look at the raw data of that event or metric as a table, shape it as a list, or click to see it plotted as a chart. After selecting an event or metric, discover the shape of the data in its dimensions. Guided by cardinality, you can see the different points of view of any data. Found anything relevant? Save it to a dashboard or share it with a colleague. Validate your data I changed a custom event/metric and need to check if this change has been successful. In the data explorer tab, select the account, data type and event/metric you made changes to. Verify the entity is reporting data, and that all the attributes are being plotted. Find the attribute you made changes to and check the update was successful. Troubleshooting data issues I know thereâs something off with an event/metric from an alert or dashboard. I need to know the root cause about the event/metric/attribute behavior. In the data explorer, use the menus to select the event or metric that's not behaving as expected and let the data explorer plot that chart. From there, you can drill down in the dimensions of that data and filter by those attributes that are relevant. You can also see that data from different perspectives: its distribution, ranking of values, or evolution over time. Found anything relevant? Save it to a dashboard or share it with a colleague.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 93.68713,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to the data <em>explorer</em>",
        "sections": "Introduction to the data <em>explorer</em>",
        "tags": "<em>Explore</em> and query data",
        "body": " icon. At the Browse data dropdown, select Events or Metrics. The data explorer is the portal to <em>explore</em> all the data you have in New Relic. You can <em>explore</em> events and metrics on the data explorer UI, or select the Logs and Traces apps to <em>explore</em> those. You can also access the query builder any time"
      },
      "id": "603e962e28ccbc6a92eba7a8"
    },
    {
      "sections": [
        "New Relic Global Performanceãã¼ã¿ã»ãã",
        "éè¦",
        "æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã",
        "Public API Performanceããã·ã¥ãã¼ããéå§ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic Global Performanceãã¼ã¿ã»ãã",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "a1a8dc00fa765076cf92d83e758f909c75c335ad",
      "image": "https://docs.newrelic.com/static/353175f500c15eb2209965910deb84b4/c1b63/Public-API-Performance-Dash-for-GPD.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/new-relic-global-performance-data-sets/",
      "published_at": "2021-03-18T12:11:39Z",
      "updated_at": "2021-03-18T12:11:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¬ã¡ããªã¼ãã¼ã¿ãã©ãããã©ã¼ã ã®ä¸é¨ã§ããNew Relicã®Global Performanceãã¼ã¿ã»ãããä½¿ç¨ãã¦ãæç¨ã§å¤§è¦æ¨¡ãªéè¨ããããã¬ã¡ããªã¼ãã¼ã¿ã«ãã ã¡ã«ã¢ã¯ã»ã¹ã§ãã¾ãã Global Performanceãã¼ã¿ã»ããã®ãã¼ã¿ã¯ãæ¬¡ã®æ¹ã«ã¨ã£ã¦æç¨ã§ãã éè¨ãããå®éã®ãã¼ã¿ã®ã­ã¥ã¬ã¼ãæ¸ã¿ã®éåãä¸è¬çã«ã¢ãã¿ã¼ããã©ãã«ã·ã¥ã¼ãã£ã³ã°ã«ã¤ãã¦ã®ç¥è¦ãå¾ãããæ¢å­ã®New Relicã®ãå®¢æ§ã New Relicã®ããã·ã¥ãã¼ãããã¼ã¿ãã¼ã«ã«ã¤ãã¦ç¥ããèªèº«ã®ãã¼ã¿ãNew Relicã«è¿½å ããæ¹æ³ã«ã¤ãã¦æå ±ã«åºã¥ãæ±ºå®ãè¡ãããå®éã«ãã¼ã¿ãè¦è¦åãã¦è¡¨ç¤ºããããæ°è¦ã®ãå®¢æ§ã ãã®ãªã½ã¼ã¹ã«ã¯ãGlobal Performanceãã¼ã¿ã»ããã«ã¤ãã¦ã®æå ±ããã®ããã¿ãåä½ãGlobal Performanceãã¼ã¿ã¸ã®ã¢ã¯ã»ã¹ã«ã¤ãã¦ã®ç¾å¨ã®ãªãã·ã§ã³ãè¨è¼ããã¦ãã¾ãã Public API Performanceããã·ã¥ãã¼ã éè¦ æ¬¡ã®ç¹ã«ãæ³¨æãã ãããGlobal Performanceãã¼ã¿ã»ããã¯ãç¾ç¶ã®ã¾ã¾ã§æç¤ºããã¾ããGlobal Performanceãã¼ã¿ã»ããã¯ãä¸é£ã®ã½ã¼ã¹å¨ä½ã§ã®ãµã³ãã«ã®éè¨ãè¡¨ããNew Relicã¯ãã¼ã¿ãæ­£ãããã¨ãå®å¨ãªãã¨ããã¼ã¿ã®ä¿¡ææ§ã®ç¢ºèªã¯è¡ãã¾ããããã®ãã¼ã¿ã¯ããã¼ã¿ãä½¿ç¨ããç®çã«ã¤ãã¦å¯ä¸ã®æå ±æºã¨ããªãã§ãã ãããNew Relicã¯ããã®ãã¼ã¿ã«åºã¥ãã¦è¡ãããæ±ºå®ã«ã¤ãã¦è²¬ä»»ãè² ãã¾ãããGlobal Performanceãã¼ã¿ã»ããã¯ããã¼ã¿ã»ããã§è¡¨æãããæè¡ã«ã¤ãã¦ã®New Relicã«ããä¿è¨¼ãæ¨å¥¨ã¨ã¯èããªãã§ãã ããã æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã å½ç¤¾åã®Global Performanceãã¼ã¿ã»ããã§ããPublic API Performanceã¯ãAWSãGoogleãNew Relicã®ãå®¢æ§ãï¼æ­£è¦ã«ï¼ä½é¨ã§ãããã®ãå«ãããããªãã¯APIã®ããã©ã¼ãã³ã¹ã«ã¤ãã¦ã®ãå®éã®ãªã¢ã«ã¿ã¤ã ãã¼ã¿ãæ°å¤ãæä¾ãã¦ãã¾ãã ãã®ãã¼ã¿ã¯ãã§ã«New Relicãéãã¦æµãã¦ãããããã¢ã«ã¦ã³ãã®ã¢ã¯ãã£ãã¼ã·ã§ã³ããæ°ç§ä»¥åã«ãã¼ã¿ã«ã¢ã¯ã»ã¹ãããã­ã»ã¹ã§New Relicã®ããã·ã¥ãã¼ããã¯ã¨ãªæ©è½ãè©¦ãã¦ã¿ããã¨ãã§ãã¾ãã èªèº«ã®ãã¼ã¿ã½ã¼ã¹ãNew Relicã«æåã«æ¥ç¶ããå¿è¦ã¯ããã¾ãããããå®¢æ§èªèº«ã®ãã¼ã¿ã®è¿½å ã¯ç°¡åãã¤ç¡æã§è¡ããNew Relicããå®¢æ§ã®ãã¸ãã¹ãã¼ãºã«ã©ã®ããã«å½¹ç«ã¤ããçè§£ããã®ã«æé«ã®æ¹æ³ã§ããããããã¼ã¿ã½ã¼ã¹ãè¿½å ãããã¨ãæ¨å¥¨ãã¾ãã Public API Performanceããã·ã¥ãã¼ããéå§ãã Public API Performanceãã¼ã¿ãä½¿ç¨ãã¦éå§ããä¸å©ã¨ãã¦ãå½ç¤¾ã§ã¯Public API Performanceããã·ã¥ãã¼ããä½æãã¾ããããã®ããã·ã¥ãã¼ãã¯ãå®è¡å¯è½ãªä¸è¬çãªç¥è¦ã¨åæã®ä¸¡æ¹ãæä¾ããã¾ãããã·ã¥ãã¼ãã®æ©è½ãèªèº«ã®ãã¼ã¿ã«ã©ã®ããã«é©ç¨å¯è½ãã®ä¾ãæä¾ãã¾ãã æ°è¦ã®ãå®¢æ§ã¨æ¢å­ã®ãå®¢æ§ã®ãããããPublic API Performanceããã·ã¥ãã¼ãã§Global Performanceãã¼ã¿ãè¿éãã¤ç°¡åã«è¡¨ç¤ºã§ãã¾ãããã®ããã·ã¥ãã¼ãã®ä½¿ç¨ãéå§ããã«ã¯ãPublic API Performanceããã·ã¥ãã¼ãã«ã¤ãã¦è©³ããèª¿ã¹ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 88.4657,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Explore</em> and query data"
      },
      "id": "6053437b28ccbc1ce2c2fd65"
    }
  ],
  "/automate-workflows/get-started-terraform": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/terraform/",
      "sections": [
        "New Relic and Terraform",
        "Guides to new relic and terraform",
        "Getting started with New Relic and Terraform",
        "Using Terraform modules",
        "Using Terragrunt configurations"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "New Relic and Terraform",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "a0391aa84ef8cdb8d92329efb62a1a6141f44cac",
      "document_type": "page",
      "popularity": 1,
      "body": "Terraform is a popular infrastructure-as-code software tool software tool software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. Guides to new relic and terraform Getting started with New Relic and Terraform 30 min Learn how to provision New Relic resources using Terraform Using Terraform modules 30 min Learn how to use Terraform modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 393.91437,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic and <em>Terraform</em>",
        "sections": "New Relic and <em>Terraform</em>",
        "body": " provision an <em>alert</em> policy, four <em>alert</em> conditions, and a <em>notification</em> <em>channel</em>. Guides to new relic and <em>terraform</em> Getting started with New Relic and <em>Terraform</em> 30 min Learn how to provision New Relic resources using <em>Terraform</em> Using <em>Terraform</em> modules 30 min Learn how to use <em>Terraform</em> modules in your configurations Using Terragrunt configurations 30 min Learn how to use Terragrunt to manage configurations in multiple environments"
      },
      "id": "601df6b928ccbc2507013383"
    },
    {
      "sections": [
        "Getting started with New Relic and Terraform",
        "Before you begin",
        "Bootstrap Terraform and the New Relic provider",
        "Configure the New Relic provider",
        "Tip",
        "Create a New Relic alert policy with the golden signal alerts",
        "Provision alert conditions based on the four golden signals",
        "Get notified when an alert triggers",
        "Extra Credit",
        "Conclusion"
      ],
      "title": "Getting started with New Relic and Terraform",
      "type": "developer",
      "tags": [
        "notification channel",
        "alerts",
        "golden signals",
        "terraform"
      ],
      "external_id": "76368b6d7b42905b1effbe6f6d7a328160d5a967",
      "image": "",
      "url": "https://developer.newrelic.com/terraform/get-started-terraform/",
      "published_at": "2021-03-18T01:49:42Z",
      "updated_at": "2021-02-06T01:55:16Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to provision New Relic resources using [Terraform](https://www.terraform.io/).",
      "body": "Terraform is a popular infrastructure-as-code software tool built by HashiCorp. You use it to provision all kinds of infrastructure and services, including New Relic dashboards and alerts. In this guide, you learn how to set up New Relic alerts with Terraform. More specifically, you provision an alert policy, four alert conditions, and a notification channel. The four alert conditions are based on the four golden signals of monitoring introduced in Googleâs Site Reliability Engineering book: Latency: The amount of time it takes your application to service a request. Traffic: The amount of requests your system receives. Errors: The rate of requests that fail. Saturation: The stress on resources to meet the demands of your application. Before you begin To use this guide, you should have some basic knowledge of both New Relic and Terraform. If you haven't deployed a New Relic open source agent yet, install New Relic for your application. Also, install the Terraform CLI. Step 1 of 5 Bootstrap Terraform and the New Relic provider Start by initializing a working directory and creating a Terraform configuration file: bash Copy $ mkdir terraform-project && cd terraform-project $ touch main.tf Next, instruct Terraform to install and use the New Relic provider, by setting the terraform and required_providers blocks in main.tf: terraform { # Require Terraform version 0.13.x (recommended) required_version = \"~> 0.13.0\" # Require the latest 2.x version of the New Relic provider required_providers { newrelic = { source = \"newrelic/newrelic\" version = \"~> 2.12\" } } } Copy In this code block, you're setting the required version of Terraform to 0.13.x and setting the New Relic provider to the latest 2.x version. Using the right version constraints for your setup will provide better stability with your Terraform runs. Now that you've set your Terraform and New Relic provider versions, you need to configure the New Relic provider. Step 2 of 5 Configure the New Relic provider With terraform all set, configure the New Relic provider with the following items: Your New Relic Account ID. Your New Relic user key. Most user keys begin with the prefix NRAK-. Your New Relic region. Your region is US if your account settings page is located at one.newrelic.com, and EU if your account is located at one.eu.newrelic.com. In main.tf, set those values on the provider: provider \"newrelic\" { account_id = 12345 # Your New Relic account ID api_key = \"NRAK-***\" # Your New Relic user key region = \"US\" # US or EU (defaults to US) } Copy By setting these values on the New Relic provider, you're configuring that provider to make changes on behalf of your account through New Relic APIs. Tip You can also configure the New Relic provider using environment variables. This is a useful way to set default values for your provider configuration. For more information about configuring the New Relic provider, please feel free to check out our official provider documentation. With your New Relic provider configured, initialize Terraform: bash Copy $ terraform init When Terraform finishes installing and registering the New Relic provider, you'll receive a success message and some actionable next steps, such as running terraform plan. Before you can run terraform plan, however, you need to create your resources. Step 3 of 5 Create a New Relic alert policy with the golden signal alerts With the New Relic provider configured and initialized, you can define an alerting strategy for your application. Since you're targeting a specific application, use a newrelic_entity to fetch the application information from New Relic and allow us to reference that data elsewhere in the configuration: data \"newrelic_entity\" \"example_app\" { name = \"Your App Name\" # Must be an exact match to your application name in New Relic domain = \"APM\" # or BROWSER, INFRA, MOBILE, SYNTH, depending on your entity's domain type = \"APPLICATION\" } Copy Next, create a newrelic_alert_policy. Give the policy a dynamic name based on your application's name. This helps specify the scope of the policy: resource \"newrelic_alert_policy\" \"golden_signal_policy\" { name = \"Golden Signals - ${data.newrelic_entity.example_app.name}\" } Copy At this point, you should be able to test your configuration with a dry run: bash Copy $ terraform plan You should see output that displays Terraform's execution plan. The plan contains the actions Terraform performs when your run terraform apply: bash Copy # Example output ------------------------------------------------------------------------ An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # newrelic_alert_policy.golden_signal_policy will be created + resource \"newrelic_alert_policy\" \"golden_signal_policy\" { + account_id = (known after apply) + id = (known after apply) + incident_preference = \"PER_POLICY\" + name = \"Golden Signals - Your App Name\" } Plan: 1 to add, 0 to change, 0 to destroy. ------------------------------------------------------------------------ In this case, the plan shows you that Terraform will create a new alert policy when you run terraform apply. After verifying the details, execute the plan to provision the alert policy resource in your New Relic account: bash Copy $ terraform apply Every time you apply changes, Terraform asks you to confirm the actions you've told it to run. Type \"yes\". While it's running, Terraform sends logs to your console: bash Copy # Example output of `terraform apply` newrelic_alert_policy.golden_signal_policy: Creating... newrelic_alert_policy.golden_signal_policy: Creation complete after 1s [id=111222333] Apply complete! Resources: 1 added, 0 changed, 0 destroyed. Log in to New Relic and navigate to Alert Policies to confirm that Terraform created your new policy. As you move through the next steps of creating alert conditions, you can run terraform apply after configuring each resource. Refresh your alert policy webpage to see the new resources. Step 4 of 5 Provision alert conditions based on the four golden signals Next, add alert conditions for your application based on the four golden signals: latency, traffic, errors, and saturation. Apply these alert conditions to the alert policy you created in the previous step. Latency Most folks want to avoid slow response times. You can create a newrelic_alert_condition that triggers if the overall response time of your application rises above five seconds for five minutes: # Response time resource \"newrelic_alert_condition\" \"response_time_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Response Time (Web) - ${data.newrelic_entity.example_app.name}\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"response_time_web\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" term { duration = 5 operator = \"above\" priority = \"critical\" threshold = \"5\" time_function = \"all\" } } Copy Note that you're linking this alert condition to the previously configured alert policy with policy_id. Traffic Traffic represents how much demand is placed on your system at any given moment. Throughput is a metric that measures how much traffic goes to your application. Create a newrelic_alert_condition that triggers if the overall response rate of your application falls below five requests per minute for five minutes: # Low throughput resource \"newrelic_alert_condition\" \"throughput_web\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"Low Throughput (Web)\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"throughput_web\" condition_scope = \"application\" # Define a critical alert threshold that will # trigger after 5 minutes below 5 requests per minute. term { priority = \"critical\" duration = 5 operator = \"below\" threshold = \"5\" time_function = \"all\" } } Copy This type of alert is useful when you expect a constant baseline of traffic throughout the day â a drop off in traffic can indicate a problem. Errors If your application's error rate spikes, you need to know about it. Create a newrelic_alert_condition that triggers if your application's error rate rises above 5% for five minutes: # Error percentage resource \"newrelic_alert_condition\" \"error_percentage\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High Error Percentage\" type = \"apm_app_metric\" entities = [data.newrelic_entity.example_app.application_id] metric = \"error_percentage\" runbook_url = \"https://www.example.com\" condition_scope = \"application\" # Define a critical alert threshold that will trigger after 5 minutes above a 5% error rate. term { duration = 5 operator = \"above\" threshold = \"5\" time_function = \"all\" } } Copy Saturation Saturation represents how \"full\" your service is and can take many forms, such as CPU time, memory allocation, or queue depth. In this example, assume you already have a New Relic Infrastructure agent installed on the hosts serving your application, and you want to configure an alert for when CPU utilization spikes above a certain threshold: # High CPU usage resource \"newrelic_infra_alert_condition\" \"high_cpu\" { policy_id = newrelic_alert_policy.golden_signal_policy.id name = \"High CPU usage\" type = \"infra_metric\" event = \"SystemSample\" select = \"cpuPercent\" comparison = \"above\" runbook_url = \"https://www.example.com\" where = \"(`applicationId` = '${data.newrelic_entity.example_app.application_id}')\" # Define a critical alert threshold that will trigger after 5 minutes above 90% CPU utilization. critical { duration = 5 value = 90 time_function = \"all\" } } Copy For the Infrastructure alert, you created a newrelic_infra_alert_condition that triggers if the aggregate CPU usage on these hosts rises above 90% for five minutes. Step 5 of 5 Get notified when an alert triggers Now that you've configured some important alert conditions, add a notification channel to your alert policy to ensure the proper folks get notified when an alert triggers. To do so, use a newrelic_alert_channel. To begin, create an email notification channel to send alert notifications to your email. Use this when you want to notify a specific person or team when alerts are triggered: resource \"newrelic_alert_channel\" \"team_email\" { name = \"example\" type = \"email\" config { recipients = \"yourawesometeam@example.com\" include_json_attachment = \"1\" } } Copy If you want to specify multiple recipients, use a comma-delimited list of emails. Last, but not least, in order to apply the notification channel to your alert policy, create a newrelic_alert_policy_channel: resource \"newrelic_alert_policy_channel\" \"golden_signals\" { policy_id = newrelic_alert_policy.golden_signal_policy.id channel_ids = [newrelic_alert_channel.team_email.id] } Copy A newrelic_alert_policy_channel links the notification channel you just created to your alert policy. To finalize your golden signal alerts configuration, run terraform apply one last time to make sure all of your configured resources are up to date. Extra Credit new_relic_alert_channel supports several types of notification channels, including email, Slack, and PagerDuty. So, if you want to explore this more, try creating an alert channel for a second channel type, such as Slack: # Slack notification channel resource \"newrelic_alert_channel\" \"slack_notification\" { name = \"slack-example\" type = \"slack\" config { # Use the URL provided in your New Relic Slack integration url = \"https://hooks.slack.com/services/XXXXXXX/XXXXXXX/XXXXXXXXXX\" channel = \"your-slack-channel-for-alerts\" } } Copy Before you apply this change, you need to add the New Relic Slack App to your Slack account and select a Slack channel to send the notification. With this new alert channel, triggered alerts send notifications to the Slack channel of your choice. Conclusion As your team evaluates the alerting system youâve put in place, youâll find that you may need to tweak configuration values, such as the alert threshold and duration. If you manage your Terraform project in a remote repository, you can submit a pull request so your team can review these changes alongside the rest of your code contributions. Tip You may also want to consider automating this process in your CI/CD pipeline. Use Terraform's recommended practices guide to learn more about their recommended workflow and how to evolve your provisioning practices. Congratulations! You're officially practicing observability-as-code. Review the New Relic Terraform provider documentation to learn how you can take your configuration to the next level.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 383.1844,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Getting started with New Relic and <em>Terraform</em>",
        "sections": "Create a New Relic <em>alert</em> policy with the <em>golden</em> <em>signal</em> <em>alerts</em>",
        "info": "Learn how to provision New Relic resources using [<em>Terraform</em>](https:&#x2F;&#x2F;www.terraform.io&#x2F;).",
        "tags": "<em>notification</em> <em>channel</em>",
        "body": " = newrelic_<em>alert_policy.golden_signal</em>_policy.id <em>channel</em>_ids = [newrelic_<em>alert_channel</em>.team_email.id] } Copy A newrelic_<em>alert_policy_channel</em> links the <em>notification</em> <em>channel</em> you just created to your <em>alert</em> policy. To finalize your <em>golden</em> <em>signal</em> <em>alerts</em> configuration, run <em>terraform</em> apply one last time to make sure all"
      },
      "id": "5efa999d196a67300c766404"
    },
    {
      "sections": [
        "Test alert notification channels",
        "Request the test",
        "Troubleshoot the test results",
        "Tip"
      ],
      "title": "Test alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "c001fca5128a2fb8128ff655c44f9d51b6d5fa2a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/test-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:45:12Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You must save a new notification channel or any changes to an existing notification channel before testing it. Alerts will then send a test message to your chosen destination. Request the test To test a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Follow standard procedures to add a new notification channel or to update an existing notification channel, and save it. Select a notification channel, and then click Send a test notification. Review the test confirmation message, and then click Got it. Troubleshoot the test results A confirmation message will automatically show up in the user interface that indicates where the test was sent (for example, email) and whether it was successful. Also, the test notification message itself includes detailed information, including: The person who requested the test Links to policies for the channel Links to all notification channels and policies for the account Tip When troubleshooting problems, review the test notification message, and verify the setup requirements for the type of notification channel you selected. If necessary, make additional changes to your notification channel, and test it again as needed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 307.10876,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Test <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": "You must save a new <em>notification</em> <em>channel</em> or any changes to an existing <em>notification</em> <em>channel</em> before testing it. <em>Alerts</em> will then send a test message to your chosen destination. Request the test To test a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click"
      },
      "id": "603ec9ffe7b9d25b3d2a07a7"
    },
    {
      "sections": [
        "Update alert notification channels",
        "Reference for updating channels",
        "Add or remove policies assigned to a channel",
        "Assign a channel to policies",
        "Change a channel's name",
        "Check for policies assigned to a user",
        "Check how many policies are assigned to a channel",
        "Create more channels",
        "Delete a channel",
        "Test a saved channelView assigned alert policies",
        "Basic process"
      ],
      "title": "Update alert notification channels",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "521bed5aa6fdcea5c1cffd11d01e6dad19bc7c40",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/update-alert-notification-channels/",
      "published_at": "2021-03-17T20:59:21Z",
      "updated_at": "2021-03-16T08:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Depending on the selected channel type, different values appear. Reference for updating channels Here's a quick reference for updating channels which also includes links to more detailed information and procedures. Add or remove policies assigned to a channel To add or remove policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Choose a channel, and then click Alert policies. From the selected policy, use the windows to select, remove, or clear all notification channels. Assign a channel to policies To add a notification channel to one or more policies: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies. Choose a policy, click Notification channels, and then click Add notification channels. Choose a channel, and then click Update policy. Change a channel's name To rename an existing notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details, change the name (maximum 64 characters) based on the channel type if applicable, and then save. Check for policies assigned to a user To check whether an account user has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Optional: Search by \"user\" to browse users or a specific username or email. Choose the user, then click Alert policies. Check how many policies are assigned to a channel To check whether a notification channel has any policies assigned: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. The Policy subscriptions column lists how many policies are assigned to the channel. Create more channels To create a new notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. Click New notification channel. Delete a channel To delete a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels. In the list, click the Delete icon. Test a saved channelView assigned alert policies To view the policies assigned to a notification channel: Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, choose a channel, and then click Alert policies. OR To view the notification channels assigned to a policy: Go to one.newrelic.com, in the top nav click Alerts & AI, click Policies, choose a policy, then click Notification channels. Basic process Go to one.newrelic.com, in the top nav click Alerts & AI, click Notification channels, then choose a channel. From the Channel details page, make any necessary changes, and then save. The user interface shows a Last modified time stamp for any changes to policies, including their conditions and notification channels.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 295.22522,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "sections": "Update <em>alert</em> <em>notification</em> <em>channels</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " to a <em>notification</em> <em>channel</em>: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, click <em>Notification</em> channels. Choose a <em>channel</em>, and then click <em>Alert</em> policies. From the selected policy, use the windows to select, remove, or clear all <em>notification</em> channels. Assign a <em>channel</em> to policies To add"
      },
      "id": "603eca45e7b9d2d1d82a0806"
    },
    {
      "sections": [
        "Notification channels: Control where to send alerts",
        "Tip",
        "View notification channels",
        "Add or remove notification channels",
        "Instructions for specific notification channels",
        "User",
        "Email",
        "OpsGenie",
        "PagerDuty",
        "Slack",
        "VictorOps",
        "Webhook",
        "Important",
        "Caution",
        "xMatters",
        "Receive mobile push notifications",
        "Acknowledge alert notifications"
      ],
      "title": "Notification channels: Control where to send alerts",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "New Relic Alerts",
        "Alert notifications"
      ],
      "external_id": "8600dc86e59fad5da1e4a2b4170d2b86df78ee2f",
      "image": "",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/notification-channels-control-where-send-alerts/",
      "published_at": "2021-03-17T20:59:20Z",
      "updated_at": "2021-03-16T06:59:31Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use alerts to set up notification channels, and attach those channels to policies. Your selected channels provide fast and consistent ways for the right personnel to be notified about incidents. For example, notifications allow you to include charts about the incident to provide context and share them with your team. Alerts offers several notification channels, including webhooks, Slack rooms, email, and more. You'll be notified by your notification channels when incidents are opened, acknowledged, or closed. This document explains the available notification channels and how to set them up. Tip This document is about alerts notifications. For general information about unsubscribing from other New Relic emails, including marketing emails, weekly reports, and announcements, see Unsubscribe from New Relic emails. View notification channels To see all notification channels in your account: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. Add or remove notification channels To set up a new notification channel: On the Notification channels, click New notification channel. Select the type of channel and complete other required steps for it. To add or remove a notification policy or channel: Select a specific notification channel, select Alert policies, and add or remove a policy. OR Select a specific policy, select Notification channels, and add or remove a channel. Instructions for specific notification channels These are the available notification channel types. User For your convenience, we automatically load all users and their email addresses for the selected account. If your account has one or more sub-accounts, the notification channel includes only users for the currently selected master or sub-account. Use the User notification channel to select existing account team members and admins. To view the Users list or to add users to alert policies: Go to one.newrelic.com, in the top nav click Alerts & AI, then click Notification channels. A user channel also sends push notifications to any of the user's registered mobile devices. A device is registered if the user has logged into New Relic using the mobile app on the device. Email We automatically add every individual and their email address on the selected account to the User notification channel and you can select them there. You don't need to add existing New Relic accounts to the Email channel. To add an email channel for other users, follow these guidelines: Field Description Email (required) In general, use the Email notification channel to identify user emails or email aliases that are not already on the selected account. For example, if you have a dev-ops@company.com email alias for your DevOps team, add the email alias to the Email channel. Otherwise, use the User notification channel to select specific users on your DevOps team. For easier maintenance, add a single non-user email address or alias to a single alert notification channel. If you want to use the email channel for more than one email, create an email group or alias outside your account. These email addresses can be the same as or different from email addresses already on your account. Users can unsubscribe from general (non-alerts-related) emails, but they cannot unsubscribe from alerts email notifications. Instead, the account Owner, Admin, or add-on manager must remove users from the policy's email notification channel. Include JSON attachment (optional) To include a JSON attachment with the email notification, select this checkbox. OpsGenie You must have an existing OpsGenie account integrated with New Relic in order to provide the following information: Field Description Channel name (required) A meaningful name for the OpsGenie notification channel (maximum 64 characters). API key (required) The API key generated from your OpsGenie integration used to authenticate API requests. Teams (optional) List of team names that are responsible for the alert. OpsGenie runs team escalation policies to calculate which users will receive notifications. Tags (optional) A comma-separated list of labels attached to the alert. Tip To overwrite the OpsGenie Quiet Hours setting for urgent alerts, add an OverwriteQuietHours tag. Recipients (optional) One or more names of users, groups, on-call schedules, escalation policies, etc., that OpsGenie uses to calculate where to send notifications. PagerDuty You must have an existing PagerDuty account in order to provide the following information: Field Description Service name (required) The name of your service integrating with PagerDuty for notifications. Integration key (required) The unique service identifier used by PagerDuty's Integration API to trigger, acknowledge, and resolve incidents for the service. Slack Before adding Slack notifications, you must create a unique webhook integration using Slack's New Relic integration. If you want web, transaction, server, and mobile alerts to be posted in separate channels, you must set up separate integrations for each one. Field Description Channel name (required) A meaningful name for the Slack notification channel (maximum 64 characters); for example, Network Ops Center. URL (required) Copy and paste the New Relic webhook integration URL that you've set up with Slack. For example: https://hooks.slack.com/services/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 Be sure to include https:// in the URL. Do not use http://. Team channel (optional) If used, include # before the name of the Slack channel where alert notifications are sent; for example, #NOC. VictorOps You must have an existing VictorOps account in order to provide the following required information: Field Description Channel name (required) A meaningful name for this notification channel (maximum 64 characters). For example, if the VictorOps Route key is for your Technical Support team, you could name this channel Tech Support - VictorOps. Key (required) VictorOps generates a unique key for each account. It maps the VictorOps account to its associated integrations. Route key (optional) This key maps the alert or incident to a specific team. Webhook Webhooks are HTTP POST messages containing JSON documents delivered to a destination URL. When an incident is opened, acknowledged, or closed, our webhook feature sends a message to your URL with any relevant information, such as a description of the event and a link back to New Relic. You also have the option to customize the payload in the POST message for further integration into your system. Important If your endpoint does not acknowledge the POST request within 10 seconds, the Alerts UI may indicate a failed notification event for the related incident. Before adding webhook notifications, you must have an endpoint set up to respond with a status code between 200 and 206 after receiving the following required information: Field Description Channel name (required) A meaningful name for the webhook (maximum 64 characters). Base url (required) The endpoint that will receive the POST message and trigger customized behaviors in your system. Caution If you want to include a port number in the webhook URL, make sure the port is available for requests. Otherwise the webhook will not work. Basic auth (optional) To require basic authentication for the webhook, select Add basic auth, and provide the user name and password to authenticate the webhook. Custom headers (optional) To include headers with webhooks, select Add custom headers, and provide the name and value for each header. Use custom payload (optional) To use the default values, leave blank. To view and edit the default values, select Add custom payload. Payload (for custom payloads only) Your customized POST message code. This field includes: A list of variables you can use Syntax highlighting, based on payload type Payload type (for custom payloads only) Specify the message format: JSON (default) or Form. xMatters You must have an existing xMatters account in order to provide the following information: Field Description Channel name (required) Name your channel so you can identify it easily when associating it with a policy. Integration url (required) The unique integration url provided by xMatters pointing to your xMatters account. Receive mobile push notifications Important In order to receive mobile push notifications, your device must be registered and listed in (account) > User preferences. If the device is not listed in User preferences, log out of the app, log back in, and check again to see if it is listed. To receive mobile push notifications: Log in to your New Relic account via the mobile app at least once to ensure the device is registered. Add the user channel to the alert policy. Switch push notifications On for the device. Acknowledge alert notifications Anyone in your account can acknowledge notifications through the user interface or email notification. Acknowledging an incident in New Relic also acknowledges any associated incident in PagerDuty.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 285.49335,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "sections": "<em>Notification</em> <em>channels</em>: Control where to send <em>alerts</em>",
        "tags": "<em>Alert</em> <em>notifications</em>",
        "body": " <em>notification</em> <em>channel</em> to select existing account team members and admins. To view the Users list or to add users to <em>alert</em> policies: Go to one.newrelic.com, in the top nav click <em>Alerts</em> &amp; AI, then click <em>Notification</em> channels. A user <em>channel</em> also sends push notifications to any of the user&#x27;s registered"
      },
      "id": "603ecfbf64441f4ee54e885f"
    }
  ],
  "/automate-workflows/diagnose-problems/high-response-times": [
    {
      "sections": [
        "Practice diagnosing common issues using New Relic",
        "Welcome to Acme Telco Lite!",
        "Set up your environment",
        "Deploy Telco Lite",
        "Tip",
        "View your services",
        "Tear down Telco Lite",
        "Conclusion"
      ],
      "title": "Practice diagnosing common issues using New Relic",
      "type": "developer",
      "tags": [
        "demo",
        "explore"
      ],
      "external_id": "0d4529b0c9a58c8b8d3098b4916d99c61f649cba",
      "image": "https://developer.newrelic.com/static/f94b1522d40914cb51e86ff2166f5c8e/0e533/acme.png",
      "url": "https://developer.newrelic.com/automate-workflows/diagnose-problems/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2021-01-16T01:54:19Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Automatically spin up a microservice infrastructure, and use New Relic to diagnose its issues.",
      "body": "Every time you deploy an application, you hope that it's efficient and error-free. The reality, however, is usually quite different. You might introduce a bug in a release, overlook an edge case, or rely on a broken dependency. These issues, and others, can result in bad user experiences. In this guide, you: Use the open-source New Relic demo-deployer to spin up the infrastructure for Acme Telco Lite, a fictional company. This demo scenario is part of our Demo Catalog and will simulate real-world issues in a controlled, demo environment Use New Relic to understand those issues from the perspective of a Telco Lite developer Use the deployer to tear down the resources you create Welcome to Acme Telco Lite! Acme Telco Lite is a mock telecom business that maintains an eCommerce website for its customers. The site's architecture has eight, interconnected microservices, plus a simulator: The simulator isn't part of the Telco Lite infrastructure, but it is part of the demo deployment. It runs scenarios against the application to create web traffic and generate interesting data in New Relic. Set up your environment Before you begin, follow the Prerequisites guide from the deployer's GitHub repository for a detailed walkthrough of how to set up your environment. For this guide, you can choose between Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) to host your deployment. The guide steps you through: Installing Docker & pulling the demo-deployer image locally Creating a user config file containing credentials for New Relic and your cloud provider Downloading a .pem key file (if your cloud provider is AWS) Once you're all set up, deploy Acme Telco Lite. Deploy Telco Lite It's time to deploy and instrument the Telco Lite services using demo-deployer. Copy the url for the demo that corresponds to the cloud provider you chose when you set up your environment: AWS Telco Lite Demo Azure Telco Lite Demo GCP Telco Lite Demo Follow the Deployment guide in the Demo Catalog repository for a thorough explanation of how to use the deployer in a local Docker environment. When you run the deployment script, make sure to pass the url you copied for <demo-url>. Tip Since Telco Lite contains several services, the deployment can take over half an hour. When the deloyer is finished, you should see some output stating that the deployment was successful: bash Copy [INFO] Executing Deployment [â] Parsing and validating Deployment configuration success [â] Provisioner success [â] Installing On-Host instrumentation success [â] Installing Services and instrumentations success [INFO] Deployment successful! Deployed Resources: simuhost (aws/ec2): ip: 34.201.60.23 services: [\"simulator\"] uihost (aws/ec2): ip: 18.233.97.28 services: [\"webportal\", \"fluentd\"] instrumentation: nr_infra: newrelic v1.12.1 backendhost (aws/ec2): ip: 35.170.192.236 services: [\"promo\", \"login\", \"inventory\", \"plan\", \"fulfillment\", \"warehouse\", \"fluentd\"] instrumentation: nr_infra: newrelic v1.12.1 reportinghost (aws/ec2): ip: 54.152.82.127 services: [\"billing\", \"fluentd\"] instrumentation: nr_infra: newrelic v1.12.1 Installed Services: simulator: url: http://34.201.60.23:5000 webportal: url: http://18.233.97.28:5001 instrumentation: nr_node_agent: newrelic v6.11.0 nr_logging_in_context: newrelic promo: url: http://35.170.192.236:8001 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic login: url: http://35.170.192.236:8002 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic inventory: url: http://35.170.192.236:8003 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic plan: url: http://35.170.192.236:8004 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic fulfillment: url: http://35.170.192.236:8005 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic billing: url: http://54.152.82.127:9001 instrumentation: nr_java_agent: newrelic v5.14.0 nr_logging_in_context: newrelic nr_logging: newrelic warehouse: url: http://35.170.192.236:9002 instrumentation: nr_python_agent: newrelic v5.14.1.144 nr_logging_in_context: newrelic fluentd: url: http://18.233.97.28:9999 url: http://35.170.192.236:9999 url: http://54.152.82.127:9999 Completed at 2020-08-11 11:27:00 -0700 [INFO] This deployment summary can also be found in: [INFO] /tmp/telcolite/deploy_summary.txt After configuring your environment, you only needed two commands (and a bit of patience) to spin up all the Telco Lite services! View your services With your services running in the cloud, log in to New Relic and select APM from the top navigation to see how your services are holding up: Yikes! The alerts, high response times, and red-colored indicators suggest things aren't well. Use New Relic to diagnose these issues, which are simultaneously affecting your services: Issue 1: The Warehouse Portal has abnormally high response times Issue 2: Multiple services are raising error alerts Tip Don't worry if you don't see all the same alerts. The simulator triggers issues at regular intervals, so you should start seeing these problems in New Relic within 30 minutes to an hour. Tear down Telco Lite When you're finished diagnosing all the issues effecting Telco Lite, follow the Teardown guide in the deployer's repository to tear down the services you created in your cloud provider. If you're still exploring, don't tear down your services, or you'll have to deploy them again later. Conclusion Congratulations, you're done! Throughout this tutorial, you: Used the demo-deployer to deploy Telco Lite to the cloud Used New Relic to investigate simulated issues in Telco Lite services Tore down all the infrastructural resources you created throughout this tutorial Hopefully, you learned a lot about using New Relic to investigate issues in your services. To get your hands on more features of New Relic, pick another demo from the catalog and spin it up with the deployer!",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 157.29295,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>explore</em>",
        "body": ". In this guide, you: Use the open-source New Relic <em>demo</em>-deployer to spin up the infrastructure for Acme Telco Lite, a fictional company. This <em>demo</em> scenario is part of our <em>Demo</em> Catalog and will simulate real-world issues in a controlled, <em>demo</em> environment Use New Relic to understand those issues from"
      },
      "id": "5f97897864441f14936ed88e"
    },
    {
      "sections": [
        "Diagnose error alerts in Telco Lite",
        "Prerequisites",
        "Tip",
        "Extra Credit",
        "Conclusion"
      ],
      "title": "Diagnose error alerts in Telco Lite",
      "type": "developer",
      "tags": [
        "demo",
        "explore"
      ],
      "external_id": "2857da924e8d8a8e78dca86040692d061bf14753",
      "image": "https://developer.newrelic.com/static/a03659a8d751f40e75f74a23b135c921/0086b/error-alerts.png",
      "url": "https://developer.newrelic.com/automate-workflows/diagnose-problems/error-alerts/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2021-01-16T01:47:39Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Learn how to use New Relic to diagnose error alerts in your services.",
      "body": "Use New Relic to understand why some services are raising alerts. Prerequisites Before you begin: Learn about the infrastructure of Telco Lite Set up your local environment Deploy and instrument the Telco Lite services When you're ready, start your journey by observing the error alerts in your services. Step 1 of 8 Log in to New Relic One and select APM from the top navigation menu. Here, you see an overview of all eight Telco Lite services, including the service names, response times, and throughputs. Notice that Telco-Login Service and Telco-Web Portal have opened critical violations for high error percentages: Tip If you don't see all the same alerts, don't worry. The simulated issues happen at regular intervals, so you should start seeing these problems in New Relic within 30 minutes to an hour. The deployment has created an alert condition for cases where a service's error percentage rises above 10% for 5 minutes or longer. A critical violation means that the service's conditions violate that threshold. Begin your investigation by selecting the Telco-Web Portal service name. Step 2 of 8 You're now on the web portal's APM summary page. The top graph, Web transactions time, shows you the service's response times. By default, it also displays periods of critical violation. On the right-hand side of the view, Application activity shows when violations opened and closed: From the left-hand navigation, select Events > Errors to learn more about the errors: At the bottom of the view, the Errors table shows you what errors occurred in the service along with number of times each error occurred. In this scenario, the only error in the service has the following message: bash Copy An error occurred during a downstream request to http://35.182.223.70:7001/api/inventory detail:response code 500 This is a helpful message that explains that the web portal made a request to another service, raised an error, and responded with a response code of 500, indicating an Internal server error. Since this message tells you that the error occurred while the web portal was making an outbound request, use distributed tracing to better understand the issue. Select Monitor > Distributed tracing from the left-hand navigation. Step 3 of 8 Distributed tracing provides end-to-end information about a request. In this case, you're looking for a request to the web portal that raised an error, so that you can better understand what happened during that request. Filter the table, by selecting the Errors column header twice, to order by descending counts: Select the first row in the table: This trace gives a lot of information about what happened with the request once the web portal received it. One of the things that the trace reveals is that the web portal made a GET request to Telco-Login Service and received an error. The trace indicates an error by coloring the text red. Select the row (called a span) to see more information about the request to the login service: Expand Error details to see the error message: bash Copy java.lang.Exception: The application is not yet ready to accept traffic Interesting! This message says that, at the time that the web portal made the GET request to the login service, the login service was not ready to accept traffic. Inspect the login service to dive further into the root cause of these cascading errors. Return to the APM page, and select Telco-Login Service. Step 4 of 8 Notice that the APM summary for Telco-Login Service has similar red flags to the ones in the web portal: Web transactions time has a red error indicator, and Application activity shows critical violations. More than that, the times that the errors occurred in both services match up (around 10:53 AM, in this example). Step 5 of 8 Web transactions time, in APM, shows that requests to the login service spend all their time in Java code. So, in the left-hand navigation, open Monitor > JVMs: Java Virtual Machines, or JVMs, run Java processes, such as those used by the login service. This view shows resource graphs for each JVM your service uses. Change the timeslice to look at data for the last 3 hours, so you can get a better idea of how the service has been behaving: Notice, in Heap memory usage, that the line for Used Heap rises consistently over 30 minute intervals. About two-thirds of the way through each interval, the line for Committed Heap (the amount of JVM heap memory dedicated for use by Java processes) quickly rises to accommodate the increasing memory demands. This graph indicates that the Java process is leaking memory. Step 6 of 8 Your Java process is leaking memory, but you need to understand the extent of the leak's impact. Navigate to the login service's host infrastructure view to dive a little deeper. First, go to the Telco-Login Service summary page and turn off Show new view: Then, scroll to the bottom of the page, and select the host's name: Right now, you can only select the host's name from the old version of the UI (we're working on it). So, make sure you toggle off Show new view. In this infrastructure view, Memory Used % for Telco-Authentication-host consistently climbs from around 60% to around 90% over 30-minute intervals, matching the intervals in the JVM's heap memory usage graph: Therefore, the memory leak effects the login service's entire host. Click and drag on Memory Used % to narrow the timeslice to one of the peaks: Now, compare this graph with the login service's Errors graph to see how they relate. Step 7 of 8 Open New Relic in a new tab. From APM, select Telco-Login Service. Then, navigate to Events > Errors. By comparing these graphs, you see that the memory percentage reached its peak at 10:25 AM (in this example) and then dropped off. You also see that errors started occurring in the login service just after that, at 10:26 AM. The message for those errors is the same one you saw earlier: bash Copy java.lang.Exception: The application is not yet ready to accept traffic This suggests that the memory leaks cause the application to fail for a time. To understand the error a bit more, select the error class from the table at the bottom of the view: The stack trace shows that the service raised an UnhandledException from a function called EnsureAppIsStarted: With the information you've collected so far, you can conclude that Telco-Login Service's Java code has a memory leak. Also, the login service restarts the application when it runs out of memory, and it raises an UnhandledException when it receives requests while the app is restarting. You also know the login service is effecting the web portal, because that is what introduced you to this problem, but does the issue effect any other services? Step 8 of 8 Visualize service dependencies using service maps. First, navigate back to APM, and from Telco-Login Service, select Monitor > Service map: Both Telco-Web Portal and Telco-Warehouse Portal depend on Telco-Login Service. So, when the login service goes down, you start seeing errors in both portals. Extra Credit Use the same steps you used to investigate issues in the web portal to confirm there are issues in the warehouse portal. Conclusion At the end of your investigation, you discovered: Telco-Login Service and Telco-Web Portal raise alerts during critical violations The login service's Java processes leak memory When the login service's host, Telco-Authentication-host, runs out of memory, it restarts the login application While the login application is restarting, it raises an UnhandledException when it receives requests When the web portal and the warehouse portal make requests to the login service while it's restarting, they receive errors and raise errors of their own Now, as a Telco Lite developer, you have enough information to debug the issue causing the memory leak. Congratulations! Learn more about using New Relic by diagnosing other issues. If this is your last issue, tear down all the Telco Lite services.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 157.29092,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>explore</em>"
      },
      "id": "5f97897964441f26ff6ed879"
    },
    {
      "sections": [
        "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®æ¦è¦",
        "ãã³ã",
        "éè¦ãªçç±",
        "ãã¼ã¿ã®ã¯ã¨ãª",
        "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã",
        "ã¤ãã³ããè©³ããèª¿ã¹ã",
        "ã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ã",
        "éè¦",
        "èª¿æ»ãå¯è¦åãçµãè¾¼ã",
        "ã¯ã¨ãªã¨ãªã¢",
        "NRQLã¯ã¨ãªè¡¨ç¤º",
        "ãã£ã¼ãã¨ãªã¢",
        "å±æãã¦ã¨ã¯ã¹ãã¼ã",
        "ä½¿ç¨äºä¾",
        "æ°è¦ãã¼ã¿ãç¢ºèª",
        "ãã¼ã¿ãæ¤è¨¼",
        "ãã¼ã¿ã®åé¡ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®æ¦è¦",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Explore data"
      ],
      "external_id": "94545f74e5fd5ab0b18f47342f7a8f2a2fa82558",
      "image": "https://docs.newrelic.com/static/e5a9353fdbe2b92dba6856c1ee912b02/c1b63/data_explorer_new.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/explore-data/introduction-data-explorer/",
      "published_at": "2021-03-18T12:12:36Z",
      "updated_at": "2021-03-18T12:12:35Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã°ãNRQLã®ç¥è­ããªãã¦ãããã¹ã¦ã®ãã¼ã¿ãè¦è¦çã«æä½ã§ãã¾ãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãã¼ã¿ã«ã¢ã¯ã»ã¹ãã¯ã¨ãªãã«ã¹ã¿ãã¤ãºãè¦è¦åãè¡ãããµã¼ãã¹ã¨ãµã¼ãã¹ãã¤ãªããä¸è²«ããã­ã¥ã¬ã¼ãæ¸ã¿ã®ä½é¨ãå®ç¾ãã¾ãã ãã³ã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã³ãã®ä»ã®ãªãã¶ã¼ãããªãã£ ãã©ãããã©ã¼ã ãä½¿ç¨ããã«ã¯ãNew Relicãã¡ããªã¼ã«åå ãã¦ãã ããããµã¤ã³ã¢ãããã¦ããããæ°ç§ã§ç¡æã¢ã«ã¦ã³ããä½æã§ãã¾ããæ¬¡ã«ãæ¯ææå¤§ã§100GBã®ãã¼ã¿ãç¡æã§åãè¾¼ã¿ã¾ããæéç¡å¶éã§ãã éè¦ãªçç± ã·ã¹ãã ã®ç¶æãèª¿æ»ãã¾ããï¼ãªã½ã¼ã¹ã®è¨ç»ãä½æããã¤ã³ã·ãã³ããç¹å®ãããã«å¯¾å¿ããåä½ä¸è¯ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãè¡ãå¿è¦ãããã¾ããï¼ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã«ãããNRQLãä½¿ç¨ãããã¯ã¨ãªãæ§ç¯ããã«ãè¦è¦çãªã¡ãã¥ã¼ãéãã¦ãæ¢ãã¦ãããã¼ã¿ãç°¡åã«ç¹å®ãåå¾ããè¦è¦åã§ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã¦ãæ¬¡ã®ãã¨ãè¡ãã¾ãã ã¤ãã³ããã¡ããªãã¯ã¹ãã¼ã¿ã«ãè¿éã§ç´æçãªæ¹æ³ã§ã¢ã¯ã»ã¹ããã è¦è¦åãç°¡åã«å®è¡ã§ããããã«ãã¦ããã¼ã¿ã®ãã£ã¡ã³ã·ã§ã³ãè©³ããèª¿ã¹ãã ãã¾ãã¾ãªè¦³ç¹ãããã¼ã¿ãææ¡ããï¼çãã¼ã¿ããé²æ­©ãéä¿¡ãªã©ã«ã¤ãã¦ã®ç¥è¦ãæä¾ãããã¾ãã¾ãªè¦è¦åã ãã£ã«ã¿ã¼ã«ãããã¼ã¿ãæãä¸ããã 1åã®ã¯ãªãã¯ã§æ¤ç´¢ãããã·ã¥ãã¼ãã«è¿½å ããã NRQLã®ããã¿ã«ã¤ãã¦çè§£ãã: ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãå©ç¨å¯è½ãªãã¼ã¿ãæ¤ç´¢ãã¦ããéã«ã¯ã¨ãªãã©ã®ããã«æ§ç¯ãããããç¤ºãã¾ãã ãã³ã InsightsããNew Relic Oneã«åãæ¿ããå ´åç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã¼ã¿ã®ã¯ã¨ãª ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã«ã¢ã¯ã»ã¹ããã«ã¯ãone.newrelic.comã«ç§»åãããã¼ã¸ã®ä¸é¨ã§ãã¼ã¿ã®ã¯ã¨ãªã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãNew Relicã«ãããã¹ã¦ã®ãã¼ã¿ãè©³ããèª¿ã¹ãããã®ãã¼ã¿ã«ã§ãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼UIã«ããã¤ãã³ããã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ãããLogsãTracesã¢ããªãé¸æãã¦è©³ããèª¿ã¹ããã¨ãã§ãã¾ããã¾ããã¿ããã¯ãªãã¯ãã¦ããã¤ã§ãã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãããã¨ãã§ãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¯ãä¸é¨ã«ããç¯å²çµãè¾¼ã¿ã»ã¯ã·ã§ã³ï¼aï¼ãå·¦å´ã®ãã¼ã¿ãã©ã¦ã¸ã³ã°ã¨ãªã¢ï¼bï¼ãã¯ã¼ã¯ã¹ãã¼ã¹ï¼cï¼ã§æ§æããã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãä½¿ç¨ããã«ã¯ï¼ èª¿ã¹ãç¯å²ãå®ç¾©ããï¼ãã©ã¦ãºããã¢ã«ã¦ã³ãã¨ãã¼ã¿ã¿ã¤ãï¼ã¡ããªãã¯ã¾ãã¯ã¤ãã³ãï¼ãé¸æãã¾ãã ã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦æéç¯å²ãé¸æãã¾ãã å·¦å´ã®ãã­ãã¯ãä½¿ç¨ãã¦ãã¤ãã³ããã¡ããªãã¯ã¹ã®ããããã«ã¤ãã¦ä½¿ç¨å¯è½ãªãã¼ã¿ããã©ã¦ãºããæ¤ç´¢ãä½æãã¾ãã1ãã­ãã¯ã«ã¤ã1ã¤ã®è¦ç´ ããé¸æã§ãã¾ããããã­ãã¯ã¯æ¤ç´¢å¯è½ã§ãã ã¤ãã³ããè©³ããèª¿ã¹ã ã¤ãã³ãã¿ã¤ã é¸æããã¢ã«ã¦ã³ãã§ä½¿ç¨ã§ãããã¹ã¦ã®ã¤ãã³ããè¡¨ç¤ºãã¾ãã ããã©ã«ãã§ã¯ãã¤ãã³ãã¯ååã§ä¸¦ã³æ¿ãããã¾ãã ãã­ãã ä»¥åé¸æããã¤ãã³ãã®ãã¹ã¦ã®æ°å­å±æ§ãè¡¨ç¤ºãã¾ãã ãªã¹ãã®æåã®é ç®ã¯count( * )ã§ãããã¯å±æ§ã§ã¯ããã¾ãããé¸æããã¤ãã³ãã®æ°ãè¨ç®ãã¾ãã ããã©ã«ãã§ã¯ãå±æ§ã¯ååã§ä¸¦ã³æ¿ãããã¾ãã ãã­ããããé¢æ°ãé¸æãã¾ããããã©ã«ãã§ã¯ãåå±æ§ã¯é¢æ°Averageã«è¨­å®ããã¾ãã ãã£ã¡ã³ã·ã§ã³ ä»¥åé¸æããã¤ãã³ãã¨ãã­ããã®ãã¹ã¦ã®ãã£ã¡ã³ã·ã§ã³ãè¡¨ç¤ºãã¾ãã ãã£ã¡ã³ã·ã§ã³ã¯ãã¤ãã³ãã«ã¤ãã¦ã®æå ±ãæä¾ããæå­åå¤ã§ãã æ¿åº¦ãããªãã¡é¸æããæéç¯å²ã«ãããã®å±æ§ã®ç°ãªãå¤ã®uniqueCountãè¡¨ãã¾ããè¦ç´ ã1ã¤ãããªãå ´åããã®å±æ§ã®å¤ãç¤ºãã¾ãã ããã©ã«ãã§ã¯ããã£ã¡ã³ã·ã§ã³ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã ã¡ããªãã¯ã¹ãè©³ããèª¿ã¹ã APM æéåºåããã¼ã¿ãèª¿ã¹ãã«ã¯ãAppIDãAppNameãã¾ãã¯EntityGuidãã¹ãããã¨ãã¦é¸æãã¾ãï¼ã¾ãã¯ãããã®ã¹ãããã§ã°ã«ã¼ãåãã¾ãï¼ãããä»¥å¤ã®å ´åã¯ããã¹ã¦ã®ã¨ã³ãã£ãã£ã®éè¨ãã¼ã¿ãåå¾ãã¾ãã ã¡ããªãã¯ é¸æããã¢ã«ã¦ã³ãã§ä½¿ç¨ã§ãããã¹ã¦ã®ã¡ããªãã¯ã¹ãè¡¨ç¤ºãã¾ãã ããã©ã«ãã§ã¯ãã¡ããªãã¯ã¹ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã ãã£ã¡ã³ã·ã§ã³ ä»¥åé¸æããã¡ããªãã¯ã®ãã¹ã¦ã®ãã£ã¡ã³ã·ã§ã³ãè¡¨ç¤ºãã¾ãã ãã£ã¡ã³ã·ã§ã³ã¯ãã¡ããªãã¯ã«ã¤ãã¦ã®æå ±ãæä¾ããæå­åå¤ã§ãã æ¿åº¦ãããªãã¡é¸æããæéç¯å²ã«ãããã®å±æ§ã®ç°ãªãå¤ã®uniqueCountãè¡¨ãã¾ããè¦ç´ ã1ã¤ãããªãå ´åããã®å±æ§ã®å¤ãç¤ºãã¾ãã ããã©ã«ãã§ã¯ããã£ã¡ã³ã·ã§ã³ã¯ååã§ä¸¦ã¹æ¿ãããã¾ãã éè¦ ã¦ãããã®è¡¨ç¤ºã«ã¯ãã¡ããªãã¯ã·ã¹ãã ï¼ã¡ããªãã¯SIãã¬ãã£ãã¯ã¹ãå«ãï¼ãä½¿ç¨ããã¦ãã¾ãã èª¿æ»ãå¯è¦åãçµãè¾¼ã èª¿æ»ã®çµæã¯ãå³å´ã®ã¯ã¼ã­ã³ã°ã¹ãã¼ã¹ã«è¡¨ç¤ºããã¾ãã èª¿æ»ãçµãè¾¼ããããã£ã¼ããå±æãã ã¯ã¼ã­ã³ã°ã¹ãã¼ã¹ã«ã¯ãæ¬¡ã®ãã®ãè¡¨ç¤ºããã¾ãã ã¯ã¨ãªã¨ãªã¢ ã¯ã¨ãªã¨ãªã¢ã§ã¯ãã¯ã¨ãªãç°ãªãæ§æè¦ç´ ã«åè§£ãã¾ããããã§ãNRQLã¯ã¨ãªã¨ãã¦èª¿æ»ã®çµæãç°¡åã«èª­ã¿ããã­ãããã¦ããæ­£ç¢ºãªãã¼ã¿ããã§ãã¯ã§ãã¾ãã NRQLã«ç¿çãã¦ããªãå ´åããã®ã¨ãªã¢ããã§ãã¯ãã¯ã¨ãªã®ä½ææ¹æ³ã«ã¤ãã¦å­¦ç¿ãã¾ãã ã¯ã¨ãªã®å¥ã®é¨åã¯æ¬¡ã®ã¨ããã§ãã [ ã¤ãã³ãã®ã¿]FROM: æåã®ãã­ãã¯ã§é¸æããã¤ãã³ãã SELECT: é¸æãããã­ããã¾ãã¯ã¡ããªãã¯ããã®å¥åã§ã¯ã1ã¤ã®å¤ã¨1ã¤ã®é¢æ°ã®ã¿ããã­ãããã¾ãã GROUP BY: FACETå¥ãè¡¨ããé¸æãããã£ã¡ã³ã·ã§ã³ãã¨ã«ãã¼ã¿ãã°ã«ã¼ãåãã¾ãã LIMIT: è¡¨ç¤ºããå¤ã®éãå¥åãã¾ãã WHERE: ãã®ãã£ã¼ã«ããä½¿ç¨ãã¦ãçµæã«ããã«ãã£ã«ã¿ã¼ãé©ç¨ãã¾ãããã®å¥åã§ã¯ãnå¤ããã­ãããã¾ãã åé ç®ã¯ãxãã¯ãªãã¯ãã¦ã¯ã¨ãªããåé¤ã§ãã¾ãã NRQLã¯ã¨ãªè¡¨ç¤º ä¸è¨ã®ãã£ã¼ã«ãã¨ãã¿ã¤ã ããã«ã¼ã§é¸æããæéç¯å²ã§æ§æããããå®å¨ãªã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãã ãã³ã ããè©³ç´°ãªæ¤ç´¢ãè¡ããã¾ãã¯ãã£ã¼ããã«ã¹ã¿ãã¤ãºããå¿è¦ãããå ´åãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ãããã¯ã¨ãªãã«ãã¼ã«ã¢ã¯ã»ã¹ãã¦ã¯ã¨ãªãç·¨éã§ãã¾ãã ãã£ã¼ãã¨ãªã¢ ããã©ã«ãã§ã¯ããã¼ã¿ã¯ç·ãã£ã¼ãã§è¡¨ç¤ºããã¾ãããã£ã¼ãããã«ã¼ãä½¿ç¨ãã¦ãé¢ã°ã©ããåã°ã©ããããã³ãã¼ãã£ã¼ãã«ç°¡åã«åãæ¿ãããã¨ãã§ãã¾ããçµæã®çãã¼ã¿ããã¼ãã«ã¾ãã¯JSONå½¢å¼ã¨ãã¦è¡¨ç¤ºãããã¨ãã§ãã¾ãã ãã£ã¡ã³ã·ã§ã³ãé¸æãã¦ããå ´åããã£ã¼ãã¯ç°ãªããã¡ã»ããã§æ´æ°ããã¾ãããã£ã¼ãã®ä¸ã«ããã¡ã»ããã®ãªã¹ãã¨ããããã®å¤ããããã¡ã»ããã®è¡¨ãè¡¨ç¤ºããã¾ãã ãã¡ã»ãããã¼ãã«ãä½¿ç¨ãã¦ããã¼ã¿ãããªã«ãã¦ã³ãã¾ããã¯ãªãã¯ãããã¡ã»ããã¯ãã£ã«ã¿ã¼ã¨ãã¦é©ç¨ããã¾ããè¡¨ã¯è¡¨ç¤ºãããã¾ã¾ãªã®ã§ãå¥ã®ãã¡ã»ãããç°¡åã«é¸æãã¦èª¿æ»ãç¶ãããã¨ãã§ãã¾ãã å±æãã¦ã¨ã¯ã¹ãã¼ã å³ä¸ã«ãããªãã·ã§ã³ã¡ãã¥ã¼ãä½¿ç¨ãã¦ããã£ã¼ããç»åã¨ãã¦åå¾ãã¾ãã¯ãªã³ã¯ã¨ãã¦å±æãããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãã ã¾ããURLãã³ãã¼ãããã®ä»ã®New Relicã¦ã¼ã¶ã¼ã¨èª¿æ»å¨ä½ãå±æãããã¨ãã§ãã¾ãã ä½¿ç¨äºä¾ æ¬¡ã®ä¾ã§ããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ããã¤ã©ã®ããã«ä½¿ç¨ãããã«ã¤ãã¦å­¦ç¿ãã¦ãã ããã æ°è¦ãã¼ã¿ãç¢ºèª æ°è¦ã¤ã³ã¹ãã¥ã«ã¡ã³ãã¼ã·ã§ã³ã«æ¥ç¶ããã°ããã§ãæ°è¦ãã¼ã¿ãå©ç¨ã§ãããã©ããç¢ºèªãããã¨æã£ã¦ãã¾ãã ã¢ã«ã¦ã³ãã¨ã¤ãã³ããã¾ãã¯æ°è¦ãã¼ã¿ãçæãã¦ããã¡ããªãã¯ãé¸æãã¾ãã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§å¥ã®ãã¼ã«ãä½¿ç¨ãã¦ãå©ç¨ã§ããããã«ãªã£ãæ°è¦ãã¼ã¿ãä½¿ã£ã¦ã¿ãï¼ãã®ã¤ãã³ãã¾ãã¯ã¡ããªãã¯ã®çãã¼ã¿ãè¡¨ã¨ãã¦è¦ããã¾ãã¯ãªã¹ãã¨ãããã¾ãã¯ã¯ãªãã¯ãã¦ãã£ã¼ãã¨ãã¦ãã­ããããããã¨ãç¢ºèªãã¾ãã ã¤ãã³ããã¡ããªãã¯ãé¸æããå¾ããã£ã¡ã³ã·ã§ã³ã§ãã¼ã¿ã®å½¢ç¶ãç¢ºèªãã¾ããæ¿åº¦ãä½¿ç¨ãã¦ããããããã¼ã¿ã®ç°ãªãè¦ç¹ãç¢ºèªã§ãã¾ãã é¢é£æ§ãè¦ã¤ãã£ãå ´åããã·ã¥ãã¼ãã«ä¿å­ããããååã¨å±æãã¾ãã ãã¼ã¿ãæ¤è¨¼ ã«ã¹ã¿ã ã¤ãã³ã/ã¡ããªãã¯ãå¤æ´ããã®ã§ããã®å¤æ´ãæ­£å¸¸ã«è¡ããããã©ããããã§ãã¯ããå¿è¦ãããã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã¿ãã§ãå¤æ´ããã¢ã«ã¦ã³ãã¨ãã¼ã¿ã¿ã¤ããã¤ãã³ã/ã¡ããªãã¯ãé¸æãã¾ãã ã¨ã³ãã£ãã£ããã¼ã¿ãã¬ãã¼ããã¦ãããã¨ã¨ããã¹ã¦ã®å±æ§ããã­ããããã¦ãããã¨ãç¢ºèªãã¾ãã å¤æ´ããå±æ§ãæ¤ç´¢ããæ´æ°ãæ­£å¸¸ã«è¡ããããã¨ããã§ãã¯ãã¾ãã ãã¼ã¿ã®åé¡ã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã° ã¢ã©ã¼ããããã·ã¥ãã¼ãããã®ã¤ãã³ã/ã¡ããªãã¯ã§ä½ãåé¡ããããã¨ãåãã£ã¦ãããã¤ãã³ã/ã¡ããªãã¯å±æ§ã®åä½ã«ã¤ãã¦ãæ ¹æ¬åå ãç¥ãå¿è¦ãããã ãã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ãã¡ãã¥ã¼ãä½¿ç¨ãã¦ãæ³å®ã©ããã«åä½ãã¦ããªãã¤ãã³ããã¡ããªãã¯ãé¸æãããã¼ã¿ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ãã®ãã£ã¼ãããã­ãããã¾ãã ããããããã®ãã¼ã¿ã®ãã£ã¡ã³ã·ã§ã³ãæãä¸ãã¦ãé¢é£ããå±æ§ã«ãããã£ã«ã¿ã¼ãé©ç¨ã§ãã¾ãã ã¾ããæ¬¡ã®ãããªç°ãªãè¦³ç¹ãããã®ãã¼ã¿ãææ¡ãããã¨ãã§ãã¾ãï¼åå¸ãå¤ã®é ä½ãçµæé²åã é¢é£æ§ãè¦ã¤ãã£ãå ´åããã·ã¥ãã¼ãã«ä¿å­ããããååã¨å±æãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 108.9415,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Explore</em> and query data"
      },
      "id": "605343b4196a6754132d166e"
    },
    {
      "sections": [
        "Introduction to the data explorer",
        "Tip",
        "Why it matters",
        "Query your data",
        "Use the data explorer",
        "Explore your events",
        "Explore your metrics",
        "Important",
        "Visualize and refine your exploration",
        "Querying area",
        "NRQL query display",
        "Chart area",
        "Share and export",
        "Use cases",
        "Discover your new data",
        "Validate your data",
        "Troubleshooting data issues"
      ],
      "title": "Introduction to the data explorer",
      "type": "docs",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Explore data"
      ],
      "external_id": "8f390d6aa6f57d215b3c23f8cf08c02ef310bddc",
      "image": "https://docs.newrelic.com/static/e5a9353fdbe2b92dba6856c1ee912b02/c1b63/data_explorer_new.png",
      "url": "https://docs.newrelic.com/docs/query-your-data/explore-query-data/explore-data/introduction-data-explorer/",
      "published_at": "2021-03-18T12:12:36Z",
      "updated_at": "2021-03-16T11:03:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "With the data explorer you can navigate all your data visually, without any NRQL knowledge. Use the data explorer to access, query and customize your data, create visualizations, and make connections between your services in a consistent and curated experience. Tip To use the data explorer and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters Do you research the state of your systems? Do you need to plan resources, identify and respond to incidents, or troubleshoot faulty behaviors? The data explorer makes it easy to identify, fetch and visualize the data you are looking for through visual menus, without ever using NRQL or building queries. With the data explorer you can: Access events and metrics data in a quick, intuitive way. Exploit the dimensionality of data by making it visible and easily actionable upon. See data from different points of view: from raw data to different visualizations that provide insights on evolution, distribution, etc. Drill down into data with filters. Add your searches to a dashboard in a click. Understand how NRQL works: data explorer shows how queries are built while navigating the available data. Tip Want to switch to New Relic One from Insights? See our transition guide. Query your data To access the data explorer, go to one.newrelic.com and At the top of the page, click the Query your data icon. At the Browse data dropdown, select Events or Metrics. The data explorer is the portal to explore all the data you have in New Relic. You can explore events and metrics on the data explorer UI, or select the Logs and Traces apps to explore those. You can also access the query builder any time by clicking on the tab. Use the data explorer The data explorer consists of a scoping section on the top (a), a data browsing area on the left (b), and a workspace (c). To use the data explorer: Define the scope of the exploration: select the account and data type (metric or event) you want to browse. Select the time range using the time picker. Use the blocks on the left to browse the available data for either events or metrics, and build your search. You can only select one element per block. Blocks are searchable. Explore your events Event type Lists all available events for the selected account. By default, events are sorted by Name. Plot Lists all the numeric attributes of the event previously selected. The first item on the list is count( * ), which is not an attribute. It calculates the count of the selected event. By default attributes are sorted by Name. Select the function that you want to plot. By default each attribute is set to the function Average. Dimensions Lists all the dimensions of the event and plot previously selected. Dimensions are string values that provide information on the event. They represent the cardinality, that is, the uniqueCount of the different values of that attribute in the selected time range. If there is only one element it shows the value of the attribute. By default, dimensions are sorted by Name. Explore your metrics To explore APM timeslice data, select AppID, AppName, or EntityGuid as dimensions (or group by those dimensions). Otherwise, you'll get aggregated data for all entities. Metric Lists all the metrics available for the selected account. By default, metrics are sorted by Name. Dimensions Lists all the dimensions of the metric previously selected. Dimensions are string values that provide information on the metric. They represent the cardinality, that is, the uniqueCount of the different values of that attribute in the selected time range. If there is only one element it shows the value of the attribute. By default, dimensions are by Name. Important We use the metric system (including metric SI prefixes) to display our units. Visualize and refine your exploration The result of your exploration is displayed in the working space on the right. Refine your exploration, or share your chart At the working space you can see: Querying area The querying area breaks down the query into its different constituents. Here you can easily read the result of your exploration as a NRQL query, and check the exact data being plotted. If you are not familiar with NRQL, check this area to learn how queries are built. The different parts of the query are: [ EVENTS ONLY]FROM: the event selected on the first block. SELECT: the plot or metric selected. This input plots only one value and one function. GROUP BY: represents the FACET clause, and groups the data by the selected dimension. LIMIT: type in the amount of values you want to see. WHERE: use this field to further filter results. This input plots n values. Each item can be deleted from the query by clicking on the x. NRQL query display You can see the full query, which is composed by the fields above and the time range selected with the time picker. Tip Need to do more advanced searches or customize your charts? From data explorer you can access query builder to edit the query. Chart area By default data is displayed on a line chart. You can easily change to Area chart, Pie chart, and Bar chart using the chart picker. You can also choose to see your results' raw data as a table, or as in JSON format. If you have selected a dimension, the chart is updated with the different facets. Below the chart you can see the facets' table with the list of facets and the value for each one. Use the facet table to drill down data. By clicking on a facet, it is applied as a filter. The table stays visible so you can easily select another facet to continue your exploration. Share and export You can get the chart as an image, share it as a link, or add it to a dashboard using the Options menu on the top right corner. You can also copy the URL and share your whole exploration with other New Relic users. Use cases See the following examples to learn how and when to use the data explorer. Discover your new data Iâve just connected new instrumentation and want to see if new data is available. Select the account and event or metric that's generating the new data. Use the different tools in the data explorer to toy around the new data that has become available: have a look at the raw data of that event or metric as a table, shape it as a list, or click to see it plotted as a chart. After selecting an event or metric, discover the shape of the data in its dimensions. Guided by cardinality, you can see the different points of view of any data. Found anything relevant? Save it to a dashboard or share it with a colleague. Validate your data I changed a custom event/metric and need to check if this change has been successful. In the data explorer tab, select the account, data type and event/metric you made changes to. Verify the entity is reporting data, and that all the attributes are being plotted. Find the attribute you made changes to and check the update was successful. Troubleshooting data issues I know thereâs something off with an event/metric from an alert or dashboard. I need to know the root cause about the event/metric/attribute behavior. In the data explorer, use the menus to select the event or metric that's not behaving as expected and let the data explorer plot that chart. From there, you can drill down in the dimensions of that data and filter by those attributes that are relevant. You can also see that data from different perspectives: its distribution, ranking of values, or evolution over time. Found anything relevant? Save it to a dashboard or share it with a colleague.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 93.68713,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to the data <em>explorer</em>",
        "sections": "Introduction to the data <em>explorer</em>",
        "tags": "<em>Explore</em> and query data",
        "body": " icon. At the Browse data dropdown, select Events or Metrics. The data explorer is the portal to <em>explore</em> all the data you have in New Relic. You can <em>explore</em> events and metrics on the data explorer UI, or select the Logs and Traces apps to <em>explore</em> those. You can also access the query builder any time"
      },
      "id": "603e962e28ccbc6a92eba7a8"
    },
    {
      "sections": [
        "New Relic Global Performanceãã¼ã¿ã»ãã",
        "éè¦",
        "æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã",
        "Public API Performanceããã·ã¥ãã¼ããéå§ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relic Global Performanceãã¼ã¿ã»ãã",
      "type": "docs-jp",
      "tags": [
        "Query your data",
        "Explore and query data",
        "Dashboards"
      ],
      "external_id": "a1a8dc00fa765076cf92d83e758f909c75c335ad",
      "image": "https://docs.newrelic.com/static/353175f500c15eb2209965910deb84b4/c1b63/Public-API-Performance-Dash-for-GPD.png",
      "url": "https://docs.newrelic.com/jp/docs/query-your-data/explore-query-data/dashboards/new-relic-global-performance-data-sets/",
      "published_at": "2021-03-18T12:11:39Z",
      "updated_at": "2021-03-18T12:11:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ãã¬ã¡ããªã¼ãã¼ã¿ãã©ãããã©ã¼ã ã®ä¸é¨ã§ããNew Relicã®Global Performanceãã¼ã¿ã»ãããä½¿ç¨ãã¦ãæç¨ã§å¤§è¦æ¨¡ãªéè¨ããããã¬ã¡ããªã¼ãã¼ã¿ã«ãã ã¡ã«ã¢ã¯ã»ã¹ã§ãã¾ãã Global Performanceãã¼ã¿ã»ããã®ãã¼ã¿ã¯ãæ¬¡ã®æ¹ã«ã¨ã£ã¦æç¨ã§ãã éè¨ãããå®éã®ãã¼ã¿ã®ã­ã¥ã¬ã¼ãæ¸ã¿ã®éåãä¸è¬çã«ã¢ãã¿ã¼ããã©ãã«ã·ã¥ã¼ãã£ã³ã°ã«ã¤ãã¦ã®ç¥è¦ãå¾ãããæ¢å­ã®New Relicã®ãå®¢æ§ã New Relicã®ããã·ã¥ãã¼ãããã¼ã¿ãã¼ã«ã«ã¤ãã¦ç¥ããèªèº«ã®ãã¼ã¿ãNew Relicã«è¿½å ããæ¹æ³ã«ã¤ãã¦æå ±ã«åºã¥ãæ±ºå®ãè¡ãããå®éã«ãã¼ã¿ãè¦è¦åãã¦è¡¨ç¤ºããããæ°è¦ã®ãå®¢æ§ã ãã®ãªã½ã¼ã¹ã«ã¯ãGlobal Performanceãã¼ã¿ã»ããã«ã¤ãã¦ã®æå ±ããã®ããã¿ãåä½ãGlobal Performanceãã¼ã¿ã¸ã®ã¢ã¯ã»ã¹ã«ã¤ãã¦ã®ç¾å¨ã®ãªãã·ã§ã³ãè¨è¼ããã¦ãã¾ãã Public API Performanceããã·ã¥ãã¼ã éè¦ æ¬¡ã®ç¹ã«ãæ³¨æãã ãããGlobal Performanceãã¼ã¿ã»ããã¯ãç¾ç¶ã®ã¾ã¾ã§æç¤ºããã¾ããGlobal Performanceãã¼ã¿ã»ããã¯ãä¸é£ã®ã½ã¼ã¹å¨ä½ã§ã®ãµã³ãã«ã®éè¨ãè¡¨ããNew Relicã¯ãã¼ã¿ãæ­£ãããã¨ãå®å¨ãªãã¨ããã¼ã¿ã®ä¿¡ææ§ã®ç¢ºèªã¯è¡ãã¾ããããã®ãã¼ã¿ã¯ããã¼ã¿ãä½¿ç¨ããç®çã«ã¤ãã¦å¯ä¸ã®æå ±æºã¨ããªãã§ãã ãããNew Relicã¯ããã®ãã¼ã¿ã«åºã¥ãã¦è¡ãããæ±ºå®ã«ã¤ãã¦è²¬ä»»ãè² ãã¾ãããGlobal Performanceãã¼ã¿ã»ããã¯ããã¼ã¿ã»ããã§è¡¨æãããæè¡ã«ã¤ãã¦ã®New Relicã«ããä¿è¨¼ãæ¨å¥¨ã¨ã¯èããªãã§ãã ããã æç¨ãªãã¼ã¿ã«ã¢ã¯ã»ã¹ãNew Relicãè©¦ãã¦ã¿ã å½ç¤¾åã®Global Performanceãã¼ã¿ã»ããã§ããPublic API Performanceã¯ãAWSãGoogleãNew Relicã®ãå®¢æ§ãï¼æ­£è¦ã«ï¼ä½é¨ã§ãããã®ãå«ãããããªãã¯APIã®ããã©ã¼ãã³ã¹ã«ã¤ãã¦ã®ãå®éã®ãªã¢ã«ã¿ã¤ã ãã¼ã¿ãæ°å¤ãæä¾ãã¦ãã¾ãã ãã®ãã¼ã¿ã¯ãã§ã«New Relicãéãã¦æµãã¦ãããããã¢ã«ã¦ã³ãã®ã¢ã¯ãã£ãã¼ã·ã§ã³ããæ°ç§ä»¥åã«ãã¼ã¿ã«ã¢ã¯ã»ã¹ãããã­ã»ã¹ã§New Relicã®ããã·ã¥ãã¼ããã¯ã¨ãªæ©è½ãè©¦ãã¦ã¿ããã¨ãã§ãã¾ãã èªèº«ã®ãã¼ã¿ã½ã¼ã¹ãNew Relicã«æåã«æ¥ç¶ããå¿è¦ã¯ããã¾ãããããå®¢æ§èªèº«ã®ãã¼ã¿ã®è¿½å ã¯ç°¡åãã¤ç¡æã§è¡ããNew Relicããå®¢æ§ã®ãã¸ãã¹ãã¼ãºã«ã©ã®ããã«å½¹ç«ã¤ããçè§£ããã®ã«æé«ã®æ¹æ³ã§ããããããã¼ã¿ã½ã¼ã¹ãè¿½å ãããã¨ãæ¨å¥¨ãã¾ãã Public API Performanceããã·ã¥ãã¼ããéå§ãã Public API Performanceãã¼ã¿ãä½¿ç¨ãã¦éå§ããä¸å©ã¨ãã¦ãå½ç¤¾ã§ã¯Public API Performanceããã·ã¥ãã¼ããä½æãã¾ããããã®ããã·ã¥ãã¼ãã¯ãå®è¡å¯è½ãªä¸è¬çãªç¥è¦ã¨åæã®ä¸¡æ¹ãæä¾ããã¾ãããã·ã¥ãã¼ãã®æ©è½ãèªèº«ã®ãã¼ã¿ã«ã©ã®ããã«é©ç¨å¯è½ãã®ä¾ãæä¾ãã¾ãã æ°è¦ã®ãå®¢æ§ã¨æ¢å­ã®ãå®¢æ§ã®ãããããPublic API Performanceããã·ã¥ãã¼ãã§Global Performanceãã¼ã¿ãè¿éãã¤ç°¡åã«è¡¨ç¤ºã§ãã¾ãããã®ããã·ã¥ãã¼ãã®ä½¿ç¨ãéå§ããã«ã¯ãPublic API Performanceããã·ã¥ãã¼ãã«ã¤ãã¦è©³ããèª¿ã¹ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 88.4657,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Explore</em> and query data"
      },
      "id": "6053437b28ccbc1ce2c2fd65"
    }
  ],
  "/explore-docs/nerdpack-file-structure": [
    {
      "sections": [
        "Build a custom visualization for dashboards",
        "Before you begin",
        "Create a new visualization",
        "Tip",
        "Render the visualization in local development",
        "Important",
        "Advanced nerdpack configuration",
        "Deploy and use your visualization",
        "Summary",
        "Additional resources"
      ],
      "title": "Build a custom visualization for dashboards",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "NR One Catalog",
        "Subscribe visualizations"
      ],
      "external_id": "5e17f1f0db2020342ced37e95dbcb94489b5ca73",
      "image": "https://developer.newrelic.com/static/cf9bafc3fc03f7562e4f969cafcd7659/30c01/visualization-apps-navigation.png",
      "url": "https://developer.newrelic.com/build-apps/build-visualization/",
      "published_at": "2021-03-18T01:52:08Z",
      "updated_at": "2021-03-17T01:51:21Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Create custom data views",
      "body": "Building your own visualizations for New Relic dashboards enables you and your organization to query data from any source and display it on your dashboard. In this guide, you'll learn how to use the CLI to generate a visualization file structure, run it locally where you can quickly test and iterate, and then deploy it for use in a dashboard. Before you begin To get started, make sure you have a New Relic account. To complete this guide, you need the New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in the CLI quick start. Create a new visualization In this first set of steps you will use the CLI to quickly generate the boilerplate for a new visualization. Step 1 of 3 Ensure you're working with the latest version of the New Relic One CLI: bash Copy $ nr1 update Step 2 of 3 Start with a new Nerdpack. If you just installed the New Relic One CLI, then you have a new Nerdpack project directory (called something like my-awesome-nerdpack). If you need to create one, run nr1 create and select the nerdpack option. bash Copy $ nr1 create --type nerdpack --name my-awesome-nerdpack Tip Note: If you only want to build a visualization in your Nerdpack, you can remove the nerdlets/ and launchers/ folders from the nerdpack Step 3 of 3 Navigate to the root of your Nerdpack project and run theÂ nr1 createÂ command, selecting the visualization option. bash Copy $ cd my-awesome-nerdpack $ nr1 create --type visualization --name my-awesome-visualization As a result, you have a new visualization directory matching the name you gave your visualization. It is located in the visualizations directory in the root of your Nerdpack project. The files created provide an example visualization âÂ a radar chart populated by a basic NRQL query. The nr1.json file provides metadata. TheÂ configurationÂ key in this metadata defines the prop-input fields to be shown in the UI. These are the fields users will fill in to create an instance of the visualization. Supported input types are: boolean string number json enum: a developer-defined list of string options. nrql: a single NRQL query string. namespace: a group of input fields to be displayed together under a shared heading in the prop-editing UI. collection: a repeatable group of input fields to be displayed together under a shared heading in the prop-editing UI. The nrqlQueries entry is an example of a collection type. The index.js file is where you define the React component that receives the props and renders the visualization. You can install and import any JavaScript libraries you find useful. The example component imports Recharts, a library that wraps D3 submodules for easy-to-compose visualizations. If your visualization queries data over a time range and you want it to utilize the platform time range setting, you will need to utilize the timeRange value from PlatformStateContext. The timeRange can be passed directly to the NrqlQuery component. Setting the NrqlQuery component's pollInterval prop to NrqlQuery.AUTO_POLL_INTERVAL automatically handles calculating an appriate data polling interval. <PlatformStateContext.Consumer> {({timeRange}) => ( <NrqlQuery timeRange={timeRange} pollInterval={NrqlQuery.AUTO_POLL_INTERVAL} > ... Copy Render the visualization in local development Now run the generated visualization locally, and view it in Custom Visualizations. There you can quickly test changes to your code. Step 1 of 7 Start the local Node server for your Nerdpack. bash Copy $ nr1 nerdpack:serve Important To see changes to the nr1.json file take effect, restart the local Node server. Changes to the definition of the configuration field will not show up in the prop configuration side bar of the Custom Visualizations UI until you stop the local Node server and start it back up. Step 2 of 7 In a browser, open https://one.newrelic.com/?nerdpacks=local. This url is also shown in the terminal when the Node server starts. The nerdpacks=local query string will direct the UI to load your new visualization artifact from the local Node server. Advanced nerdpack configuration See the advanced nerdpack configuration section for detailed information about how your local Node server is proxied to the browser and how you can override webpack configuration if needed. Step 3 of 7 Open the Apps page, and navigate to Custom Visualizations, which you will find favorited by default. Step 4 of 7 In the Custom Visualizations listing, find and click on the tile for your visualization. If the tile is not showing up or it is not indicating that it is running locally, restart the Node server and refresh the browser. When you select your locally running visualization, the visualization hosted by your local Node server is rendered with prop-configuration inputs. Here you can take advantage of the features outlined in the following steps. Step 5 of 7 You can set prop values and see the visualization update automatically. The prop inputs are listed as defined in the prop definitions located in the nr1.json file in the visualization folder (for example ./visualizations/my-awesome-visualization/nr1.json). Fill in values for the props and see the visualization update automatically. As you change props in the sidebar, a render cycle of your visualization's React component is triggered. Step 6 of 7 Modify the visualization's Javascript code and see the result automatically update in the UI. For example, you can change the value for fillOpacity on the Radar component in index.js. Upon save, you will see the page automatically update. fillOpacity={1.0} visualizations/your-visualization/index.js Copy Step 7 of 7 To add more props, you must update the configuration field in the nr1.json file for your visualization and restart the local Node server. The props you define in the configuration field allow New Relic One to cleanly display a prop-editing UI for users interacting with your visualization. See above for more information about the configuration field. Deploy and use your visualization When your visualization is ready to be added to a dashboard, just follow these steps. Step 1 of 2 Open and follow the guide to publish and deploy the Nerdpack to New Relic One and subscribe accounts to it. Step 2 of 2 Then you can add your visualization to a dashboard. Summary Congratulations on completing the steps in this example! You've learned how to: Create a visualization and run it locally Quickly test and iterate on visualization code changes in Custom Visualizations Deploy a visualization Add a custom visualization to a dashboard Additional resources New Relic Quick Tips video: Dashboards and Custom Visualizations (6 minutes) New Relic NerdBytes video: Configuring custom visualizations for dashboards (7 minutes) New Relic Nerdlog live stream: Custom Data Visualizations on New Relic (30 minutes)",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 841.6486,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Create a <em>new</em> visualization",
        "tags": "nr1 <em>cli</em>",
        "body": "Building your own visualizations for <em>New</em> <em>Relic</em> dashboards enables you and your organization to query data from any source and display it on your dashboard. In this guide, you&#x27;ll learn how to use the <em>CLI</em> to generate a visualization <em>file</em> <em>structure</em>, run it locally where you can quickly test"
      },
      "id": "6039a4dbe7b9d262492a07c4"
    },
    {
      "sections": [
        "Create a \"Hello, World!\" application",
        "Before you begin",
        "Tip",
        "Create a local version of the \"Hello, World!\" application",
        "Publish your application to New Relic",
        "Add details to describe your project",
        "Subscribe accounts to your application",
        "Advance configurations",
        "Extend webpack configuration",
        "Proxy browser setup",
        "Summary"
      ],
      "title": "Create a \"Hello, World!\" application",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "Nerdpack file structure",
        "NR One Catalog",
        "Subscribe applications"
      ],
      "external_id": "aa427030169067481fb69a3560798265b6b52b7c",
      "image": "https://developer.newrelic.com/static/cb65a35ad6fa52f5245359ecd24158ff/9466d/hello-world-output-local.png",
      "url": "https://developer.newrelic.com/build-apps/build-hello-world-app/",
      "published_at": "2021-03-18T01:50:51Z",
      "updated_at": "2020-12-04T01:59:59Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Build a \"Hello, World!\" app and publish it to New Relic One",
      "body": "Here's how you can quickly build a \"Hello, World!\" application in New Relic One. In these steps, you create a local version of the New Relic One site where you can prototype your application. Then, when you're ready to share the application with others, you can publish it to New Relic One. See the video, which demonstrates the steps in this guide in five minutes. Before you begin To get started, make sure you have accounts in GitHub and New Relic. To develop projects, you need the New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in the CLI quick start. For additional details about setting up your environment, see Set up your development environment. Tip Use the New Relic One VSCode extension or the New Relic VSCode extension pack to build your apps. Create a local version of the \"Hello, World!\" application The CLI allows you to run a local version of New Relic One. You can develop your application locally before you publish it in New Relic One. If you followed all the steps in the CLI quick start, you now have files under a new directory named after your nerdpack project. Here's how you edit those files to create a \"Hello, World!\" project: Step 1 of 9 Open a code editor and point it to the new directory named after your nerdpack project (for example, my-awesome-nerdpack). Your code editor displays two artifacts: launchers containing the homepage tile nerdlets containing your application code Step 2 of 9 Expand nerdlets in your code editor, and open index.js. Step 3 of 9 Change the default return message to \"Hello, World!\": import React from 'react'; // https://docs.newrelic.com/docs/new-relic-programmable-platform-introduction export default class MyAwesomeNerdpackNerdletNerdlet extends React.Component { render() { return <h1>\"Hello, World!\"</h1>; } } Copy Step 4 of 9 As an optional step, you can add a custom launcher icon using any image file named icon.png. Replace the default icon.png file under launcher by dragging in your new image file: Tip You will need an icon.png in 2 places for it to be representing properly in the New Relic One Catalog, To set a launcher icon place an icon.png file in the the launcher directory. To set the icon for the app details page place an icon in the root directory of the project. Step 5 of 9 To change the name of the launcher to something meaningful, in your code editor under launchers, open nr1.json. Step 6 of 9 Change the value for displayName to anything you want as the launcher label, and save the file: { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"INSERT_YOUR_TILE_LABEL_HERE\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy Step 7 of 9 To see your new changes locally, start the Node server with this command in your terminal: bash Copy $ npm start Step 8 of 9 Open a browser and go to https://one.newrelic.com/?nerdpacks=local (this url is also shown in the terminal). Step 9 of 9 When the browser opens, click Apps, and then in the Other apps section, click the new launcher for your application. Here's an example where we inserted a leaf icon: After you click the new launcher, your \"Hello, World!\" appears: Publish your application to New Relic Your colleagues can't see your local application, so when you are ready to share it, publish it to the New Relic One catalog. The catalog is where you can find any pre-existing custom applications, as well as any applications you create in your own organization. Step 1 of 4 Execute the following in your terminal: bash Copy $ nr1 nerdpack:publish Step 2 of 4 Close your local New Relic One development tab, and open New Relic One. Step 3 of 4 Click the Apps launcher. Step 4 of 4 Under New Relic One catalog, click the launcher for your new application. When your new application opens, notice that it doesn't display any helpful descriptive information. The next section shows you how to add descriptive metadata. Add details to describe your project Now that your new application is in the New Relic One catalog, you can add details that help users understand what your application does and how to use it. Step 1 of 5 Go to your project in the terminal and execute the following: bash Copy $ nr1 create Step 2 of 5 Select catalog, which creates a stub in your project under the catalog directory. Here's how the results might look in your code editor: Step 3 of 5 In the catalog directory of your project, add screenshots or various types of metadata to describe your project. For details about what you can add, see Add catalog metadata and screenshots. Step 4 of 5 After you add the screenshots and descriptions you want, execute the following to save your metadata to the catalog: bash Copy $ nr1 catalog:submit Step 5 of 5 Return to the catalog and refresh the page to see your new screenshots and metadata describing your project. Subscribe accounts to your application To make sure other users see your application in the catalog, you need to subscribe accounts to the application. Any user with the NerdPack manager or admin role can subscribe to an application from accounts that they have permission to manage. Step 1 of 3 If you're not already displaying your application's description page in the browser, click the launcher for the application in the catalog under Your company applications. Step 2 of 3 On your application's description page, click Add this app. Step 3 of 3 Select the accounts you want to subscribe to the application, and then click Update accounts to save your selections. When you return to the Apps page, you'll see the launcher for your new application. Advance configurations Extend webpack configuration You can use our .extended-webpackrc.js file to extend the webpack 4 configuration. This allows you to add your own aliases, scripts, and configurations when locally serving or deploying your app. Proxy browser setup Generally, you don't need to know how your application code is loaded in New Relic One. But understanding how this works can help you if you encounter issues (for example, with a proxy or browser setup). When developing, your code is served from your local laptop by using an nr-local.net subdomain. This domain points to 127.0.0.1, and will use a variety of ports to connect, including 9973. In order to load third-party code into the platform, (both in development and production), New Relic One uses an <IFRAME>, as well as a separate domain (a subdomain of nr-ext.net) to perform the load, relying on same-domain policy to sandbox the code. For this reason, your network administrator may need to enable access to: Any subdomain of nr-local.net, or, at the very least, to any domain of the shape of <UserId>.nr-local.net, where UserId is a 32-hexadecimal character identifier that is unique to the user logged into the platform (you can use [0-9a-f]{32} to discriminate it). Any subdomain of nr-ext.net, or, at the very least, to any domain in the shape of <NerdpackUuid>.g <NerdpackGid>.nr-ext.net, where NerdpackUuid is the UUID assigned to your package, and NerdpackGid is zero, or a positive integer (you can use 0|[1-9]\\d+ to discriminate it). Summary Now that you've completed the steps in this example, you learned the basic steps to: Create a local application. Publish the application to the New Relic One catalog so you can share it with your colleagues. Add details to the project in the catalog so users understand how to use it. Subscribe accounts to your application so other users can use it.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 475.8272,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Publish your application to <em>New</em> <em>Relic</em>",
        "info": "Build a &quot;Hello, World!&quot; app and publish it to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "body": "!&quot; application The <em>CLI</em> allows you to run a local version of <em>New</em> <em>Relic</em> <em>One</em>. You can develop your application locally before you publish it in <em>New</em> <em>Relic</em> <em>One</em>. If you followed all the steps in the <em>CLI</em> quick start, you now have files under a <em>new</em> directory named after your <em>nerdpack</em> project. Here&#x27;s how you edit"
      },
      "id": "5efa9973196a67d16d76645c"
    },
    {
      "sections": [
        "Charts",
        "Query New Relic data",
        "Craft custom data",
        "Metadata",
        "Data",
        "Tip",
        "Special States",
        "Configure your chart",
        "Chart Groups",
        "Next Step"
      ],
      "title": "Charts",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "Nerdpack file structure"
      ],
      "external_id": "67f2919065eb0e710d863bdbd106db85463cc788",
      "image": "",
      "url": "https://developer.newrelic.com/components/charts/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2021-01-16T01:54:19Z",
      "document_type": "page",
      "popularity": 1,
      "info": "How to use charts in your NR1 app.",
      "body": "In your application, you can display data in charts, like those used elsewhere in New Relic's user interface. The New Relic One SDK provides React components for different chart types. Once you decide the kind of data you want to present, either from New Relic or some other source, you supply that data to your chart, using props. Query New Relic data In some cases, you want to fetch data from New Relic's database. For example, you may want to display a line chart which plots the number of transactions your application receives over time. With your chart component, set the accountId and query props to query your New Relic data using NRQL: <LineChart accountId={1234} query=\"SELECT count(*) FROM Transaction\" />; Copy Alternatively, you can fetch data with a NrqlQuery and set the data prop: <NrqlQuery accountId={1234} query=\"SELECT count(*) FROM Transaction\"> {({ data }) => <LineChart data={data} />} </NrqlQuery>; Copy If you're looking to visualize New Relic data, such as your web application's response times or your server's throughput, querying data in your charts is the way to go. But what if you want to create charts that aren't focused on New Relic data? The data prop is flexible enough that you can supply any arbitrary data, as long as it matches the standardized format. Craft custom data Whether you use custom data sets or the results of a NrqlQuery, a chart's data prop must be an array of objects where each object has both of the following fields: metadata: Defines how the chart presents its data data: An array of data points that appear on the chart For example, create a chart consisting of a line between two points by supplying two x-y coordinates in its data field: const data = [ { metadata: { id: 'series-1', name: 'My series', viz: 'main', color: 'blue', }, data: [ { x: 0, y: 0, }, { x: 20, y: 10, }, ], }, ]; <LineChart data={data} />; Copy This LineChart plots a line between coordinates (0, 0) and (20, 10). Use x-y coordinates for all two-dimensional chart formats. For other formats, which you'll learn more about later, use other types of data points. Because data accepts an array, you can supply two series to the same chart: const data = [ { metadata: { id: 'series-1', name: 'My series', viz: 'main', color: 'blue', }, data: [ { x: 0, y: 0, }, { x: 20, y: 10, }, ], }, { metadata: { id: 'series-2', name: 'My second series', viz: 'main', color: 'red', }, data: [ { x: 0, y: 50, }, { x: 20, y: 100, }, ], }, ]; <LineChart data={data} />; Copy In this example, you create a single chart with two series. The first series contains the line from the last example. The second series contains a line between points (0, 50) and (20, 100). When using two series in a single chart, like this, you may want to define how the chart represents each series. Use metadata to define those elements. Metadata A series's metadata defines certain features of the series, itself, such as how it should be displayed in your chart. metadata consists of the following attributes: Attribute Description id The series's identifier. Two series having the same id are considered the same series, regardless of where they are located. In general, use a unique id for each series. However, if you use the same series for multiple charts, keeping the id consistent can help with some cross-chart functionality, like simultaneously highlighting multiple charts. name The series's name. name is used in legends, tooltips, and other areas to indicate which series youâre looking at. color The series's color. Most visualizations use this value to differentiate series. Some visualizations, like BillboardChart or JsonChart, ignore it. Use any valid CSS color representation, such as #RRGGBB, hsl(HHH, SS%, LL%), or rgba(RR, GG, BB, .AA). Avoid tweaking the alpha value, when possible, because charts use alpha to highlight or dim certain series. viz The series's visual style. While you most often use main, this field accepts several options: main: Show the series based on chart's type. For instance, a LineChart shows the series as a line, and an AreaChart shows the series as an area. line: Show the series as a line, regardless of the chart's type. This setting applies only to AreaChart and ScatterChart. Other chart types will not show the series. area: Show the series as an area, regardless of the chart's type. This setting applies only to LineChart and ScatterChart. Other chart types will not show the series. event: Show the series as an event, regardless of the chart's type. Charts represent an event as a vertical area behind the main visualization. Events are often used to show alerts. This setting applies only to AreaChart, LineChart, and ScatterChart. Other chart types will not show the series. target-line: Show the series as a vertical line. This setting applies only to AreaChart, LineChart, and ScatterChart. Other chart types will not show the series. units_data You can assign a unit type to each axis on a chart. The chart will present data according to the unit type you set with units_data. To set unit_data, pass a JSON object with maps the axis to one of the following unit types: UNKNOWN: The chart displays the series with no special units. COUNT: Each value in the chart represents a count. The chart formats values with their International System prefix. For example, \"k\" represents thousands, \"M\" represents millions, and \"G\" represents billions. PERCENTAGE: Each value in the chart represents a percentage. Typically, you provide values ranging from 0 to 1. The chart formats a value of 1 as \"100%\", a value of 2 as \"200%\", and a value of 0.01 as \"1%\". MS: Each value in the chart represents some number of milliseconds. The chart represents values higher than 1 as a human-readable time duration. For example, 60000 is represented as \"1 minute\". The chart represents values lower than 1 using SI prefixes. For example, 0.001 is represented as 1 Î¼s. TIMESTAMP: Each value in the chart represents a timestamp, the number milliseconds since midnight UTC on January 1, 1970, the UNIX Epoch. The chart formats each value as a date. BITS: Each value in the chart represents some number of bits. The chart formats these values using \"b\". When upscaling, the chart will display decimal prefixes instead of binary ones. For example, the chart displays 1000 as \"1 kb\". BITS_PER_SECOND: Each value in the chart represents some number of bits per second. The chart formats these values using \"b/s\". When upscaling, the chart will display decimal prefixes instead of binary ones. For example, the chart displays 1000 as \"1 kb/s\". BYTES: Each value in the chart represents some number of bytes. The chart formats these values using \"B\". For example, the chart displays 1000 as \"1 kB\". BYTES_PER_SECOND: Each value in the chart represents some number of bytes per second. The chart formats these values using \"B/s\". For example, the chart displays 1000 as \"1 kB/s\". So, to represent the y-axis for your series in bits, set the y-value in units_data: { \"units_data\": { \"y\": \"BITS\" } } Data While a data series can contain any arbitrary values, a chart only uses values which adhere to its type. So, create your data points according to the chart type: Series Type Example Description Unidimensional [{ \"y\": 10 }, { \"y\": 20 }] The chart plots data points using y values. Use this format with BarChart, BillboardChart, PieChart, StackedBarChart. Two-dimensional [ { \"x\": 10, \"y\": 20 }, { \"x\": 20, \"y\": 30 } ] The chart plots data points using x and y values. Use this format with AreaChart, LineChart, ScatterChart, SparklineChart, Funnel [{ \"label1\": 10, \"label2\": 20 }] The chart plots data according to labels. Use this format with FunnelChart. Table [{ \"jobType\": \"SIMPLE\", \"count\": 18 }] The chart plots data according to table columns. You must specify table columns in the metadata. Use this format with TableChart. Event [ { \"x0\": 0, \"x1\": 5 }, { \"x0\": 10, \"x1\": 15 } ] The chart plots the event's width based on x0 and x1 values. Histogram [ { \"x0\": 10, \"x1\": 20, \"y\": 100 }, { \"x0\": 30, \"x1\": 40, \"y\": 150 } ] The chart plots the series's width based on x0 and x1 and height based on y. Use this format with HistogramChart and HeatmapChart. Tip JsonChart is a special case because it processes any valid data. For example, you can set an arbitrary JSON object for the chart's data: const data = { data: [ { id: 1, name: 'Foo', price: 123, tags: ['Bar', 'Eek'], stock: { warehouse: 300, retail: 20, } } ], } <JsonChart data={data} /> Copy Special States In previous sections, you learned that a chart's data is an array of series. But you can use special values to present special chart states: null or undefined: Indicates the chart is âloadingâ its data. In this state, the chart shows a placeholder data set. []: Indicates there is no data to show. The chart states, \"No chart data available\". Configure your chart As you've seen, you use query or data to supply data to your chart, but you can configure other aspects of your chart, too, such as visual settings and click and hover event listeners. Read the documentation for the chart you're using for more specific information. Chart Groups Under some circumstances, you might want to synchronize events, such as dragging or scrubbing, across multiple charts. To do this, use a ChartGroup. All charts in a ChartGroup synchronize their events: <ChartGroup> <Stack> <StackItem> <LineChart accountId={1} query=\"SELECT count(*) FROM Transaction SINCE 1 hour ago\" /> </StackItem> <StackItem> <AreaChart accountId={1} query=\"SELECT count(*) FROM Synthetics SINCE 1 day ago\" /> </StackItem> </Stack> </ChartGroup>; Copy Ideally, group charts that are conceptually related, and separate charts that are conceptually unrelated. Next Step Read the documentation specific to the chart you'd like to use to learn specifics about that chart's behavior and configuration.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 353.36798,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Query <em>New</em> <em>Relic</em> data",
        "tags": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "body": "In your application, you can display data in charts, like those used elsewhere in <em>New</em> <em>Relic</em>&#x27;s user interface. The <em>New</em> <em>Relic</em> <em>One</em> SDK provides React components for different chart types. Once you decide the kind of data you want to present, either from <em>New</em> <em>Relic</em> or some other source, you supply"
      },
      "id": "5fdab9f1e7b9d2e1e8df9221"
    },
    {
      "sections": [
        "Set up your development environment",
        "Before you begin",
        "A note on support",
        "Tip",
        "Prepare to build or modify apps",
        "Start building",
        "Contribute to developer.newrelic.com"
      ],
      "title": "Set up your development environment",
      "type": "developer",
      "tags": [
        "developer account",
        "API key",
        "New Relic One CLI"
      ],
      "external_id": "c45638a9cd548d1ffffc9f1c7708f115a92ae04a",
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/set-up-dev-env/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2020-12-04T02:00:00Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Prepare to build apps and contribute to this site",
      "body": "If you've decided to build a custom app or modify one of our open source apps, you need a few essential tools: The New Relic One command line interface (CLI) An API key, which you get when you download the CLI Depending on what you want to do with your app, you might have some additional setup and configuration. This guide covers: Downloading the New Relic One CLI to build or modify apps Contribute content to this website Before you begin You must have: A github account account - While not strictly necessary for building apps, a GitHub account enables you to download and customize our open source apps, and contribute an open source project. A New Relic developer account - if you don't already have one, you can get a free trial account for developing New Relic applications. npm - If you've installed Node.js, then you already have npm, which is used to share, reuse, and update JavaScript code, and is necessary for working with React components that are the framework for New Relic apps and this website. A note on support Building a New Relic One application is the same as building any JavaScript/React application. We offer support to help with our building tools (our CLI and SDK library). However, we don't offer support for basic JavaScript or React coding questions or issues. For common questions and answers about building, see the Explorers Hub page on building on New Relic One. Tip Use the New Relic One VSCode extension or the New Relic VSCode extension pack to build your apps. Prepare to build or modify apps Step 1 of 1 Download the CLI and API key. On the Build New Relic One applications page, complete the Quick start steps. These six Quick start steps get you an API key for use with developing apps, and the New Relic One CLI, for building and deploying apps. At the end of the Quick start, you have a project consisting of the following: A Nerdpack - The package containing all the files required by your application. It contains two types of files that you customize to build your app: Nerdlets, and the launcher. One or more Nerdlet files - A specific UI view or window. A Nerdlet is a React JavaScript package that includes an index.js file, a stylesheet, and a JSON-format config file. It can contain any JS functionality (charts, interactive fields, tooltips, etc.). A launcher file: This is the basis for the launcher, which is used to open your application from New Relic One after you publish your app. Start building Step 1 of 1 If you're ready to code, cd to your Nerdpack and get started. If you want to learn more about building applications, try these step-by-step guides: Build a \"Hello, World!\" application shows how to create a little application, publish it to New Relic One, and share it with others by subscribing accounts to it. Map pageviews by region takes you through the steps to create one of our popular open source apps. You learn to add a custom query to an app and view it in a table, then add that data to a map. Contribute to developer.newrelic.com This site is open source, and we want your input. Create a pull request if you see a mistake you know how to fix. Drop us a GitHub issue if you see some content gaps you want us to work on. Or write up a whole new guide if you have one you'd like to share. Read on to learn how. Step 1 of 3 Fork the developer-website GithHub repo. Forking the repo enables you to work on your own copy of the developer.newrelic.com files, and build the site locally. It also enables us to more easily manage incomimg pull requests. On the developer-website page in GitHub, select the Fork button on the top right of the page, choose the account you want to fork to, and wait a few seconds while the fork is created. Sync regularly to keep your fork up to date with changes and additions to the main branch upstream. Step 2 of 3 Make a feature or documentation request. On any page, select the GitHub button at the top of the page, and then select the kind of change you want, and fill out the GitHub form. Step 3 of 3 Contribute a new guide. Check out our contributors guidelines, which will walk you through the process.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 335.70047,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em>",
        "body": ". At the end of the Quick start, you have a project consisting of the following: A <em>Nerdpack</em> - The package containing all the files required by your application. It contains two types of files that you customize to build your app: <em>Nerdlets</em>, and the <em>launcher</em>. <em>One</em> or more <em>Nerdlet</em> files - A specific UI view"
      },
      "id": "5efa9973e7b9d242237bab39"
    },
    {
      "sections": [
        "Serve, publish, and deploy your New Relic One app",
        "Before you begin",
        "Serve your app locally",
        "Add images and metadata to your apps",
        "screenshots folder",
        "documentation.md",
        "additionalInfo.md",
        "config.json",
        "Publish your app",
        "Tip",
        "Deploy your app",
        "Undeploy your app",
        "Subscribe or unsubscribe apps",
        "Handle duplicate applications"
      ],
      "title": "Serve, publish, and deploy your New Relic One app",
      "type": "developer",
      "tags": [
        "publish apps",
        "deploy apps",
        "subscribe apps",
        "add metadata apps"
      ],
      "external_id": "63283ee8efdfa419b6a69cb8bd135d4bc2188d2c",
      "image": "https://developer.newrelic.com/static/175cc6506f7161ebf121129fa87e0789/0086b/apps_catalog.png",
      "url": "https://developer.newrelic.com/build-apps/publish-deploy/",
      "published_at": "2021-03-18T01:54:17Z",
      "updated_at": "2021-02-27T01:54:59Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Start sharing and using the custom New Relic One apps you build",
      "body": "When you build a New Relic One app, chances are you'll want to share it with others in your organization. You might even want to share it broadly through our open source channel. But first, you probably want to try it out locally to make sure it's working properly. From the New Relic One Apps page, you can review available apps and subscribe to the ones you want for accounts you manage. The Your apps section shows launchers for New Relic apps, as well as any third-party apps that you subscribe to. The New Relic One catalog provides apps that you haven't subscribed to, some developed by New Relic engineers to provide visualizations we think you'll want, like Cloud Optimizer, which analyzes your cloud environment, or PageView Map, which uses Browser events to chart performance across geographies. Your apps in the catalog are created by third-party contributors and are submitted via opensource.newrelic.com. All are intended to help you visualize the data you need, the way you want it. Here, you learn to: Serve your app locally Add images and metadata to your app Publish it Subscribe and unsubscribe accounts you manage to the app Handle duplicate applications Before you begin This guide requires the following: A New Relic One app or Nerdpack New Relic One CLI A Nerdpack manager role for publishing, deploying, and subscribing apps. Serve your app locally You can locally serve the app you create to New Relic One to test it out. Step 1 of 1 In the parent root folder of your Nerdpack, run nr1 nerdpack:serve. Go to one.newrelic.com/?nerdpacks=local. The ?nerdpacks=local URL suffix will load any locally served Nerdpacks that are available. When you make a change to a locally served Nerdpack, New Relic One will automatically reload it. Add images and metadata to your apps Application creators can include a description of what their apps do and how they're best used when they build an app. They can also include screenshots, icons, and metadata that help to make them easy to spot amongst other applications. Some metadata is added automatically when an app is published: Related entities, listed if there are any. Origin label to indicate where the app comes from: local, custom, or public. The New Relic One CLI enables you to provide the information and images you want to include with your application. Then it's a matter of kicking off a catalog command that validates the information and saves it to the catalog. Step 1 of 3 Update the New Relic One CLI to ensure you're working with the latest version. bash Copy $ nr1 update Step 2 of 3 Add catalog metadata and screenshots. Run nr1 create and then select catalog to add a catalog folder to your New Relic One project. The folder contains the following empty files and folder. Add the information as described in the following sections for the process to succeed. screenshots folder A directory that must contain no more than 6 images and meet these criteria: 3:2 aspect ratio PNG format landscape orientation 1600 to 2400 pixels wide documentation.md A markdown file that presents usage information pulled into the Documentation tab for the application in the catalog. additionalInfo.md An optional markdown file for any additional information about using your application. config.json A JSON file that contains the following fields: tagline: A brief headline for the application. Must not exceed 30 characters. repository: The URL to the GitHub repo for the application. Must not exceed 1000 characters. details: Describes the purpose of the application and how to use it. Information must not exceed 1000. Use carriage returns for formatting. Do not include any markdown or HTML. support: An object that contains: issues: A valid URL to the GitHub repository's issues list, generally the GitHub Issues tab for the repo. email: A valid email address for the team supporting the application. community: URL to a support thread, forum, or website for troubleshooting and usage support. whatsNew: A bulleted list of changes in this version. Must not exceed 500 characters. Use carriage returns for formatting. Do not include markdown or HTML. Example: { \"tagline\": \"Map your workloads &amp; entities\", \"repository\": \"https://github.com/newrelic/nr1-workload-geoops.git\", \"details\": \"Describe, consume, and manage Workloads and Entities in a geographic \\n model that supports location-specific KPI's, custom metadata, drill-down navigation into Entities \\n and Workloads, real-time configuration, and configuration via automation using the newrelic-cli.\", \"support\": { \"issues\": { \"url\": \"https://github.com/newrelic/nr1-workload-geoops/issues\" }, \"email\": { \"address\": \"opensource+nr1-workload-geoops@newrelic.com\" }, \"community\": { \"url\": \"https://discuss.newrelic.com/t/workload-geoops-nerdpack/99478\" } }, \"whatsNew\": \"\\n-Feat: Geographic mapping of Workloads and Entities\\n -Feat: Programmatic alerting rollup of underlying Entities\\n -Feat: Custom KPI measurement per location\\n -Feat: Empty-state edit workflow\\n -Feat: JSON file upload format\\n-Feat: Published (in open source docs) guide to automating configuration using the newrelic-cli\" } Copy Step 3 of 3 Save the metadata and screenshots to the catalog. This validates the information you added to the catalog directory against the criteria described in the previous step, and saves it to the catalog. bash Copy $ nr1 catalog:submit Publish your app Publishing places your Nerdpack in New Relic One. To publish or deploy, you must be a Nerdpack manager. New Relic One requires that only one version (following semantic versioning) of a Nerdpack can be published at a time. Tip If you know what channel you want to deploy to (as described in the Deploy your app section that follows), you can run nr1 nerdpack:publish --channel=STABLE or nr1 nerdpack:publish --channel=BETA. Step 1 of 2 Update the version attribute in the app's package.json file. This follows semantic versioning, and must be updated before you can successfully publish. Step 2 of 2 To publish your Nerdpack, run nr1 nerdpack:publish. Deploy your app Deploying is applying a Nerdpack version to a specific channel (for example, BETA, or STABLE). A channel can only have one Nerdpack version deployed to it at one time. If a channel has an existing Nerdpack associated with it, deploying a new Nerdpack version to that channel will undeploy the previous one. Channels are meant to be an easier way to control application version access than having to be concerned with specific version numbers. Step 1 of 1 To deploy an application, run nr1 nerdpack:deploy. Undeploy your app You can also manually undeploy an app. Undeploying an app is detaching a Nerdpack version from a specific channel. Before undeploying, you need to unsubscribe your account from the deployed Nerdpack, then specify the UUID of the Nerdpack you've unsubscribed as the one to undeploy. Step 1 of 3 To get a list of deployed Nerdpacks that your account is subscribed to, run nr1 subscription:list. Step 2 of 3 Copy the UUID of the Nerdpack that you want to unsubscribe and pass it to the nerdpack-id option of the unsubscribe command: nr1 nerdpack:unsubscribe --nerdpack-id=<UUID> Copy You should get a result like this: Unsubscribed account <your account ID> from the nerdpack <Nerdpack UUID>. Step 3 of 3 Unsubscribe the Nerdpack UUID used in step 2: nr1 nerdpack:undeploy --nerdpack-id=<UUID> -t STABLE Copy You should get the result Undeployed nerdpack <Nerdpack UUID> from the STABLE channel. Subscribe or unsubscribe apps Whether you want to subscribe accounts to an app you've created or to apps already available in the catalog, the process is the same. Note that if you subscribe to an app in the catalog, you'll automatically get any updates that are added to the app. To learn about the appropriate permissions for subscribing, see Permissions for managing applications. Step 1 of 2 Subscribe accounts to an application. Select an application you want to add to your New Relic account. Click Add this app. Note that this button says Manage access if the app has already been subscribed to an account you manage. On the Account access page listing the accounts you can subscribe to an application: Select the accounts you want to subscribe the app to. Choose the channel you want to subscribe the app to, Stable or Dev. This can only be Stable for the public apps created by New Relic. Click the update button. Now you and members of the accounts you have subscribed to the app can launch it from New Relic One. Step 2 of 2 Unsubsribe from an application. On the Apps page, open the app you want to unsubscribe. Click Manage access. Clear the check box for any accounts you want to unsubscribe, and then click the update button. The application is no longer listed in the Your apps section of the Apps page, and you have unsubscribed. Handle duplicate applications You might end up with duplicate applications on your New Relic One Apps page. This can happen when you subscribe to the same app using both the CLI and the catalog. Or if you clone an app, modify, and deploy it, but keep the original name. You can manage duplicates with the catalog. Good to know before you start: You need a user role with the ability to manage Nerdpacks for accounts that you want to unsubscribe and undeploy from applications. You can't remove the public apps. When a duplicate application has no accounts subscribed to it, you undeploy it. For applications that have accounts subscribed to them, you unscubscribe and undeploy. The unsubscribe and undeploy process happens in a batch. To remove an account from an application, but ensure that other accounts continue to be subscribed, select the checkbox, Resubscribe these accounts to the new application. Step 1 of 1 Remove duplicates. In the New Relic One catalog, click a public application that has one or more duplicates. (You can only manage duplicates from the public version of the application.) On the application information page, select Clean up applications. Review the information about the application that's open, as well as any duplicates. Click Manage app for duplicates you want to remove. If needed, select Resubscribe these accounts to the new application. Click Unsubscribe and undeploy, and agree to the terms and conditions.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 320.39636,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Serve, publish, and deploy your <em>New</em> <em>Relic</em> <em>One</em> app",
        "sections": "Serve, publish, and deploy your <em>New</em> <em>Relic</em> <em>One</em> app",
        "info": "Start sharing and using the custom <em>New</em> <em>Relic</em> <em>One</em> apps you build",
        "body": " This guide requires the following: A <em>New</em> <em>Relic</em> <em>One</em> app or <em>Nerdpack</em> <em>New</em> <em>Relic</em> <em>One</em> <em>CLI</em> A <em>Nerdpack</em> manager role for publishing, deploying, and subscribing apps. Serve your app locally You can locally serve the app you create to <em>New</em> <em>Relic</em> <em>One</em> to test it out. Step 1 of 1 In the parent root folder of your"
      },
      "id": "5efa999de7b9d283e67bab8f"
    }
  ],
  "/explore-docs/nr1-cli": [
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 281.09692,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": ", hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use <em>New</em> <em>Relic</em> <em>One</em> and the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free account"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 277.73132,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 277.09955,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> <em>application</em> ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> <em>application</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> gives you a framework to build your own React JavaScript applications that: Reside on the <em>New</em> <em>Relic</em> <em>One</em> platform, alongside your other dashboards and data. Feature visualizations that you&#x27;ve tailored specifically for your organization. Display data from any source you want, whether from"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 273.77393,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    },
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 272.50452,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã <em>New</em> <em>Relic</em>ã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨"
      },
      "id": "605319c1e7b9d235d3a307da"
    }
  ],
  "/build-apps/add-nerdgraphquery-guide": [
    {
      "image": "",
      "url": "https://developer.newrelic.com/build-apps/",
      "sections": [
        "Build apps",
        "Guides to build apps",
        "Add the NerdGraphQuery component to an application",
        "Add, query, and mutate data using NerdStorage",
        "Add a time picker to your app",
        "Create a \"Hello, World!\" application",
        "Build a custom visualization for dashboards",
        "Add a table to your app",
        "Create a custom map view",
        "Permissions for managing applications",
        "Publish and deploy apps",
        "Set up your development environment"
      ],
      "published_at": "2021-03-18T01:47:25Z",
      "title": "Build apps",
      "updated_at": "2021-03-18T01:47:24Z",
      "type": "developer",
      "external_id": "abafbb8457d02084a1ca06f3bc68f7ca823edf1d",
      "document_type": "page",
      "popularity": 1,
      "body": "You know better than anyone what information is crucial to your business, and how best to visualize it. Sometimes, this means going beyond dashboards to creating your own app. With React and GraphQL, you can create custom views tailored to your business. These guides are designed to help you start building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the NerdGraphQuery component to an application 20 minutes The NerdGraphQuery component allows you to query data from your account and add it to a dropdown menu in an application Add, query, and mutate data using NerdStorage 45 min NerdStorage is a document database accessible within New Relic One. It allows you to modify, save, and retrieve documents from one session to the next. Add a time picker to your app 20 min Add a time picker to a sample application Create a \"Hello, World!\" application 15 min Build a \"Hello, World!\" app and publish it to New Relic One Build a custom visualization for dashboards 15 min Create custom data views Add a table to your app 30 min Add a table to your New Relic One app Create a custom map view 30 min Build an app to show page view data on a map Permissions for managing applications Â  Learn about permissions for subscribing to apps Publish and deploy apps 30 min Start sharing the apps you build Set up your development environment 20 min Prepare to build apps and contribute to this site",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 869.3302,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build <em>apps</em>",
        "sections": "Add the <em>NerdGraphQuery</em> <em>component</em> to an <em>application</em>",
        "body": " building apps, and dive into our library of components. We also have a growing number of open source apps that you can use to get started. The rest is up to you. Guides to build apps Add the <em>NerdGraphQuery</em> <em>component</em> to an application 20 minutes The <em>NerdGraphQuery</em> <em>component</em> allows you to <em>query</em> <em>data</em>"
      },
      "id": "5efa999d64441fc0f75f7e21"
    },
    {
      "sections": [
        "Analyze and monitor data trends with metrics",
        "Why create metrics from other data types?",
        "Available operations",
        "Mutations",
        "Create a rule",
        "Delete a rule",
        "Important",
        "Enable or disable a rule",
        "Queries",
        "List all rules for a New Relic account",
        "List rule by rule ID",
        "Use the NerdGraph GraphiQL API tool"
      ],
      "title": "Analyze and monitor data trends with metrics",
      "type": "docs",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Convert data to metrics"
      ],
      "external_id": "a3b979aee29f067545756256000669f9bc011805",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/ingest-manage-data/convert-data-metrics/analyze-monitor-data-trends-metrics/",
      "published_at": "2021-03-18T19:02:22Z",
      "updated_at": "2021-03-16T18:25:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can generate metric-type data from other types of data in New Relic, including events, logs, and spans. Metrics are aggregates of your data and are optimal for analyzing and monitoring trends over long time periods. This document explains: Reasons to use this feature Available operations How to use our NerdGraph API tool to perform operations Why create metrics from other data types? Using metrics allows for more efficient data storage. This in turn allows you to query your data and build charts more easily. The difference between metrics and other types of data in New Relic is based on time. For more information, see Understand data types. Events, logs, spans: These types of data represent a single record at a specific moment in time. For example, you may have an event for every request to the system. This data is ideal for in-depth troubleshooting and analysis. Metrics: These provide an aggregated view of your events, logs, or spans. Metrics are better for showing trends over longer time ranges. For example, you can aggregate the total number of requests per service to one metric and then examine this information month over month. Why use metrics? Comments Flexibility Metrics are dimensional. You can choose what metadata (like host name or app name) is attached to them. Common metric measurements, like average, sum, minimum, and maximum, are already calculated. Data aggregation and retention The data has already been pre-aggregated into longer-period time buckets. Data retention is 13 months. Query capabilities You can query using the Metric data type. When you create metrics, this does not delete your events or other types of data. However, metrics are better for longer-range querying and charting. To get started converting your data to metrics, create a rule. Available operations To perform operations for events, logs, or spans as metrics, use NerdGraph, our GraphQL-format API. Before performing any operation, we recommend reading Intro to NerdGraph and exploring your data with the GraphiQL API tool. These operations fall under two basic request types: Mutations, which are operations that make changes to existing rules or settings (for example, creating a new metrics rule). Queries, for fetching existing data (for example, fetching existing metrics rules). All operations are role-based in NerdGraph as the currently logged-in New Relic user. Mutations Mutation operations for events to metrics, logs to metrics, or spans to metrics include: Create a rule See Create metrics. Delete a rule Important This operation modifies production settings, so we recommend thoroughly reviewing your changes before you run the operation. To delete a rule, you need the rule ID and the New Relic account ID. Example request: mutation { eventsToMetricsDeleteRule(deletes: {ruleId: \"12\", accountId: 123456}) { successes { id name nrql } failures { errors { description reason } submitted { ruleId accountId } } } } Copy In this request: Element Description mutation One of the basic API operation types. eventsToMetricsDeleteRule The method being called to delete a rule. deletes This takes two parameters: ruleId: The ID of the rule for events to metrics, logs to metrics, or spans to metrics. accountId: The New Relic account ID. successes and submitted blocks Here you define the data returned by a success or failure. Available parameters for these blocks: id (or ruleId for submitted) name description nrql enabled accountId Example response for the request: { \"data\": { \"eventsToMetricsDeleteRule\": { \"failures\": [], \"successes\": [ { \"id\": \"12\", \"name\": \"Test Rule\", \"nrql\": \"select summary(duration) as 'server.responseTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" } ] } } } Copy Enable or disable a rule Important This operation modifies production settings, so we recommend thoroughly reviewing your changes before you run the operation. To enable or disable an existing rule for events to metrics, logs to metrics, or spans to metrics, use the same eventsToMetricsUpdateRule operation. The only difference is whether enabled is set to true or false. Example request to enable an existing metrics rule: mutation { eventsToMetricsUpdateRule(updates: {ruleId: \"12\", accountId: 123456, enabled: true}) { successes { id name nrql } failures { errors { description reason } submitted { ruleId accountId } } } } Copy In this request: Element Description mutation One of the basic API operation types. eventsToMetricsUpdateRule The method being called to update an existing rule and either enable it or disable it. updates This takes three required parameters: ruleId: The ID of the rule for events to metrics, logs to metrics, or spans to metrics. accountId: The New Relic account ID. enabled: To enable a disabled rule, set this to true. To disable a rule, set this to false. successes and submitted blocks Here you define the data returned by a success or failure. Available parameters for these blocks: id (or ruleId for submitted) name description nrql enabled accountId Queries Query operations include: List all rules for a New Relic account You can list all rules in a New Relic account or return a specific rule. Example listing all rules for account 123456: query { actor { account(id:123456) { eventsToMetrics{ allRules{ rules{ id name enabled nrql description } } } } } } Copy In this request: Element Description query One of the basic API operation types. Used to query but not make changes. actor This specifies the current New Relic user. account(id: 123456) Specify the ID for the New Relic account where to retrieve data. eventsToMetrics Scope the data only for events-to-metrics, logs-to-metrics, or spans-to-metrics rules. allRules Returns all rules for that account. rules In the rules block, you can define what data you want returned. Available fields include: id name description nrql accountId enabled Example response: { \"data\": { \"actor\": { \"account\": { \"eventsToMetrics\": { \"allRules\": { \"rules\": [ { \"description\": \"Metric for total time\", \"enabled\": true, \"id\": \"1\", \"name\": \"Total Time Tx\", \"nrql\": \"select summary(totalTime) as 'server.totalTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" }, { \"description\": \"Metric for duration\", \"enabled\": true, \"id\": \"2\", \"name\": \"Duration Rule\", \"nrql\": \"select summary(duration) as 'server.responseTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" } ] } } } } } } Copy List rule by rule ID If you know the exact ID for a rule, then you can query for a specific rule. For example, you may have just created a rule and now you want to list its contents so you can review it. Example listing rule 36 for New Relic account 123456: query { actor { account(id: 123456) { eventsToMetrics { rulesById(ruleIds: \"36\") { rules { id name enabled nrql description accountId } } } } } } Copy For more details about the elements in this query, see List all rules. Example response: { \"data\": { \"actor\": { \"account\": { \"eventsToMetrics\": { \"rulesById\": { \"rules\": [ { \"accountId\": 123456, \"description\": \"Metric for total time\", \"enabled\": true, \"id\": \"36\", \"name\": \"Total Time Tx\", \"nrql\": \"select summary(totalTime) as 'server.totalTime' from Transaction where appName = 'Data Points Staging' facet name, appName, host\" } ] } } } } } } Copy Use the NerdGraph GraphiQL API tool You can use our GraphiQL tool to explore the data structure. You can also use it to build and run the operations to convert events, logs, and spans to metrics. To use this tool: Create the metrics operation's request with the required parameters. Go to api.newrelic.com/graphiql, and paste your query into the box. To execute the operation, press Play. Or, to get the cURL format, select Copy as cURL.) Validate the response in the response box. Optional: To verify that your rule-creation operation was performed successfully, run a list query for that rule ID.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 531.6989,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Analyze and monitor <em>data</em> trends with <em>metrics</em>",
        "sections": "Analyze and monitor <em>data</em> trends with <em>metrics</em>",
        "tags": "Convert <em>data</em> to <em>metrics</em>",
        "body": "&quot;: &quot;select summary(totalTime) as &#x27;server.totalTime&#x27; from <em>Transaction</em> where <em>app</em>Name = &#x27;<em>Data</em> Points Staging&#x27; facet name, <em>app</em>Name, host&quot; } ] } } } } } } Copy Use the <em>NerdGraph</em> GraphiQL API tool You can use our GraphiQL tool to explore the <em>data</em> structure. You can also use it to build and run"
      },
      "id": "603eb239e7b9d2b99d2a07bb"
    },
    {
      "sections": [
        "NerdGraph distributed trace data tutorial",
        "Trace metadata",
        "Trace data query examples",
        "Query by trace ID",
        "Query span relationship data",
        "Query data of the entities in a trace"
      ],
      "title": "NerdGraph distributed trace data tutorial",
      "type": "docs",
      "tags": [
        "APIs",
        "NerdGraph",
        "Examples"
      ],
      "external_id": "fadfaf75706fcb9ee5f9c56a8e2363e0677d9f30",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-distributed-trace-data-tutorial/",
      "published_at": "2021-03-18T07:13:01Z",
      "updated_at": "2021-03-18T07:13:01Z",
      "document_type": "page",
      "popularity": 1,
      "body": "You can use New Relic's NerdGraph GraphiQL explorer to query your distributed tracing data. This document explains: Trace metadata that's only available with NerdGraph Example queries of trace data Trace metadata In addition to span event and transaction event data, we calculate additional metadata about the trace and its span relationships. To query this metadata, go to the NerdGraph GraphiQL explorer at https://api.newrelic.com/graphiql. Additional trace-level data: Trace-level metadata Description durationMs The duration of this trace in milliseconds. entities All entities that are part of this trace. entityCount The number of entities that are part of this trace. spanConnections Parent/child IDs that represent all of the span relationships within this trace. timestamp The trace's start time in milliseconds since the Unix epoch](https://currentmillis.com/). Additional span-level data: Span-level metadata Description clientType For a client span, this indicates the type of entity called: DATASTORE or EXTERNAL. entityGuid The New Relic identifier for the entity that sent the span. processBoundary The position of a span with respect to the boundaries between processes: ENTRY, EXIT, or IN_PROCESS. spanAnomalies Anomalies detected for a span, compared to similar spans that occurred over the previous hours before this span occurred. Anomalous spans appear in the trace UI. For more about trace structure and span relationships, see Trace structure. Trace data query examples Here are example NerdGraph queries of distributed tracing data: Query by trace ID This NerdGraph query example shows how to return all data for a trace by using a trace's traceId. Note that attributes is used to return Span event attributes. { actor { distributedTracing { trace(traceId: \"YOUR_TRACE_ID\") { spans { attributes clientType durationMs entityGuid id name parentId processBoundary timestamp traceId spanAnomalies { anomalousValue anomalyType averageMeasure } } } } } } Copy For more about trace structure and span relationships, see Trace structure. Query span relationship data This NerdGraph query example shows how to return trace-level metadata about the relationships between spans: { actor { distributedTracing { trace(traceId: \"YOUR_TRACE_ID\") { id timestamp durationMs spanConnections { parent child } } } } } Copy For more about trace structure and span relationships, see Trace structure. Query data of the entities in a trace This NerdGraph query example returns the entities associated with a trace and some data about those entities. { actor { distributedTracing { trace(traceId: \"YOUR_TRACE_ID\") { entities { name tags { key } account { name } } } } } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 518.1465,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>NerdGraph</em> distributed trace <em>data</em> tutorial",
        "sections": "<em>NerdGraph</em> distributed trace <em>data</em> tutorial",
        "tags": "<em>NerdGraph</em>",
        "body": "You can use New Relic&#x27;s <em>NerdGraph</em> GraphiQL explorer to <em>query</em> your distributed tracing <em>data</em>. This document explains: Trace metadata that&#x27;s only available with <em>NerdGraph</em> Example queries of trace <em>data</em> Trace metadata In addition to span event and <em>transaction</em> event <em>data</em>, we calculate additional metadata"
      },
      "id": "603eabf5e7b9d29e3e2a07b3"
    },
    {
      "sections": [
        "Create metrics from other data types",
        "Create a metrics rule",
        "Step 1. Create NRQL query rule",
        "Step 2. Create API request",
        "Example NerdGraph API request",
        "Example NerdGraph API response",
        "Step 3. Create a metrics rule with API request",
        "Query and chart your metrics",
        "Summary metric example",
        "Count metric example",
        "Distribution metric example",
        "Troubleshooting"
      ],
      "title": "Create metrics from other data types",
      "type": "docs",
      "tags": [
        "Telemetry Data Platform",
        "Ingest and manage data",
        "Convert data to metrics"
      ],
      "external_id": "ddfe4b76ee239e22cf5b1cc66b030416af275843",
      "image": "",
      "url": "https://docs.newrelic.com/docs/telemetry-data-platform/ingest-manage-data/convert-data-metrics/create-metrics-other-data-types/",
      "published_at": "2021-03-18T19:00:18Z",
      "updated_at": "2021-03-16T18:25:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use New Relic's metrics API service to define rules for creating metrics from your other types of data, such as events, logs, or spans. Recommendation: Before you begin, review our requirements and tips for creating rules. Create a metrics rule To create a rule for creating metrics from events, logs, or spans: Construct the metrics rule using NRQL. Construct a NerdGraph (GraphQL format) API request that contains your NRQL rule. Create the metric by making the API request. Once a metric is created, you can query and chart it using NRQL. Step 1. Create NRQL query rule The most important part of creating a metrics rule is constructing the NRQL query that defines the metric for your data from events, logs, or spans. You can create up to 10 metrics with a single NRQL query by following this procedure: Using New Relic's NRQL interface, construct a query for the metric you want to create. For example: FROM ProcessSample SELECT average(ioTotalReadBytes) WHERE nr.entityType = 'HOST' Copy Edit the query to use one of the three available metric types: summary: Use if the query's function is min, max, sum, count, or average. uniqueCount: Use if the query's function is uniqueCount. distribution: Use if the query's function is percentile or histogram. This example query uses average, so use summary: FROM ProcessSample SELECT summary (ioTotalReadBytes) WHERE nr.entityType = 'HOST' Copy Decide on the attributes you want to attach to the metric, following the limits on the cardinality of unique metric-name/attribute-value combinations. Recommendation: Run a separate query to ensure this count isn't over 50,000 for a 24-hour window. For example: FROM ProcessSample SELECT uniqueCount(awsRegion, awsAvailabilityZone, commandName) WHERE nr.entityType = 'HOST' SINCE 1 DAY AGO Copy To be able to aggregate and filter your metrics, add the attributes you want to attach to the metric using the FACET clause. For example: FROM ProcessSample SELECT summary(ioTotalReadBytes) WHERE nr.entityType = 'HOST' FACET awsRegion, awsAvailabilityZone, commandName Copy Set the name of the metric using the AS function. For example: FROM ProcessSample SELECT summary(ioTotalReadBytes) AS 'io.totalread.bytes' WHERE nr.entityType = 'HOST' FACET awsRegion, awsAvailabilityZone, commandName Copy Once your NRQL rule is complete, use it to create the API request. Step 2. Create API request After you build the NRQL rule to convert data from events, logs, or spans to metrics, continue with building the API request. You can use our NerdGraph API tool to explore the data structure and to construct and make your request. To check that the rule was created correctly, you can run a query to return that rule using its ID. For tips on querying the metrics you've created, see Query and chart your metrics. Example NerdGraph API request The following example NerdGraph API request uses the same NRQL rule from step 1. The IO Total Read Bytes Rule creates a metric named io.totalread.bytes. (The rule name can have spaces, which differs from the metric naming rules.) mutation { eventsToMetricsCreateRule(rules: { name: \"io.totalread.bytes for computeSample entities\", description:\"Created by Zach on March 27, 2019. Used by team Network.\", nrql:\"FROM ProcessSample SELECT summary(ioTotalReadBytes) AS 'io.totalread.bytes' WHERE nr.entityType = 'ComputeSample' FACET awsRegion, awsAvailabilityZone, commandName\", accountId: 123456 }) { successes { id name nrql enabled } failures { submitted { name nrql accountId } errors { reason description } } } } Copy In this request: Request elements Description mutation One of the basic API operation types. eventsToMetricsCreateRule The method being called to create a rule. rules Takes four parameters: name: The name of the rule. description: Optional. The description of the rule. We recommend you include information about who created the metric data and who will be using the data. accountId: The New Relic account ID where the events, logs, or spans live and the metrics will be created. nrql: The NRQL query that creates the rule. For more on this, see Create NRQL query. successes and submitted blocks Here you define the data returned by a successful or failed response. Available parameters for these blocks include: id (ruleId for submitted) name description nrql enabled (enabled/disabled status) accountId ruleId and accountId If a failure occurs, then the submitted ruleId and accountId will be returned along with the error reason and error description. Example NerdGraph API response Here's an example of a returned response: { \"data\": { \"eventsToMetricsCreateRule\": { \"failures\": [], \"successes\": [ { \"enabled\": true, \"id\": \"46\", \"name\": \"io.totalread.bytes for computeSample entities\", \"nrql\": \"FROM ProcessSample SELECT summary(ioTotalReadBytes) AS 'io.totalread.bytes' WHERE nr.entityType = 'ComputeSample' FACET awsRegion, awsAvailabilityZone, commandName\" } ] } } } Copy Step 3. Create a metrics rule with API request When your API request is ready, you can use the NerdGraph API to make the request, which will create the metrics. Query and chart your metrics After you create a metrics rule to convert data for your events, logs, or spans, you can view the new metric data in the New Relic UI. To view your data: Go to New Relic's NRQL query interface. Run the following query to see the name of all your metrics: SELECT uniques(metricName) FROM Metric Copy Pick the metric of interest, then run the following query to see the available attributes: SELECT * FROM Metric where metricName = 'yourMetric' Copy If you don't see expected data, follow the troubleshooting procedures. The available NRQL aggregator functions depend on the metric type you created. Here are some examples. Summary metric example If you created a summary metric type, you can use the count, sum, max, min, and average aggregator functions, as shown in the following query: SELECT count(appStartResponseTime), sum(appStartResponseTime), max(appStartResponseTime), min(appStartResponseTime), average(appStartResponseTime) FROM Metric Copy Count metric example If you created a uniqueCount metric type, you can only use the uniqueCount function, as shown in the following query: SELECT uniqueCount(playbackErrorStreamUniqueCount) * 100 / uniqueCount(streamUniqueCount) AS '% of Streams Impacted' FROM Metric Copy Distribution metric example If you created a distribution metric type, use the percentile or histogram functions, as shown in the following queries: SELECT percentile(service.responseTime, 95) FROM Metric Copy OR SELECT histogram(service.responseTime, 10, 20) FROM Metric Copy Troubleshooting If your NerdGraph call is not constructed correctly, you may receive a message like this: Cannot parse the unexpected character \"\\u201Câ Copy Verify the quotes in the NerdGraph call are not smart quotes (curly quotes). Our NerdGraph API only accepts straight quotes.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 509.48166,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Create <em>metrics</em> from other <em>data</em> types",
        "sections": "Create <em>metrics</em> from other <em>data</em> types",
        "tags": "Convert <em>data</em> to <em>metrics</em>",
        "body": " the NRQL rule to convert <em>data</em> from events, logs, or spans to metrics, continue with building the API request. You can use our <em>NerdGraph</em> API tool to explore the <em>data</em> structure and to construct and make your request. To check that the rule was created correctly, you can run a <em>query</em> to return that rule"
      },
      "id": "603ebfc8196a67cab0a83d96"
    },
    {
      "sections": [
        "Query APM metric timeslice data with NRQL",
        "Why query metric timeslice data?",
        "Important",
        "Where to query?",
        "How to construct a query",
        "How metric timeslice data is converted",
        "Attributes",
        "Generic queries with the newrelic.timeslice.value metric",
        "When to use newrelic.timeslice.value?",
        "Get available metrics",
        "Facet on a wildcarded metric name segment",
        "Recommended aggregator functions",
        "Query examples",
        "Facet by multiple app names",
        "Throughput-per-minute rate",
        "Facet by host-related attributes",
        "Query of average duration of a metric",
        "Break down average time spent in a transaction by its component segments"
      ],
      "title": "Query APM metric timeslice data with NRQL",
      "type": "docs",
      "tags": [
        "Query your data",
        "NRQL: New Relic Query Language",
        "NRQL query tutorials"
      ],
      "external_id": "82003500c863b2c25015d298ff390304ace9c389",
      "image": "https://docs.newrelic.com/static/4bf93cf4544a5c52d393090982b16eba/c1b63/new-relic-one-nrql-query-metric-timeslice-data.png",
      "url": "https://docs.newrelic.com/docs/query-your-data/nrql-new-relic-query-language/nrql-query-tutorials/query-apm-metric-timeslice-data-nrql/",
      "published_at": "2021-03-18T12:18:48Z",
      "updated_at": "2021-03-16T16:23:47Z",
      "document_type": "page",
      "popularity": 1,
      "body": "APM reports metric data in the form of metric timeslice data, and you can use NRQL to query, facet, and alert on this type of data. To explore timeslice data in the data explorer, see Explore your metrics. Why query metric timeslice data? We report metrics in several ways. One variety of metric data we call metric timeslice data; this is the type of data used to generate many of the charts in APM, Mobile, and Browser (for more details, see metric timeslice data). Historically, this type of data couldn't be queried via our query language, NRQL. But now we are converting popular APM metrics from metric timeslice data to more-detailed dimensional metric data, which opens them up for querying via NRQL and via our NerdGraph API. This capability allows you to create powerful, in-depth custom visualizations of these important APM metrics. And this includes being able to query your custom metrics. Important You cannot query timeslice metrics in conjunction with dimensional metrics or event data. Any query involving newrelic.timeslice.value or an apm.* metric can only return APM metrics. Where to query? We recommend querying APM metric timeslice data using New Relic One query builder in advanced mode. This experience offers full NRQL functionality, and also gives helpful auto-complete suggestions and feedback on query errors. You can also: Make NRQL queries using our NerdGraph (GraphQL) API Alert on NRQL queries using NRQL alert conditions How to construct a query In APM, some charts have the option to view the NRQL query that generated that chart. This can be a good option for understanding how to query metrics. The NRQL query examined below is slightly modified from the error rate chart on the APM summary page. FROM Metric SELECT count(apm.service.error.count) / count(apm.service.transaction.duration) WHERE (entity.guid = 'AN_ENTITY_GUID') AND (transactionType = 'Web') SINCE 1 day ago TIMESERIES Copy Here is a breakdown of how the parts of this query work: Query segment What does it do? FROM Metric Metric is one of our core data types, and metric timeslice data is stored as this data type. For general tips on querying Metric data, see Metric query examples. SELECT count(apm.service.error.count) / count(apm.service.transaction.duration) This math generates a count of errors out of a total count of transaction metrics. This query uses the converted metric names. Note that you can use other aggregator functions. WHERE (entity.guid = 'AN_ENTITY_GUID') You must specify at least one data source. You can select a single entity's GUID, as shown here, or you can select multiple sources. This query uses entity.guid, but you can also use appId or appName. AND (transactionType = 'Web') Sets the transaction type to web, meaning that background/non-web transactions won't be counted. SINCE 1 day ago Selecting a time range. TIMESERIES This optional clause displays the results in a time-based chart. For general information on NRQL syntax, including FROM, FACET, and TIMESERIES, see Intro to NRQL. For more queries, see Query examples. How metric timeslice data is converted The conversion of original APM metric timeslice metrics into dimensional metrics that are available for querying is an ongoing process and isn't complete. If you don't see a metric you're looking for in this section, see Generic queries. Here are how the original APM metric timeslice metrics are converted into dimensional metrics: Metric timeslice structure Dimensional metric structure APM metric names are represented as single strings of segments separated by forward slashes. For example, the âDatastore/statement/MySQL/users/selectâ metric represents the time spent in a select database operation on the users table. A single dimensional metric named apm.service.datastore.operation.duration represents the entire group of datastore metrics. This metric has three attributes representing the data values encoded into the metric name, datastoreType, table and operation: datastoreType = âMySQLâ table = âusersâ operation = âselectâ Some of the APM metrics made available as dimensional metrics: Metric name Description Attributes apm.service.cpu.usertime.utilization Time spent in user-mode code percentage apm.service.datastore.operation.duration Response time for database calls broken out by table operations datastoreType, table, operation apm.service.error.count Summary error count metrics transactionType apm.service.external.host.duration Response time for external calls broken out by external host name external.host apm.service.instance.count Count of the number of agent instances apm.service.memory.physical Process memory in MB apm.service.transaction.apdex Apdex scores per transaction transactionName, transactionType apm.service.transaction.duration Response time per transaction keyTransactionName, transactionName, transactionType apm.service.transaction.error.count Error counts per transaction keyTransactionName, transactionName, transactionType apm.service.transaction.external.duration External call response time by transaction type transactionType Learn how to see all metrics available to you. To understand more about the general structure of metric timeslice data, including some common examples, see Metric timeslice data. Attributes These attributes are available in addition to the metric-specific attributes listed in the APM metrics table above. Name Description appName The name of the application. appId The ID of the application. entity.guid The GUID of the application. host The host of the monitored process. host.bootId The ID of the boot of the host, if available. host.displayName The display_name of the host, if it was set in the agent. instanceName For Java APM agents, host : port metricName The name of the dimensional metric. metricTimesliceName The timeslice name of the legacy metric. scope (Optional) The timeslice name of the legacy metric that this metric is \"scoped\" to. Metrics with a scope belong to it--their measurements apply to the context of the metric named in the scope attribute. See below for examples. Generic queries with the newrelic.timeslice.value metric For metrics that haven't been converted to dimensional metrics, or for your own custom metrics, we have a dimensional metric named newrelic.timeslice.value. Important We recommend using the dimensional metrics from the table above when possible. When to use newrelic.timeslice.value? Given a metric timeslice name, you can query to see if it has a converted dimensional metric equivalent with this syntax: FROM Metric SELECT uniques(metricName) WHERE metricTimesliceName = 'Datastore/statement/MySQL/test/select' Copy If the only metric name returned is newrelic.timeslice.value, you'll need to query your data using this general approach. Get available metrics To get a list of available metrics for an application, you can use a query like: SELECT uniques(metricTimesliceName) FROM Metric WHERE appName='YOUR_APP_NAME' AND newrelic.timeslice.value IS NOT NULL Copy Facet on a wildcarded metric name segment Some metric timeslice names include attribute values as segments of the metric name. For example, our APM agents report metrics by tracking the duration of external calls using this format: External/{externalHost}/all Copy Here, {externalHost} represents the host name for the outbound network call. Here's an example of a generic newrelic.timeslice.value query of a custom metric that facets on a wildcarded metric segment: FROM Metric SELECT count(newrelic.timeslice.value) WHERE appName = 'MY APP' WITH METRIC_FORMAT 'Custom/Labels/{action}' TIMESERIES FACET action Copy In this query, {action} creates a temporary attribute, action, which is then used by FACET action. You can use any name you want, because it's only an attribute that exists for the duration of the query. You should choose a name that does not conflict with an existing attribute name. Here's another example of a faceted wildcard query: This shows a NRQL query of metric timeslice data that facets the rate of Flask functions by the wildcarded process name. Recommended aggregator functions Recommended NRQL aggregator functions include: apdex average sum count rate uniques Query examples Some examples of querying metric timeslice data: Facet by multiple app names This query uses WHEREâ¦ IN to specify two applications and then facet by them: FROM Metric SELECT rate(count(apm.service.transaction.duration), 1 minute) as 'Web throughput' WHERE appName IN ('MY_APPLICATION', 'MY_OTHER_APPLICATION') AND (transactionType = 'Web') FACET appName TIMESERIES Copy Throughput-per-minute rate This query displays requests-per-minute chart using the rate function: FROM Metric SELECT rate(count(apm.service.transaction.duration), 1 minute) as 'HttpDispatcher requests_per_minute' WHERE appName = 'MY_APPLICATION' AND (transactionType = 'Web') TIMESERIES SINCE 3 days ago Copy Facet by host-related attributes This query displays a requests-per-minute chart faceted by host name: FROM Metric SELECT count(apm.service.transaction.duration) as 'HttpDispatcher requests_per_minute' WHERE appName = 'MY_APPLICATION' AND (transactionType = 'Web') TIMESERIES SINCE 3 hours ago FACET host LIMIT 20 Copy Instead of using host, you can facet by other host-related attributes, like host.bootId. Query of average duration of a metric This queries the average duration for a metric using average: FROM Metric SELECT average(apm.service.transaction.duration) as 'HttpDispatcher average duration' WHERE appName = 'MY_APPLICATION' AND (transactionType = 'Web') TIMESERIES SINCE 3 days ago Copy Break down average time spent in a transaction by its component segments This query breaks down the average duration of single transaction (in this case, the show action in the UsersController of a Rails app named MY_APPLICATION) by the top 20 individual segments (database queries, external service calls, garbage collection time, etc.). It reproduces much of the \"Application breakdown\" chart as seen on the Transactions page In New Relic One for a service entity: FROM Metric SELECT average(newrelic.timeslice.value, exclusiveTime: true) as 'duration, seconds' WHERE appName = 'MY_APPLICATION' AND scope = 'Controller/users/show' LIMIT 20 FACET metricTimesliceName TIMESERIES SINCE 3 days ago Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 502.09894,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Query</em> APM <em>metric</em> timeslice <em>data</em> with NRQL",
        "sections": "Break <em>down</em> average time spent in a <em>transaction</em> by its <em>component</em> segments",
        "tags": "<em>Query</em> your <em>data</em>",
        "body": " average time spent in a <em>transaction</em> by its <em>component</em> segments This <em>query</em> breaks <em>down</em> the average duration of single <em>transaction</em> (in this case, the show action in the UsersController of a Rails <em>app</em> named MY_APPLICATION) by the top 20 individual segments (database queries, external service calls"
      },
      "id": "603e803a64441fd8804e8879"
    }
  ],
  "/explore-docs/nerdstoragevault": [
    {
      "image": "https://docs.newrelic.com/static/1dacbe14521cd094da4f9ce4912e24a5/ae694/nerdgraph-mutation.png",
      "url": "https://docs.newrelic.com/whats-new/2020/10/store-data-encrypted-storage-solution-nerdstoragevault/",
      "sections": [
        "Store data in an encrypted storage solution with NerdStorageVault"
      ],
      "published_at": "2021-03-18T19:23:08Z",
      "title": "Store data in an encrypted storage solution with NerdStorageVault",
      "updated_at": "2021-03-11T00:18:44Z",
      "type": "docs",
      "external_id": "de67c202e7343347b2a6b5bc615301b9fac1e524",
      "document_type": "nr1_announcement",
      "popularity": 1,
      "body": "NerdGraph allows you to access your New Relic data, but when you want to fetch third-party data, NerdStorageVault allows you to safely store a secret to authenticate with a third-party service. NerdStorageVault provides you with a secure and encrypted storage location where you can safely store: Personal access tokens License keys API keys Third-party secrets NerdStorageVault is currently only available in the alpha release of the nr1-community component library and is not available in the New Relic One core components library. The feature uses AES-256 encryption.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 623.9925,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Store <em>data</em> in an <em>encrypted</em> <em>storage</em> solution with <em>NerdStorageVault</em>",
        "sections": "Store <em>data</em> in an <em>encrypted</em> <em>storage</em> solution with <em>NerdStorageVault</em>",
        "body": "NerdGraph allows you to <em>access</em> your <em>New</em> <em>Relic</em> <em>data</em>, but when you want to fetch third-party <em>data</em>, <em>NerdStorageVault</em> allows you to safely store a secret to authenticate with a third-party service. <em>NerdStorageVault</em> provides you with a secure and <em>encrypted</em> <em>storage</em> location where you can safely store"
      },
      "id": "6044694a64441fb9b2378f2d"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/whats-new/",
      "sections": [
        "What's new in New Relic"
      ],
      "published_at": "2021-03-18T21:41:32Z",
      "title": "What's new in New Relic",
      "updated_at": "2021-03-18T21:41:32Z",
      "type": "docs",
      "external_id": "49467ca3d09d7a4f1c1c69fd16be4e20050a7686",
      "document_type": "views_page_content",
      "popularity": 1,
      "body": "March 18 Nerdlog Roundup: Root Cause Analysis, Topology (Relationship-Based) Correlation, and more! Reduce your MTTR with free Automatic Proactive Anomaly Detection, find problems fast with root cause analysis, and increase context for issues using topology correlation. March 17 AIOps Made Easy: Get to root cause and respond faster Automatically find root cause and respond faster than ever March 16 Heroku cloud integration for log management Detailed log data made easier than ever Visualize log details in Dashboards with our new Logs Table Widget More flexibility and control for log message visualizations March 15 AIOps Made Easy: Cut down on alert noise Reduce alert fatigue and prioritize whatâs important March 11 Nerdlog Weekly Roundup: Monitor 1,000 hosts at once with New Relicâs Explorerâs Navigator and Related Entities Get hundreds of entities in a compact, high-level view March 10 AIOps Made Easy: Detect unusual changes instantly Automatic proactive anomaly detection for free March 9 Nerdlog weekly roundup: AIOps and Custom Data Visualizations Smarter incident intelligence with AIOps and custom data visualizations February 25 Nerdlog weekly roundup Everything you need to know about OpenTelemetry, Real User Monitoring, Data Dropping, Logs, and more February 24 New Relic Explorer: Say goodbye to blindspots Gain unprecedented visibility into your entire system February 19 Nerdlog featured weekly releases Check out our new ServiceNow and Snowflake Integrations, and how to visualize k6 performance data in New Relic. February 11 Data Dropping update: Now, drop entire dimensional metrics Filter sensitive or low-value data February 8 Check out the Nerdlog We have a new live-stream changelog on Twitch! January 28 Agentless syslog onboarding for New Relic log management Host-based log ingestion using rsyslog or syslog-ng with a new TCP endpoint January 21 New Python agent features Python agent now auto instruments HTTPX and Django ASGI January 19 New Anomalies feed as part of AI overview page View all your anomalies in a single place January 13 New Relic Snowflake Integration New Relic now integrates with Snowflake. January 6 Schedule recurring muting rules Suppress or mute notifications with ease December 7, 2020 Recap: Top 10 new observability features you need to know Our engineers and product managers share their favorite features, capabilities, and integrations to help you be more productive and collaborative. December 1, 2020 Alerts and Applied Intelligence new landing page Surface insights with a new landing page. Percentiles now available in events-to-metrics service For the events-to-metrics service, return an attribute's approximate value at a given percentile. November 12, 2020 API keys app There's a new app for managing your API keys. New Relic Lambda extension Our new extension improves observability of your Lambda data. Share dashboards and curated views with permalinks Sharing what youâre seeing just got easier. November 10, 2020 Invite a teammate See how easy it is to invite your team to New Relic. November 9, 2020 Enhanced errors experience in New Relic One We've improved the new errors experience. November 3, 2020 Troubleshoot performance and crash issues faster with New Relic's real-time Java profiling New Relic is excited to announce the availability of real-time Java profiling using Java Flight Recorder (JFR). October 30, 2020 Build high-resolution charts using sliding windows Increase your chart resolution with rolling aggregates, powered by sliding windows. Kafka Connect: Unlock open source and alternative instrumentation sources Build observability pipelines from open source tools and alternative instrumentation sources with the New Relic connector for Kafka Connect. Veneur sink: Your pipeline to 3rd party metrics Send metrics to New Relic using our Veneur sink. October 29, 2020 Three big updates for your native mobile apps Three big updates: The New Relic iOS and tvOS agents will now be distributed as the New Relic XCFramework Agent 7.0.0. For instrumenting React Native applications, we have an experimental open source React Native Module. Plus, weâve improved reliability from our Android service and changed the way our service handles Android stack deobfuscation. October 27, 2020 Monitor ASGI apps using the Python agent The Python agent now supports monitoring Uvicorn, Starlette, and FastAPI ASGI applications. Monitor Apollo Server GraphQL Node applications Use our Node.js agent plugin to capture executed GraphQL queries. October 15, 2020 Applied Intelligence: Better, smarter webhooks Webhooks now automatically deliver anomaly charts. October 14, 2020 New Relic One now has a new UI for OpenTelemetry Check out our APM functionality for your OpenTelemetry data. October 13, 2020 Store data in an encrypted storage solution with NerdStorageVault Store and receive sensitive third-party secrets data. October 12, 2020 Saved views for log management Save your table column, time range, etc. in the logs UI October 9, 2020 Alerting: Loss of signal detection and configurable gap-filling strategies Specify how long the system should wait before a signal is considered lost. October 7, 2020 New Relic achieves AWS Outposts Ready designation New Relic has achieved the AWS Outposts Ready designation, part of the Amazon Web Services (AWS) Service Ready Program. October 1, 2020 Applied Intelligence now features accelerated suggested decisions Reduce alert noise by using our suggested correlation decisions. September 30, 2020 Applied Intelligence: Deployment events in the issue feed Applied Intelligence now includes any relevant APM deployment data. September 29, 2020 New Relic Edge with Infinite Tracing New Relic users with Pro or Enterprise Full-Stack Observability can now access and benefit from New Relic Edge. September 11, 2020 Anomalies visible in the activity stream The activity stream shows recent events so you can quickly see what's happening in your system. September 9, 2020 Windows Logs supported Support for Windows Logs with New Relic's infrastructure agent September 4, 2020 New Relic One has dark mode! We now have dark mode! New Relic Support for Amazon Web Services (AWS) Bottlerocket Gain full visibility into your workloads and infrastructure running on AWS Bottlerocket. What's new? Your in-product destination for New Relic One updates! September 1, 2020 Issue summary and analysis in Applied Intelligence Rely on the issue summary to help you identify and resolve relevant issues. Visual issue timeline in Applied Intelligence Use our Gantt-style timeline chart to see your related events. August 26, 2020 Real-user monitoring support for W3C trace context and Google Core Web Vitals We've added support for W3C trace context and Google Core Web Vitals! August 18, 2020 Alert analysis for Applied Intelligence Alert analysis gives you greater context for your alert violations and notifications. August 16, 2020 Ingest New Relic Logs directly with Amazon Web Services (AWS) Kinesis Data Firehose New Relic can ingest data from Amazon's Kinesis Data Firehose. Tracing the gap: AWS X-Ray integration Use New Relic with AWS X-Ray, a critical distributed tracing tool for getting visibility across your AWS services. August 10, 2020 Create Grafana dashboards with Prometheus data stored in New Relic You can create Grafana dashboards with Prometheus data stored in New Relic! July 30, 2020 Overall New Relic One experience updates We've made updates across all of New Relic One! Scheduled alert muting Schedule when you want to mute alerts to avoid messages during maintenance or deployments.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 428.95496,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What&#x27;s <em>new</em> in <em>New</em> <em>Relic</em>",
        "sections": "What&#x27;s <em>new</em> in <em>New</em> <em>Relic</em>",
        "body": " at a given percentile. November 12, 2020 API keys <em>app</em> There&#x27;s a <em>new</em> <em>app</em> for managing your API keys. <em>New</em> <em>Relic</em> Lambda extension Our <em>new</em> extension improves observability of your Lambda <em>data</em>. Share dashboards and curated views with permalinks Sharing what youâre seeing just got easier. November 10, 2020"
      },
      "id": "60422917196a677e2fa83ddf"
    },
    {
      "image": "",
      "url": "https://docs.newrelic.com/jp/whats-new/",
      "sections": [
        "New Relicã®æ°æ©è½"
      ],
      "published_at": "2021-03-18T19:00:18Z",
      "title": "What's new in New Relic",
      "updated_at": "2021-03-18T19:00:17Z",
      "type": "docs-jp",
      "external_id": "cfaaa9015112cddf53bade5c9f859c3bfbc53a97",
      "document_type": "views_page_content",
      "popularity": 1,
      "body": "March 18 Nerdlog Roundup: Root Cause Analysis, Topology (Relationship-Based) Correlation, and more! Reduce your MTTR with free Automatic Proactive Anomaly Detection, find problems fast with root cause analysis, and increase context for issues using topology correlation. March 17 AIOps Made Easy: Get to root cause and respond faster Automatically find root cause and respond faster than ever March 16 Heroku cloud integration for log management Detailed log data made easier than ever Visualize log details in Dashboards with our new Logs Table Widget More flexibility and control for log message visualizations March 15 AIOps Made Easy: Cut down on alert noise Reduce alert fatigue and prioritize whatâs important March 11 Nerdlog Weekly Roundup: Monitor 1,000 hosts at once with New Relicâs Explorerâs Navigator and Related Entities Get hundreds of entities in a compact, high-level view March 10 AIOps Made Easy: Detect unusual changes instantly Automatic proactive anomaly detection for free March 9 Nerdlog weekly roundup: AIOps and Custom Data Visualizations Smarter incident intelligence with AIOps and custom data visualizations February 25 Nerdlog weekly roundup Everything you need to know about OpenTelemetry, Real User Monitoring, Data Dropping, Logs, and more February 24 New Relic Explorer: Say goodbye to blindspots Gain unprecedented visibility into your entire system February 19 Nerdlog featured weekly releases Check out our new ServiceNow and Snowflake Integrations, and how to visualize k6 performance data in New Relic. February 11 Data Dropping update: Now, drop entire dimensional metrics Filter sensitive or low-value data February 8 Check out the Nerdlog We have a new live-stream changelog on Twitch! January 28 Agentless syslog onboarding for New Relic log management Host-based log ingestion using rsyslog or syslog-ng with a new TCP endpoint January 21 New Python agent features Python agent now auto instruments HTTPX and Django ASGI January 19 New Anomalies feed as part of AI overview page View all your anomalies in a single place January 13 New Relic Snowflake Integration New Relic now integrates with Snowflake. January 6 Schedule recurring muting rules Suppress or mute notifications with ease December 7, 2020 Recap: Top 10 new observability features you need to know Our engineers and product managers share their favorite features, capabilities, and integrations to help you be more productive and collaborative. December 1, 2020 Alerts and Applied Intelligence new landing page Surface insights with a new landing page. Percentiles now available in events-to-metrics service For the events-to-metrics service, return an attribute's approximate value at a given percentile. November 12, 2020 API keys app There's a new app for managing your API keys. New Relic Lambda extension Our new extension improves observability of your Lambda data. Share dashboards and curated views with permalinks Sharing what youâre seeing just got easier. November 10, 2020 Invite a teammate See how easy it is to invite your team to New Relic. November 9, 2020 Enhanced errors experience in New Relic One We've improved the new errors experience. November 3, 2020 Troubleshoot performance and crash issues faster with New Relic's real-time Java profiling New Relic is excited to announce the availability of real-time Java profiling using Java Flight Recorder (JFR). October 30, 2020 Build high-resolution charts using sliding windows Increase your chart resolution with rolling aggregates, powered by sliding windows. Kafka Connect: Unlock open source and alternative instrumentation sources Build observability pipelines from open source tools and alternative instrumentation sources with the New Relic connector for Kafka Connect. Veneur sink: Your pipeline to 3rd party metrics Send metrics to New Relic using our Veneur sink. October 29, 2020 Three big updates for your native mobile apps Three big updates: The New Relic iOS and tvOS agents will now be distributed as the New Relic XCFramework Agent 7.0.0. For instrumenting React Native applications, we have an experimental open source React Native Module. Plus, weâve improved reliability from our Android service and changed the way our service handles Android stack deobfuscation. October 27, 2020 Monitor ASGI apps using the Python agent The Python agent now supports monitoring Uvicorn, Starlette, and FastAPI ASGI applications. Monitor Apollo Server GraphQL Node applications Use our Node.js agent plugin to capture executed GraphQL queries. October 15, 2020 Applied Intelligence: Better, smarter webhooks Webhooks now automatically deliver anomaly charts. October 14, 2020 New Relic One now has a new UI for OpenTelemetry Check out our APM functionality for your OpenTelemetry data. October 13, 2020 Store data in an encrypted storage solution with NerdStorageVault Store and receive sensitive third-party secrets data. October 12, 2020 Saved views for log management Save your table column, time range, etc. in the logs UI October 9, 2020 Alerting: Loss of signal detection and configurable gap-filling strategies Specify how long the system should wait before a signal is considered lost. October 7, 2020 New Relic achieves AWS Outposts Ready designation New Relic has achieved the AWS Outposts Ready designation, part of the Amazon Web Services (AWS) Service Ready Program. October 1, 2020 Applied Intelligence now features accelerated suggested decisions Reduce alert noise by using our suggested correlation decisions. September 30, 2020 Applied Intelligence: Deployment events in the issue feed Applied Intelligence now includes any relevant APM deployment data. September 29, 2020 New Relic Edge with Infinite Tracing New Relic users with Pro or Enterprise Full-Stack Observability can now access and benefit from New Relic Edge. September 11, 2020 Anomalies visible in the activity stream The activity stream shows recent events so you can quickly see what's happening in your system. September 9, 2020 Windows Logs supported Support for Windows Logs with New Relic's infrastructure agent September 4, 2020 New Relic One has dark mode! We now have dark mode! New Relic Support for Amazon Web Services (AWS) Bottlerocket Gain full visibility into your workloads and infrastructure running on AWS Bottlerocket. What's new? Your in-product destination for New Relic One updates! September 1, 2020 Issue summary and analysis in Applied Intelligence Rely on the issue summary to help you identify and resolve relevant issues. Visual issue timeline in Applied Intelligence Use our Gantt-style timeline chart to see your related events. August 26, 2020 Real-user monitoring support for W3C trace context and Google Core Web Vitals We've added support for W3C trace context and Google Core Web Vitals! August 18, 2020 Alert analysis for Applied Intelligence Alert analysis gives you greater context for your alert violations and notifications. August 16, 2020 Ingest New Relic Logs directly with Amazon Web Services (AWS) Kinesis Data Firehose New Relic can ingest data from Amazon's Kinesis Data Firehose. Tracing the gap: AWS X-Ray integration Use New Relic with AWS X-Ray, a critical distributed tracing tool for getting visibility across your AWS services. August 10, 2020 Create Grafana dashboards with Prometheus data stored in New Relic You can create Grafana dashboards with Prometheus data stored in New Relic! July 30, 2020 Overall New Relic One experience updates We've made updates across all of New Relic One! Scheduled alert muting Schedule when you want to mute alerts to avoid messages during maintenance or deployments.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 424.5893,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What&#x27;s <em>new</em> in <em>New</em> <em>Relic</em>",
        "sections": "<em>New</em> <em>Relic</em>ã®æ°æ©è½",
        "body": " at a given percentile. November 12, 2020 API keys <em>app</em> There&#x27;s a <em>new</em> <em>app</em> for managing your API keys. <em>New</em> <em>Relic</em> Lambda extension Our <em>new</em> extension improves observability of your Lambda <em>data</em>. Share dashboards and curated views with permalinks Sharing what youâre seeing just got easier. November 10, 2020"
      },
      "id": "6050daaa196a6746822d164e"
    },
    {
      "sections": [
        "New Relic Explorer: View performance across apps, services, hosts",
        "ãã³ã",
        "Why it matters",
        "View and connect the performance of your entities",
        "List view",
        "New Relic Navigator",
        "New Relic Lookout",
        "Understand the state of your system with the health (alert) status",
        "éè¦",
        "Filter entities using the filterbar",
        "Entity data retention"
      ],
      "title": "New Relic Explorer: View performance across apps, services, hosts",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "ae2cff226060a6c5c815cde1eb8deef295e8c202",
      "image": "https://docs.newrelic.com/static/418c556bcaa53ce2b71a5b5fdfee88d8/be86f/new-relic-one-entity-alert-status-red.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In digital business, systems are becoming increasingly large, complex, and interdependent. You have hundreds of applications and services running at the same time, and you need to monitor thousands of elements emitting data (we call those data sources entities). With the New Relic Explorer, we give you a new, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the data you send us. Use the New Relic Explorer to access and give context to the performance data from all your monitored applications, services, hosts, containers, synthetic monitors, etc. You can quickly see the entities related to a problem, exposing possible root causes and what other systems might be affected. ãã³ã To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Why it matters With the New Relic Explorer, itâs more than just observing the metrics: understand the root of whatâs happening, not just the symptoms. Gain extensive visibility of each entity in your solution, its alert status, and how the entities are connected, at a glance. See all your workloads, and create a new one in a click. Get a high level view of how your systemâs doing with the New Relic Navigator. Quickly grasp unusual trends and behaviors with New Relic Lookout. Filter and group related entities to quickly drill down to the issues. Troubleshoot issues with tools that are faster, less cumbersome, and more accurate. Identify areas of improvement, and plan your changes. Want to learn more? See the video (it's only 45 seconds!): Short guide to using the New Relic Explorer. View and connect the performance of your entities The New Relic Explorer brings together data reported by any entity from across all of your New Relic accounts. Entity categories include: Services: APM-monitored applications and services monitored. Hosts: your monitored infrastructure (your servers and hosts). Mobile applications: your mobile apps. Browser applications: your front-end browser apps. Integration-reported data: data from services monitored by our integrations, including our on-host integrations (like Kubernetes, StatsD, and NGINX), and cloud platform integrations, like Amazon, Microsoft Azure, and Google Cloud Platform (GCP). Workloads, your customized entity groupings. Containers, such as Kubernetes or Docker. Synthetic monitors, for simulations. ãã³ã You can create new entity types to monitor any data source. Learn more about entity synthesis. To use the New Relic Explorer: Go to one.newrelic.com and select Explorer. one.newrelic.com > Explorer: Use the entity explorer to locate and examine the entities you monitor. Toggle between the Explorer's three views and the following features: List. Browse and filter from a list of all the entities in your account. Use this landing interface to navigate, group and filter your entities. New Relic Navigator. Get a high density overview of all your entities, grouped by entity type or by tags. Use this to detect any issues and health patterns at a glance. New Relic Lookout. Spot entities that have recent performance deviations. Use this to quickly identify unusual behaviors. Other components include: Filterbar. Drill down and locate problematic entities easily with our improved search capabilities, and benefit from the AND and OR operators in place. See everything. All the different entity types you have access to are listed in the collapsible sidebar on the left of the screen. This sidebar is interactive and used for exploratory purposes, and it allows you to see only entities of the selected type, updating the filter from the filterbar. Create a new workload for meaningful groupings of your monitored entities. Add more data to instrument more elements of your system and achieve full stack observability. List view Your monitored entities are on the left, in a collapsable menu. You may need to scroll your list of entities to see them all. The list view also has a collapsable activity stream on the right side. You can see different useful events related to the first 25 alerting entities which are currently being filtered. Click on any entity for more details on its performance. The entity overview also incorporates the relationship between the selected entity and other entities in your system. New Relic Navigator The New Relic Navigator makes it easy to explore large numbers of entities as it intuitively displays the entire estate of your system in a highly dense honeycomb view with traffic light colors based on alerts. With the New Relic Navigator you can: Quickly explore the health of your environment at a glance. See all the entities that belong to all your accounts, and focus on specific entity types or specific groups of entities grouped by tags. Group and filter across all your entities to quickly zero in on issues. Click on any entity to see a mini-overview of its activity, metrics, and meta-data. New Relic Lookout New Relic Lookout provides an intuitive view of entities that are deviating from normal behavior, using circle visualization with color indicating severity and size conveying the scale of recent changes. You donât need to configure anything: New Relic Lookout automatically compares performance within the last five minutes against the previous hour. Use New Relic Lookout to: Select the entity type to see golden signals of throughput, response time, and errors across all your accounts. Zoom in with correlations, abnormal history, traces, and the ability to leverage New Relicâs profiles across your estate. Click on an entity of interest to access the mini-overview component. Read more about New Relic Lookout. ãã³ã You can modify the color palette to focus on clusters of interest. Understand the state of your system with the health (alert) status The entity explorer shows a color-coded health status for entities. For example, you may see a red alert status indicating a critical violation in progress. To see what an alert status means, mouse over it. To see details about an entity's alerting status, select the entity. NRQL alert conditions aren't used to determine alert status because they aren't associated with specific entities. éè¦ Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI; however, key metrics will continue to be available via the New Relic REST API based on subscription level. For more information, see New Relic's Explorers Hub post. Filter entities using the filterbar The filterbar lets you select the entities displayed according to the conditions you enter: Type in a string of characters and/or numbers (for example, an environment) to find any entity that has this string in their name or ID. When typing, the UI suggests items that coincide with the string you're entering, so you can select one of those from the dropdown. You can also filter by the name of the entity, the entity type, account ID, environment, or a tag. ãã³ã Selection parameters, once created, have a blue background. If you filter using a string, the filter will have the = operator. If you filter using the dropdown menu, once the first element of the searched item (tag key or attribute) is entered, you need to select an operator (=, !=, LIKE, NOT_LIKE, IN, NOT IN) for your filter. Once the operator is selected, complete the filter by selecting the value to complete the search item. To add more filters, first you have to select an operator, AND or OR. Use AND to indicate you want to restrict the selection removing entities from the list of results. You can also use the AND operator to add conditions that need to be met in the list of results, for example, entityType = Services AND location = APAC. Note that entityType = Services AND entityType = Hosts doesnât return any results, as entities can only have one type and no entity would match this condition. Use OR to add more entities to the selection. For example, the filter entityType = Services OR entityType = Hosts returns every entity you have access to that is of type Services or Hosts. Entity data retention Availability of data depends on these factors: Scope Data retention Entity explorer and search In the UI, data is available for eight days after an entity no longer exists, with one exception: data reported by integrations, such as Amazon AWS, is only available for one day after an entity ceases to exist. Our database (accessible via NRQL query) For querying our database (for example, via the query builder or data explorer), availability is dependent on the data retention for that data type. As a result of these factors, a short-lived entity (like a cloud host) may not be available in the entity explorer list or via search, but its data may still be available via NRQL query. If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 294.74265,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "sections": "<em>New</em> <em>Relic</em> Explorer: View performance across <em>apps</em>, services, hosts",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you a <em>new</em>, efficient front-door experience to easily observe the full stack of your software. We automatically create and maintain visibility from the <em>data</em> you send us. Use the <em>New</em> <em>Relic</em> Explorer to <em>access</em> and give context to the performance <em>data</em> from all your monitored applications, services"
      },
      "id": "605319c1e7b9d23848a307e1"
    },
    {
      "sections": [
        "Intro to NerdStorage",
        "Use NerdStorage in your apps",
        "Data model",
        "Caution",
        "Limits",
        "Data access",
        "Permissions for working with NerdStorage"
      ],
      "title": "Intro to NerdStorage",
      "type": "developer",
      "tags": [
        "nerdstorage",
        "nerdstorage components",
        "new relic one apps",
        "data access"
      ],
      "external_id": "709e06c25376d98b2191ca369b4d139e5084bd62",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nerdstorage/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2020-12-04T01:58:15Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Intro to NerdStorage on New Relic One",
      "body": "To help you build a New Relic One application, we provide you with the New Relic One SDK. On this page, youâll learn how to use NerdStorage SDK components. Use NerdStorage in your apps NerdStorage is used to store and retrieve simple sets of data, including users' configuration settings and preferences (like favorites), or any other small data sets. This storage is unique per Nerdpack, and can't be shared with any other Nerdpack. NerdStorage can be classified into three categories: User storage: Data that is attached to a particular user. If youâre authenticated as the user the data is attached to, you can read it and write it. Account storage: Data that is attached to a particular account. If youâre authenticated and can access the account, you can read and write to account scoped NerdStorage. Visibility of account data is also determined by master/subaccount rules: If a user has access to the master account, then they also have access to data in all subaccounts. Entity storage: Data that is attached to a particular entity. If you can see the corresponding entity, you can read and write data on that entity. Data model You can imagine NerdStorage as a nested key-value map. Data is inside documents, which are nested inside collections: { \"YourNerdpackUuid\": { \"collection-1\": { \"document-1-of-collection-1\": \"{\\\"lastNumber\\\": 42, \\\"another\\\": [1]}\", \"document-2-of-collection-1\": \"\\\"userToken\\\"\" // ... }, \"another-collection\": { \"fruits\": \"[\\\"pear\\\", \\\"apple\\\"]\" // ... } // ... } } Copy Each NerdStorage level has different properties and purpose: Collections: From a Nerdpack, you can create multiple collections by naming each of them. Inside a collection you can put one or more documents. Think of a collection as key-value storage, where each document is a key-value pair. Documents: A document is formed by an identifier (documentId) and a set of data associated with it. Data associated with a document: NerdStorage accepts any sort of data associated to a documentId. Query and mutation components that are provided work by serializing and deserializing JSON. Caution NerdStorage is not encrypted. Do not store secrets, API keys, personal access tokens or license keys here. Limits A Nerdpack can hold up to 1,000 collections and 10,000 documents, plus storage type. A collection can hold up to 1,500 documents, plus storage type. Each document can have a maximum length of 1024 KiB when serialized. Data access To access NerdStorage, you can run NerdGraph queries, or use the provided storage queries. Depending on which storage you want to access, you can use a different set of SDK components: User access: UserStorageQuery and UserStorageMutation Account access: AccountStorageQuery and AccountStorageMutation Entity access: EntityStorageQuery and EntityStorageMutation Each of these components can operate declaratively (for example, as part of your React rendering methods) or imperatively (by using the static methods for query and mutation). For more information on this, see Data querying and mutations. Permissions for working with NerdStorage In order to persist changes on NerdStorage, such as creating, updating, and deleting account and entity storage, you must have a user role with permission to persist changes.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 282.54193,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Data</em> <em>access</em>",
        "info": "Intro to NerdStorage on <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>new</em> <em>relic</em> <em>one</em> <em>apps</em>",
        "body": "To help you build a <em>New</em> <em>Relic</em> <em>One</em> application, we provide you with the <em>New</em> <em>Relic</em> <em>One</em> SDK. On this page, youâll learn how to use Nerd<em>Storage</em> SDK <em>components</em>. Use Nerd<em>Storage</em> in your <em>apps</em> Nerd<em>Storage</em> is used to store and retrieve simple sets of <em>data</em>, including users&#x27; configuration settings"
      },
      "id": "5efa989ee7b9d2048e7bab92"
    }
  ],
  "/build-apps/map-pageviews-by-region": [
    {
      "sections": [
        "Browser Geography: Webpage performance by location",
        "Contents",
        "View performance data by region",
        "Important",
        "Use page functions",
        "View drill-down details",
        "For more help"
      ],
      "title": "Browser Geography: Webpage performance by location",
      "type": "docs",
      "tags": [
        "Browser",
        "Browser monitoring",
        "Additional standard features"
      ],
      "external_id": "7b26e484a4645be8c580650fd7d71a159114bf50",
      "image": "https://docs.newrelic.com/static/793341e63f8e5b444d7cc98a1f5a7d90/c1b63/geo_overview.png",
      "url": "https://docs.newrelic.com/docs/browser/new-relic-browser/additional-standard-features/browser-geography-webpage-performance-location/",
      "published_at": "2021-03-18T06:22:40Z",
      "updated_at": "2021-03-11T07:31:53Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Browser monitoring's Geography page provides a world view with color-coded Apdex scores and other performance information about your end users' experience. You can select specific geographic regions, such as countries or states, and then you can drill down to detailed information about page load performance and historical performance. Contents View performance data by region Important Firewalls may have an impact on the geographical data collected about your end users. To view or sort the performance information by location: one.newrelic.com > Browser > (select an app) > Geo: This page provides a world view and drill-down details of color-coded performance information for geographic locations. Go to one.newrelic.com > Browser > (select an app) > Geo > Global (for a world view). OR Go to one.newrelic.com > Browser > (select an app) > Geo > (select a location) (for a specific location you identified in the Browser application settings). To drill down to a specific area, select a location from the list, or select any area on the geographical map. To view additional details about the selected location, select the Page load performance or Historical performance links. To return to the main Geography page, select X (Close). one.newrelic.com > B * *rowser > (select an app) > Geo > (select a location): If you selected specific locations from Settings > Application settings * * , the Geography page includes tabs to view their performance data directly. Use page functions Use any of our standard user interface functions and page functions to drill down into detailed information. Here is a summary of additional options with the Geography page: If you want to... Do this... Change how the performance data appears Select your choice from the Sort by menu. Adjust the amount of information that appears Select or clear the Hide < % throughput checkbox ( < 1% for global view, < 2% for selected locations). View a map of a specific location Do any of these as applicable: Select the location's name from the Geo > Global list. Select its physical location on the map. If you have pre-selected the location from Application settings, select its tab. View summary performance information about a specific location Mouse over any colored area. View drill-down details After you select a specific location, the Page load performance page shows: Average page load time in seconds Number of page views and active sessions as pages per minute (ppm) Recent browser traces if applicable one.newrelic.com > Browser > (select an app) > Geo > (select a location): After you select a specific location, you can view specific details about Page load performance and Historical performance. In addition, the Historical performance page shows comparison data for the selected time period, yesterday, and last week for the selected location. This includes: Response time Apdex Throughput in pages per minute (ppm) For more help Additional documentation resources include the Page views page (details about end users' overall experience with your site).",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 173.70645,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>View</em> performance data by <em>region</em>",
        "body": " performance and historical performance. Contents <em>View</em> performance data by <em>region</em> Important Firewalls may have an impact on the geographical data collected about your end users. To <em>view</em> or sort the performance information by location: one.newrelic.com &gt; Browser &gt; (select an <em>app</em>) &gt; Geo: This <em>page</em>"
      },
      "id": "604429e7196a67193d960f75"
    },
    {
      "image": "https://newrelic.com/content/dam/component-assets/p03-product-image/browser/products_browsers_features_browserloadtime_sept2020_thumb.png",
      "url": "https://newrelic.com/products/browser-monitoring/features",
      "sections": [
        "New Relic Browser features",
        "Full Support for Googleâs Core Web Vitals",
        "User Centric Perceived Performance",
        "Single Page App Route Changes",
        "Session Traces",
        "Browser Traces",
        "Page Load Time - Segmentation Chart",
        "Page Load Time - Histogram and Percentiles",
        "Geographic Reporting",
        "Page-Level AJAX Calls",
        "Page View Throughput",
        "Connect Browser with Backend Performance",
        "JavaScript Error Summary",
        "Errors by Browser",
        "Percentage of Page Views with Errors",
        "Source Map Support",
        "Best-in-class Customer Experience Monitoring",
        "Browser Throughput",
        "Browser Load Time - Segmentation Chart",
        "Browser Version Chart",
        "Error Instance Details",
        "AJAX Dashboard",
        "Calls by Page View",
        "Request Status Codes",
        "Data Transfer Per Request",
        "Quickly View App Health",
        "Custom dashboards",
        "Integrate with your ticketing system",
        "Alerting",
        "Filterable Geography",
        "U.S. and EU Data Regions",
        "SOC2 Audited",
        "Secure Data Center",
        "Continuous Monitoring",
        "Secure by Default",
        "Compliance Friendly",
        "COMPANY",
        "CONNECT",
        "international"
      ],
      "published_at": "2021-03-18T02:25:14Z",
      "title": "New Relic Browser | New Relic",
      "updated_at": "2021-03-12T01:54:25Z",
      "type": "",
      "external_id": "b30121e0e2deb44e52a48d9a83ca4f854e2fb470",
      "popularity": 1,
      "body": "logo-newrelic Search Products Pricing Solutions Help Center About New Relic for iOS or Android Â Â  New Relic Insights App for iOS Search icon Sign Up Log In Products New Relic One Platform Overview Telemetry Data Platform Full-Stack Observability Applied Intelligence Solutions By Topic DevOps Cloud Adoption Cloud Native Digital Customer Experience Tool Consolidation Open Source By Industry E-commerce and Retail Media Public Sector By Technology Amazon Web Services Pivotal Cloud Foundry Microsoft Azure Google Cloud Platform Kubernetes Help Center Learn Docs Build on New Relic Explore open source projects Training Get help Community forum Global technical support Expert services About Our Customers Over 17,000 customers love New Relic, from Fortune 500 enterprises to small businesses around the globe. Our Blog The latest news, tips, and insights from the world of New Relic and digital intelligence. Our Company About Us Leadership Meetups and Events Resources Social Impact Â  Investor Relations Newsroom Partner Program Contact Us logo-newrelic Want to use our logo? There's a page for that, including instructions and different styles and formats. Sorry about grabbing your right-click. Just trying to be helpful. You can also go home. Back to top icon New Relic Browser Overview Features Resources New Relic Browser features Sign up for free Page Load Performance JavaScript Errors Browser Performance AJAX Global Features Security Page Load Performance New Relic Browser is the worldâs most deployed Real User Monitoring (RUM) solution because itâs easy to use, and instantly connects end-user experience with time spent in backend services. From easy-to-understand overviews to user-centric perceived performance metrics and events, Browser helps you benchmark and improve web performance and troubleshoot across your full stack. Full Support for Googleâs Core Web Vitals By adding Cumulative Layout Shift, a score measuring the impact of sudden unexpected shifts in layout due to content dynamically resizing, we now offer full support for all three of Googleâs Core Web Vitals for web health. Use NRQL to create dashboards for all three measurements, definitions below: Largest Contentful Paint (LCP) - measures loading performance First Input Delay (FID) - measures interactivity Cumulative Layout Shift (CLS) - measures visual stability User Centric Perceived Performance Web performance teams can use more modern metrics than just page load time to benchmark and improve end-user experience for their dynamic pages. Browser helps developers understand how code impacts customers, answering key questions on page performance. Monitor how long users wait for content to display (paint metrics), how long until users can interact with our page (interactivity metrics), and how long until marquee content renders (largest contentful paint). (see blogpost for more) Single Page App Route Changes View Single Page Application route change performance, regardless of what JavaScript framework you use. Powerful low-level instrumentation can even capture interactions beyond the route change that can be customized via API, allowing monitoring tailored to the architecture of your application, such as for custom frameworks. Session Traces Session Traces provide one of the most valuable assets an engineer requires - context. Beyond identifying long load times, and specific errors, Browser Session Traces provide the story that occurred both before and after an error or performance issue. Pivot from AJAX requests and JavaScript errors into a Session Trace and conversely pivot from a Session Trace out to a specific JavaScript error or Network error. Browser Traces Traces are snapshots of one userâs experience, surfaced as an outlier due to a longer than average load time. It provides details around when it took place, a segmented breakdown of where load time was spent, browser type, and the userâs geographic location. This report is excellent when dissecting areas of your application which are performing poorly for specific users. Page Load Time - Segmentation Chart Page load times capture metrics from the moment a user begins a transaction in the browser until the page completes loading. The reports show average page load time broken down into color-coded segments for: Request queuing, application code, network latency, DOM processing, and Page rendering. Page Load Time - Histogram and Percentiles Histograms and percentiles of browser page load times provide a holistic view of the speed of page loads, one that is not focused on averages alone. Histograms and percentiles surface every page load that occurred during a specified time window, providing the ability to drill into outliers that might have been overlooked otherwise. Geographic Reporting Understand how your end usersâ experience with your site varies by geographical region. Identify if more CDNâs are required, or if high value customers in specific parts of the world are having a negative experience with your siteâs performance. Page-Level AJAX Calls For a specific page, see all the AJAX calls being made as well as the response time, throughput (rpm), total number of calls, error status codes, and average data transfer made for each one. Page View Throughput Throughput is measured in requests per per minute. Throughput metrics help you understand which pages are being called most frequently. Connect Browser with Backend Performance From the Page views report, you can select single page URL and see all of the associated backend APM transactions (if you have the APM Agent installed in your application). Quickly view the total call time, average response time, and call count for any individual backend transaction. You can also dive deeper into a particular transaction and see diagnostics within our APM reports. JavaScript Errors The JavaScript error dashboards help you identify production JavaScript errors impacting your users' experiences and begin pinpointing how to resolve them. JavaScript Error Summary This summary view gives you a high level understanding of the types of JavaScript errors happening, the frequency at which they occur, and the percentage of users affected by the errors. Errors by Browser For each type of error, this chart shows you which browsers are being impacted by the error and the relative contribution it is making to your total error volume. Percentage of Page Views with Errors For each type of error, this chart shows you the percentage of page views affected by it. This allows you to quickly assess the reach and impact a particular error has on your end users. Source Map Support Troubleshoot minified production JavaScript code, with source map support giving you full visibility to where in your code the front-end error is. Intuitive drag-and-drop lets you locate issues in a click, while API integrations work seamlessly with your build pipeline. Best-in-class Customer Experience Monitoring Crash analysis in New Relic Mobile lets you analyze the most impactful crashes and fix them faster. Source map support in New Relic Browser gives you more actionable visibility into front-end JS errors by showing you exactly where in the original source the error occurred, even if your code is minified. Browser Performance New Relic's Browser dashboards provide information about your end users' experience based on browser type and version, so you can understand where to focus your time testing and optimizing for performance. Browser Throughput Provides a snapshot of the average number of pageviews received per minute broken down by browser type. Browser Load Time - Segmentation Chart For each type of browser, a segmented view of time spent on request queuing, application code, network latency, DOM processing, and Page rendering. Browser Version Chart Helps you understand which versions of each browser type your customers come from based on throughput. Error Instance Details Error Instance details grabs a snapshot of a single error and captures the stack trace details available from the browser, focusing on the actionable components, down to the line of code. These are metrics are combined with unique browser combinations down to the version level, and unique url. JavaScript diagnostics doesn't get more granular than this. AJAX If your applications use AJAX to update parts of a webpage after the initial page load, our AJAX dashboards will provide you with the level of visibility you need to understand how those requests are performing and ultimately affecting your usersâ experience. AJAX Dashboard The main AJAX dashboard surfaces your siteâs most resource intensive AJAX requests, filterable by time consumption, response time, throughput, callback time, and data transfer. From here you can drill into a particular call for detailed analysis. Calls by Page View Shows which page views are calling a particular server side controller, with page level detail around throughput, response time, total number of calls, and data transfer. Request Status Codes The status codes reporting indicates the return behavior from an AJAX call. A large number of non-200 status codes may indicate a problem with your AJAX endpoints. Data Transfer Per Request This shows data transfer which is requested and sent. Use this to look for correlations between high callback times and data transfer rates. Global Features The following features are used throughout New Relicâs product suite to help make our products easier to use and fit seamlessly into your existing workflows. Quickly View App Health New Relic uses color coded status indicators throughout to help you quickly spot performance issues. Custom dashboards Keep an eye on your most critical performance metrics quickly by adding them to a custom dashboard. Integrate with your ticketing system File tickets related to performance problems directly into your ticketing system.Â Learn which ticketing systems we support. Alerting Check out our new Alerts FeaturesÂ for Browser that report on JS error %, response time, throughput and much more! Filterable Geography Understand how your end usersâ experience with your site varies by geographical region, down to the city level. Identify how a CDN or ASN/ Internet Service Provider is performing in different regions. Security New Relic is committed to helping customers make their applications fast and secure. We take protecting our customers' data seriously, here's an overview of how we do it. U.S. and EU Data Regions Our global data-hosting structure consists of two regions: European Union and United States. You can select your preferred data region during the account setup process, regardless of your physical location. (Note: We do not support migration or aggregation of data across regions.) SOC2 Audited New Relic has successfully completed a SOC 2 audit of processes and controls relevant to security and availability. This audit reviews our security process and controls and provides both ourselves, and more importantly our customers an independent, third-party assurance that we are taking the appropriate steps to protect our systems and our customerâs data. Secure Data Center The infrastructure that runs the New Relic service and stores our customerâs data resides in a Tier III, SSAE-16 certified data center. Customer data is backed up on a regular basis. Continuous Monitoring New Relic employs both internal and third-party services to perform continuous security scanning on both our network and applications to ensure that our applications and servers remain secure. Secure by Default We strongly believe in the concept of âsecure by defaultâ. Customers have to explicitly enable settings within New Relic to authorize the sending of sensitive data. We want to make sure that you are not accidentally exposing anything that you donât want to. Compliance Friendly New Relic can be configured to operate securely in regulated environments such as PCI, HIPAA, or SOX. In addition we are Swiss and EU Privacy Shield certified. COMPANY Careers and Culture Partner Program Investor Relations NewRelic.org Suppliers Portal CONNECT Contact Us Request Demo Events international newrelic.co.jp (æ¥æ¬èª) newrelic.fr (FranÃ§ais) newrelic.de (Deutsch) newrelic.co.kr (íêµ­ì´) Terms of Service DMCA Policy Privacy Policy Cookie Policy UK Slavery Act of 2015 Â©2008-21 New Relic, Inc. All rights reserved",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 136.38184,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Percentage of <em>Page</em> <em>Views</em> with Errors",
        "body": " (paint metrics), how long until users can interact with our <em>page</em> (interactivity metrics), and how long until marquee content renders (largest contentful paint). (see blogpost for more) Single <em>Page</em> <em>App</em> Route Changes <em>View</em> Single <em>Page</em> Application route change performance, regardless of what JavaScript"
      },
      "id": "5c66a952b5b9e17d23a27084"
    },
    {
      "sections": [
        "Session traces: Explore a webpage's life cycle",
        "Identify problems and solutions",
        "Requirements",
        "Select a session trace",
        "Tip",
        "View session trace details",
        "Session segment definitions",
        "Slow JavaScript execution and repainting"
      ],
      "title": "Session traces: Explore a webpage's life cycle",
      "type": "docs",
      "tags": [
        "Browser",
        "Browser monitoring",
        "Browser Pro features"
      ],
      "external_id": "2d34d77c7661be3ebd3f04a8188fe36d7233895f",
      "image": "https://docs.newrelic.com/static/a7f12a1603efe1412d15b9a51a312548/c1b63/browser_sessiontraces_overview.png",
      "url": "https://docs.newrelic.com/docs/browser/browser-monitoring/browser-pro-features/session-traces-explore-webpages-life-cycle/",
      "published_at": "2021-03-18T06:20:33Z",
      "updated_at": "2021-03-16T08:23:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Browser monitoring's session traces provide a detailed timeline of the load and interaction events during a webpage's full life cycle, for as long as ten minutes. Page load timing, individual asset loads, user interactions, AJAX requests, callbacks, errors, and other events appear in an interactive timeline which includes a detailed waterfall visualization, a heat map overview, and highlighted metrics and problems related to that session. Identify problems and solutions Session traces help you understand: How users experience your page load, including time to DOM load, time waiting for AJAX requests to complete, and the user's interactions with the page How the New Relic metrics reflect your end users' experiences What is the sequence of JavaScript and browser events, which take longer than others, and when each event occurs Where bottlenecks occur, and what may be causing them Why one page load may be slower than others, by providing the context for individual events during a session By connecting performance to user experience and interactions to performance, this detailed and intuitive visualization of all events in the user's session can help pinpoint problem areas and easily identify solutions. Requirements To use Browser monitoring's session traces feature, make sure you meet these requirements: Your agent version must support Browser monitoring. If you're using multiple names for an app, session traces will only report to the most specific application. For accounts older than October 2014, you must enable Browser monitoring and the enhanced Pro features. Browser randomly captures traces only from browsers that support the Resource Timing API. Select a session trace The Session traces index lists the most recent traces based on the time picker selection for the selected app. Session traces are randomly sampled and stored at a rate of 90/hour. You can page through up to 500 traces at a time. Additionally, you can sort and search the list by attributes, including: Full URL, with query string parameters removed Browser type Started at date/time Page load time one.newrelic.com > Browser > (select an app) > Session traces: You can select a session trace from the Browser index. You can also select a session trace directly from the Browser Summary, Page views, JS errors, and AJAX pages. To select a specific session trace: Go to one.newrelic.com and click Browser > (select an app) > Session traces. To locate a session trace from a different date or time period, use the time picker. To limit the index to a specific type of trace, use the search window. To view detailed information, select the session trace's link. Tip You can also select a session trace directly from the Browser Summary, Page views, JS errors and AJAX pages. View session trace details The Session trace details page provides summary information about the trace, a heat map with timing details, and a waterfall of events that you can explore. The color-coded legend identifies the page load events during the webpage's life cycle. For apps that have been deployed using the copy/paste method, Browser monitoring includes web app and queue time in Network time as part of the page load timing process. This is because Browser relies on the server-side agent to pass the application values to the Browser agent through auto-injection. You can view detailed information about how this \"back end\" time breaks down from the browser's point of view. The session traces report on all the network related events available, so you can see on a case-by-case basis how the browser spends time on DNS lookups and other network events. one.newrelic.com > Browser > (select an app) > Session traces > (select a trace): Use Browser's session trace details to examine events and identify problems during the end user's webpage session. To navigate through a session trace, explore the waterfall chart by scrolling vertically through the event stack, or select individual events to view their details. If you want to... Do this... View the web page for this session trace Select the trace link. Jump to a specific time Select the time indicator or event on the heat map. View details about individual events Select any event in the waterfall chart. From there, select View full details if applicable. Change the location on the session trace Click on the heat map, or scroll vertically through the waterfall chart. Zoom in or out of the overall trace Select the plus or minus icons below the heat map. Share the session trace information Create a permalink to paste into a form, ticket, email, etc. Session segment definitions Important session trace measurements are displayed in the upper right corner of the Session traces page. The first four measurements represent how long into a session that the segment ended. For example, if Page Load is 0.202s, that means that the page load event completed 0.202 seconds after the request began. Session segment Description Backend The time from when the request began to when backend activity finished and DOM loading began. DOM processing The time from when the request began to when DOM processing finished. Page load The time from when the request began to when the page load event fired. Waiting on AJAX The time from when the request began to when AJAX activity ended. First interaction The time from when the request began to when the first user activity, like a mouse click or a scroll, was recorded. Duration The total duration of the session. Slow JavaScript execution and repainting Session traces help you identify callbacks in your JavaScript code that execute slowly and block the execution of subsequent calls on the browser's main thread. These calls should execute quickly in order to allow the browser to quickly repaint the page in response to user actions. Session traces highlight any callbacks longer than 33ms. If called in rapid succession (such as inside a requestAnimationFrame loop), callbacks longer than 33ms reduce the frame rate below 30 frames per second. This speed seems sluggish to users.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 134.16354,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>View</em> session trace details",
        "body": " directly from the Browser Summary, <em>Page</em> <em>views</em>, JS errors and AJAX pages. <em>View</em> session trace details The Session trace details <em>page</em> provides summary information about the trace, a heat <em>map</em> with timing details, and a waterfall of events that you can explore. The color-coded legend identifies the <em>page</em>"
      },
      "id": "603ecc4de7b9d2843d2a0806"
    },
    {
      "sections": [
        "Configure polling frequency and data collection for cloud integrations",
        "Tip",
        "Overview of settings",
        "Caution",
        "Change polling frequency",
        "Specify data to be fetched",
        "Data collection",
        "Filters",
        "Potential impact on alerts and charts"
      ],
      "title": "Configure polling frequency and data collection for cloud integrations",
      "type": "docs",
      "tags": [
        "Integrations",
        "Infrastructure integrations",
        "Cloud integrations"
      ],
      "external_id": "b900b7545f9032201c212449be114e10176bf789",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/infrastructure-integrations/cloud-integrations/configure-polling-frequency-data-collection-cloud-integrations/",
      "published_at": "2021-03-18T10:18:04Z",
      "updated_at": "2021-03-16T06:05:41Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our cloud integrations get data from cloud provider APIs. In New Relic, you can change some of the data collection-related settings for your cloud integrations. Read on to see what changes you can make and the reasons for making them. Tip To use integrations and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Overview of settings New Relic cloud integrations get data from cloud providers' APIs. Data is generally collected from monitoring APIs such as AWS CloudWatch, Azure Monitor, and GCP Stackdriver, and inventory metadata is collected from the specific services' APIs. You can use the account status dashboard to see how your cloud integrations are handling data from a cloud service provider. If you want to report more or less data from your cloud integrations, or if you need to control the use of the cloud providers' APIs to prevent reaching rate and throttling limits in your cloud account, you can change the configuration settings to modify the amount of data they report. The two main controls are: Change polling frequency Change what data is reported Examples of business reasons for wanting to change your polling frequency include: Billing: If you need to manage your AWS CloudWatch bill, you may want to decrease the polling frequency. Before you do this, make sure that any alert conditions set for your cloud integrations are not affected by this reduction. New services: If you are deploying a new service or configuration and you want to collect data more often, you may want to increase the polling frequency temporarily. Caution Changing the configuration settings for your integrations may impact alert conditions and chart trends. Change polling frequency The polling frequency configuration determines how often New Relic reports data from your cloud provider for each service. By default, the polling frequency is set to the maximum frequency that is available for each service. To change the polling frequency for a cloud integration: Go to one.newrelic.com > Infrastructure. Select the tab that corresponds to your cloud service provider. Select Configure next to the integration. Use the dropdowns next to Data polling interval every to select how frequently you want New Relic to capture your cloud integration data. Specify data to be fetched You can specify which information you want captured for your cloud integration by enabling the collection of additional data and by applying multiple filters to each integration. To change this settings for your cloud integration: Go to one.newrelic.com > Infrastructure. Select the tab that corresponds to your cloud service provider. Select Configure next to the integration. Under Data collections and filters, turn the toggles you want On. For filters, select or enter the values that you want included in your reported data. Data collection For some cloud integrations, an additional number of calls to the cloud provider APIs are needed in order to collect data. For example, to fetch tags for AWS Elastic Map Reduce clusters, an additional call to the service API is required. Therefore, in order to better control the amount of API calls that are sent to your cloud account for these integrations, New Relic allows you to specify if you need these data to be collected. There are different data collection toggles available, depending on the integration. Toggle Description Collect tags Some integrations require additional API calls to the cloud provider to report tags. Tag collection is enabled by default. Switch this to Off if you don't want the integration to collect your cloud resource tags and thus reduce the volume of API calls. Collect extended inventory Some integrations can collect extended inventory metadata about your cloud resources by making additional API calls to the cloud provider. The metadata that is included within extended inventory for each cloud integration is described in the integration documentation. Extended inventory collection is disabled by default. Switch this to On if you want to monitor extended inventory. This will increase the volume of API calls. Collect shards data Available for AWS Kinesis Streams integration. By default, New Relic does not report shard metrics. Switch this to On if you want to monitor shard metrics in addition to data stream metrics. Collect Lambda@Edge data Available for AWS CloudFront integration. By default, New Relic does not report Lambda@Edge data. Switch this to On if you're using Lambda@Edge in AWS CloudFront and want to get Lambda execution location metadata. Collect nodes data Available for AWS Elasticsearch integration. By default, New Relic does not report Elasticsearch node metrics. Switch this to On if you want to monitor node metrics in addition to cluster metrics. Collect NAT Gateway data and Collect VPN data Available for AWS VPC integration. By default, New Relic does not report NAT Gateway nor VPN metrics. Switch these to On if you want to monitor NAT Gateway and VPN metrics and inventory, in addition to other VPC related entities inventory. Collect IP addresses Available for AWS EC2 integration. By default, New Relic collects EC2 instance metadata that includes public and private IP addresses, and network interface details. Switch this to Off if you don't want New Relic to store and display these IP data. Filters When a filter is On, you specify the data that you want to be collected; for example, if the Limit to AWS region is On, the regions that you select will be the ones that data will be collected for. There are different filters available, depending on the integration: Filter Description Region Select the regions that include the resources that you want to monitor. Queue prefixes Available for AWS SQS integration. Enter each name or prefix for the queues that you want to monitor. Filter values are case-sensitive. Load balancer prefixes Available for AWS ALB integration. Enter each name or prefix for the application load balancers that you want to monitor. Filter values are case-sensitive. Stage name prefixes Available for AWS API Gateway integration. Enter each name or prefix for the stages that you want to monitor. Filter values are case-sensitive. Tag key Enter one tag key that is associated with the resources that you want to monitor. Filter values are case-sensitive, and you can use this filter in combination with tag value filter. Tag value Enter one tag value that is associated with the resources that you want to monitor. Filter values are case-sensitive, and you can use this filter in combination with tag key. Resource group Select the resource groups that are associated with the resources that you want to monitor. Potential impact on alerts and charts If you change an integration's configuration, it can impact alert conditions and charts. Here are some things to consider: If you change this setting... It may have this impact... Any configuration setting When you change the configuration settings, the data that New Relic displays in infrastructure charts, on the inventory page, and in the events feed changes as well. Any filters When you create alert conditions after you set filters, make sure that your alerts are not triggered by resources that you filtered out. Filter for regions If you filter for specific regions, it may lower the amount of data reported to New Relic, which could trigger an alert. If you create an alert condition for a specific region and then filter that region out, the region would no longer report data and would never trigger the alert. Polling frequency When you create an alert, make sure that you define the threshold for a time period that is longer than the polling frequency. Tags and extended inventory If you turn on tags and/or extended inventory, New Relic makes more API calls to the cloud provider, which could increase your cloud provider API usage bill.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 121.837166,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": ", an additional number of calls to the cloud provider APIs are needed in order to collect data. For example, to fetch tags for AWS Elastic <em>Map</em> Reduce clusters, an additional call to the service API is required. Therefore, in order to better control the amount of API calls that are sent to your cloud"
      },
      "id": "603e8eef64441fcc7e4e8853"
    },
    {
      "sections": [
        "Google Cloud Load Balancing monitoring integration",
        "Features",
        "Activate integration",
        "Polling frequency",
        "Find and use data",
        "Metric data",
        "GcpHttpLoadBalancerSample",
        "GcpTcpSslProxyLoadBalancerSample",
        "GcpInternalLoadBalancerSample",
        "Inventory data",
        "gcp/loadbalancing/http-loadbalancer",
        "gcp/loadbalancing/tcp-ssl-proxy-loadbalancer",
        "gcp/loadbalancing/tcp-internal-loadbalancer",
        "gcp/loadbalancing/udp-internal-loadbalancer"
      ],
      "title": "Google Cloud Load Balancing monitoring integration",
      "type": "docs",
      "tags": [
        "Integrations",
        "Google Cloud Platform integrations",
        "GCP integrations list"
      ],
      "external_id": "be1c6e1064673df0f3d9d7bcfcdc102988fa4464",
      "image": "",
      "url": "https://docs.newrelic.com/docs/integrations/google-cloud-platform-integrations/gcp-integrations-list/google-cloud-load-balancing-monitoring-integration/",
      "published_at": "2021-03-18T10:45:57Z",
      "updated_at": "2021-03-13T03:45:26Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's integrations with the Google Cloud Platform (GCP) include an integration to report Google Cloud Load Balancing data to New Relic. This document explains how to activate the GCP Cloud Load Balancing integration and describes the data that can be reported. Features Google Cloud Load Balancing is a software-based managed service for distributing traffic in a single or multiple region. It provides seamless, immediate autoscaling and supports the latest application delivery protocols. Activate integration To enable the integration follow standard procedures to connect your GCP service to New Relic. Polling frequency New Relic integrations query your GCP services according to a polling interval, which varies depending on the integration. The polling frequency for Google Cloud Load Balancer is five minutes. The resolution is 1 data point every minute. Find and use data After activating the integration and waiting a few minutes (based on the polling frequency), data will appear in the New Relic UI. To find and use your data, including links to your dashboards and alert settings, go to one.newrelic.com > Infrastructure > GCP > (select an integration). Metric data To view metric data for your GCP Load Balancing integration in New Relic, create NRQL queries for GcpHttpLoadBalancerSample, GcpTcpSslProxyLoadBalancerSample, and GcpInternalLoadBalancerSample events and their related attributes. GcpHttpLoadBalancerSample Query GcpHttpLoadBalancerSample events in New Relic to view data for the following attributes: Attribute Description https.BackendLatencies Mean latency (in milliseconds) calculated from when the request was sent by the proxy to the backend until the proxy received from the backend the last byte of response. https.BackendRequestBytes The number of bytes sent as requests from HTTP/S load balancer to backends. https.BackendRequests The number of requests served by backends of HTTP/S load balancer. https.BackendResponseBytes The number of bytes sent as responses from backends (or cache) to HTTP/S load balancer. https.FrontendTcpRtt Mean of the Round-Trip Time (RTT) measured for each connection between client and proxy. https.RequestBytes The number of bytes sent as requests from clients to HTTP/S load balancer. https.Requests The number of requests served by HTTP/S load balancer. https.ResponseBytes The number of bytes sent as responses from HTTP/S load balancer to clients. https.TotalLatencies Mean of the latency (in milliseconds) calculated from when the request was received by the proxy until the proxy got ACK from client on last response byte. GcpTcpSslProxyLoadBalancerSample Query GcpTcpSslProxyLoadBalancerSample events in New Relic to view data for the following attributes: Attribute Description tcpSslProxy.ClosedConnections Number of connections that were terminated over TCP/SSL proxy. tcpSslProxy.EgressBytes Number of bytes sent from VM to client using proxy. tcpSslProxy.FrontendTcpRtt Mean of the smoothed RTT (in milliseconds) measured by the proxy's TCP stack, each minute application layer bytes pass from proxy to client. tcpSslProxy.IngressBytes Number of bytes sent from client to VM using proxy. tcpSslProxy.NewConnections Number of connections that were created over TCP/SSL proxy. tcpSslProxy.OpenConnections Current number of outstanding connections through the TCP/SSL proxy. GcpInternalLoadBalancerSample Query GcpInternalLoadBalancerSample events in New Relic to view data for the following attributes: Attribute Description l3.internal.EgressBytes The number of bytes sent from Internal Load Balancing (ILB) backend to client (for TCP flows it only counts bytes on the application stream). l3.internal.EgressPackets The number of packets sent from ILB backend to client. l3.internal.IngressBytes The number of bytes sent from client to ILB backend (for TCP flows it only counts bytes on the application stream). l3.internal.IngressPackets The number of packets sent from client to ILB backend. l3.internal.RttLatencies Mean of the RTT (in milliseconds) measured over TCP connections for ILB flows. Inventory data To view inventory data for GCP Load Balancing services, go to one.newrelic.com > Infrastructure > Inventory and search for or select the following: gcp/loadbalancing/http-loadbalancer This entity represents HTTP and HTTPS Load Balancers. Name Description project The project id and/or name. zone The zone or region of the entity. name The name of the entity. urlMapName The name of the urlmap. This is also used as the name of the load balancer. forwardingRuleName The name of the forwarding rule. targetProxyName The name of the target HTTP/S proxy. matchedUrlPathRule The prefix of the URL defined in urlmap tree. UNMATCHED is the sink default rule. backendName The name of the backend group. It can be a special value if the backend wasn't assigned. backendType The type of the backend group. It can be INSTANCE_GROUP, NETWORK_ENDPOINT_GROUP, or a special value if the backend wasn't assigned. backendScope The scope (zone-name or region-name) of the backend group. It can be a special value if the backend wasn't assigned, or be empty if there is no response from the backend. backendScopeType The type of the scope of the backend group. It can be ZONE, REGION, or another special value in case the backend wasn't assigned. backendTargetName The name of the backend target - service or bucket. backendTargetType The type of the backend target. It can be either BACKEND_SERVICE or BACKEND_BUCKET. gcp/loadbalancing/tcp-ssl-proxy-loadbalancer This entity represents SSL and TCP Proxy Load Balancers. Name Description project The project id and/or name. zone The zone or region of the entity. name The name of the entity. backendName The name of the backend group. backendType The type of the backend group. It can be INSTANCE_GROUP or NETWORK_ENDPOINT_GROUP. backendScope The scope (zone or region) of the backend group. backendScopeType The type of the scope of the backend group. It can be either ZONE or REGION. backendTargetName The name of the backend target (backend service, equivalent to proxy name). backentTargetType The type of the backend target. Currently it can only be BACKEND_SERVICE. forwardingRuleName The name of the forwarding rule. targetProxyName The name of the target TCP/SSL proxy. gcp/loadbalancing/tcp-internal-loadbalancer Name Description project The project id and/or name. zone The zone or region of the entity. name The name of the entity. networkName The name of the virtual network. loadBalancerName The name of the load balancer. backendName The name of the backend group that handled the connection. backendType The type of the backend group that handled the connection. Currently it's INSTANCE_GROUP. backendScope The scope (zone or region) of the backend group that handled the connection. backendScopeType The type of the scope of the backend group that handled the connection. It can be either ZONE or REGION. backendTargetName The name of the backend target that handled the connection (equivalent to load_balancer_name). backentTargetType The type of the backend target that handled the connection. Currently it's BACKEND_SERVICE. backendSubNetworkName The name of the subnetwork of the backend. forwardingRuleName The name of the forwarding rule. protocol The load balancer protocol. It can be either TCP or UDP. gcp/loadbalancing/udp-internal-loadbalancer Name Description project The project id and/or name. zone The zone or region of the entity. name The name of the entity. networkName The name of the virtual network. loadBalancerName The name of the load balancer. backendName The name of the backend group that handled the connection. backendType The type of the backend group that handled the connection. Currently it's INSTANCE_GROUP. backendScope The scope (zone or region) of the backend group that handled the connection. backendScopeType The type of the scope of the backend group that handled the connection. It can be either ZONE or REGION. backendTargetName The name of the backend target that handled the connection (equivalent to load_balancer_name). backentTargetType The type of the backend target that handled the connection. Currently it's BACKEND_SERVICE. backendSubNetworkName The name of the subnetwork of the backend. forwardingRuleName The name of the forwarding rule. protocol The load balancer protocol. It can be either TCP or UDP.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 121.709015,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": " &gt; Inventory and search for or select the following: gcp&#x2F;loadbalancing&#x2F;http-loadbalancer This entity represents HTTP and HTTPS Load Balancers. Name Description project The project id and&#x2F;or name. zone The zone or <em>region</em> of the entity. name The name of the entity. url<em>Map</em>Name The name of the urlmap"
      },
      "id": "6045068028ccbc240b2c60d1"
    }
  ],
  "/components/charts": [
    {
      "sections": [
        "Build a custom visualization for dashboards",
        "Before you begin",
        "Create a new visualization",
        "Tip",
        "Render the visualization in local development",
        "Important",
        "Advanced nerdpack configuration",
        "Deploy and use your visualization",
        "Summary",
        "Additional resources"
      ],
      "title": "Build a custom visualization for dashboards",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "NR One Catalog",
        "Subscribe visualizations"
      ],
      "external_id": "5e17f1f0db2020342ced37e95dbcb94489b5ca73",
      "image": "https://developer.newrelic.com/static/cf9bafc3fc03f7562e4f969cafcd7659/30c01/visualization-apps-navigation.png",
      "url": "https://developer.newrelic.com/build-apps/build-visualization/",
      "published_at": "2021-03-18T01:52:08Z",
      "updated_at": "2021-03-17T01:51:21Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Create custom data views",
      "body": "Building your own visualizations for New Relic dashboards enables you and your organization to query data from any source and display it on your dashboard. In this guide, you'll learn how to use the CLI to generate a visualization file structure, run it locally where you can quickly test and iterate, and then deploy it for use in a dashboard. Before you begin To get started, make sure you have a New Relic account. To complete this guide, you need the New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in the CLI quick start. Create a new visualization In this first set of steps you will use the CLI to quickly generate the boilerplate for a new visualization. Step 1 of 3 Ensure you're working with the latest version of the New Relic One CLI: bash Copy $ nr1 update Step 2 of 3 Start with a new Nerdpack. If you just installed the New Relic One CLI, then you have a new Nerdpack project directory (called something like my-awesome-nerdpack). If you need to create one, run nr1 create and select the nerdpack option. bash Copy $ nr1 create --type nerdpack --name my-awesome-nerdpack Tip Note: If you only want to build a visualization in your Nerdpack, you can remove the nerdlets/ and launchers/ folders from the nerdpack Step 3 of 3 Navigate to the root of your Nerdpack project and run theÂ nr1 createÂ command, selecting the visualization option. bash Copy $ cd my-awesome-nerdpack $ nr1 create --type visualization --name my-awesome-visualization As a result, you have a new visualization directory matching the name you gave your visualization. It is located in the visualizations directory in the root of your Nerdpack project. The files created provide an example visualization âÂ a radar chart populated by a basic NRQL query. The nr1.json file provides metadata. TheÂ configurationÂ key in this metadata defines the prop-input fields to be shown in the UI. These are the fields users will fill in to create an instance of the visualization. Supported input types are: boolean string number json enum: a developer-defined list of string options. nrql: a single NRQL query string. namespace: a group of input fields to be displayed together under a shared heading in the prop-editing UI. collection: a repeatable group of input fields to be displayed together under a shared heading in the prop-editing UI. The nrqlQueries entry is an example of a collection type. The index.js file is where you define the React component that receives the props and renders the visualization. You can install and import any JavaScript libraries you find useful. The example component imports Recharts, a library that wraps D3 submodules for easy-to-compose visualizations. If your visualization queries data over a time range and you want it to utilize the platform time range setting, you will need to utilize the timeRange value from PlatformStateContext. The timeRange can be passed directly to the NrqlQuery component. Setting the NrqlQuery component's pollInterval prop to NrqlQuery.AUTO_POLL_INTERVAL automatically handles calculating an appriate data polling interval. <PlatformStateContext.Consumer> {({timeRange}) => ( <NrqlQuery timeRange={timeRange} pollInterval={NrqlQuery.AUTO_POLL_INTERVAL} > ... Copy Render the visualization in local development Now run the generated visualization locally, and view it in Custom Visualizations. There you can quickly test changes to your code. Step 1 of 7 Start the local Node server for your Nerdpack. bash Copy $ nr1 nerdpack:serve Important To see changes to the nr1.json file take effect, restart the local Node server. Changes to the definition of the configuration field will not show up in the prop configuration side bar of the Custom Visualizations UI until you stop the local Node server and start it back up. Step 2 of 7 In a browser, open https://one.newrelic.com/?nerdpacks=local. This url is also shown in the terminal when the Node server starts. The nerdpacks=local query string will direct the UI to load your new visualization artifact from the local Node server. Advanced nerdpack configuration See the advanced nerdpack configuration section for detailed information about how your local Node server is proxied to the browser and how you can override webpack configuration if needed. Step 3 of 7 Open the Apps page, and navigate to Custom Visualizations, which you will find favorited by default. Step 4 of 7 In the Custom Visualizations listing, find and click on the tile for your visualization. If the tile is not showing up or it is not indicating that it is running locally, restart the Node server and refresh the browser. When you select your locally running visualization, the visualization hosted by your local Node server is rendered with prop-configuration inputs. Here you can take advantage of the features outlined in the following steps. Step 5 of 7 You can set prop values and see the visualization update automatically. The prop inputs are listed as defined in the prop definitions located in the nr1.json file in the visualization folder (for example ./visualizations/my-awesome-visualization/nr1.json). Fill in values for the props and see the visualization update automatically. As you change props in the sidebar, a render cycle of your visualization's React component is triggered. Step 6 of 7 Modify the visualization's Javascript code and see the result automatically update in the UI. For example, you can change the value for fillOpacity on the Radar component in index.js. Upon save, you will see the page automatically update. fillOpacity={1.0} visualizations/your-visualization/index.js Copy Step 7 of 7 To add more props, you must update the configuration field in the nr1.json file for your visualization and restart the local Node server. The props you define in the configuration field allow New Relic One to cleanly display a prop-editing UI for users interacting with your visualization. See above for more information about the configuration field. Deploy and use your visualization When your visualization is ready to be added to a dashboard, just follow these steps. Step 1 of 2 Open and follow the guide to publish and deploy the Nerdpack to New Relic One and subscribe accounts to it. Step 2 of 2 Then you can add your visualization to a dashboard. Summary Congratulations on completing the steps in this example! You've learned how to: Create a visualization and run it locally Quickly test and iterate on visualization code changes in Custom Visualizations Deploy a visualization Add a custom visualization to a dashboard Additional resources New Relic Quick Tips video: Dashboards and Custom Visualizations (6 minutes) New Relic NerdBytes video: Configuring custom visualizations for dashboards (7 minutes) New Relic Nerdlog live stream: Custom Data Visualizations on New Relic (30 minutes)",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 228.03383,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Advanced <em>nerdpack</em> configuration",
        "tags": "<em>nr1</em> <em>cli</em>",
        "body": " in the <em>CLI</em> quick start. Create a new visualization In this first set of steps you will use the <em>CLI</em> to quickly generate the boilerplate for a new visualization. Step <em>1</em> of 3 Ensure you&#x27;re working with the latest version of the New Relic One <em>CLI</em>: bash Copy $ <em>nr1</em> update Step 2 of 3 Start with a new <em>Nerdpack</em>"
      },
      "id": "6039a4dbe7b9d262492a07c4"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-03-17T23:31:12Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errorsâand more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 194.08646,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>1</em>. Make instrumentation part of every build",
        "body": ". For example, the New Relic <em>CLI</em> lets you search and tag entities across accounts. The New Relic Lambda <em>CLI</em> installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the <em>NR</em>-<em>1</em> <em>CLI</em> to build and share your own New Relic applications. 3. Leverage the power of APIs Now"
      },
      "id": "603ea2f7196a672323a83def"
    },
    {
      "sections": [
        "Intro to New Relic One SDK",
        "Components of the SDK",
        "UI components",
        "Chart components",
        "Query and storage components",
        "Platform APIs"
      ],
      "title": "Intro to New Relic One SDK",
      "type": "developer",
      "tags": [
        "SDK components",
        "New Relic One apps",
        "UI components",
        "chart components",
        "query and storage components",
        "Platform APIs"
      ],
      "external_id": "3620920c26bcd66c59c810dccb1200931b23b8c2",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/intro-to-sdk/",
      "published_at": "2021-03-18T01:52:07Z",
      "updated_at": "2020-12-04T01:58:15Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Intro to New Relic One SDK",
      "body": "To help you build New Relic One applications, we provide you with the New Relic One SDK. Here we give you an introduction to the types of API calls and components in the SDK. The SDK provides everything you need to build your Nerdlets, create visualizations, and fetch New Relic or third-party data. Components of the SDK SDK components are located in the Node module package named nr1, which you get when you install the NR1 CLI. The nr1 components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components category of the SDK contains React UI components, including: Text components: These components provide basic font and heading elements. These include HeadingText and BlockText. Layout components: These components give you control over the layout, and help you build complex layout designs without having to deal with the CSS. Layout components include: Grid and GridItem: for organizing more complex, larger scale page content in rows and columns Stack and StackItem: for organizing simpler, smaller scale page content (in column or row) Tabs and TabsItem: group various related pieces of content into separate hideable sections List and ListItem: for providing a basic skeleton of virtualized lists Card, CardHeader and CardBody : used to group similar concepts and tasks together Form components: These components provide the basic building blocks to interact with the UI. These include Button, TextField, Dropdown and DropdownItem, Checkbox, RadioGroup, Radio, and Checkbox. Feedback components: These components are used to provide feedback to users about actions they have taken. These include: Spinnerand Toast. Overlaid components: These components are used to display contextual information and options in the form of an additional child view that appears above other content on screen when an action or event is triggered. They can either require user interaction (like modals), or be augmenting (like a tooltip). These include: Modal and Tooltip. Components suffixed with Item can only operate as direct children of that name without the suffix. For example: GridItem should only be found as a child of Grid. Chart components The Charts category of the SDK contains components representing different types of charts. The ChartGroup component helps a group of related charts share data and be aligned. Some chart components can perform NRQL queries on their own; some accept a customized set of data. Query and storage components The Query components category contains components for fetching and storing New Relic data. The main way to fetch data is with NerdGraph, our GraphQL endpoint. This can be queried using NerdGraphQuery. To simplify use of NerdGraph queries, we provide some components with pre-defined queries. For more on using NerdGraph, see Queries and mutations. We also provide storage for storing small data sets, such as configuration settings data, or user-specific data. For more on this, see NerdStorage. Platform APIs The Platform API components of the SDK enable your application to interact with different parts of the New Relic One platform, by reading and writing state from and to the URL, setting the configuration, etc. They can be divided into these categories: PlatformStateContext: provides read access to the platform URL state variables. Example: timeRange in the time picker. navigation: an object that allows programmatic manipulation of the navigation in New Relic One. Example: opening a new Nerdlet. NerdletStateContext: provides read access to the Nerdlet URL state variables. Example: an entityGuid in the entity explorer. nerdlet: an object that provides write access to the Nerdlet URL state.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 116.784706,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "body": ". Components of the SDK SDK components are located in the Node module package named <em>nr1</em>, which you get when you install the <em>NR1</em> <em>CLI</em>. The <em>nr1</em> components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components"
      },
      "id": "5efa989e28ccbc4071307de5"
    },
    {
      "sections": [
        "Nerdpack file structure",
        "Generate Nerdpack components",
        "Nerdlet file structure",
        "index.js",
        "nr1.json",
        "styles.scss",
        "icon.png",
        "Launcher file structure"
      ],
      "title": "Nerdpack file structure",
      "type": "developer",
      "tags": [
        "New Relic One CLI",
        "nerdpack",
        "file structure",
        "nerdlets",
        "launchers"
      ],
      "external_id": "c97bcbb0a2b3d32ac93b5b379a1933e7b4e00161",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nerdpack-file-structure/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2020-12-04T01:58:15Z",
      "document_type": "page",
      "popularity": 1,
      "info": "An overview of the Nerdpack File Structure",
      "body": "A New Relic One application is represented by a Nerdpack folder, which can include one or more Nerdlet files, and (optionally) one or more launcher files. Here we explain: The file structure for a Nerdpack, a Nerdlet, and a launcher How to link a launcher file to a Nerdlet How to link your application with a monitored entity For basic component definitions, see our component reference. Generate Nerdpack components There are two ways to generate a Nerdpack template: Generate a Nerdpack: Use the New Relic One CLI command nr1 create and select Nerdpack to create a Nerdpack template that includes a Nerdlet and a launcher. Generate Nerdlet or launcher individually: Use the New Relic One CLI command nr1 create and choose either Nerdlet or launcher. This can be useful when adding Nerdlets to an existing Nerdpack. For documentation on generating and connecting Nerdpack components, see our app building guides and the New Relic One CLI command reference. Nerdpack file structure When you generate a Nerdpack template using the nr1 create command, it has the following file structure: my-nerdlet âââ README.md âââ launchers âÂ Â  âââ my-nerdlet-launcher âÂ Â  âââ icon.png âÂ Â  âââ nr1.json âââ nerdlets âÂ Â  âââ my-nerdlet-nerdlet âÂ Â  âââ index.js âÂ Â  âââ nr1.json âÂ Â  âââ styles.scss âââ node_modules âÂ Â  âââ js-tokens âÂ Â  âââ loose-envify âÂ Â  âââ object-assign âÂ Â  âââ prop-types âÂ Â  âââ react âÂ Â  âââ react-dom âÂ Â  âââ react-is âÂ Â  âââ scheduler âââ nr1.json âââ package-lock.json âââ package.json Nerdlet file structure A Nerdpack can contain one or more Nerdlets. A Nerdlet folder starts out with three default files, index.js, nr1.json, and styles.scss. Here is what the default files look like after being generated using the nr1 create command: index.js The JavaScript code of the Nerdlet. import React from 'react'; export default class MyAwesomeNerdpack extends React.Component { render() { return <h1>Hello, my-awesome-nerdpack Nerdlet!</h1>; } } Copy nr1.json The Nerdlet configuration file. { \"schemaType\": \"NERDLET\", \"id\": \"my-awesome-nerdpack-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\" } Copy Besides using the launcher as the access point for your application, you can also associate the application with a monitored entity to get it to appear in the entity explorer. To do this, add two additional fields to the config file of the first-launched Nerdlet: entities and actionCategory. In the following example, the Nerdlet has been associated with all Browser-monitored applications and will appear under the Monitor UI category : { \"schemaType\": \"NERDLET\", \"id\": \"my-nerdlet\", \"description\": \"Describe me\", \"displayName\": \"Custom Data\", \"entities\": [{ \"domain\": \"BROWSER\", \"type\": \"APPLICATION\" }], \"actionCategory\": \"monitor\" } Copy To see this application in the UI, you would go to the entity explorer, select Browser applications, and select a monitored application. styles.scss An empty SCSS file for styling your application. icon.png The launcher icon that appears on the Apps page in New Relic One when an application is deployed. Launcher file structure Launchers have their own file structure. Note that: A launcher is not required; as an alternative to using a launcher, you can associate your application with a monitored entity. An application can have more than one launcher, which might be desired for an application with multiple Nerdlets. After generating a launcher using the nr1 create command, its folder contains two files: nr1.json The configuration file. { \"schemaType\": \"LAUNCHER\", \"id\": \"my-awesome-nerdpack-launcher\", \"description\": \"Describe me\", \"displayName\": \"MyAwesomeNerdpack\", \"rootNerdletId\": \"my-awesome-nerdpack-nerdlet\" } Copy To connect a launcher to a Nerdlet, the rootNerdletId must match the id in the launched Nerdlet's nr1.json config file. For Nerdpacks with multiple Nerdlets, this needs to be done only for the first-launched Nerdlet. icon.png The icon displayed on the launcher for the app on the Apps page.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 60.796772,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "sections": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "info": "An overview of the <em>Nerdpack</em> <em>File</em> <em>Structure</em>",
        "tags": "<em>file</em> <em>structure</em>",
        "body": " building guides and the New Relic One <em>CLI</em> command reference. <em>Nerdpack</em> <em>file</em> <em>structure</em> When you generate a <em>Nerdpack</em> template using the <em>nr1</em> create command, it has the following <em>file</em> <em>structure</em>: my-nerdlet âââ README.md âââ launchers âÂ Â  âââ my-nerdlet-launcher âÂ Â  âââ icon.png âÂ Â  âââ <em>nr1</em>.json"
      },
      "id": "5efa989e196a671300766404"
    },
    {
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/nr1-common/",
      "sections": [
        "New Relic One CLI common commands",
        "Command details",
        "nr1 help",
        "See commands and get details",
        "Usage",
        "Arguments",
        "Examples",
        "nr1 update",
        "Update your CLI",
        "nr1 create",
        "Create a new component",
        "Options",
        "nr1 profiles",
        "Manage your profiles keychain",
        "Commands",
        "nr1 autocomplete",
        "See autocomplete installation instructions",
        "nr1 nrql",
        "Query using NRQL"
      ],
      "published_at": "2021-03-18T01:48:31Z",
      "title": "New Relic One CLI common commands",
      "updated_at": "2020-12-04T01:58:15Z",
      "type": "developer",
      "external_id": "503e515e1095418f8d19329517344ab209d143a4",
      "document_type": "page",
      "popularity": 1,
      "info": "An overview of common commands you can use with the New Relic One CLI.",
      "body": "Here's a list of common commands to get you started with the New Relic One CLI. You can click any command to see its usage options and additional details about the command. Command Description nr1 help Shows all nr1 commands or details about each command. nr1 update Updates to the latest version of the CLI. nr1 create Creates a new component from a template (Nerdpack, Nerdlet, launcher, or catalog). nr1 profiles Manages the profiles you use to run CLI commands. nr1 autocomplete Displays autocomplete installation instructions. nr1 nrql Fetches data usingÂ NRQLÂ (New Relic query language). See our other New Relic One CLI docs for commands specific to Nerdpack set-up, Nerdpack subscriptions, CLI configuration, plugins, or catalogs. Command details nr1 help See commands and get details Shows all nr1 commands by default. To get details about a specific command, run nr1 help COMMAND_NAME. Usage $ nr1 help Arguments COMMAND_NAME The name of a particular command. Examples $ nr1 help $ nr1 help nerdpack $ nr1 help nerdpack:deploy nr1 update Update your CLI Updates to latest version of the CLI. You can specify which channel to update if you'd like. Usage $ nr1 update Arguments CHANNEL The name of a particular channel. Examples $ nr1 update $ nr1 update somechannel nr1 create Create a new component Creates a new component from our template (either a Nerdpack, Nerdlet, launcher, or catalog). The CLI will walk you through this process. To learn more about Nerdpacks and their file structure, see Nerdpack file structure. For more on how to set up your Nerdpacks, see our Nerdpack CLI commands. Usage $ nr1 create Options -f, --force If present, overrides existing files without asking. -n, --name=NAME Names the component. -t, --type=TYPE Specifies the component type. --path=PATH The route to the component. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output. nr1 profiles Manage your profiles keychain Displays a list of commands you can use to manage your profiles. Run nr1 help profiles:COMMAND for more on their specific usages. You can have more than one profile, which is helpful for executing commands on multiple New Relic accounts. To learn more about setting up profiles, see our Github workshop. Usage $ nr1 profiles:COMMAND Commands profiles:add Adds a new profile to your profiles keychain. profiles:default Chooses which profile should be default. profiles:list Lists the profiles on your keychain. profiles:remove Removes a profile from your keychain. nr1 autocomplete See autocomplete installation instructions Displays the autocomplete installation instructions. By default, the command displays the autocomplete instructions for zsh. If you want instructions for bash, run nr1 autocomplete bash. Usage $ nr1 autocomplete Arguments SHELL The shell type you want instructions for. Options -r, --refresh-cache Refreshes cache (ignores displaying instructions). Examples $ nr1 autocomplete $ nr1 autocomplete zsh $ nr1 autocomplete bash $ nr1 autocomplete --refresh-cache nr1 nrql Query using NRQL Fetches data from databases using a NRQL query. To learn more about NRQL and how to use it, see our NRQL docs. Usage $ nr1 nrql OPTION ... Options -a, --account=ACCOUNT The user account ID. required -q, --query=QUERY The NRQL query to run. required -u, --ugly Displays the content without tabs or spaces. --profile=PROFILE The authentication profile you want to use. --verbose Adds extra information to the output.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 60.796772,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "New Relic One <em>CLI</em> common commands",
        "sections": "<em>nr1</em> help",
        "info": "An overview of common commands you can use with the New Relic One <em>CLI</em>.",
        "body": " The name of a particular channel. Examples $ <em>nr1</em> update $ <em>nr1</em> update somechannel <em>nr1</em> create Create a new component Creates a new component from our template (either a <em>Nerdpack</em>, Nerdlet, launcher, or catalog). The <em>CLI</em> will walk you through this process. To learn more about Nerdpacks and their <em>file</em> <em>structure</em>"
      },
      "id": "5f28bd6ae7b9d267996ade94"
    }
  ],
  "/build-apps/build-hello-world-app": [
    {
      "sections": [
        "Build a custom visualization for dashboards",
        "Before you begin",
        "Create a new visualization",
        "Tip",
        "Render the visualization in local development",
        "Important",
        "Advanced nerdpack configuration",
        "Deploy and use your visualization",
        "Summary",
        "Additional resources"
      ],
      "title": "Build a custom visualization for dashboards",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "NR One Catalog",
        "Subscribe visualizations"
      ],
      "external_id": "5e17f1f0db2020342ced37e95dbcb94489b5ca73",
      "image": "https://developer.newrelic.com/static/cf9bafc3fc03f7562e4f969cafcd7659/30c01/visualization-apps-navigation.png",
      "url": "https://developer.newrelic.com/build-apps/build-visualization/",
      "published_at": "2021-03-18T01:52:08Z",
      "updated_at": "2021-03-17T01:51:21Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Create custom data views",
      "body": "Building your own visualizations for New Relic dashboards enables you and your organization to query data from any source and display it on your dashboard. In this guide, you'll learn how to use the CLI to generate a visualization file structure, run it locally where you can quickly test and iterate, and then deploy it for use in a dashboard. Before you begin To get started, make sure you have a New Relic account. To complete this guide, you need the New Relic One CLI (command line interface). If you haven't already installed it, do the following: Install Node.js. Complete all the steps in the CLI quick start. Create a new visualization In this first set of steps you will use the CLI to quickly generate the boilerplate for a new visualization. Step 1 of 3 Ensure you're working with the latest version of the New Relic One CLI: bash Copy $ nr1 update Step 2 of 3 Start with a new Nerdpack. If you just installed the New Relic One CLI, then you have a new Nerdpack project directory (called something like my-awesome-nerdpack). If you need to create one, run nr1 create and select the nerdpack option. bash Copy $ nr1 create --type nerdpack --name my-awesome-nerdpack Tip Note: If you only want to build a visualization in your Nerdpack, you can remove the nerdlets/ and launchers/ folders from the nerdpack Step 3 of 3 Navigate to the root of your Nerdpack project and run theÂ nr1 createÂ command, selecting the visualization option. bash Copy $ cd my-awesome-nerdpack $ nr1 create --type visualization --name my-awesome-visualization As a result, you have a new visualization directory matching the name you gave your visualization. It is located in the visualizations directory in the root of your Nerdpack project. The files created provide an example visualization âÂ a radar chart populated by a basic NRQL query. The nr1.json file provides metadata. TheÂ configurationÂ key in this metadata defines the prop-input fields to be shown in the UI. These are the fields users will fill in to create an instance of the visualization. Supported input types are: boolean string number json enum: a developer-defined list of string options. nrql: a single NRQL query string. namespace: a group of input fields to be displayed together under a shared heading in the prop-editing UI. collection: a repeatable group of input fields to be displayed together under a shared heading in the prop-editing UI. The nrqlQueries entry is an example of a collection type. The index.js file is where you define the React component that receives the props and renders the visualization. You can install and import any JavaScript libraries you find useful. The example component imports Recharts, a library that wraps D3 submodules for easy-to-compose visualizations. If your visualization queries data over a time range and you want it to utilize the platform time range setting, you will need to utilize the timeRange value from PlatformStateContext. The timeRange can be passed directly to the NrqlQuery component. Setting the NrqlQuery component's pollInterval prop to NrqlQuery.AUTO_POLL_INTERVAL automatically handles calculating an appriate data polling interval. <PlatformStateContext.Consumer> {({timeRange}) => ( <NrqlQuery timeRange={timeRange} pollInterval={NrqlQuery.AUTO_POLL_INTERVAL} > ... Copy Render the visualization in local development Now run the generated visualization locally, and view it in Custom Visualizations. There you can quickly test changes to your code. Step 1 of 7 Start the local Node server for your Nerdpack. bash Copy $ nr1 nerdpack:serve Important To see changes to the nr1.json file take effect, restart the local Node server. Changes to the definition of the configuration field will not show up in the prop configuration side bar of the Custom Visualizations UI until you stop the local Node server and start it back up. Step 2 of 7 In a browser, open https://one.newrelic.com/?nerdpacks=local. This url is also shown in the terminal when the Node server starts. The nerdpacks=local query string will direct the UI to load your new visualization artifact from the local Node server. Advanced nerdpack configuration See the advanced nerdpack configuration section for detailed information about how your local Node server is proxied to the browser and how you can override webpack configuration if needed. Step 3 of 7 Open the Apps page, and navigate to Custom Visualizations, which you will find favorited by default. Step 4 of 7 In the Custom Visualizations listing, find and click on the tile for your visualization. If the tile is not showing up or it is not indicating that it is running locally, restart the Node server and refresh the browser. When you select your locally running visualization, the visualization hosted by your local Node server is rendered with prop-configuration inputs. Here you can take advantage of the features outlined in the following steps. Step 5 of 7 You can set prop values and see the visualization update automatically. The prop inputs are listed as defined in the prop definitions located in the nr1.json file in the visualization folder (for example ./visualizations/my-awesome-visualization/nr1.json). Fill in values for the props and see the visualization update automatically. As you change props in the sidebar, a render cycle of your visualization's React component is triggered. Step 6 of 7 Modify the visualization's Javascript code and see the result automatically update in the UI. For example, you can change the value for fillOpacity on the Radar component in index.js. Upon save, you will see the page automatically update. fillOpacity={1.0} visualizations/your-visualization/index.js Copy Step 7 of 7 To add more props, you must update the configuration field in the nr1.json file for your visualization and restart the local Node server. The props you define in the configuration field allow New Relic One to cleanly display a prop-editing UI for users interacting with your visualization. See above for more information about the configuration field. Deploy and use your visualization When your visualization is ready to be added to a dashboard, just follow these steps. Step 1 of 2 Open and follow the guide to publish and deploy the Nerdpack to New Relic One and subscribe accounts to it. Step 2 of 2 Then you can add your visualization to a dashboard. Summary Congratulations on completing the steps in this example! You've learned how to: Create a visualization and run it locally Quickly test and iterate on visualization code changes in Custom Visualizations Deploy a visualization Add a custom visualization to a dashboard Additional resources New Relic Quick Tips video: Dashboards and Custom Visualizations (6 minutes) New Relic NerdBytes video: Configuring custom visualizations for dashboards (7 minutes) New Relic Nerdlog live stream: Custom Data Visualizations on New Relic (30 minutes)",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 1073.3542,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Advanced <em>nerdpack</em> configuration",
        "tags": "<em>NR</em> <em>One</em> <em>Catalog</em>",
        "body": " in the <em>CLI</em> quick start. Create a new visualization In this first set of steps you will use the <em>CLI</em> to quickly generate the boilerplate for a new visualization. Step <em>1</em> of 3 Ensure you&#x27;re working with the latest version of the New Relic <em>One</em> <em>CLI</em>: bash Copy $ <em>nr1</em> update Step 2 of 3 Start with a new <em>Nerdpack</em>"
      },
      "id": "6039a4dbe7b9d262492a07c4"
    },
    {
      "sections": [
        "Charts",
        "Query New Relic data",
        "Craft custom data",
        "Metadata",
        "Data",
        "Tip",
        "Special States",
        "Configure your chart",
        "Chart Groups",
        "Next Step"
      ],
      "title": "Charts",
      "type": "developer",
      "tags": [
        "nr1 cli",
        "Nerdpack file structure"
      ],
      "external_id": "67f2919065eb0e710d863bdbd106db85463cc788",
      "image": "",
      "url": "https://developer.newrelic.com/components/charts/",
      "published_at": "2021-03-18T01:53:09Z",
      "updated_at": "2021-01-16T01:54:19Z",
      "document_type": "page",
      "popularity": 1,
      "info": "How to use charts in your NR1 app.",
      "body": "In your application, you can display data in charts, like those used elsewhere in New Relic's user interface. The New Relic One SDK provides React components for different chart types. Once you decide the kind of data you want to present, either from New Relic or some other source, you supply that data to your chart, using props. Query New Relic data In some cases, you want to fetch data from New Relic's database. For example, you may want to display a line chart which plots the number of transactions your application receives over time. With your chart component, set the accountId and query props to query your New Relic data using NRQL: <LineChart accountId={1234} query=\"SELECT count(*) FROM Transaction\" />; Copy Alternatively, you can fetch data with a NrqlQuery and set the data prop: <NrqlQuery accountId={1234} query=\"SELECT count(*) FROM Transaction\"> {({ data }) => <LineChart data={data} />} </NrqlQuery>; Copy If you're looking to visualize New Relic data, such as your web application's response times or your server's throughput, querying data in your charts is the way to go. But what if you want to create charts that aren't focused on New Relic data? The data prop is flexible enough that you can supply any arbitrary data, as long as it matches the standardized format. Craft custom data Whether you use custom data sets or the results of a NrqlQuery, a chart's data prop must be an array of objects where each object has both of the following fields: metadata: Defines how the chart presents its data data: An array of data points that appear on the chart For example, create a chart consisting of a line between two points by supplying two x-y coordinates in its data field: const data = [ { metadata: { id: 'series-1', name: 'My series', viz: 'main', color: 'blue', }, data: [ { x: 0, y: 0, }, { x: 20, y: 10, }, ], }, ]; <LineChart data={data} />; Copy This LineChart plots a line between coordinates (0, 0) and (20, 10). Use x-y coordinates for all two-dimensional chart formats. For other formats, which you'll learn more about later, use other types of data points. Because data accepts an array, you can supply two series to the same chart: const data = [ { metadata: { id: 'series-1', name: 'My series', viz: 'main', color: 'blue', }, data: [ { x: 0, y: 0, }, { x: 20, y: 10, }, ], }, { metadata: { id: 'series-2', name: 'My second series', viz: 'main', color: 'red', }, data: [ { x: 0, y: 50, }, { x: 20, y: 100, }, ], }, ]; <LineChart data={data} />; Copy In this example, you create a single chart with two series. The first series contains the line from the last example. The second series contains a line between points (0, 50) and (20, 100). When using two series in a single chart, like this, you may want to define how the chart represents each series. Use metadata to define those elements. Metadata A series's metadata defines certain features of the series, itself, such as how it should be displayed in your chart. metadata consists of the following attributes: Attribute Description id The series's identifier. Two series having the same id are considered the same series, regardless of where they are located. In general, use a unique id for each series. However, if you use the same series for multiple charts, keeping the id consistent can help with some cross-chart functionality, like simultaneously highlighting multiple charts. name The series's name. name is used in legends, tooltips, and other areas to indicate which series youâre looking at. color The series's color. Most visualizations use this value to differentiate series. Some visualizations, like BillboardChart or JsonChart, ignore it. Use any valid CSS color representation, such as #RRGGBB, hsl(HHH, SS%, LL%), or rgba(RR, GG, BB, .AA). Avoid tweaking the alpha value, when possible, because charts use alpha to highlight or dim certain series. viz The series's visual style. While you most often use main, this field accepts several options: main: Show the series based on chart's type. For instance, a LineChart shows the series as a line, and an AreaChart shows the series as an area. line: Show the series as a line, regardless of the chart's type. This setting applies only to AreaChart and ScatterChart. Other chart types will not show the series. area: Show the series as an area, regardless of the chart's type. This setting applies only to LineChart and ScatterChart. Other chart types will not show the series. event: Show the series as an event, regardless of the chart's type. Charts represent an event as a vertical area behind the main visualization. Events are often used to show alerts. This setting applies only to AreaChart, LineChart, and ScatterChart. Other chart types will not show the series. target-line: Show the series as a vertical line. This setting applies only to AreaChart, LineChart, and ScatterChart. Other chart types will not show the series. units_data You can assign a unit type to each axis on a chart. The chart will present data according to the unit type you set with units_data. To set unit_data, pass a JSON object with maps the axis to one of the following unit types: UNKNOWN: The chart displays the series with no special units. COUNT: Each value in the chart represents a count. The chart formats values with their International System prefix. For example, \"k\" represents thousands, \"M\" represents millions, and \"G\" represents billions. PERCENTAGE: Each value in the chart represents a percentage. Typically, you provide values ranging from 0 to 1. The chart formats a value of 1 as \"100%\", a value of 2 as \"200%\", and a value of 0.01 as \"1%\". MS: Each value in the chart represents some number of milliseconds. The chart represents values higher than 1 as a human-readable time duration. For example, 60000 is represented as \"1 minute\". The chart represents values lower than 1 using SI prefixes. For example, 0.001 is represented as 1 Î¼s. TIMESTAMP: Each value in the chart represents a timestamp, the number milliseconds since midnight UTC on January 1, 1970, the UNIX Epoch. The chart formats each value as a date. BITS: Each value in the chart represents some number of bits. The chart formats these values using \"b\". When upscaling, the chart will display decimal prefixes instead of binary ones. For example, the chart displays 1000 as \"1 kb\". BITS_PER_SECOND: Each value in the chart represents some number of bits per second. The chart formats these values using \"b/s\". When upscaling, the chart will display decimal prefixes instead of binary ones. For example, the chart displays 1000 as \"1 kb/s\". BYTES: Each value in the chart represents some number of bytes. The chart formats these values using \"B\". For example, the chart displays 1000 as \"1 kB\". BYTES_PER_SECOND: Each value in the chart represents some number of bytes per second. The chart formats these values using \"B/s\". For example, the chart displays 1000 as \"1 kB/s\". So, to represent the y-axis for your series in bits, set the y-value in units_data: { \"units_data\": { \"y\": \"BITS\" } } Data While a data series can contain any arbitrary values, a chart only uses values which adhere to its type. So, create your data points according to the chart type: Series Type Example Description Unidimensional [{ \"y\": 10 }, { \"y\": 20 }] The chart plots data points using y values. Use this format with BarChart, BillboardChart, PieChart, StackedBarChart. Two-dimensional [ { \"x\": 10, \"y\": 20 }, { \"x\": 20, \"y\": 30 } ] The chart plots data points using x and y values. Use this format with AreaChart, LineChart, ScatterChart, SparklineChart, Funnel [{ \"label1\": 10, \"label2\": 20 }] The chart plots data according to labels. Use this format with FunnelChart. Table [{ \"jobType\": \"SIMPLE\", \"count\": 18 }] The chart plots data according to table columns. You must specify table columns in the metadata. Use this format with TableChart. Event [ { \"x0\": 0, \"x1\": 5 }, { \"x0\": 10, \"x1\": 15 } ] The chart plots the event's width based on x0 and x1 values. Histogram [ { \"x0\": 10, \"x1\": 20, \"y\": 100 }, { \"x0\": 30, \"x1\": 40, \"y\": 150 } ] The chart plots the series's width based on x0 and x1 and height based on y. Use this format with HistogramChart and HeatmapChart. Tip JsonChart is a special case because it processes any valid data. For example, you can set an arbitrary JSON object for the chart's data: const data = { data: [ { id: 1, name: 'Foo', price: 123, tags: ['Bar', 'Eek'], stock: { warehouse: 300, retail: 20, } } ], } <JsonChart data={data} /> Copy Special States In previous sections, you learned that a chart's data is an array of series. But you can use special values to present special chart states: null or undefined: Indicates the chart is âloadingâ its data. In this state, the chart shows a placeholder data set. []: Indicates there is no data to show. The chart states, \"No chart data available\". Configure your chart As you've seen, you use query or data to supply data to your chart, but you can configure other aspects of your chart, too, such as visual settings and click and hover event listeners. Read the documentation for the chart you're using for more specific information. Chart Groups Under some circumstances, you might want to synchronize events, such as dragging or scrubbing, across multiple charts. To do this, use a ChartGroup. All charts in a ChartGroup synchronize their events: <ChartGroup> <Stack> <StackItem> <LineChart accountId={1} query=\"SELECT count(*) FROM Transaction SINCE 1 hour ago\" /> </StackItem> <StackItem> <AreaChart accountId={1} query=\"SELECT count(*) FROM Synthetics SINCE 1 day ago\" /> </StackItem> </Stack> </ChartGroup>; Copy Ideally, group charts that are conceptually related, and separate charts that are conceptually unrelated. Next Step Read the documentation specific to the chart you'd like to use to learn specifics about that chart's behavior and configuration.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 518.02423,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "info": "How to use charts in your <em>NR1</em> app.",
        "tags": "<em>Nerdpack</em> <em>file</em> <em>structure</em>",
        "body": "In your application, you can display data in charts, like those used elsewhere in New Relic&#x27;s user interface. The New Relic <em>One</em> SDK provides React components for different chart types. Once you decide the kind of data you want to present, either from New Relic or some other source, you supply"
      },
      "id": "5fdab9f1e7b9d2e1e8df9221"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-03-17T23:31:12Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errorsâand more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 390.61768,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>1</em>. Make instrumentation part of every build",
        "body": ". For example, the New Relic <em>CLI</em> lets you search and tag entities across accounts. The New Relic Lambda <em>CLI</em> installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the <em>NR</em>-<em>1</em> <em>CLI</em> to build and share your own New Relic <em>applications</em>. 3. Leverage the power of APIs Now"
      },
      "id": "603ea2f7196a672323a83def"
    },
    {
      "sections": [
        "Intro to New Relic One SDK",
        "Components of the SDK",
        "UI components",
        "Chart components",
        "Query and storage components",
        "Platform APIs"
      ],
      "title": "Intro to New Relic One SDK",
      "type": "developer",
      "tags": [
        "SDK components",
        "New Relic One apps",
        "UI components",
        "chart components",
        "query and storage components",
        "Platform APIs"
      ],
      "external_id": "3620920c26bcd66c59c810dccb1200931b23b8c2",
      "image": "",
      "url": "https://developer.newrelic.com/explore-docs/intro-to-sdk/",
      "published_at": "2021-03-18T01:52:07Z",
      "updated_at": "2020-12-04T01:58:15Z",
      "document_type": "page",
      "popularity": 1,
      "info": "Intro to New Relic One SDK",
      "body": "To help you build New Relic One applications, we provide you with the New Relic One SDK. Here we give you an introduction to the types of API calls and components in the SDK. The SDK provides everything you need to build your Nerdlets, create visualizations, and fetch New Relic or third-party data. Components of the SDK SDK components are located in the Node module package named nr1, which you get when you install the NR1 CLI. The nr1 components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components category of the SDK contains React UI components, including: Text components: These components provide basic font and heading elements. These include HeadingText and BlockText. Layout components: These components give you control over the layout, and help you build complex layout designs without having to deal with the CSS. Layout components include: Grid and GridItem: for organizing more complex, larger scale page content in rows and columns Stack and StackItem: for organizing simpler, smaller scale page content (in column or row) Tabs and TabsItem: group various related pieces of content into separate hideable sections List and ListItem: for providing a basic skeleton of virtualized lists Card, CardHeader and CardBody : used to group similar concepts and tasks together Form components: These components provide the basic building blocks to interact with the UI. These include Button, TextField, Dropdown and DropdownItem, Checkbox, RadioGroup, Radio, and Checkbox. Feedback components: These components are used to provide feedback to users about actions they have taken. These include: Spinnerand Toast. Overlaid components: These components are used to display contextual information and options in the form of an additional child view that appears above other content on screen when an action or event is triggered. They can either require user interaction (like modals), or be augmenting (like a tooltip). These include: Modal and Tooltip. Components suffixed with Item can only operate as direct children of that name without the suffix. For example: GridItem should only be found as a child of Grid. Chart components The Charts category of the SDK contains components representing different types of charts. The ChartGroup component helps a group of related charts share data and be aligned. Some chart components can perform NRQL queries on their own; some accept a customized set of data. Query and storage components The Query components category contains components for fetching and storing New Relic data. The main way to fetch data is with NerdGraph, our GraphQL endpoint. This can be queried using NerdGraphQuery. To simplify use of NerdGraph queries, we provide some components with pre-defined queries. For more on using NerdGraph, see Queries and mutations. We also provide storage for storing small data sets, such as configuration settings data, or user-specific data. For more on this, see NerdStorage. Platform APIs The Platform API components of the SDK enable your application to interact with different parts of the New Relic One platform, by reading and writing state from and to the URL, setting the configuration, etc. They can be divided into these categories: PlatformStateContext: provides read access to the platform URL state variables. Example: timeRange in the time picker. navigation: an object that allows programmatic manipulation of the navigation in New Relic One. Example: opening a new Nerdlet. NerdletStateContext: provides read access to the Nerdlet URL state variables. Example: an entityGuid in the entity explorer. nerdlet: an object that provides write access to the Nerdlet URL state.",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 199.60562,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to New Relic <em>One</em> SDK",
        "sections": "Intro to New Relic <em>One</em> SDK",
        "info": "Intro to New Relic <em>One</em> SDK",
        "tags": "New Relic <em>One</em> apps",
        "body": ". Components of the SDK SDK components are located in the Node module package named <em>nr1</em>, which you get when you install the <em>NR1</em> <em>CLI</em>. The <em>nr1</em> components can be divided into several categories: UI components Chart components Query and storage components Platform APIs UI components The UI components"
      },
      "id": "5efa989e28ccbc4071307de5"
    },
    {
      "sections": [
        "Glossary",
        "account dropdown",
        "administrator",
        "agent",
        "agent API",
        "aggregated metrics",
        "aggregation function",
        "aggregation window",
        "alert",
        "alert condition",
        "alert evaluation",
        "alert policy",
        "apdex",
        "apdex_f",
        "apdex_t",
        "API (application programming interface)",
        "APM",
        "application",
        "application ID",
        "application name",
        "Applied Intelligence (AI)",
        "attribute",
        "availability monitoring",
        "browser",
        "Browser monitoring",
        "background external",
        "cloud-based integration",
        "collector",
        "Command line interface (CLI)",
        "compute unit (CU)",
        "condition_id",
        "CPM (calls per minute)",
        "CPU burn",
        "custom attribute",
        "custom dashboard",
        "custom event",
        "custom instrumentation",
        "custom metric",
        "data collector",
        "data explorer",
        "degradation period",
        "dimensional metric",
        "Docker",
        "downtime",
        "entity",
        "event",
        "expected error",
        "exporter",
        "Flex",
        "framework",
        "Full-Stack Observability",
        "harvest cycle",
        "health status indicator",
        "host",
        "host ID",
        "ignored error",
        "incident",
        "Infrastructure Monitoring",
        "Insights",
        "instance ID",
        "instrumentation",
        "integration",
        "interaction",
        "interaction trace",
        "inventory data",
        "key transaction",
        "launcher",
        "log",
        "Log monitoring",
        "Logs",
        "Logs in context",
        "master account",
        "metric",
        "metric timeslice",
        "metric grouping issue",
        "minion",
        "Mobile Monitoring",
        "monitor",
        "NerdGraph",
        "Nerdlet",
        "Nerdpack",
        "New Relic Edge with Infinite Tracing",
        "New Relic One",
        "New Relic One catalog",
        "NRQL (New Relic query language)",
        "non-web transaction",
        "notification",
        "notification channel",
        "on-host integration",
        "owner",
        "page load timing",
        "parameter",
        "permalink",
        "pinger",
        "Plugins",
        "polling interval (AWS)",
        "PPM (pages per minute)",
        "private location",
        "recovery period",
        "response time",
        "restricted user",
        "rollup",
        "root span",
        "RPM",
        "RUM (real user monitoring)",
        "runbook",
        "SAML (Security Assertion Markup Language)",
        "Selenium",
        "service",
        "signal",
        "signal filter",
        "span",
        "SSL certificate",
        "SSO (single sign on)",
        "streaming algorithm",
        "sub-accounts",
        "Synthetic monitoring",
        "target",
        "tag",
        "Telemetry Data Platform",
        "thresholds",
        "throughput",
        "tier",
        "time picker",
        "time range",
        "timeslice data",
        "trace",
        "traffic light",
        "transaction",
        "transaction trace",
        "UI",
        "user",
        "UTC",
        "value function (metrics)",
        "violation",
        "web external",
        "web transaction",
        "WebDriverJS",
        "workload"
      ],
      "title": "Glossary",
      "type": "docs",
      "tags": [
        "Using New Relic",
        "Welcome to New Relic",
        "Get started"
      ],
      "external_id": "756954560251823f905fe44d0ebea119cf983160",
      "image": "",
      "url": "https://docs.newrelic.com/docs/using-new-relic/welcome-new-relic/get-started/glossary/",
      "published_at": "2021-03-18T19:14:50Z",
      "updated_at": "2021-03-16T15:55:51Z",
      "document_type": "page",
      "popularity": 1,
      "body": "A glossary of common terminology you may encounter. account dropdown When you're logged into New Relic, the account dropdown menu displays your login name and is located at the top right of the UI. Clicking this gives you access to various account-related abilities. administrator A type of user role on a New Relic account. For more information, see Users. agent At New Relic, an agent is a piece of monitoring software that provides integrations with various technologies (for example, web frameworks, host operating systems, or database types). The agents send that data to New Relic, usually on a specific cadence. For more information, see: New Relic integrations Install agents agent API Some New Relic agents have agent APIs that allow you to extend the functionality of an agent. You can use the API to control, customize and extend the functionality of the agent. Here are some agent API docs: APM agents: C SDK API Go agent API Java agent API .NET agent API Node.js agent API PHP agent API Ruby agent API Python agent API Browser agent: Browser agent API Mobile agents: iOS SDK API Android SDK API aggregated metrics Aggregated metric data summarizes calls to specific methods in your application, including how many times each one was called and response times. In the New Relic UI, you see the class and method names along with their aggregate numbers. Metric data aggregation depends on the New Relic tool and your subscription level. For more information, see the documentation about data retention. aggregation function You can use NRQL query function, such as sum(), average(), or latest() to choose how the data points in an aggregation window should be processed into a single data point. The single aggregated data point is what's passed through the alert evaluation process. aggregation window Streaming alerts gathers data together into specific amounts of time. These windows of time are customizable. Data points are collected together based their timestamps and reported as a batch. The customizable aggregation window provides greater flexibility and fewer false violations when alerting on irregular or less frequent data points. alert An alert communicates an event or incident that designated personnel can track through Alerts. For an explanation of how basic alerts concepts are related, see Concepts and workflow. alert condition An alert condition (or condition), identified by its unique numeric condition_id, contains the criteria for creating a violation. The condition includes the threshold that is set for a metric timeslice or a custom metric over time on a chosen target. For an explanation of how a condition relates to other basic alerts concepts, see Concepts and workflow. alert evaluation Streaming data is assessed on a set of aggregation windows to determine if an alert condition is violating or recovering. The aggregation window time is how long we'll collect data before running the NRQL query condition. The offset evaluation time is how long you want us to wait for late data before assessing it. If a window doesn't have any data points, it's treated as a gap for loss of signal. alert policy A collection of one or more conditions, one or more notification channels, and an Incident preference setting. If a condition contained within the policy opens a violation, an incident may be opened depending on the Incident preference setting. Notifications will then be sent to all channels attached to the policy. For an explanation of how a policy relates to other basic alerts concepts, see Concepts and workflow. apdex Apdex is an industry-standard way to measure users' satisfaction with the response time of an application or service. New Relic rates each response as Satisfied, Tolerated, or Frustrated, and uses these ratings to calculate an overall user satisfaction score. For more information, see Apdex: Measure user satisfaction. apdex_f The response time above which a transaction are rated frustrating. Defaults to four times apdex_t. Requests that complete in less than apdex_t are rated satisfied. Requests that take longer than apdex_t, but less than four times apdex_t (apdex_f), are tolerated. Any requests that take longer than apdex_f are rated frustrating. For more information, see Apdex: Measure user satisfaction. apdex_t The response time above which a transaction is considered tolerable. The default value is 0.5 seconds, but you can change this in your Apdex settings. Requests that complete in less than apdex_t are rated satisfied. Requests that take more than apdex_t, but less than apdex_f, are tolerated. Any requests that take longer than apdex_f are rated frustrating. For more information, see Apdex: Measure user satisfaction. API (application programming interface) New Relic offers a variety of APIs and SDKs. For more information, see the introduction to New Relic's APIs. APM New Relic's APM (application performance monitoring) provides monitoring of your web or non-web application's performance. APM supports apps using several programming languages. application For New Relic purposes, any program instrumented by New Relic. application ID Some New Relic solutions assign a monitored application a unique application ID, often shortened to app ID. When present, this ID is available in the UI. It is also reported as an attribute and can be queried. For how to determine this, see Find app ID. application name The name that New Relic combines with your license key to uniquely identify a particular app. For more information, see Name your application. Applied Intelligence (AI) Applied Intelligence (AI) helps you find, troubleshoot, and resolve problems more quickly. Specifically, itâs a hybrid machine learning engine that reduces alert noise, correlates incidents, and automatically detects anomalies. Applied Intelligence includes Alerts, Incident Intelligence, and Proactive Detection. attribute Attributes are key-value pairs attached to data objects reported to New Relic. Attributes add detail, and they're similar to tags or labels in other SaaS software. You can explore this data by querying or searching via the UI or by using the data dictionary. Examples: APM reports a Transaction event. This includes timing data for the transaction in a duration attribute, which might have a value of .002. Our Infrastructure Monitoring reports a ProcessSample event. This includes a variety of CPU usage attributes, including a cpuSystemPercent attribute, which might have a value of .01. Our Telemetry SDK reports a Metric data type for storing metrics, with attached attributes like metricName and newrelic.source. Some New Relic tools allow you to report custom attributes to enhance your monitoring. For more information about attributes in APM, see Agent attributes. availability monitoring See Types of Synthetics monitors. browser The New Relic UI supports most browsers. For more information, see Supported browsers. For our end-user browser monitoring tool, see Browser Monitoring. Browser monitoring A Real User Monitoring (RUM) solution that measures the speed and performance of your end users as they navigate to your site from different web browsers, devices, operating systems, and networks. background external See web external. cloud-based integration New Relic offers cloud-based integrations with providers such as Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform. collector The component that collects data from New Relic agents running on an app server, mobile device, or end-user browser. While the agent is installed on a user's app server, the collectors are centrally located in New Relic's data center. In order to contact the collector, the agent must be able to reach New Relic's domains and IP addresses. (The exact domain or IP depends on the New Relic monitoring tool.) The collector receives and interprets this data, and stores it in a database. The data is then retrieved and presented in the New Relic UI and by our various REST APIs. Command line interface (CLI) Our command line interface (CLI) is a tool you can use to build a New Relic application. This is the same tool our own engineers use. Go here for quick start instructions. Go to our Developer site for sample apps and guides. compute unit (CU) A unit of measurement that determines your pricing for some New Relic products governed by our original product-based pricing plan. For more information, see Compute unit pricing. condition_id See alert condition. CPM (calls per minute) The number of calls your application receives each minute. This usually corresponds to the number of page views or external connections, and is usually the same as RPM (requests per minute). CPU burn The time consumed by code minus the wait time for a transaction. This is the time actually spent processing the transaction. It appears in the New Relic UI at the top of the transaction view for the agents that provide it (Ruby and PHP only). custom attribute A key-value pair added to a transaction or event in order to gain additional information about it. For more information, see custom attributes. custom dashboard A customizable dashboard with charts and tables that includes data from multiple New Relic data sources. For more information, see dashboards. custom event An event, in New Relic terms, is a data object with attached attributes. New Relic reports default event types, like Transaction and TransactionError. You can also create your own events. Events can be queried, and are used in some other features. You can generate custom events with APM agents, with the Browser agent, with the Mobile agent, and via the Event API. Alternatively, you can add custom attributes to some existing default New Relic events. custom instrumentation Custom instrumentation allows you to extend New Relic's monitoring to instrument code elements New Relic doesn't automatically instrument. Custom instrumentation is useful when your framework is not supported by New Relic, or when New Relic fails to pick up some element of your program. You can also use custom instrumentation to block a transaction from being reported entirely. For more information, see Custom instrumentation. custom metric Metric timeslice data that is manually recorded via an API call. Custom metrics allow you to record arbitrary metrics; for example, timing or computer resource data. All custom metric names must be prefixed with Custom/. For more information, see Custom metrics. Not to be confused with custom instrumentation data. data collector See collector. data explorer Use the data explorer to access, query and customize your data, create visualizations, and make connections between your services in a consistent and curated experience. For more on using the data explorer, see Introduction to the data explorer. degradation period When a data source enters a violating state, a degradation period of time begins. The degradation period is set in the condition's threshold. A violation will open if the source stays in a violating state for the entire degradation period. In addition: If the data source enters a non-violating state before the entire time has elapsed, the degradation period countdown is reset, and a violation does not open. If your alert condition threshold is configured as at least once in, the degradation period always lasts a single minute. dimensional metric A dimensional metric is a metric that has multiple attributes, also known as dimensions. At New Relic, we report dimensional metrics using the Metric data type. For more on other metric data types, see Metric data. Docker An open platform for distributed applications, which allows you to assemble multi-container portable apps. Infrastructure Monitoring includes integrated Docker monitoring. For more information about Docker, see the Docker website. downtime The period of time when customers cannot access your site and your app is not reporting to New Relic. For more information, see Synthetic Monitoring and Types of synthetic monitors. entity In New Relic, an entity is anything we can identify that has data you can monitor. An entity can be something you monitor directly, like applications and microservices, or indirectly, like data centers. You can identify one or more entities to be targets for alert conditions. In the Alerts API, the entity being monitored is identified with an entity_id. For more on this, see What are entities? event The word event is a general term that can have many meanings. At New Relic, event can have several meanings: At New Relic, event data is one of our core data types. Event data represents a record of a single event at a particular moment in time. Events can vary by type (for example, Transaction or Mobile, and will have associated attributes (for example, timestamp or transactionName). For more details, see Event data. For our infrastructure monitoring, the word event can be used to refer to important system and host activity. For example, a configuration change for a monitored host would be registered on Infrastructure's Events UI page. For alerts, the Events UI page displays a list of alerts-related incidents for your monitored entities. Events are reported for a violation opening and for closing. In some contexts, event can refer to any NRQL-queryable data type. For example, when you run a NRQL query, you will see a count of inspected events: this refers to a count of all data types queried. expected error An expected error is a common error that you don't want to affect your Apdex score or error rate. For more information, see Manage errors in APM. exporter At New Relic, an exporter is a type of integration that reports telemetry data to New Relic from a third-party (non-New Relic) telemetry tool. For examples, see Exporters, or search our integrations. Flex New Relic Flex is an application-agnostic, all-in-one integration. With it, you can build your own integration that collects metric data from a wide variety of services, and that can instrument any app that exposes metrics over a standard protocol (HTTP, file, shell) in a standard format (for example, JSON or plain text) to the terminal. It's a recommended way to create a custom integration, because it doesn't require coding skills. framework A framework is a structured collection of pre-defined functions, into which an application builder inserts their own code to build their application. A framework is not the same as a library. While a library is a collection of functions you can call as needed, a framework is a skeleton for your application. The functions in that framework then call your functions. For more about the distinction between a framework and a library, see What is the difference between a framework and a library?. New Relic automatically instruments many common frameworks. For more about the frameworks New Relic supports, see the agent-specific documentation: C SDK supported frameworks Go supported frameworks Java supported frameworks .NET supported frameworks Node.js supported frameworks PHP supported frameworks Python supported frameworks Ruby supported frameworks Full-Stack Observability The collection of features and tools you can use to easily analyze and troubleshoot problems across your entire software stack. For more information, read our Introduction to Full-Stack Observability. harvest cycle The period of time between each connection from a New Relic agent to the collector. Between harvest cycles, an agent collects and caches data. At the end of the cycle an agent reports those data to the collector, then begins a new harvest cycle. health status indicator Some New Relic UI pages have a health status indicator appearing next to an index of monitored entities. This is a colored bar (generally green, yellow, red, or gray) indicating the status of your app or other entity monitored by New Relic. It also indicates whether the entity has any alert policies assigned to it and whether there are any policy violations. In general, the colored bar will be green, yellow, red, or gray to indicate the health status. Exceptions: Our REST API (v2) uses orange instead of yellow for the application's health and reporting status. Service maps use different criteria for reporting the health of a connection between an app and an external service not monitored by New Relic (for example, a third party API). host At New Relic, a host means one of the following: A physical machine is a hardware-based device with dedicated physical resources, including memory, processing, and storage. Each machine has its own OS which applications run on. A virtual machine (VM) is the software implementation of a physical machine that executes programs like a physical machine. One or more virtual machines can run on a physical machine. Each virtual machine has its own OS and allocated virtual machine resources such as RAM and CPU. A cloud instance is a type of virtual machine that is run in the public cloud. In this context, virtual machines and cloud instances are different from Java Virtual Machines (JVMs) and containers. host ID Each host identified by APM is assigned a host ID. This ID is used to uniquely identify it, and to retrieve data about that host via the REST API. For more information, see List host ID. ignored error An error that you have told the APM agent not to report to the collector. For more information, see Manage errors in APM. incident An incident is a collection of one or more violations of the conditions defined in an alert policy. An incident record includes all of the open and close time stamps for each violation, as well as chart snapshots of the data being evaluated around the time of each violation. You can view detailed information from the Incidents pages in the user interface. You can also select your preference for how we roll up violations into the incident. For an explanation of how an incident relates to other basic alerts concepts, see Concepts and workflow. Infrastructure Monitoring By connecting changes in host performance to changes in your configuration, Infrastructure Monitoring provides real-time metrics and powerful analytics that reduce your mean-time-to-resolution (MTTR). Infrastructure is specifically designed for complex environments that need flexible, dynamic server monitoring, from a physical datacenter to thousands of Amazon Elastic Compute Cloud (Amazon EC2) instances and other types of integrations. Insights At New Relic, Insights used to be the primary way to query and chart your New Relic-reported data. Now, we have the improved query builder. instance ID Each instance identified by New Relic is assigned a unique instance ID. Instance IDs are most commonly found for JVMs (Java Virtual Machines), but can exist for each agent. This ID is used to uniquely identify it, and to retrieve data about that instance via the REST API. For more information, see List instance IDs. instrumentation The collection of data from an application or host. When New Relic instruments a framework, it detects the methods and calls used by that framework, and intelligently groups them together. integration At New Relic, an integration refers to a solution that integrates with a specific technology (like a web framework or a type of database). See Integrations. interaction In our Mobile Monitoring, an interaction is a specific code path initiated by a user interaction (usually a button press). An interaction is the mobile equivalent of a transaction, and like a transaction an interaction can be traced and monitored. interaction trace An interaction trace is a complete picture of a single interaction. With interaction traces, New Relic gives you much deeper visibility into a single slow interaction, which can help you understand a broader problem. Interaction traces are the mobile equivalent of a transaction trace. For more information, see Creating interactions (iOS) and Creating interactions (Android). inventory data Inventory data is information about the status or configuration of a service or host. Examples of inventory data include: Configuration settings Name of the host the service is on Amazon AWS region Port being used For more information, see Understand and use data. key transaction A web transaction that the user has marked as particularly important; for example, key business events (such as signups or purchase confirmations), or transactions with a high performance impact (such as searches). Key transactions have their own pages in the UI and other customized values. For more information, see Key transactions. launcher A launcher is a specific piece of code you can include when you create a New Relic One app. It creates the tile on the homepage that you click to launch the app. For more information, see the documentation about core UI components. log A log is a message about a system used to understand the activity of the system and to diagnose problems. For more information on how we use log data, see Log management. Log monitoring Our log management and monitoring features give you the tools to collect, process, explore, visualize, and alert on your log data using your existing log forwarder. With all of your log data in one place, you'll be able to make better decisions, detect and resolve problems more quickly, and see your logs in context to troubleshoot faster. Logs Our Logs feature is a scalable log management platform that allows you to connect your log data with the rest of your telemetry data. Pre-built plugins with some of the most common open-source logging tools make it simple to send your data from anywhere to New Relic. Logs in context Logs in context makes it easy to link to your log data with related data across the rest of our platform. Bringing all of this data together in a single tool allows you to quickly get to the root cause of an issue and find the log lines that you need to identify and resolve a problem. master account A master account is a New Relic account that has one or more subordinate accounts (sub-accounts). For details, see Account structure. metric A metric is a numeric measurement. Metric data is a broad category because there are several ways to make and report measurements. For more about how metrics are reported at New Relic, see New Relic data types. metric timeslice New Relic reports metrics in several ways. One variety of metric data is called metric timeslice data; this is the type of data used to generate many of the charts in APM, Mobile Monitoring, and Browser Monitoring (for more details, see metric timeslice data). Over time, metric timeslice data is aggregated into longer timeslice data records for more efficient storage. For more about how we aggregate this type of data, see Data aggregation. For how to query this type of data, see Query metric timeslice data. metric grouping issue A metric grouping issue occurs when an account sends too many differently named metric timeslice data points to New Relic, and those individual web transactions are not properly aggregated. For example, rather than a single /user/controlpanel/ metric name, you might see /user/controlpanel/alice, /user/controlpanel/bob, and /user/controlpanel/carol. For more information, see Metric grouping issues. minion The software that accepts monitor jobs from a private location. A minion is a packaged virtual appliance that runs in your hypervisor. For more information, see Private locations overview and install and configure private minions. Mobile Monitoring Mobile Monitoring allows you to monitor and manage the performance of your mobile apps on Android, iOS, tvOS, and other systems. Mobile Monitoring provides end-to-end details, including crashes, throughput, HTTP requests, error traces, and more. Not to be confused with New Relic's own mobile apps for Android, iPhone, and iPad. monitor For our Synthetic Monitoring, a monitor ensures your website or API endpoint is available. For more information, see Adding and editing monitors. NerdGraph NerdGraph is our GraphQL API, an efficient and flexible query language that lets you request exactly the data you need, without over-fetching or under-fetching. NerdGraph calls get all the data you need in a single request. NerdGraph also makes it easier to evolve APIs over time and enables powerful developer tools. You can use our NerdGraph GraphiQL explorer to explore the schema and find definitions. With valid New Relic API key, you can try it out yourself at https://api.newrelic.com/graphiql. Nerdlet A Nerdlet is a component of a New Relic One application. It's a specific UI view, represented by a React JavaScript package. For more information, see Nerdpack file structure. Nerdpack A Nerdpack is a component of a New Relic One application. It's the package containing all the files needed by that application. For more information, see Nerdpack file structure. New Relic Edge with Infinite Tracing New Relic Edge with Infinite Tracing is a fully managed, distributed tracing service that observes 100% of your application traces, then provides actionable data so you can solve issues faster. For more information, see /docs/understand-dependencies/distributed-tracing/get-started/how-new-relic-distributed-tracing-works. New Relic One For more information, see Introduction to New Relic One. New Relic One catalog Our catalog is a collection of applications built on the New Relic One platform. The catalog includes custom apps we've built, public open source apps, and any apps that you buid. You can browse the catalog on New Relic One. NRQL (New Relic query language) NRQL is a query language, similar in form to SQL, that allows you to query the data stored in your New Relic account. non-web transaction APM identifies transactions as either web or non-web. When New Relic does not detect a transaction was initiated by a web request, this is called a non-web transaction. For more information, see Background processes and other non-web transactions. notification The message sent when an incident opens, is acknowledged, or closes. The type of notification is defined by the alert policy's notification channel. For an explanation of how notifications relate to other basic alerts concepts, see Concepts and workflow. notification channel Where we send a notification when an incident opens, is acknowledged, or closes. Available channels include email, mobile push notifications, webhooks, and more. on-host integration On-host integrations refer to integrations that reside on your own servers or hosts and that communicate with our infrastructure agent. For more information, see Introduction to on-host integrations. owner For accounts on our original pricing plan, this is a type of user role: the user who initially created the account. For more information, see Users. page load timing With page load timing, New Relic monitors the full load time for end-user browsers. New Relic's application agents dynamically inject JavaScript into the page, then capture the following key load points: Navigation start: The user initiates the transaction. First byte: The browser receives the requested page. DOM ready: The browser has finished parsing DOM. Page ready: Page loading is complete. Page load timing is sometimes referred to as RUM, or real user monitoring. Unlike standard RUM, page load timing also captures JavaScript errors and AJAX requests. For more information, see Page load timing process. parameter Deprecated term; see attribute. permalink A unique URL that links to a view of your application at a specific point in time. Permalinks are useful for troubleshooting and for sharing interesting time windows with colleagues. pinger The component of New Relic that connects to your website to verify your website is accessible. New Relic has pingers in Europe, Asia, and the United States. Each pinger attempts to contact your website at least once every two minutes. If enough pingers are unable to reach your website, your application will be considered down. For in-depth scriptable testing, including real browser tests and tests of API endpoints, see Synthetic Monitoring. Synthetic Monitoring includes free ping monitoring, which allows you to monitor your website from locations around the world. For more information, see Types of Synthetic monitors. Plugins Plugins provides an open platform to monitor critical information about your entire stack. New Relic partners, PaAS and SaAS providers, third-party vendors, and plugin users can: Quickly install and use publicly available plugins in Plugin Central. Develop your own plugin agents to collect the metric data that matters most to your business. Publish your plugins for public or private access. polling interval (AWS) Our Amazon integrations query your AWS services according to a polling interval, which varies depending on the integration. Each polling interval occurs for every AWS entity. For example, if you have thirteen Elastic Load Balancers (ELB), each one will be polled every five minutes. Depending on the AWS integration, there may be delays in the timing between the API request and the metric data returned. If you notice unusual delays, follow the integration troubleshooting procedures. PPM (pages per minute) The number of pages per minute your application serves. private location A Synthetic monitor feature that allows you to run Synthetic monitors from within your own systems by creating private minions. Private locations allow you to extend your Synthetic coverage to new geographical locations, and to monitor websites behind your firewall such as an intranet site. For more information, see Private locations overview. recovery period A recovery period of time begins when a data source enters a non-violating state after being in a violating state. The recovery period is set in the condition's threshold. A violation will close when a source remains in a non-violating state and the recovery period time has elapsed. If the data source enters a violating state before the time has elapsed, the recovery period clock will reset and the violation won't close. response time The duration of time between a request for service and a response. For more information, see Response time. restricted user A type of user role on a New Relic account. For more information, see Users. rollup Using the same application name for multiple applications. This allows you to combine data in APM, either from multiple applications, or from multiple instances of an application. For more information, see Rolling up app data. root span For distributed tracing, the root span is the first span in a trace. In many cases, the root span duration will represent the duration of the entire trace, or be very close to it. However, for more complex, modern systems that use a lot of asynchronous, non-blocking processes, this will not be true. For those systems, the root spanâs duration may be significantly less than the duration of the trace. RPM The term RPM usually refers to the number of requests per minute your application receives from users. This is usually the same as CPM (calls per minute). Historically, some New Relic monitoring solutions, like APM and Browser Monitoring, used to contain RPM in the URL; for example, https://rpm.newrelic.com. This language use originally referred to Rails performance management because the first iteration of our product monitored Ruby on Rails applications. We monitor many more languages and systems than Ruby now. RUM (real user monitoring) See page load timing. runbook A runbook contains standard procedures and operations typically used by system administrators, network operations staff, and other personnel to handle outages, alert incidents, and other situations. If your organization stores runbook instructions as URLs, you can link this information to an alerts policy so your personnel has easy access to this information when an incident violates the defined policy thresholds. SAML (Security Assertion Markup Language) SAML is an XML-based data format for sharing authentication data between two parties. New Relic accounts must obtain a SAML certificate in order to enable Single Sign On for their users. For more information, see SAML service providers. Selenium Selenium is an open-source browser testing suite. Synthetics uses Selenium to test monitored websites with real browsers. For more information, see monitor types. service A service is a cluster of runtime server processes that accomplish a particular task, usually service requests. Unlike an application, a service is not usually invoked by a human. New Relic offers a variety of integrations that allow you to report data from your services. signal The stream of telemetry data that's watched and alerted on. You use NRQL queries to define a signal. signal filter When we receive data and it's routed to the streaming alerts platform, your NRQL WHERE clause will filter the data coming in. The filtered streaming data is what's evaluated for loss of signal violations, for example. span In a distributed trace, a span is a \"named, timed operation representing a contiguous segment of work in that trace\" (from OpenTracing.io definition). For distributed tracing, spans are displayed in the distributed tracing UI, and the data type Span is available to be queried. See also root span. SSL certificate SSL certificates encrypt data that is being transmitted. While New Relic refers to security certificates as SSL because it is a more commonly used term, all certificates adhere to industry standards for secure encryption in transit. SSO (single sign on) SSO (single sign on) allows you to manage user authentication in New Relic using an external SSO provider. For more information, see Setting up SSO. streaming algorithm This is what determines when the data in an aggregation window is processed. The streaming algorithm uses your server's clock time and the aggregation window size to trigger the alert evaluation process. sub-accounts See master account. Synthetic monitoring Synthetic monitoring allows you to monitor your website or API endpoint via automated, scriptable tools. Use free ping monitor to ensure your website is accessible, or expand your monitoring with browser monitors, which test your website with real browsers. Go further with scripting, to script browsers or API monitors for sophisticated testing. target A target is a resource or component monitored by a New Relic monitoring tool that has been identified in an alert condition. When the data source for that target crosses the defined critical threshold, we will open a violation. Depending on your policy's Incident preference setting, Alerts may create an incident record and send notifications through the defined channels. See also entity. tag Tags are key:value metadata added to monitored apps, hosts, dashboards, and other entities to help you organize your data at a high level. For details, see Tags. Telemetry Data Platform The collection of features and tools you can use to ingest, visualize, and alert on all your telemetry data in one place. For more information, read the Introduction to the Telemetry Data Platform. thresholds Thresholds are alert condition settings that define a violation. Threshold values include the value a data source must pass to trigger a violation and the time-related settings that define a violation; for example: Passing a certain value for at least x minutes Passing a certain value only once in x minutes While the data source passes a certain value, a degradation period starts. Likewise, when that data source stops passing a certain value, a recovery period starts. The durations of these two time periods are defined in the alert condition threshold settings. Thresholds have a required critical (red) threshold and an optional warning (yellow) threshold. In the UI, the entity's health status indicator will change to yellow or red when a threshold has been crossed and a violation will open. For more information, see Define thresholds. For an explanation of how thresholds relate to other basic Alerts concepts, see Concepts and workflow. throughput Throughput is a measurement of user activity for a monitored application. APM throughput and Browser Monitoring throughput are measured in different ways: APM: requests per minute (RPM) Browser: page views per minute (PPM) tier A tier can refer to how New Relic categorizes or visualizes the various agent language ecosystems that we support. For example: In APM, the color-coded categories that appear on your app's main Overview chart show response time spent in various functions, processes, or agents as tiers; for example, request queuing, garbage collection, Middleware, JVMs, etc. In New Relic labels, TIER can be used to define or classify the client-server architecture; for example, front-end and back-end tiers. Tier may also refer to our pricing tiers. time picker By default the New Relic UI shows data for the past 30 minutes, ending now. To change the time window, use the time picker. time range A time range can refer to a length of time selected in the New Relic UI. New Relic displays a time range depending on the range you select using the time picker. timeslice data See metric timeslice data. trace A trace is a description of how a request travels through a system. Trace data helps you understand the performance of your system and diagnose problems. For more information on how we use trace data, see New Relic data types. traffic light See health status. transaction A transaction is defined as one logical unit of work in an application. This term primarily refers to server-side transactions monitored by APM. For more information, see documentation about web transactions and non-web transactions. The term transaction is also sometimes used in Browser Monitoring. In that case, it primarily refers to activity beginning with a browser-side web request and ending with a complete page load. transaction trace A transaction trace is a complete picture of a single transaction, down to the database queries and exact invocation patterns. With transaction traces, New Relic gives you much deeper visibility into a single slow transaction, which can help you understand a broader problem. For more information, see Transaction traces. UI The New Relic user interface. For more information, see Standard page functions. user A user can refer to a specific user role in a New Relic account. For more information, see Users. UTC Universal Time Coordinated (UTC), or Coordinated Universal Time, is a standard timestamp for synchronizing time around the world. value function (metrics) The numeric value obtained from metric timeslice data; for example, an average, minimum, maximum, total, sample size, etc. violation A violation occurs when the entity monitored by an alert condition reports a value that crosses the thresholds defined in that condition. For an explanation of how violations relate to other basic alerts concepts, see Concepts and workflow. You can view a summary of the violations for a selected incident's page. You can also view the violations for a specific entity from the product's UI. web external Web external is the term applied to the portion of time spent in transactions to external applications from within the code of the application you are monitoring. That time can be a call to a third party company (a payment provider, for example) or it could be a call to another microservice within your own company. Web external demonstrates how performance is impacted by your code executing outside the application you are measuring. web transaction A transaction is defined as one logical unit of work in an application. This term primarily refers to server-side transactions monitored by APM. Web transactions are initiated with an HTTP request. For most organizations, these represent customer-centric interactions and thus are the most important transactions to monitor. For more information, see Web transactions and Non-web transactions. WebDriverJS WebDriver is a Selenium component, used to control Synthetics scripted browsers. Specifically, Synthetics uses WebDriverJS, a Node.js-based flavor of Selenium. For more information, see Writing scripted browsers and Scripted browser examples. workload A workload represents a group of entities that work together to provide a digital service. For more information, see Workloads.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 191.82782,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "New Relic <em>One</em> <em>catalog</em>",
        "body": " by a React JavaScript package. For more information, see <em>Nerdpack</em> <em>file</em> <em>structure</em>. <em>Nerdpack</em> A <em>Nerdpack</em> is a component of a New Relic <em>One</em> application. It&#x27;s the package containing all the files needed by that application. For more information, see <em>Nerdpack</em> <em>file</em> <em>structure</em>. New Relic Edge with Infinite"
      },
      "id": "603eb6f5e7b9d288392a07fc"
    }
  ],
  "/build-apps/set-up-dev-env": [
    {
      "sections": [
        "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
        "ãã³ã",
        "ã¿ã°ã®å½¢å¼ã¨å¶é",
        "ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã",
        "ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼",
        "ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã",
        "ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼",
        "ã¿ã°ã®ä¾",
        "ãã¼ã é¢é£ã®ã¿ã°",
        "ç°å¢é¢é£ã®ã¿ã°",
        "éè¦åº¦é¢é£ã®ã¿ã°",
        "ã¿ã°ã®è¿½å æ¹æ³",
        "UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã",
        "APMã¨ã¼ã¸ã§ã³ãã¿ã°",
        "Infrastructureãã¼ã¿ã¿ã°",
        "ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã",
        "ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "ã¿ã°ãä½¿ç¨ããã¨ããã¼ã¿ã®æ´çã¨æ¤ç´¢ã«å½¹ç«ã¡ã¾ã",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "907c9dbf6ae393dc1029606a91b8b9814d985f7a",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-03-18T09:13:37Z",
      "updated_at": "2021-03-18T09:13:37Z",
      "document_type": "page",
      "popularity": 1,
      "body": "ã½ããã¦ã§ã¢æ¥­çã§ã¯ãã¿ã°ã¯éå¸¸ããã¼ã¿ã®ç·¨æã¨ãã¡ã¤ã³ãããªãã£ãå¼·åããç®çã§ãã¼ã¿ã»ããã«è¿½å ãããã¡ã¿ãã¼ã¿ãæãã¾ãã New Relicã®ã¿ã°ã¯ãã¢ãã¿ã¼ããã¢ããªã¨ãã¹ããã¨ã¼ã¸ã§ã³ããããã·ã¥ãã¼ããããã³ã¯ã¼ã¯ã­ã¼ããªã©ãæ§ããªãã¼ã¿ã»ããã«è¿½å ããããã­ã¼ï¼å¤ãã®ãã¢ã§ãï¼team: operationsãªã©ï¼ãããã¤ãã®éè¦ãªå±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãï¼ã¢ããªåã¨è¨èªãªã©ã®ã¢ããªã®ã¡ã¿ãã¼ã¿ãããã³ãã¹ãåã¨AWSãªã¼ã¸ã§ã³ãªã©ã®ãã¹ãã®ã¡ã¿ãã¼ã¿ãªã©ï¼ãã¾ããã¦ã¼ã¶ã¼ç¬èªã®ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãã ä»¥ä¸ã«ç¤ºãããã«ãUIã§ã¿ã°ãä½¿ç¨ãã¦é¢é£ãã¼ã¿ãçµãè¾¼ããã¨ãã§ãã¾ãã ããã§ã¯ãaccountIdã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®New Relicã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã ä»¥åãNew Relicã§ã¯ãã¿ã°ã¯ãã©ãã«ãã¨å¼ã°ãã¦ãã¾ãããã³ã¼ãåã§ãlabelããä½¿ç¨ããã¦ããå ´åãããã¾ããä¾ãã°ãå½ç¤¾ã®ä¸é¨ã®APMã¨ã¼ã¸ã§ã³ãè¨­å®ãã¡ã¤ã«ã¯ãã¿ã°ã«å¯¾ãã¦labelè¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¾ãã èª­ã¿é²ãã¦ãã¿ã°ã®è©³ç´°ãå­¦ãã§ãã ããã ã¿ã°ã®å½¢å¼ã¨å¶é ã¿ã°ã®å½¢å¼è¦ä»¶ã¨å¶éï¼ UIã§ã¯ã1ã¨ã³ãã£ãã£å½ããã«è¡¨ç¤ºã§ããã¿ã°ç·æ°ã®ä¸éãããã¾ãã ããã©ã«ãã§ã¬ãã¼ããããã¿ã°ãã¾ãã¯ã¨ã¼ã¸ã§ã³ã/ã¤ã³ãã°ã¬ã¼ã·ã§ã³è¨­å®ãéãã¦è¿½å ãããã¿ã°ã®æå¤§æ°ã¯100ã§ãã UIã¾ãã¯APIãéãã¦è¿½å ãããã«ã¹ã¿ã ã¿ã°ã®æå¤§æ°ã¯100ã§ãã ã¿ã°ã®æå¤§æå­é·ãä»¥ä¸ã«ç¤ºãã¾ãã ã­ã¼ï¼128æå­ å¤ï¼256æå­ APIãä½¿ç¨ãã¦ã¿ã°ãè¿½å ããå ´åãã¿ã°ã­ã¼åã®ãã¤ãã³ï¼-ï¼ã¯ããã¤ãã¹è¨å·ã¨ãã¦è§£éããã¾ããã¿ã°ã­ã¼ã«ãã¤ãã³ãå«ã¾ããå ´åããã®ä¸¡å´ã«ããã¯ã¯ã©ã¼ããä»ãã¾ãï¼ä¾ï¼`key-name`ï¼ã ãã¹ããã©ã¯ãã£ã¹ã¨ãã³ã ã¿ã°ãè¿½å ããåã«ãå½ç¤¾ã®ããã©ã«ãã¿ã°ã®ããã¿ãçè§£ãããã¨ããå§ããã¾ããç¬èªã®ã¿ã°ãè¿½å ããæºåãã§ããããä»¥ä¸ã®ãã¹ããã©ã¯ãã£ã¹ãæ´»ç¨ãã¦ãã ããã ã¿ã°ãã·ã³ãã«ã«ä¿ã¤ããã®ãã³ãï¼ æåã¯ãç¢ºå®ã«ä½¿ç¨ãããã¨ãåãã£ã¦ããã¿ã°ã®ã¿ãè¿½å ãã¾ããæªä½¿ç¨ã®ã¿ã°ã«ãã£ã¦ãã¤ãºãçããæ··ä¹±ãçã¾ããå¯è½æ§ãããã¾ãã ç­ãã¿ã°ãä½¿ç¨ããããã«åªãã¾ããç­ãã¿ã°ã¯è§£æãç°¡åã§ããã¾ããUIã§ã¯é·ãã¿ã°ãåãè©°ããããå ´åãããã¾ããï¼ãæå­å¶éããåç§ãã¦ãã ããã) å¯è½ãªå ´åã¯ãäººéãèª­ããã­ã¼ã¨å¤ãä½¿ç¨ãã¾ãï¼ä¾ãã°ãregion: EMEAãParam8323 : 1229072ãããæ¨å¥¨ããã¾ãï¼ã regions: EMEA | US | LATAMãªã©ã®è¤æ°ã®å¤ãåä¸ã®ã¿ã°ã«å«ãããã¨ã¯é¿ãã¦ãã ããããã®ãããªå ´åã¯ãregion: emeaãregion: usãããã³region: latamãªã©ã®ã3ç¨®é¡ã®ã¿ã°ãä½¿ç¨ãããã¨ããå§ããã¾ããè¤æ°ã®ã¿ã°ãä¸è´ãããå ´åã¯ããã£ã«ã¿ã¼UIã§é«åº¦ãªãªãã·ã§ã³ãä½¿ç¨ãã¦è¡ããã¨ãã§ãã¾ãã ä¸è²«æ§ã®ããã¿ã°ã®ä½¿ç¨ã«é¢ãããã³ã ãã¼ã ã¨ã¨ã³ãã£ãã£ã«ããããã¿ã°è¨èªã«ä¸è²«æ§ãæãããããåªãã¾ãã å½åã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãregion: emeaã¨reg: emeaã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å½¢å¼ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãã­ã£ã¡ã«ã±ã¼ã¹ï¼camelCaseï¼ã¨ã±ããã±ã¼ã¹ï¼kebab-caseï¼ã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãã å¤§æå­ã®ä½¿ç¨ã«ä¸è²«æ§ãæããã¾ããä¾ãã°ãenv: stagingã¨env: Stagingã®ä¸¡æ¹ãä½¿ç¨ããã®ã¯é¿ãã¾ãï¼ãã ããUIã¨APIã§ã®ã¿ã°æ¤ç´¢ã§ã¯å¤§æå­ã¨å°æå­ãåºå¥ããã¾ãï¼ ã¯ã­ã¹ãã¼ã ã®å®è£ã«é¢ãããã³ãï¼ ã¿ã°ãä½¿ç¨ããçç±ã®1ã¤ã¯ããªãã¶ã¼ãããªãã£ã¨ã³ã¹ãéåãæ¹åãããã¨ã§ãããã®çç±ãããå¤ãã®å ´åãã¿ã°å®è£ã®è²¬ä»»ã¯ãªãã¶ã¼ãããªãã£ãã¼ã ãSREãã¢ã¼ã­ãã¯ãã®ã°ã«ã¼ããã¾ãã¯ã¯ã­ã¹ãã¼ã ã¿ã¹ã¯ãã©ã¼ã¹ã«å²ãå½ã¦ããã¾ãã ã¿ã°ã®å®è£ã«è²¬ä»»ãæã¤äººããåé¨ããªã·ã¼ãé å®ããåé¨ããªã·ã¼ãä½æãã¦ãã¿ã°ã®å®ç¾©æ¹æ³ã¨ä½¿ç¨ããè¦åãèª¬æãããã¨ããå§ããã¾ãããã®ãªãã¡ã¬ã³ã¹ããã¥ã¢ã«ãå¸¸ã«ææ°ã®ç¶æã«ãã¦ãã ããã New Relicã¨ã¼ã¸ã§ã³ããããã­ã¤ããæã«ãã¿ã°ã®å®ç¾©ãèªååãã¾ãããã®èªååã¯ãã¯ã©ã¦ããã­ãã¤ãã¼ã§è¡ãããAPIãTerraformãªã©ã®New Relicèªååãã¼ã«ãéãã¦è¡ããã¨ãã§ãã¾ãã ã¿ã°ä»ãåºæºã«æºæ ãã¦ããªãã¨ã³ãã£ãã£ãè­å¥ããå®æã¬ãã¼ããä½æãã¾ãã ã¿ã°ã®ä¾ ã¿ã°ãä½¿ç¨ãã¦ãã¼ã¿ãæ´çããããã®ä¸è¬çãªæ¹æ³ã®ä¾ãä»¥ä¸ã«ç¤ºãã¾ãã ãã¼ã é¢é£ã®ã¿ã° ãã¼ã åã®ã¿ã°ãä½æããã¨ãããã©ã¼ãã³ã¹ã®åé¡ã«ã¤ãªãã£ãå¤æ´ã«é¢ä¸ãããã¼ã ãã°ã«ã¼ããé¨éãã¾ãã¯å°åãææ¡ããã®ã«å½¹ç«ã¡ã¾ãã ãã¼ã ã®ä¾ï¼ team: backend team: frontend team: db ã­ã¼ã«ã®ä¾ï¼ roles: architecture roles: devops roles: pm å°åã®ä¾ï¼ region: emea region: america region: asia ç°å¢é¢é£ã®ã¿ã° å±ããç°å¢ã«å¯¾ãã¦ã¨ã³ãã£ãã£ãä½æãããã¨ãã§ãã¾ããä¾ï¼ env: production env: qa env: development env: staging éè¦åº¦é¢é£ã®ã¿ã° éè¦åº¦ã¬ãã«ã«é¢é£ããã¿ã°ãä½æã§ãã¾ããããã«ãã£ã¦ãæéè¦åé¡ãç°¡åã«è¿½è·¡ã§ããããã«ãªãã¾ãã ä¾ï¼ layer: level1 layer: level2 layer: level3 ã¿ã°ã®è¿½å æ¹æ³ ããã©ã«ãã§ãä¸é¨ã®éè¦ãªå±æ§ãã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããä¾ãã°ãã¢ã«ã¦ã³ãåãã¢ã«ã¦ã³ãIDãããã³ããã¤ãã®åºæ¬çãªãã¹ã/ãµã¼ãã¼ã®ã¡ã¿ãã¼ã¿ã¯ããã©ã«ãã®ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãããããã®ããã©ã«ãã§å©ç¨å¯è½ãªã¿ã°ã¯åé¤ã§ãã¾ããã ç¹å®ã®ãã¼ã¿ã½ã¼ã¹ã«å¯¾ããã¿ã°ã®è¿½å æ¹æ³ã®è©³ç´°ãä»¥ä¸ã«ç¤ºãã¾ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ãã UIã¾ãã¯APIãéãã¦ã¿ã°ãè¿½å ããå ´åãããã¯ã¨ã³ãã£ãã£ã¬ãã«ã§çºçãã¾ããä¾ãã°ãåä¸ã®ã¨ã³ãã£ãã£ãã¢ãã¿ã¼ããè¤æ°ã®APMã¨ã¼ã¸ã§ã³ããããå ´åãUIãéãã¦é©ç¨ããã¿ã°ã¯ããã®ã¨ã³ãã£ãã£ããã®ãã¹ã¦ã®ãã¼ã¿ã«å¯¾ãã¦å©ç¨å¯è½ã§ãã UIãéãã¦ã¿ã°ãè¿½å ã¾ãã¯åé¤ããã«ã¯ï¼ ã¢ãã¿ã¼ããã¨ã³ãã£ãã£ï¼ã¢ããªã¾ãã¯ãã¹ããªã©ï¼ãé¸æãã¾ãã ãã¼ã¸ã®åé ­ã®ã¨ã³ãã£ãã£åã®è¿ãã§ãã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¿ã°ãç®¡çã¡ãã¥ã¼ãé¸æãã¾ãã ãããã¢ããè¡¨ç¤ºãããã¡ãã¥ã¼ã§ãã¿ã°ãè¿½å ã¾ãã¯åé¤ãã¾ãã APIãéãã¦ã¿ã°ãç®¡çããã«ã¯ï¼NerdGraphã®ã¿ã°ãä½æãããã­ã¥ã¡ã³ãããè¦§ãã ãããCLIãä½¿ç¨ããã¿ã°ä»ãã®èªååã«ã¤ãã¦ã¯ãå½ç¤¾ã®éçºèãµã¤ãããè¦§ãã ããã APMã¨ã¼ã¸ã§ã³ãã¿ã° ã¿ã°ã¯ãUIããã³APIãéãã¦é©ç¨ããããAPMã¨ã¼ã¸ã§ã³ãè¨­å®ãä½¿ç¨ãã¦é©ç¨ãããã¨ãã§ãã¾ãã C SDKï¼å©ç¨ä¸å¯ Go .NET Node.js PHP Python Ruby Infrastructureãã¼ã¿ã¿ã° ã¤ã³ãã©ã¹ãã©ã¯ãã£ã¨ã³ãã£ãã£ããã³ãµã¼ãã¹ã«ã¿ã°ãè¿½å ããæ¹æ³ã¯ããã¤ãããã¾ãã UIã¾ãã¯APIãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã¬ãã«ã§ã¿ã°ãè¿½å ãã¾ãã Infrastructureã¨ã¼ã¸ã§ã³ãï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã«ã¹ã¿ã ã¢ããªãã¥ã¼ããè¿½å ãããã¨ãã§ãã¾ãããããUIã§ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ãã ãªã³ãã¹ãã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ä¸é¨ã®å±æ§ã¯ãããã©ã«ãã§ã¿ã°ã¨ãã¦ä½¿ç¨ã§ãã¾ããã¤ã³ãã°ã¬ã¼ã·ã§ã³åºæã®ã©ãã«è¨­å®ãªãã·ã§ã³ãä½¿ç¨ãã¦ã¿ã°ãè¿½å ãããã¨ãã§ãã¾ãï¼ä¾ã«ã¤ãã¦ã¯ãApacheã¤ã³ãã°ã¬ã¼ã·ã§ã³ã®ã©ãã«è¨­å®ãåç§ãã¦ãã ããï¼ã ã¯ã©ã¦ããµã¼ãã¹ã®ã¤ã³ãã°ã¬ã¼ã·ã§ã³ï¼ããã©ã«ãã§ãã¯ã©ã¦ããµã¼ãã¹ã§å®ç¾©ãããã¿ã°ã¨ã©ãã«ãã¬ãã¼ãããã¾ããã¿ã°ãè¿½å ããã«ã¯ãã¯ã©ã¦ããµã¼ãã¹å´ã§è¿½å ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦UIããã£ã«ã¿ã¼ãã ã¨ã³ãã£ãã£ ã¨ã¯ã¹ãã­ã¼ã©ã¼ã®ä¸é¨ã«ãããã£ã«ã¿ã¼ãã£ã¼ã«ããä½¿ç¨ãã¦ãç®çã®ã¨ã³ãã£ãã£ãçµãè¾¼ã¿ã¾ããè¤æ°ã®ãã£ã«ã¿ã¼æ¡ä»¶ãä½¿ç¨ã§ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦ç¹å®ã®ã¨ã³ãã£ãã£ãçµãè¾¼ãã«ã¯ï¼ one.newrelic.comã§Entity explorerãã¯ãªãã¯ãã¾ãã Filtering...ãã£ã¼ã«ããã¯ãªãã¯ããã¨ãå©ç¨å¯è½ãªå±æ§ã¨ã¿ã°ã®ãã­ãããã¦ã³ãè¡¨ç¤ºããã¾ãã è¤æ°ã®è¦ç´ ã§ãã£ã«ã¿ã¼ããããè©³ç´°æ¤ç´¢ãªãã·ã§ã³ãä½¿ç¨ããããããã¨ãã§ãã¾ãã UIããã¨ã³ãã£ãã£ã®ã¡ã¿ãã¼ã¿ã¨ã¿ã°ãæ¤ç´¢ããå ´åã2ã¤ã®ãªãã·ã§ã³ãããã¾ãã ä¸çªå³ã«ããUIåã®ã¨ã³ãã£ãã£ãªã¹ããããã¨ã³ãã£ãã£ã® ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ãã ã¾ãã¯ ã¨ã³ãã£ãã£ãé¸æãã¾ãããã¼ã¸ä¸é¨ã®è¿ãã«ãã ã¢ã¤ã³ã³ãé¸æãã¾ãã APIãä½¿ç¨ãã¦ã¿ã°ãè¡¨ç¤ºããæ¹æ³ã¯ãå½ç¤¾ã®NerdGraphãã­ã¥ã¡ã³ãããè¦§ãã ããã ã¿ã°ãä½¿ç¨ãã¦ããã·ã¥ãã¼ããæ´çããæ¹æ³ããã³ã¯ã¼ã¯ã­ã¼ãã§ã®ã¿ã°ã®ä½¿ç¨æ¹æ³ããç¢ºèªãã ããã ã«ã¹ã¿ã ã¯ã¨ãªããã³ãã£ã¼ã ã¿ã°ã½ã¼ã¹ã§èª¬æããã¦ããããã«ãä¸é¨ã®å±æ§ã¯ã¿ã°ã¨ãã¦å©ç¨å¯è½ã§ããNRQLãä½¿ç¨ãã¦ãå±æ§ãã¯ã¨ãªããããã«ã¹ã¿ã ãã£ã¼ããä½æãããã§ãã¾ãã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 290.77454,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "UIã¾ãã¯<em>API</em>ãéãã¦ã¿ã°ãè¿½å ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "ãã§ãã¾ãã ããã§ã¯ã<em>account</em>Idã¿ã°ãä½¿ã£ã¦ãç¹å®ã®ã¢ã«ã¦ã³ãã®ã¯ã¼ã¯ã­ã¼ãããã£ã«ã¿ã¼ãã¦ãã¾ãã ã¿ã°ãä½¿ç¨ãã¦æ¬¡ã®ãã¨ãã§ãã¾ãã å¤§éã®ã½ã¼ã¹ããã³å¤§éã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãããã®ãã¼ã¿ãæ´çãã ãã¼ã ãã­ã¼ã«ãç°å¢ãã¾ãã¯ãªã¼ã¸ã§ã³ãç¹å®ãã¦ãèª°ãä½ã«å¯¾ãã¦è²¬ä»»ãããããææ¡ããï¼ä½¿ç¨äºä¾ãåç§ï¼ ããã·ã¥ãã¼ãã¨ã¯ã¼ã¯ã­ã¼ãã®ç·¨æã¨æ¤ç´¢ãæ¹åãã ã¿ã°ã¯ãé«ã¬ãã«ã§ãã¼ã¿ãæ´çããã®ã«å½¹ç«ã¡ã¾ããã¦ã¼ã¶ã¼åããã®ä»ã®é«ã«ã¼ãã£ããªãã£ã®å¤ã®åå¾ãªã©ãããããç´°ããè©³ç´°ãè¿½å ããå ´åãã«ã¹ã¿ã ã¢ããªãã¥ã¼ããã«ã¹ã¿ã ã¤ãã³ããããé©åãªè§£æ±ºç­ã«ãªãã¾ãã ãã³ã"
      },
      "id": "605319c1e7b9d235d3a307da"
    },
    {
      "sections": [
        "New Relic feature end of life announcements July 2020",
        "Old Kubernetes integration agent versions",
        "Monitor listing page and Synthetic labels",
        "\"Rollup by\" in Synthetics",
        "Embedded charts",
        "Legacy distributed tracing UI",
        "Violations changes",
        "Connected agents page",
        "Inactive apps in New Relic One",
        "Synthetic monitor alert notifications and conditions"
      ],
      "title": "New Relic feature end of life announcements July 2020",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "1db1d6b3df6d5ac3b983f78f3264cab332cff05a",
      "image": "https://docs.newrelic.com/static/f2b139d12bd8cdc13a9907b7874a4452/0a867/nrone-embed-bb062520.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/ui-data/new-relic-feature-end-life-announcements-july-2020/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-16T10:05:10Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In order to improve your New Relic experience we've made some big improvements to our platform. As a result, we'll be ending support for some old features over the next few weeks. Many have already been publicly announced as \"end-of-life.\" These changes represent our commitment to improve your interactions with our platform. Our mission is one observability platform that unites your telemetry data, connects your full stack, and helps you build more perfect software. To that end we're focusing on simplifying your experience for troubleshooting, alerting, and visualizing data. Here are more details on what's changed, with some helpful links and guides on how to take advantage of new capabilities to achieve the same goals. As always, we're here to help. Please connect with us in the Explorers Hub, or contact your account team with any questions. Old Kubernetes integration agent versions To improve our unified experience, starting from Wednesday, August 12, 2020, Kubernetes integrations that use v1.7 or older will be deprecated. The UI experience in the infrastructure.newrelic.com domain will no longer be available; it will only be available in New Relic One. If you are already using the latest Kubernetes agent version, no action is necessary. If you are using v1.7 or older, you must update your integration in order to continue viewing Kubernetes performance data. Follow the instructions in our documentation to upgrade to the latest version of the Kubernetes integration. Action items for a successful transition: Review the Kubernetes agent deprecation notice. Follow standard procedures to upgrade your Kubernetes agent to the latest version. Learn about the Kubernetes cluster explorer UI in New Relic One. For more information, see the Explorers Hub post. Monitor listing page and Synthetic labels To improve the experience of Synthetic monitors and labels, we've moved both experiences into the New Relic One platform. If you use the REST API for Synthetic label management, you must update to the tags API moving forward. The good news: with the NerdGraph tags API, you can organize and group all your entities in a single request. For more information about any of the following, see the Explorers Hub post. Action items for a successful transition: Synthetic monitors transition Comments Monitor index list When migration is completed, no action is needed on your part to use the new Synthetics entity listing pages. The new experience will be available to you automatically after July 20, 2020. For more information, learn how the entity explorer in New Relic One replaces the Synthetics monitors index. Existing Synthetics labels You may have already seen an option in the UI to migrate your Synthetics monitor labels to New Relic One tags. If you did not select that option, we've got you covered. Automatic migration from labels to tags starts begins July 8, 2020. For more information, learn how tagging in New Relic One replaces labels for Synthetics monitors. REST API If you use the REST API for Synthetics label management, follow these steps to update to the tags API: Learn more about NerdGraph. Review the NerdGraph tagging API tutorial. Make sure you have a Personal API key to use NerdGraph. Follow the procedures in the Explorers Hub post (look for the How do I transition my scripts from the Synthetics API to the tag API (NerdGraph)? section), and update your existing tags with the GraphiQL explorer at api.newrelic.com/graphiql. NerdGraph is our GraphQL API, a query language that lets you request exactly the data you need, without over-fetching or under-fetching. NerdGraph calls get all the data you need in a single request. NerdGraph also makes it easier to evolve APIs over time. \"Rollup by\" in Synthetics Synthetics is moving to New Relic One to provide a single platform for observability of your complex software systems. To do this we are unifying the tools you use to tag (or label) your services, applications, and monitors. The specific feature that is end-of-life is the Rollup by feature under the Search monitors dropdown menu. You can group monitors by tags in New Relic One without needing a separate Rollup by dropdown. No changes will be required to use the new Synthetic monitor listing pages. The new experiences will be available to you after July 20, 2020. Documentation: Tagging in New Relic One replaces labels for Synthetics monitors. Entity explorer in New Relic One replaces Synthetics monitors index. Action items for a successful transition: If you currently use Synthetics rollups: Follow the procedures in the Explorer Hub post to recreate the rollups that are being retired. Go to the Explorers Hub post about the rollups EOL. In particular, look for How can New Relic Workloads help me visualize groups of applications and monitors? in the post's FAQs section. Follow the procedures in the Explorers Hub post to recreate the rollups that are being retired. Embedded charts In order to reduce redundancy and provide a more unified experience, the embedded charts functionality will be replaced by the New Relic One Get chart. Embedded charts currently in use and hosted outside the New Relic domain will continue to function. The changes will include: The name on the chart's menu that generates them will change from Embed to Get chart link. For charts that are no longer supported, Embed will be replaced with Get chart link is not supported for this chart. The APM UI page that lists all embedded chart links will no longer be available. Documentation: Explorers Hub post New Relic One's enhanced chart builder functionality replaces the EOL embed chart functionality. Action items for a successful transition: You can generate a publicly accessible link to add to internal and external websites. Users do not need to be logged in to New Relic to see the chart link. The ability to embed a chart will remain, but instead of clicking Embed (which will be removed from the UI), you will click Get chart link (which is in the same location). This gives you the ability to get links with an even broader range of chart visuals and behaviors than the one we are retiring. Here's an example of how it looks in New Relic One: To replace existing chart links you created with Embed, create new URLs with New Relic One's Get chart link, and insert them in webpages where they're used. If you have an embedded chart and get the message Get chart link is not supported for this chart, simply run a different query, select an available chart type, and then select Embed. Legacy distributed tracing UI To standardize our user experience, we will be deprecating the older distributed tracing UI, which exists within the rpm.newrelic.com domain. You can access distributed tracing through New Relic One, which provides a superior experience with all the functionality supported in the duplicate UI that is end-of-life. Documentation: Global and service-specific distributed tracing views in New Relic One Deprecated distributed tracing UI Action items for a successful transition: No action required, but you can get ready for the new UI experience. New Relic One's distributed tracing page builds on capabilities you are already familiar with. Get acquainted with the enhanced distributed tracing features in New Relic One, including search and filter capabilities with cross-account trace details, query options with the NerdGraph API, and histogram charts (which can help you quickly understand trace distribution for important values such as duration). Review the trace sampling options available with head-based sampling (standard distributed tracing) and tail-based sampling (Infinite Tracing). Violations changes In order to provide a unified experience, we're deprecating Browser, Mobile, and Synthetics monitor violations and replacing them with the New Relic One equivalent. New Relic One users can access violations by using any of these options: Click the Alerts and AI link in New Relic One's main UI. Review the entity list activity stream. See alert details from inside a specific entity via the new indicator for Operational, Warning, and Critical violations. You will see alert details automatically when navigating to one.newrelic.com. Documentation: Applied Intelligence and alerting in New Relic One Browser alert violations (moving to New Relic One) Mobile violations (moving to New Relic One) Monitor violations (moving to New Relic One) Action items for a successful transition: No action required, but you can get ready for the new UI experience. Here's an example of the detailed information about an Alerts violation for a selected entity in New Relic One. Violation details in New Relic One Comments Holistic view From New Relic One's homepage, the entity list presents an activity stream of all entities with alert violations. You no longer need to jump around individual lists of end-user, mobile, or monitor violations. Enhanced troubleshooting tools From New Relic One's homepage, you will also see an Alerts & AI (Applied Intelligence) link. From here you can solve problems faster with anomaly detection, incident correlation, and noise reduction. Specific violation From a selected entity, you will see a new button identifying the violation as Operational, Warning, or Critical, as well as entity metadata and useful details about the incident. Connected agents page Finding your connected agents has never been easier! You can already do this via the Query your data link in New Relic One. Simply run these NrDailyUsage queries to get a list of connected agents and hosts. The old Connected agents page is end-of-life and will be removed. Documentation: Explorers Hub post NRQL query tools NrDailyUsage data definition Action items for a successful transition: To query your connected apps and hosts, you can use existing NRQL query tools, such as New Relic One's chart builder, the GraphQL API, or Insights. Recommendation: For best results exploring comprehensive data about your apps and hosts, use chart builder in New Relic One or the NerdGraph API. For best results with Insights, run separate queries for apps and hosts. Inactive apps in New Relic One Starting June 8, 2020, New Relic One will not continue to display any APM application that hasn't reported data for 93 days. To match our published APM data retention guidelines, applications that have not reported data will be available within the New Relic UI for 90 days. After 90 days, those applications will be removed from the UI. However, key metrics will continue to be available via the New Relic REST API based on subscription level. This is why the application name will remain reserved until the application is permanently deleted via the REST API Explorer. Action items for a successful transition: If you want to reuse an app name for an old app that is no longer reporting data: Use the REST API v2 or API Explorer to get summary data, including app ID, name, health status (look for gray), last reported, etc. Uninstall the agent for your app. Use the REST API or API Explorer to delete the apps. Synthetic monitor alert notifications and conditions In order to provide a unified experience, we're deprecating Synthetics monitor alert notifications and condition violations. We are replacing these pages with a new Synthetics monitor overview experience in New Relic One. This new experience provides visibility into a monitor's open violations and alert conditions with the monitor results in a single view, removing the need to open multiple tabs to view violations or alert conditions. Action items for a successful transition: No action required, but you can get ready for the new UI experience by reviewing our documentation about New Relic Applied Intelligence, which includes: The alerting functionality you are already familiar with in New Relic Alerts, and more Incident Intelligence, which reduces noise and accelerates your incident resolution process Proactive Detection, which surfaces relevant issues and provides automatic explanations to their cause",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 280.8401,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> feature end of life announcements July 2020",
        "sections": "Inactive apps in <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": " familiar with. Get acquainted with the enhanced distributed tracing features in <em>New</em> <em>Relic</em> <em>One</em>, including search and filter capabilities with cross-<em>account</em> trace details, query options with the NerdGraph <em>API</em>, and histogram charts (which can help you quickly understand trace distribution for important"
      },
      "id": "603e795364441ff1924e8872"
    },
    {
      "sections": [
        "åºæ¬çãªUIã®æ©è½",
        "ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢",
        "ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨",
        "ãã£ã¼ãã¨ãã¼ã¸ã®å±æ",
        "ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å®",
        "New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "åºæ¬çãªUIã®æ©è½",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "UI and data"
      ],
      "external_id": "ea7bdaa1c695b3f388b4dcbef5eeff2cc0d5259f",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features/",
      "published_at": "2021-03-18T14:31:45Z",
      "updated_at": "2021-03-18T14:31:45Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Oneã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®New Relicã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®New Relicã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«è¿½å ã§ãã¾ãããã¹ã¦ã¾ãã¯å¤§åã®ãã©ãããã©ã¼ã ã§å©ç¨å¯è½ãªã¯ã¨ãªããã³ãã£ã¼ãã®æ©è½ã¯æ¬¡ã®ã¨ããã§ãï¼ ä»¥ä¸ãè¡ãå ´å... æä½... ãã¼ã¿ã®ã¯ã¨ãªã®éå§ UIãã¼ã¸ã®ä¸é¨ã§ããã¼ã¿ã®ã¯ã¨ãªãé¸æãã¾ãã ãã£ã¼ãã®ã¯ã¨ãªã®è¡¨ç¤º ä¸é¨ãã£ã¼ãã§ã¯ããã®ãã£ã¼ãã®çæã«ä½¿ç¨ããNRQLã¯ã¨ãªãè¡¨ç¤ºã§ãã¾ãããã®æ©è½ãå©ç¨ãããã¨ã§ããã£ã¼ãã®çè§£ãé«ããããæ°è¦ã¯ã¨ãªã®æ ¹æ ã«å©ç¨ã§ãã¾ãã æéç¯å²ãé¸æ ãã£ã¼ãã®ä¸é¨ããã©ãã°ãããã®æéç¯å²ã§æ¡å¤§ãã¾ããã¾ããUIã®å³ä¸éã«ããã¿ã¤ã ããã«ã¼ãä½¿ç¨ãã¦ãäºåã«è¨­å®ãããæéç¯å²ãé¸æãã¾ãã¯ã«ã¹ã¿ã ã®è¨­å®ãè¡ããã¨ãã§ãã¾ãã ãã£ã¼ãã®è©³ç´°ãè¡¨ç¤º ãã¦ã¹ããã£ã¼ãã®ä¸ã«ç§»åããã¨ãè©³ç´°ããããã¢ããè¡¨ç¤ºããã¾ããä¸é¨ã®ãã£ã¼ãã§ã¯ããã£ã¼ãä¸ã®ããç¹ãé¸æããã¨ããã®ã¡ããªãã¯ã«ã¤ãã¦ã®è©³ç´°æå ±ãè¨è¼ãããUIãã¼ã¸ã«ç§»åãã¾ãã ãã£ã¼ãè¦ç´ ãéè¡¨ç¤ºã«ãããã¾ãã¯è¿ã è¡¨ç¤ºããããã£ã¼ãè¦ç´ ãéè¡¨ç¤ºãããã¾ãã¯éè¡¨ç¤ºãè§£é¤ããã«ã¯ããã£ã¼ãã®ä¸ã«ãããã®è¦ç´ ã®ååãé¸æãã¾ãããã£ã¼ãè¡¨ç¤ºã¯ããã®è¦ç´ ã®æç¡ã«åããã¦èª¿æ´ããã¾ãã ãã£ã¼ãã¨ãã¼ã¸ã®å±æ ãããã®ãªãã·ã§ã³ã®ãããããä½¿ç¨ãã¾ãã ä»¥ä¸ãè¡ãå ´å... æä½... Webãã¼ã¸ã«ãã£ã¼ããåãè¾¼ã ãã£ã¼ãã®ãªã³ã¯ãåå¾ãã¯ãªãã¯ãã¦ãWebãã¼ã¸ã«ãã£ã¼ããåãè¾¼ãããã®URLãåå¾ãã¾ããåãè¾¼ã¿ãã£ã¼ãã«ã¯ãä½ææã«ãã£ãã¡ããªãã¯ã¹ã®ã¿ãå«ã¾ãã¾ããã¡ããªãã¯ã¹ãã¬ãã¼ããããªããªã£ãå ´åããã£ã¼ãã«ã¯è¡¨ç¤ºããã¾ããã 2020å¹´7æã«ãiframeãã¼ã¹ã®ãã£ã¼ãåãè¾¼ã¿æ©è½ãæ´æ°ãã¾ãããè©³ç´°ã«ã¤ãã¦ã¯ããã®Explorers Hubæç¨¿ããè¦§ãã ããã UIãã¼ã¸å¨ä½ã®å±æ URLãã³ãã¼ãã¦ãNew Relicã«ã¢ã¯ã»ã¹å¯è½ãªã¦ã¼ã¶ã¼ã¨å±æãã¾ããURLã¯ããã£ã¼ãã®æéç¯å²è¨­å®ãä¿æãã¾ãã ãã¼ããªã³ã¯ã®ä½æ å¯è½ãªå ´åã¯ã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¾ããã¾ãããã¼ããªã³ã¯ã¯ãå®å¨ãªNew Relic One URLãç­ç¸®ããå±æãå®¹æã«ãã¾ãã ã¢ã«ã¦ã³ãã®èª¿æ´ã¨ã¦ã¼ã¶ã¼ã®è¨­å® ã¢ã«ã¦ã³ãè¨­å®ã¨ã¦ã¼ã¶ã¼è¨­å®ãå¤æ´ãããµãã¼ãã¨ãã­ã¥ã¡ã³ããªã³ã¯ãåå¾ããã«ã¯ãã¦ã¼ã¶ã¼åã®é£ã®ãUIã®å³ä¸ã«ããã¢ã«ã¦ã³ããã­ãããã¦ã³ãä½¿ç¨ãã¾ãã New Relicè£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã UIã®ä¸é¨ã«ã¯ãAPMããã©ã¦ã¶ã¢ãã¿ãªã³ã°ãã¤ã³ãã©ã¹ãã©ã¯ãã£ã¢ãã¿ãªã³ã°ãªã©ãNew Relic Oneã®åãã®é¨åã¸ã®ç´æ¥ãªã³ã¯ãããã¾ããä»¥åã®å¥åã®è£½åããä¸ååãããNew Relic Oneãã©ãããã©ã¼ã ã¸ã®ç§»è¡ã®è©³ç´°ã«ã¤ãã¦ã¯ãNew Relic Oneç§»è¡ã¬ã¤ãããè¦§ãã ããã ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 277.73132,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>New</em> <em>Relic</em>è£½åã«ç´æ¥ã¢ã¯ã»ã¹ãã",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em>ã®åºæ¬çãªUIæ©è½ã¯ããã©ãããã©ã¼ã å¨ä½ã§åºãå©ç¨ã§ãã¾ããããããæ©è½ãçè§£ãããã¨ã§ãè²´ç¤¾ã®ãã¼ã¿ã®çºè¦ã»åæãããã«å®¹æã«ãªãã¾ãã ã¢ã«ã¦ã³ãã¨ã¨ã³ãã£ãã£ã®æ¤ç´¢ ä¸»ãªæ¤ç´¢ãã¼ã¯ããã¹ã¦ã®UIãã¼ã¸ã®ä¸é¨ã«ããã¾ããçµç¹ãè¤æ°ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ãã«ã¢ã¯ã»ã¹ã§ããå ´åãä¸é¨ã®UIãã¼ã¸ã®ä¸é¨ã«ã¢ã«ã¦ã³ãã»ã¬ã¯ã¿ã¼ãããã¾ãã ã¯ã­ã¹ã¢ã«ã¦ã³ãã¢ã¯ã»ã¹ãä½¿ç¨ãã¦ããã¹ã¦ã®<em>New</em> <em>Relic</em>ã¢ã«ã¦ã³ããæ¤ç´¢ã§ãã¾ãã å»æ­¢ãããã¨ã³ãã£ãã£ã¯ã8æ¥éã¯æ¤ç´¢ã«ããããã¾ãã ãã£ã¼ãããã³ã¯ã¨ãªæ©è½ã®ä½¿ç¨ å¤§åã®ãã£ã¼ãã¯ãæ°è¦ã¾ãã¯æ¢å­ããã·ã¥ãã¼ãã«"
      },
      "id": "60536451196a67366a2d167b"
    },
    {
      "sections": [
        "Build a custom New Relic One application",
        "ãã³ã",
        "New Relic One: a programmable platform"
      ],
      "title": "Build a custom New Relic One application ",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Build on New Relic One"
      ],
      "external_id": "a2ed5f86702692e41d68686cd825f74f013f7905",
      "image": "https://docs.newrelic.com/static/2caff7bdf3bb0fb46bee7c214448c921/c1b63/new-relic-one-browser-analyzer-example-application_0.png",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application/",
      "published_at": "2021-03-18T11:02:55Z",
      "updated_at": "2021-03-18T11:02:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic gives you a framework to build your own React JavaScript applications that: Reside on the New Relic One platform, alongside your other dashboards and data. Feature visualizations that you've tailored specifically for your organization. Display data from any source you want, whether from a New Relic-monitored entity or data from another service or API. To start building, go to our developer site. ãã³ã To use our developer site and New Relic One, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. New Relic One: a programmable platform We strive to have an automated user experience that provides optimal value for all users. But we also know that some organizations have unique business needs that canât be met with our standard visualization options. Now, we give you control over the fundamental building blocks of our platform. Using the same tools our engineers use to build New Relic One, you can build custom applications that align with your unique organizational structure and business needs. If you know how to use React, GraphQL, and NRQL (our query language), building an application will take you only a few minutes. Check out these guides for help building custom applications. Solve any data-driven challenge, no matter how complex. You can: Use our APIs to get data into New Relic from any source. Visualize that data in your custom applications. one.newrelic.com: Hereâs an example of a custom application built on New Relic One. This application gives a highly detailed analysis of a website, using the PageView events reported from New Relic Browser. ãã³ã If your visualization needs are relatively simple, consider using custom charts and custom dashboards. Now, visit our developer site and start building! If you need more help, check out these support and learning resources: Browse the Explorers Hub to get help from the community and join in discussions. Find answers on our sites and learn how to use our support portal. Run New Relic Diagnostics, our troubleshooting tool for Linux, Windows, and macOS. Review New Relic's data security and licenses documentation.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 277.09955,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application ",
        "sections": "Build a custom <em>New</em> <em>Relic</em> <em>One</em> application",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": " a <em>New</em> <em>Relic</em>-monitored entity or data from another service or <em>API</em>. To start building, go to our <em>developer</em> site. ãã³ã To use our <em>developer</em> site and <em>New</em> <em>Relic</em> <em>One</em>, as well as the rest of our observability platform, join the <em>New</em> <em>Relic</em> family! Sign up to create your free <em>account</em> in only a few seconds"
      },
      "id": "6053335fe7b9d2e7caa307e5"
    },
    {
      "sections": [
        "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã",
        "ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã",
        "ãã®ä»ã®ãã«ã"
      ],
      "title": "New Relicã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
      "type": "docs-jp",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "cf09fbb66008ae40d63068e8647302b7630263c3",
      "image": "",
      "url": "https://docs.newrelic.com/jp/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-03-18T10:32:32Z",
      "updated_at": "2021-03-18T10:32:32Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relicã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ New Relicè£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ããä¾ãã°ããã¼ã¿ã»ã³ã¿ã¼ãç£è¦ããã«ã¯ããããããã¹ããNew Relicã«éè¨ãã¦ãã¯ã¼ã¯ã­ã¼ãï¼ã¨ã³ãã£ãã£ã®ã«ã¹ã¿ã ã°ã«ã¼ãï¼ã«ãããã¨ãã§ãã¾ãããã®ã¯ã¼ã¯ã­ã¼ãèªä½ãã¾ããã¨ã³ãã£ãã£ã«ãªãã¾ãã ãã¨ã³ãã£ãã£ãã®æ¦å¿µçãªå®ç¾©ã¯ããªãéè¦ãªã®ã§ãããããããã¯ãNew Relicã®ç®æ¨ããå½¹ç«ããªãå¤§éã®ã¡ããªãã¯ã¹ã¨ãã¼ã¿ãæä¾ããã®ã§ã¯ãªããè²´ç¤¾ã®ãã¸ãã¹ã«ã¨ã£ã¦éè¦ãªã¨ã³ãã£ãã£ã¹ãã¼ã¿ã¹ã«é¢ããå®è·µçæå ±ãæä¾ãããã¨ã«ããããã§ããã¨ã³ãã£ãã£èªä½ãããã¦ã¨ã³ãã£ãã£åå£«ã®é¢ä¿æ§ã«ãã©ã¼ã«ã¹ãããã¨ã§ãå¼ç¤¾ã¯ç¾ä»£ã®è¤éãªã·ã¹ãã ã®ç£è¦ã¨ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãæé©åãã¾ãã ã¨ã³ãã£ãã£ãè¦ã¤ãã¦è©³ããèª¿ã¹ã ã¨ã³ãã£ãã£ã¨ã¯ãNew Relicã«ãã¼ã¿ãå ±åãããããããã®ãæããããNew Relicã§ãã¼ã¿ãå ±åããã¦ããã®ãè¦ãå ´åã¯å¿ãã¨ã³ãã£ãã£ãè¦ã¤ãããã¨ãã§ãã¾ãã ä»¥ä¸ã¯ãã¨ã³ãã£ãã£ãã¼ã¿ã®çºè¦ã¨çè§£ã«å½¹ç«ã¤ããã¤ãã®ãã¤ã³ãã«ãªãã¾ãï¼ ã¨ã³ãã£ãã£ã®ä¸æã®ã°ã­ã¼ãã«è­å¥å­ï¼GUIDï¼ãæ¤ç´¢ããã«ã¯ï¼ã¨ã³ãã£ãã£ã¨ã¯ã¹ãã­ã¼ã©ã¼ã§ã¢ãã¿ã¼ãããã¨ã³ãã£ãã£ã®ãªã¹ãã§ãç¹å®ã®ã¨ã³ãã£ãã£ã®ä¸ã«ã«ã¼ã½ã«ãç§»åãã ã¢ã¤ã³ã³ãã¯ãªãã¯ãã¦GUIDã¨ãã®ä»ã®ã¡ã¿ãã¼ã¿ãè¡¨ç¤ºãã¾ãã ã¨ã³ãã£ãã£ã®GUIDã¯ãå±æ§ entityGuidã¨ãã¦ã¬ãã¼ãããã¾ããã¯ã¨ãªãã«ãã¼ã§ãã®å±æ§ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ã®ã¯ã¨ãªãè¡ãã¾ãã ãµã¼ãã¹ãããã¨ãã£ã¹ããªãã¥ã¼ãã£ããï¼åæ£ï¼ãã¬ã¼ã·ã³ã°ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£éã®ç¹ãããç¢ºèªãã¾ãã NerdGraph GraphiQLã¨ã¯ã¹ãã­ã¼ã©ã¼ï¼api.newrelic.com/graphiqlï¼ãä½¿ç¨ãã¦ãã¨ã³ãã£ãã£ãã¼ã¿ãèª¿æ»ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦æ´çãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãã¦ãè²´ç¤¾ã«ã¨ã£ã¦ãã¸ãã¹ä¸éè¦ãªé¢ä¿æ§ãåæ ããããã¨ãã§ãã¾ãããã¨ãã°ãç¹å®ã®ãã¼ã ã¾ãã¯é¨ç½²ããããã¯ç¹å®ã®ãµã¼ãã¹ã«é¢é£ããå¨ã¦ã®ã¨ã³ãã£ãã£ãã°ã«ã¼ãåãããã¨ãã§ãã¾ãããããã¯ãè¤æ°ã®ãã¹ããã¾ã¨ãã¦ããã®ã°ã«ã¼ãåããã¼ã¿ã»ã³ã¿ã¼ã«åæ ããããã¨ãã§ãã¾ãã ã¨ã³ãã£ãã£ãã°ã«ã¼ãåããã«ã¯ï¼ ã¨ã³ãã£ãã£ã«ã¿ã°ãä»ããæ¹æ³ ã¯ã¼ã¯ã­ã¼ããä½æï¼é¢é£ã¨ã³ãã£ãã£ã®ã°ã«ã¼ãï¼ ãã®ä»ã®ãã«ã ããã«æ¯æ´ãå¿è¦ãªå ´åã¯ããããã®ãµãã¼ãã¨å­¦ç¿ãªã½ã¼ã¹ãç¢ºèªãã¦ãã ããï¼ Explorers Hubãåç§ãã¦ãã³ãã¥ããã£ããæ¯æ´ãåãããã£ã¹ã«ãã·ã§ã³ã«åå ãã¦ãã ããã å½ç¤¾ã®ãµã¤ãã§åç­ãè¦ã¤ãããµãã¼ããã¼ã¿ã«ã®ä½¿ç¨æ¹æ³ã«ã¤ãã¦å­¦ã³ã¾ãã LinuxãWindowsãããã³macOSã®ãã©ãã«ã·ã¥ã¼ãã£ã³ã°ãã¼ã«ã§ããNew Relic Diagnosticsãå®è¡ãã¾ãã New Relicã®ãã¼ã¿ã»ã­ã¥ãªãã£ã¨ã©ã¤ã»ã³ã¹ãã­ã¥ã¡ã³ããè¦ç´ãã¦ãã ããã",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 273.77393,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "sections": "<em>New</em> <em>Relic</em>ã«ãããã¨ã³ãã£ãã£ã¨ã¯ï¼",
        "tags": "<em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em>ã¢ãã¿ãªã³ã°ã¯ãã¨ã³ãã£ãã£ã®ã³ã³ã»ãããä¸­å¿ã«æ§ç¯ããã¦ãã¾ãããã®ãã­ã¥ã¡ã³ãã¯ãä»¥ä¸ã«ã¤ãã¦èª¬æãã¾ãï¼ ã¨ã³ãã£ãã£ã¨ã¯ä½ã ã¨ã³ãã£ãã£ãã¼ã¿ã®è¦ã¤ãæ¹ ç°¡åã«åæã§ãããããã°ã«ã¼ãåãã¦æ´çããæ¹æ³ ã¨ã³ãã£ãã£ã¨ã¯ï¼ <em>New</em> <em>Relic</em>è£½åã§ã¯ãã¨ã³ãã£ãã£ãå¹åºãã³ã³ã»ããã¨ãã¦æãã¦ãã¾ããã¨ã³ãã£ãã£ã¯ãã¢ãã¿ã¼ã§ãããã¼ã¿ãä¿æããè­å¥å¯è½ãªä»»æã®å¯¾è±¡ã§ãã ãã¨ã³ãã£ãã£ãã¯ãã¢ããªã±ã¼ã·ã§ã³ããã¹ããããã¦ãã¼ã¿ãã¼ã¹ãµã¼ãã¹ãªã©ã®åºæ¬çãªãã¼ã¿ãå ±åããã³ã³ãã¼ãã³ããæãã¾ãããããããã³ã³ãã¼ãã³ãã®ããå¤§ããªã°ã«ã¼ããæããã¨ãããã¾ã"
      },
      "id": "60532c4064441f433b5321b9"
    }
  ]
}